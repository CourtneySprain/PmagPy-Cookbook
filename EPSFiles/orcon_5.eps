%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: orcon_5.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Lisa Tauxe
%%CreationDate: 8/9/10
%%BoundingBox: 0 0 428 276
%%HiResBoundingBox: 0 0 427.0088 275.2852
%%CropBox: 0 0 427.0088 275.2852
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 6976 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD39FFA8A87DFD6AFFA8A8FFFFA8FD0FFF277DFD6BFF52A87D52A8%FF7DA852A87DFD04A8FFFFFF7D7D7DFD15FFA8A8FD04FF7DFFA8FFFFA87D%FFFFA8FD45FFA8522727277D7D2727275252F82727FD11FFFD047D52527D%7D7DFF527D27A8A87D277DA8FD0552A87D27FD057D5252FD047D52FD3AFF%A87D7D7DA8A852A8A8FF7DA87DA8FD07FFAFFD09FFA87D27277DF87D2727%7DF87D527DA82727A87D27FD0452A82752525227277D7D525227525252A8%FD4CFFAE663BFD09FF7D7D527D7D7DA8A87D7D7DA87DA8A87D7DFFA87D7D%A87DA8A87D7DA8A8FD077DA8A852FD4DFF4118FD7DFFAE5F8AFFCBA2CAA8%CBA8CBFFFFA8CAA2CAA2CAA2CBA8A8A1A2A2FD04FFA87DA87DFFFFFF7DA1%7DFD57FF8AAEFFFFFFA2A29BFD04A2FFFFA2A1C4A2A29BA2A2CBA2CBA2A2%A8FFFFFFA8527D527D7DFD04527DFD55FF8A8AFFA8CBA8FFA8CAA2CAA2A2%A8CBA8A2A2CAA8CBA8774C7DA8FFCBFD04FFA87D7D277D52FFFD047DFD53%FFAF8AAFFD04FFCBFD05FFCBCBFFA8FD07FFA827F827277D7DA8A8FD54FF%FD05A8FFA8A8A8FFA85F84FFA8A8A8FFA8A2A8FFA8A8A8FFA8AEA8FFA8A8%A8FFA8FF7D27F820F8F8F8277DFFA8A8A8FFA8A8A8FFA8FFA8FD46FFA8A8%A8FFA8FFA8FFA8FF848AA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFF%A8A87D524B5227272027207DA8FFA8FFA8FFA8FFA8FFA8A87DCAFD44FFA8%7DA8FD04FFA8A87DA8595FA8FD0FFFA8A87D7D52522752527DA852F8F827%A8FD0BFFA8A1FD44FFA8A8A8FFFFFFA8A87D7E7DA85F5F7DA1C3FD09FFA8%A877522752527D7DA8A8FD05FFF8277DFD0BFFA8A8A8FD44FF7DA8A8FFFF%FF7D7D7D847DA1595F7DA27DA1A7AFCAFF7D7D52522752527D7DA8A8FD09%FF5252A8FD0AFFA87DA8FD44FFA8A8FD04FFA87DA87DA87DA85F84A2A87D%7D524B2E524B5252A8A8FD07FFCBFD08FFA8FD0AFFA8A8A8FD44FFA8A8A8%FFFFFFA8A87DA87D7D7DA834584C5227272752527659FD0DFFA8FD11FFA8%A8A8FD44FFA1A8FD04FFA8A87DA87DA87D84342E4B52527D7DA8A1CAA1A1%8AFD10FFCAA8FFFFCBCBCBA8FFFFFFA2FD46FFA8A87DFD05FFA87D7DA87D%7D7D833B7D7DA87DA87DA87DA27C7D769A84FD0BFFA8FFFFCB9BCAFD04A2%A1CAFFFFA1A2A1A2A2FFFD04A852FD0AFF527DFF52A87D527DFF7D52A8FF%A8FFA8A8A8FFA8FFA8A8FD1BFFA8A8FD07FFA87DA87DA87D845FA87DA87D%A87DA87EA87EA884847C838AFD09FFCBFFFFFFCBCBCAA2A2CBA2A2A8FFA8%A2A2CAA2CBFFFF527D27527D7D2752525227A87D5227A87D272752277DA8%52F8522752527D527D5252277D52FD19FFA87DFD07FFA8A87D7D7DA87D83%59A87D7D7DA87D7D7DA87DA87DA8A2A87C7CAEFD08FFCBA8FFFFFFA8FFFF%FFCBFFA8A8A2CBCAFFA8A2FFFFA8FD06527D2752F8277DA85252A87D277D%52527DA82727527DF8527D7D5252277D7D52FD17FFA8A8A8FD08FFA87DA8%7DA87D835FA87DA87D7D7DA87DA87DA87DA87DA8A2A8768AAFFD06FFCBCB%FD15FF7D7DFFFFA8FFFFFF27A8FD16FFA8FFFFFFA8FD15FFA87DA8FD0AFF%7D7D7DA87D5F59A27D7D7DA87D7D7D7E7D7D7DA87DA87DA152A8FF8AAEFF%FFFFA8CAA8FD07FFA8A8A8FD0DFFA8FD05FFA8A8FD2FFFA8A8A8FD0BFFA8%A87DA87D5F59A87DA87DA87DA87D7D7DA87DA87DA87D7D7DFFAEAFAF8AFD%0CFFA8A8A8FD44FFA8A8A8FD0DFF7DA27D5F59A27DA8FD067D52FD087DFF%FFFFAEAF848AFD09FFA87DA8FD35FFA8FD0FFFA8A8FFFFA8FD0CFFA87D5F%7DA87DA87D847D7D7DA87D7EFD057DA8FD08FFAEAEFD06FFA8A8A8FD37FF%7D52A87DA8FD057DA87DA852FD047DFF7D7D7DA87DA8A8A1FD06FFA85FFD%067D53FD077D527D7DFD0BFF8AAEFFFFFFA87DA8FD39FF7D525277277D52%7D277D2727527D525252A8A8FD0852FD07FFA87D52FD0C7DCBFD0BFFAFAF%FFAEFFFFA8A8FD3BFFA8A8A87DA8A8A8FD057DA8A8A87D7DA8A852A87D7D%7DA87D7DFD08FFA8A8FD077DA87DFD0FFFAEAF8AA83484CAFD4EFFA8FD2C%FFA8597C83FD05FFA8FD05FFA8FD36FFA8A8A8FFFFFFA8FFFFFFA8FD07FF%A8FFFFFFA8FFFFFFA8FFFFFFA8FD19FF7D7D76A1A19A5FFFFFA8277DA8A8%7D7D527DFFA87D7D7DA87DFD04A8FD2BFFA87DFD04A8CAA8A8A8CAA8A8A8%CAA8A8A8CAA8A8A8CAA8A8A8CAA8A8A8CAFD04A8A1A87DA8A8A87DA87DA8%7DA8A8A87DFD05A87D7D7DA8A1A17C9A84FFA87D7D52277D52527DA85227%7D7D7D52524B27FD4EFFFD047D52FD0B7D52FD047DA87DA87DA87D83767C%8AFF7DA87D7D7DA87DA8FF7D52FFA8FF7DA87DA8FD4FFFFD087D52FD047D%A87D7D7DA87DA87DA87DA87DA8A8A87D7DAEFD08FFA8FD10FFA8FFFFFFA8%FFFFFF7DA8CBFD3EFF527D7D7D527D7D7D52FD077D52FD047DA87DA87DA8%7DA29A7DAEFD04FFA87DA827A87DA87DA87D7D52A1A8A87DA8FFA87D527D%FF7D527D7D7D52527DFD3FFFFD067D52FD047DA87DA87D7D7DA87DA87DA8%7DA8A8A8A1A19A83AFFFFFFF7D7D5252527D525252FD057D272752FF527D%52FFA8525276777D4BA87DFD3FFFA8527D597D7D7D52FD0A7D7E7DA87DA8%7DA87DA87D83755FAFFFFFA87D7D7DA8A8FF7DA87DA8A8A87D7D7DA8A87D%A8A8FFFF7D7DA8FFA8A27D7DFD40FFA8FD047D52FD067D84FD057DA87DA8%7DA87DFD05A87C5FFD20FFA8FD41FFA8527D597D527D53FD0C7DA87DA87D%A87DA87DA8768AFD62FFA87D7D52FD067DA87D7D7DA87D7D7DA87DA87DA8%84A8A1C3A1A176AFFD62FF7D527D52FD0E7DA87D847DA87DA87DA8597658%AFFD62FF7D52FD0C7DA87D7D7DA87DA87DA87EA87EA8847D58AFFD61FFA8%53527D7D7D52FD0C7DA87D7E7DA87DA87DA8A29A58FD62FFFD097D7E7D7D%7DA87DA87D7D7DA87DA87DA87DA8A8A8A2A183FD61FFA8FD047D59FD0E7D%7E7DA87DA87DA87DA87D9A83FD60FFA8FFFD0D7DA87DA87D7D7DA87DA87D%A87DA8A8A8A1A084FD5FFFA8A8FFFD047D52FD107DA87DA87DA87DA8A17D%84FD5EFFA8FFFFFFFD0B7DA87DA87DA87D7D7DA87DA87DFD05A8A284AFFD%5DFFA8A8FFFFFF7D7D59FD0C7DA87D7D7DA87DA87DA87DA87DA87DFD5EFF%7DFD05FFFD0B7D7E7D7D7DA87D7D7DA87DA87DA8A8A87DA8FD5EFFA8A8FD%05FF527D527D7D7D53FD0C7DA87DA87DA87DA8A8FD5EFFA8FD06FFA8FD09%7DA87D7D7DA87DA87D7E7DA87DA884A87EFD5FFFA8A8FD06FFA852FD0F7D%537D7D7E7DA87DFD60FFA8FD08FFA852FD0C7DA87DA87D7D7DA87DFD61FF%A8A8FD08FF7D527D7D7D52FD0B7D527D7DA8FD61FFA8FD0AFFA8FD0B7DA8%7DA87DA87DA8FD62FFA8A8FD09FFA87D597D59FD0C7DFF7DFD07FFA8A87D%FD58FF7DFD0BFFA8FD0D7DA8FFFFFF7DFD07FF7D52A8FD57FFA8A8FD0BFF%A87D527D527D7D7D537D7D7DA8FD05FF7DFD05FFA8527DFD58FFA8FD0DFF%A8FD087DFD09FF7DFD05FF777DA8FD57FFA8A8FD0DFFA8A87DA87DA8A8FD%0BFF7DFD5EFFA8FD21FF7DFD5DFFA8A8FD20FFA87DFD5CFFA8FD22FFA87D%FD5BFFA8A8FD22FFA87DFD5AFF7DFD24FFA87DFD59FFA8A8FD24FF5252FD%58FFA8FD25FFA876A8FD57FFA8A8FD7EFFA8FD7FFFA8A8FD7EFF7DFD7EFF%A8277DFD7EFF52FD80FFA8FDFCFFFDFCFFFFA8527DA8A8A87D7DA8FD77FF%7DFD0452272727A8FD77FF7D7D7DA8A87D7DA8A8FDFCFFFD4EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2010-08-09T17:44:56-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-08-09T17:44:56-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-08-09T17:44:56-07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqkXnbXrvQtDS/tEjkma/02zKyhivC+1CC0kPwlTyCTsV360rXpirC7T89NLvdf02C0s5JNIuH&#xA;uLHUZUa1nltb5bvT7W3LSW9zLC8LNqShvSMjAsuwAeiqJ1789/KmjT6rbS2V7d3WjXLW15b2j2Ez&#xA;BUtrm6aav1oKqiKxlPBysopQpuMVUdV/5yB8qaQzpqml6rasrTRKDFbS857ZH9aFfRuJPjW4QWwr&#xA;RWldeBZKuFWc+V/Mum+ZtEh1rTOZ0+5eZbaSRQpkSGZ4RKoBPwS+nzQncqRUA7Yqxjz3ovmW/wBa&#xA;t7jSbeb6jbRRDWEjuFibUbYz8jZxAn4WQKzl2KVDemDR2Kqs8xV2KoDWNe0jRo4JNTuktY7mRoYp&#xA;JKheSQyXD8m6KqQwSSMzUAVSScVSe6/ND8uLWJpZfM+mFI1hkk9O7hlKRXMkcUUziNmKxM0yfvD8&#xA;ABqSBviqL07z55H1O4W203zFpl7cM3BYbe8t5XLcXagVHY14xOfkp8DiqWWX5tfl9favYaZZa1aX&#xA;DakbqK0uknh9B7mzlhie1Vy4LTubpGjRQeS/ENqVVRGufmR5S0i+t9Oa+hu9UuL+20s6dbT2xuIr&#xA;i7DNEJkklj9MMsbEcjVuihmIBVQ+pfmz+X+l6jq1lqGs21t+hYoZL+4aaIxrLObjjaqFZpGuQto7&#xA;GEJzpSgNcVVNK/M3yrqEmsB5zp9vodTfXt80UFuFF9d2HISFyADNp0n2qbFe5ICqno/5tfl/qWlW&#xA;2ovrNtpi3Uaypb6lLFaTANaQ3pFJGCvwt7mN3MbMq164qrat+af5caVyF75jsFkRDK0Mc6TShBbt&#xA;dBjHEXejQxlk2+LYLUkAqoy58++RrUTG68xaZbi3mW1uPVvLeP07hlLLC/JxxkKqSFO+xxVMtL1W&#xA;x1S0+t2MnqwepNAzFWUiW3laCZCrAEFJY2U+4xVF4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXVn&#xA;aXcQhu4I7iEOkgjlVXXnE4kjajAjkjorKexAIxVJrTyB5Es3tXs/Lml2z2MrXFk0NlbxmGZwoaSI&#xA;qg4OwjQFl3+EeAxVU/wR5L9W6l/QGm+rfSPNfSfVIOU8kiyI7ynhV2ZLiRWLdQ7D9o4qrHyr5XN7&#xA;PfnR7I311JDPdXX1aL1ZZbZg8Ekj8eTPEygoxNVPTFUdZWVnY2kNlYwR2tnboI7e2hRY4o0UUVUR&#xA;QFVQOgGKpL5q1vWLKOOHRrZby8cgSg8m9JXIVGZV2ozeLDp33pXORHJ0na+vz4gI6eInM8+Z4b2B&#xA;od57z896HW97aadBDa6lqUTX3ENK00kcbMzt1VfhovLZRTLIxNO30mnyRxgSJnLqfPr8O7yRA1bS&#xA;i/pi9gLmT0OIlSvq/wC+6V+1/k9cPCW/w5dxSbzrocGqwWBk1dtFa1uJDHeRsiSn6zaT2ZWJ3ICS&#xA;AXPONqGjqPhIqMQLYxiTyDzgfkl+XVxo9/odx5u1TUdP1G3WGd57uwmaJYb1bz4bj6t6qs1xOSQW&#xA;IbluKhaHgPc2eDPuKeaj+WPkG+1keY4PME9jf2881zDdWtzZ8YZJ7a3tJOIlhlShhtOPxA05uepH&#xA;F4T3I8KfcUD5S/LL8uLa10zRNM1m+uLfTI0l0xZprYErLf22osi8YUdz9Z0oM4Iqod12HEITAhlP&#xA;BOIshkTflV5Xs/NEfm+a8vBNp11c6lbQO8X1aB7qOUXdAIhKyymYyHm7EEDjxWqmDSkv/Krfy+1m&#xA;9uRHrV7cfp62u762t45YPTW0vVv4p2gYQcinPXp3HqMxDFf2RxxVNpfyw8p6fDfIdSurObWLmCaK&#xA;4MkHqJdWeo3WtxNbrJEyMyT3MjcXVwUUAjYkqpTp35IeRtQ8vW76bq2qraXlnbGy1CCdIZ1RY9NN&#xA;vcRsIUKSAaNbuCV2JbbpxVV4/wAgvLMXluLy3Dq2qx6Nb+qba2D2Z9I3NlPYXRV2ti59eK7dm5E8&#xA;Wpw4jbFURcfkX5Tne+aS91Ai9+tLxEkIEUd7HqCSxx0hrTnrNzIpcsQxXfioXFWX+V9BOh6UbFrj&#xA;61I9zdXUk/D06vd3MlwVC1aip6vFdzsN8VTbFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtkliiQ&#xA;ySuqIOrsQAK7dTiqh+k9N/5a4f8AkYn9cVd+k9N/5a4f+Rif1xVBXWuW0kptbK6hEn+7blnUpEPb&#xA;f4nPZe3U9gYk9zh5c0pSMMX1dZdI/rl5dOZ6A3HLY20Ijsr+2RiS0skxErSMf2mIkj3/AM+mSiAH&#xA;I0+GGMUL9/UnvJ/HySS90vQdbu5bi9vFt71AsMqxyxlaCKVVeJmFaH6xX5rTtlomYjZz45zjFDcf&#xA;2fqQN15TsIbi2fTtSjdUdCxnnhCpHE8cioFWIs/L0VHLmDtXepyQy97OOrsHiH4+fmmupWEOtIi6&#xA;nqNtAYa+i9nIpajijhhMHG9BuBXICYjyaoZhD6R8/wBikvljQGYtc6ubkmRpW5vbipeWGVuXFFqK&#xA;26j2Gww+KU/mj0AHz8/1vKvzQ1HzD+XV5Y63owtdZ8uVt1uoyQJo54FVE9UoW/dvwBDBRvse1U5S&#xA;Uy1cpAgj8FJPLP8Azkd5GSSzbV9Fv7OW1S2jSW2kgul/0X1ApPJbdgG9UlgPAYDkJYy1Ejfnf2va&#xA;NA/MnyR580i/t9F1IjnC8M5nhli9IyqV3MgRGI5Vor5W4zFNX/JrSro6all5kigs7C0ltW0+ZBLb&#xA;tJcqizTIqzRshLxidU5FVmAbxqpTJfyo8oGe2vLi9trvUYtTn1Ce+uQssksMhuWhgPKSgMb3SsWA&#xA;+IoNulFU8/LfydpvlKzk0+z1CK6WWK1DRR0X97b26QzTU5yEmZk5nw6b0xQzPFXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXEgAkmgG5JxVJzrs183p6FCLpa0bUZCVtE8eDD4pyPCP4exdTiqCvU0&#xA;PTGW7165/SWobtEJVDBKihEEA+CIduR+IjZnOKsc1DzjHIStjpttAnZ5I1d/1BR+OKpM3mHU5WYK&#xA;0QQgqzCCEfMLROvvkTvycCWWWY8OM1Ac5ffGPn3y5DkLN8My8pazoGoRfUZbO3tb6GgWEqpEqED9&#xA;4hYEn4tmqSQev2hUCQBpz/y8cOKJjXAdvdLuPmed/wAXvtOtSn8qaXH6mpyWFjHSvO5MMK06dX45&#xA;NWH335t/kzZ3BiTUbS9umoqxWFu94z0qQAbeORe/jindQH5im++HQPy81i/JrwlurSHT4G8KSXDA&#xA;09+OKtV/OPUhW18r+XtARh/0sLh76RfotURCfppirZ/LX8wNQ/463nKO1iaha10jTLa3oe9J5fWk&#xA;xVgn5z/ln5c8ueSpJVudX8weYtTnjsdIjvLuWdjNIeTFIIfTVuMaNQcaVpiqUflf/wA4sXNz6Wqe&#xA;ema3gNHj0WFv3rDqPXkX7A/yU+L3HTFbfRmneWvL2m2cVlYabbW1pCOMUMcSKoA+jr4nFCtLY6RD&#xA;E8s1vbxxRgs8joiqqjckkigAxVKfUj1ElNF06AQH/paXUIEFD3hjHGSftvVUINQ56YqjdK8uafp8&#xA;7XYrcX7rxe7kChuJpVURAscaniKhFFaVNTviqa4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUrut&#xA;eiW4ay0+JtQv0PGSKIgRxGlR68x+CP8A1d3puFOKqY0Oa+Ik12VbsVqunxgrZr1oGU/FOR4yfDUV&#xA;VFOKpT5o85rZs1jppDXC/DLPsVjPgvi36sVYFLNJLI0srl5GNXdjUk+5OFBNJFrd55k5RxaLYRXC&#xA;uKvc3E3pRrvSnFQzt9FMhz9zgWdTy2w9/Wfu7o+fOXTbeReumfmPdUE+sWOmCootlatOaeFbhh+r&#xA;JOfGIiKAoBfN5HkUrNqWv6vcSxbxTLIqW3JuxhhAelftV2p3yrIe/wCbkDHjlD1yjwH6omXB/sjU&#xA;b/m7k30Z1+XXkP8AKW+hY/oCyuNWhJFybotelj/N/pDSg9twKeFN1VxZBJoyYp4JjHPexcJVXFH3&#xA;dJDlIfEbEPUrHTNN0+L0bC0htIdv3cEaxLt02QAZaqJxVBkcNXXidp7duY7VhdeJA/57Gv0YejP+&#xA;H4/j7kDrvmaHSbmG3aFpWkimuJGo4VIoF5MeSo4r9wHcjasowtsxYDMX+N1C880eXFu43rFPcWkv&#xA;oyzMtDbrIreowdl6fuSG4ntv0xGMpjpplMNJ1u21G3ublFaKC3leIvKGjJCKGLlXCso+LvglGmGT&#xA;EYkDvSxPPmkPNMoDiGNuKTFJPj/uAKR8PU3a5Cig9+hyXhFsOllXn/b+pFzw6HPDDrGo3Sz2g9OS&#xA;2edwtqhdl9JljNEL8yvBmqwOwOQIpx5Ag0UdJq+nx6vBo7zU1G5t5ruCDi3xQW7xRyvypxHF7iMU&#xA;Jrvt3wIReKuxVAJrmmPrsuhJIzanDbJezRCKQokEsjxRs03H0gzvE/FC3I8SQKA4qgpvPHlSDTYN&#xA;Sm1GOKzur86TbO4dWlvhdNZmCNCvNmE8bDYUoC32RXFXTed/KkHlm080XGoxwaBei2a31GUPHGVv&#xA;HRIGfkoMas0i1LgBerUFcVTwEEVG4PQ4qhm1PTVuFtmu4RcvL9XSEyKHM3pGf0gta8/RBk49ePxd&#xA;MVVLq8tLSITXUyQRF0jEkjBF5yuI41qaCru4VR3JpiqrirsVdirsVdiqB1DWbKykS3YtNeyjlDZQ&#xA;DnM4rTlx/ZSuxdiFHcjFUJ9Q1fUwDqUpsbQ7/o+0kIkYeE1yvFv9jFx/1nGKppa2lraW6W1rCkFv&#xA;GKRwxKERR12UUAxVI/OmuvptgsMDcbq6qqMOqoPtN896DFXmTMACSaAdScSWE5xgDKRoBTAMm7Ck&#xA;fZT1Puf6ZGrcIQlqN5isfSPWXnLu8o/6b+aGPNJFP+9oYJCBG4H2Wp0b59j9Hhk3PRMTitcVRkUm&#xA;KoCWaVNRtn0FWOut8VnHCF/fUNCpBIBTuXPwr+0adaZwF7bSYjRYzGjxRhexifpl/OEfpvobHqjY&#xA;8x2Wwu5ZVMNyojvYQPXjX7Jr0dK/stTb6R2ywFqwZjK4y2nHn+seR/WOitcXNvbR+pO4RSaLXqWP&#xA;RVA3YnsBvkgHJESeSHtUmmuDeTIYxx9O3ib7SoTVmbwLkDbsAO9cT3MpUBQdf6RY378rpC/7ia2I&#xA;DEAx3PESDanXgMIkQsMhjy7wfklDaF5Se8ubNYjcXEjmW5tUlldUaRTUuobjFzDE705YfELZ+Znt&#xA;vyVo/LUsSSQw3jJaTsXnt5AZy7MAr85ZWLtyAx41Oa9yNx8FK58kaU0CpatLbyiWNzcGWWSTiskL&#xA;FVZ2JB42yKp/ZphGQso6qV7/AI5/rd5p8syX3liHSdLWKM2dxp9xbxTFvTKWF3DccCaMassNFY1o&#xA;1DkCbceUiTZeUeVf+cddWttM02/n1S10fWo9NsYW0+108fVYbq1uLG8aSZY7qlxOz2HpzSq6+rUH&#xA;bjRghbrH/OPl3pWlJc6bcHXb+GC3t5dP+o2zRXn1azsrSH61Hc3tokkcJspJUUy1V5aivH4lUz8h&#xA;f84/6noOj6tbX/mV5ZNa0JdGdIraON7Z2gSJpDcK3O59ErSHnTgnwjqcVTTTPyJs7HS9dtlvrZbr&#xA;W7aG3Z4bBYreIRX9zfNEsHrMTauLlIDB6n91GF5dKKpHo/8AzjDYadBbldXgW9i8yweZJLi208QK&#xA;YrepSwRPXcpErMxU8jxr9nFUR5w/5xyHmLyvoug/pyKH9E6Xa6ULyew+sSL9UcP69r/pEX1Z5qcZ&#xA;ft8lCjtuqpa3/wA40Lf6g15Z+ZG003E2o3F60FlF67yX9xNMrxXBk9WF0SZYXZT+8RADQbYqirr/&#xA;AJx5juEueGoabp7XN7DqEkWnaQLW2LQafLYfVnh+tPytXWQO0XLvKOX7z4FVFP8AnHVbKzkax1K3&#xA;fVp7wSTXbWvocbKWyWyltISHmZIoSPXt49wGREqKeoFXqdz5p0W18wQ6DdXC29/cQrPbCVkRZebs&#xA;ixx8mBaT4CeIHTFVG688+T7eye7Os2UkSrI6CK4hdpPRDF1jAb4mHptsPA+GKqg85+TzPLbjXdP9&#xA;eCUW80X1qDmkzMUWJl51VyykBTvXFVCf8wPJELWitrtixvp/qtr6c8cgeYJ6nGqFqfCV692UdWWq&#xA;qHbzZpOrXjafp+qpFCLWS8m1C2aGVFihkEcg9Ys8cbKT8XJTQfynFVmn+aPImnSejaX1sttNbm+l&#xA;1driOSCRUlFsTLdu7F5OZC/Ex8K9sVTUebfKpjeUazY+nHKtvI/1mHis0leERPLZ2oaL1OKprirB&#xA;vzJtJV+r6id7ZF9KQ/ytUsCfn0xumrNmjjjxS5fjYDqfJgfrRGjyyKB1VKjb39zgq+bjQwyySE8n&#xA;T6Y93me+X2R6X9Ra+oQjZPjPj0GSc1RaX1lKyAMjAhkI2IOxFMUqC6gLSX6rK9aisEj1AANQqO2+&#xA;/wAJoe/z6qsq0byl5j1Zlf0TZWlQ31q9QqRQf7qt/gkbf/fhUdwT0xV6Fo3lPSNJt5Y4VeWe4A+s&#xA;3krVnk47rV148Qp3VUoo7DAWM4CQoq1zpd3yjltLorLCSY1nHqDiftJyBV6N35FvHqBkTHucLLpJ&#xA;2JQlvHlxb/C+dHz4u/mAi7S5S5j5cSkiHjLE32kcdQfv2Pcb9MILlYcwmL5EbEdx/HzG6jqOs2Ng&#xA;UjlZpLqUEwWcKmSeSn8qLvTxY0UdyMLahPqmtaka3sp02yPSztn/ANIcdvVuF+x7rDuD/uwjFUxs&#xA;rGzsbdbazgS3gSpWONQq1Y1Y7dyTUnviqvirsVdirsVdirsVdirsVdirsVdirsVYr5q/LjQPM199&#xA;c1FphN6VvAPSKLRLe6F1RWKll5svFqHp774qk0f5L+ULbT9SS6uZ5mv7N7S4vbj6sGjVl4erHxiS&#xA;ON1jVUqFAoNxUk4ptbf/AJQ6Zq+o31/darezjUJmmkLLahfRkQxvAhEPP02jooPIFftK1WYlVEaf&#xA;+TPlSxsrezjkuXht3jfdowWMdlLZdVRSOazs7U/bocUW1p35TWej6bq0djf3F3fX9hdWMTXfopGo&#xA;uI0VRSCKOgUxL28cVQEX5GaRLp9ut7qd3+ko0b1bqH0AoaVfTfhG8JSnp1Rar/lfa3xTbcn5B+Vn&#xA;9Bvr96LiHhzmH1Y+qVknlcyRtAYmMjXTV+DagpTeqtvTB08ffFC2WKKaNo5UWSNwVZGAIIIoQQfE&#xA;HFWC6h+UekzTPLZX09oGIKwsEljWnZahXp83OKoWP8nwGHPVyU7hLcK30EyMPwxVMbb8qNAjZTPd&#xA;XlyB9uNpEjQ+O8SJIB/s8VZDpXlfy/pTiSwsIoZwCv1kjnPxPUGZ+UhHsWxVNMVdiqU+YdY0bS4E&#xA;n1G+NmwNIBGx9R2P7KRDl6hNNhxOAhqyYuLqQR3H9HI/EFgF1581ia8W8gU2mkKfRuLsLGb5owft&#xA;PGecKcT4rUVNVXfK5SrfmGMdDm47G862FcJmP5vcZdYn0jp/E9C0mDRLSxa9siggnX1p753LPIEH&#xA;25ppCXbiNviO3TLAWzHkExY5JPof5n+TdYtbq7iv4baztWUPc3M0CRkPI8aMGEjcebRHiH4t023w&#xA;s1ZvzE8rrcRWz3PC7uNRbS7e1YxiWSZJBGzonLk0Sk7tiqZXvmnyxY3Ette6vZWtxAFM8M1xFG6B&#xA;1LKXVmBWqqSK9sVWf4u8qVp+mrCvqCCn1mH+9YchH9r7RG/HriqLtNX0m8laGzvYLmVFDvHDKkjB&#xA;SAQSFJIBDDFUXirsVdirsVdirsVdirsVdirsVQOp6HpOqGA6hbLcG2YvBzr8Dn9oUPXbriqn/hvR&#xA;f+Wf/h5P+asVd/hvRf8Aln/4eT/mrFXf4b0X/ln/AOHk/wCasVd/hvRf+Wf/AIeT/mrFXf4b0X/l&#xA;n/4eT/mrFXf4b0X/AJZ/+Hk/5qxV3+G9F/5Z/wDh5P8AmrFVr+WdFZSptyARSokkB+ghsVeU+atN&#xA;1zQNRMD3Uz2slWtZ+Roy+B/yl74qky6rqPe5k/4I4q6HVtRN5KhuZCixxsByPUs4P6hhVGrf3bCh&#xA;nk3/AMtv64q3a6jeB/QnmkMgFVk5EBx7b/aHcYqiLe2tVuTciMNcsOJnarPQ7kcmqaYqiJbG1uDz&#xA;IMcx6zRHg9PAsOoyEsYO/VkcuThERIgD3Ef6WQMfs9yYeUtcfyxOljdSetoly5VZSAPQc7BSFH2T&#xA;0H3eANMR4e3OLXmGaU5ZqiesxGwTt/eAeq5f6pRFj1COxTC5/Jfy7qGm2kMmoXJNvBbRxXEQgZGW&#xA;BrluRjljmRhIt/IpDVFKfTkJjIEWOSFuPJfk3RfNEU02sXdvLGE1fUGma0W2CWtyzwNcTSRqY1Ms&#xA;7hQjDl3+ziyQGmeX/wAstf16HzbJq7rDPeSvDpF+1mtvPPcwIrrxdWkkDC6QheZ6gdKDFUdceU/y&#xA;mW0026Ou2sVtbm5Y3C3Nn/pkQuVvJo5JAtW9KWJCWjKsBtXc4q78rtJ/Kzy1Feap5f1ozW+oi0t2&#xA;ur64j4NIys0aRlhHSR+VGQ7grSgocVZ/B5j8vXFjPqEGqWk1ha/703cc8TQx/CG+OQNxX4WB3PTF&#xA;CC07zv5d1LzJNoGn3SXd3b2qXs0kMkTxhJSOCij82JVg1VUqARU1IBVQy/mV5KaXUIxq1tTTmCSS&#xA;etDxlkKhjHCQ/wC8deQVlHRiBiqHX80fLTapcafxuOVq8Udxc8F9FRP6HBywflwreRgnjtuTsK4q&#xA;y/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBrmi2Ws6dJY3a1Rt0cfaRx0dfcYq8P1zRb3Rt&#xA;RksrtaOm6SD7Loejr7HFUrhf/chN/wAYov8AiUmFUwjfFVV445kCv1B5Iw6qw6MvviqvZ3L19Gb+&#xA;+QfaAorj+ZRU/SO33EqplFJiq250yzu1cMpjaT+8eP4C3s9PtD55XPFGTcNVmiBwzI4eXI/7oGvh&#xA;R82QeSfM1xpNxBoGqSmW2kPGwvnIBB/321BT5f7dK4kxPCfm4UozgTkAj4RO4jY8MnrRMvRI/wBL&#xA;0yNbRMU58y+Qv03rv6Q+ttbJJbW8TPEFMsc9jctc2sqCRJYnAaWRXR0oajwy9vS60/JTyjDavaXD&#xA;3F9byRXMLJceif8AeuC1gdxxjXi6CwRkK04sSfCitqmgflFo+iTwTW2pXjmOJoJ0dbTjNGxYgPxg&#xA;UqQzklkIZj9otiqlL+SvlmS0gtjd3gSGGC2ejQ/vIILVLRo2rEaerHGOTLRgfslcVtFaf+U2gaf5&#xA;fn0azubmKOU2TpP+5LJNp3BoZApj9NiXjDuHUhj2xVMfL3kLSNCS8htnke2vLW3szG5+IR26MhPN&#xA;eJ5PzJNKe1MVSKy/JTy1A7vc3d1fs1pLZR/WFtaRxvHDFGyiOCMepCtqnB6Vrud8Vtfd/lJp4a9e&#xA;wu5Q+qejBffWCrKttH9WEgjVEU+oyWSqCWoORPYDFWf4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FUl81eWbXX9OMElEuo6taz91anQ/wCS3cYq8Ku7G6sNbu7S6jMVxDHEsiHx5SH6QRuDiqoj&#xA;4VRMb4qqSRiVRQ8JF3ilABKtSlRXFUTZ3ZcmOQcZk+0OgYfzLufhOKpjHJUUPTFUPdaLDPD6cErW&#xA;wqCqpugINRxRqhf9jlMsII22bzrMpNnhltRE42JA87I4ZHbbeRHkzfyP5tmmkXQtWNNRiQG3n6LO&#xA;gHapryFDt4feWEjfCebgRE8ZAkP3cieA8XF58EjQPEBuDw1IdSQWa5a5DsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYF5v8AKn6d17UWgNL+10+ya3FaB+U13yQ/PiKH&#xA;FXmEkckMrxSKUkjJV0YUIYGhBB8MVXo+FURG+Kqjp6gVlbhMn93JStK9QfEHuP44qi7O79QFWUxy&#xA;ps8Z6jc0I8VNNjiqYRSYq3dWxnVJIn9K6hYPbzDqrDf7jTf+tDkJw4h5tkJRoxmOLHL6h9xHdKPO&#xA;J6HysM98m+aTq9qbe9X0dUtxSZDsJANvUToCPGn4VwQkSN+bjn93PwzLi2uMv50e/wApDlIdD5EM&#xA;kybY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqk9r/yl+p/9s+w/wCT&#xA;15irHvzC8lnUI21bTo630YrcRKN5UUdQP51A+kfRiryoGmKqyPhVERviq94y7LLGQk6bK9K1WtSh&#xA;9jiqNsrsTJUjhIu0kZI5KfA0/DFUwikxQn3lK3M2vW8iiohV3c1pQFSv62GAoMQavo9CxZOxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpPa/wDKX6n/ANs+w/5PXmKpxirz&#xA;T8xfJRjaTW9OjrGatfQKPsnvKoHb+bw6+NFXngNMVV43wqiI3xVeyvyE0NBMoofB1FfgY/Tse33g&#xA;qpjp0rXbIkCs0rkJ6XVw5/ZIFd98Vep+WdD/AEXZfvd7uahmINQKdFHyrgVOMVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSe1/wCUv1P/ALZ9h/yevMVTjFXEBgVYVB2I&#xA;PQjFXkPn7yY2k3B1CxQnTJm+JR/ulyfsn/IP7J+jwqqxBWpiqvG+FU50PQ9U1eX07KEsoNJJm2jT&#xA;/Wb+A3xVnln5Lk0L09U05jd6nAHN1b8Y1W6jK0EaF/7uRf2G5UO4b4T8IVk2lapZ6pYx3tmxaGSo&#xA;oylHR1JV45EYBkdGBVlYVB2OKoDzjrF1o3l271S2lgie1UOWuUkkQioHBUiKuzuSFQDqxAxVf5Uu&#xA;fMl1odvc+YreC01SYc5La2LlY1bdVbmW+MD7VCRXFU3xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxVJ7X/lL9T/AO2fYf8AJ68xVOMVdiqnc20FzbyW9wgkhlUpIjdCD1GKsJuP&#xA;yk0d5i8F3PDGTX0zxelewNAfvriqYab+WvlqyYPIkl44NR67VUf7FAgP01xVk8MMMMaxQoscSCio&#xA;gCqB7AYqvxVj+r2V7pd7Jr2kQvcmQL+ltKjpW5RAFE0INB9ZjUUG/wC8UcD0QqqjJ7Ty55p0aMXM&#xA;EGq6VchZUSZBJGSp2PFxsynxFR0xVX0jRNH0azFlpNnDYWgYuILdFjTk3U8VA3OKo3FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUntf+Uv1P8A7Z9h/wAnrzFU4xV2KuxV2Kux&#xA;V2KuxV2KsT16WDyebrzLGyRaG7err9szBVQsQv1yAHb1K09SMf3nVf3mzqsh0fVrHV9Ks9VsJPVs&#xA;r6FLi3k6VSRQy1HY77jFUXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqT2&#xA;v/KX6n/2z7D/AJPXmKpxirsVdirsVdirsVdirsVWyxRTRPFMiyRSAq8bgMrKdiCDsQcVQWiaFpei&#xA;WX1DS4RbWId5IrVSfTjMjcmWNT9heRJ4jYV2xVH4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYqxLRtG8xwfmR5h1S8vZJdFubOxj0y2KqEUgy+qvIAElGBI3/3Z8sVZbirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSCTz55Si1&#xA;q40iXU7aO5tER7l3miWON5JDGkLsX+GUsNkIriqIuvOHlK0AN1rdhbg1IMt1Clacq/aYfyN9x8MV&#xA;TZHSRFdGDo4DKymoIO4IIxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXnl1+SegXMszPqV8IpDKqQD6qVSC49f14QxgLsHF5KObMXWoo22KbQzf8&#xA;4++Rjrz616l4Lh5pZ/RMkbRK0js49NWjbj6fIhKHbFbeh6Xp8WnaZaafCzNDZwx28bPQsViQIC1A&#xA;BWg8MUInFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:FD7F1174072068118DBBC16639B0EF74</stRef:instanceID>
            <stRef:documentID>xmp.did:FD7F1174072068118DBBC16639B0EF74</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:24:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:37:40-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:41:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:44:56-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:FE7F1174072068118DBBC16639B0EF74</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:FE7F1174072068118DBBC16639B0EF74</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>386.725586</stDim:w>
            <stDim:h>315.044922</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -275.285 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 275.285 li
427.009 275.285 li
427.009 0 li
cp
clp
[1 0 0 1 0 0 ]ct
166.109 90.9631 mo
168.77 89.5795 li
168.309 88.6922 li
165.647 90.0759 li
166.109 90.9631 li
171.432 88.1958 mo
174.094 86.8122 li
173.633 85.9249 li
170.971 87.3086 li
171.432 88.1958 li
176.756 85.4285 mo
179.418 84.0448 li
178.957 83.1576 li
176.295 84.5412 li
176.756 85.4285 li
182.08 82.6612 mo
184.741 81.2775 li
184.28 80.3903 li
181.618 81.7738 li
182.08 82.6612 li
187.403 79.8939 mo
190.065 78.5102 li
189.604 77.6228 li
186.942 79.0065 li
187.403 79.8939 li
192.727 77.1266 mo
195.389 75.7429 li
194.928 74.8555 li
192.266 76.2392 li
192.727 77.1266 li
198.051 74.3591 mo
200.713 72.9755 li
200.251 72.0882 li
197.59 73.4719 li
198.051 74.3591 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.697627 .675227 .638575 .739559 cmyk
f
165.577 91.2715 mo
165.577 245.035 li
165.577 91.2715 li
.75021 .679683 .670222 .90164 cmyk
f
165.077 91.2715 mo
165.077 245.035 li
166.077 245.035 li
166.077 91.2715 li
165.077 91.2715 li
.697627 .675227 .638575 .739559 cmyk
f
166.602 247.397 mo
167.101 245.744 167.561 244.669 168.094 243.343 cv
163.049 243.343 li
163.274 243.817 164.041 245.744 164.54 247.397 cv
165.075 249.167 165.44 250.771 165.571 251.812 cv
165.702 250.771 166.067 249.167 166.602 247.397 cv
cp
f
329.148 40.0469 mo
143.876 40.0469 li
21.1489 108.713 li
329.148 40.0469 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
329.148 39.5469 mo
143.746 39.5469 li
20.9048 108.277 li
21.3931 109.149 li
144.006 40.5468 li
329.148 40.5469 li
329.148 39.5469 li
.697627 .675227 .638575 .739559 cmyk
f
150.674 71.5401 mo
266.215 195.834 li
150.674 71.5401 li
.75021 .679683 .670222 .90164 cmyk
f
150.308 71.8805 mo
152.35 74.0778 li
153.083 73.3969 li
151.04 71.1996 li
150.308 71.8805 li
154.393 76.275 mo
156.435 78.4723 li
157.168 77.7914 li
155.125 75.5941 li
154.393 76.275 li
158.478 80.6696 mo
160.52 82.8668 li
161.253 82.1859 li
159.21 79.9887 li
158.478 80.6696 li
162.563 85.0641 mo
164.605 87.2614 li
165.338 86.5806 li
163.295 84.3832 li
162.563 85.0641 li
166.648 89.4586 mo
168.69 91.6559 li
169.423 90.9751 li
167.38 88.7778 li
166.648 89.4586 li
170.733 93.8532 mo
172.775 96.0505 li
173.508 95.3696 li
171.465 93.1724 li
170.733 93.8532 li
174.818 98.2478 mo
176.861 100.445 li
177.593 99.7642 li
175.55 97.5669 li
174.818 98.2478 li
178.903 102.642 mo
180.946 104.84 li
181.678 104.159 li
179.636 101.961 li
178.903 102.642 li
182.988 107.037 mo
185.031 109.234 li
185.763 108.553 li
183.721 106.356 li
182.988 107.037 li
187.073 111.431 mo
189.116 113.629 li
189.848 112.948 li
187.806 110.751 li
187.073 111.431 li
191.158 115.826 mo
193.201 118.023 li
193.933 117.342 li
191.891 115.145 li
191.158 115.826 li
195.243 120.22 mo
197.286 122.418 li
198.018 121.737 li
195.976 119.54 li
195.243 120.22 li
199.329 124.615 mo
201.371 126.812 li
202.104 126.132 li
200.061 123.934 li
199.329 124.615 li
203.414 129.01 mo
205.456 131.207 li
206.189 130.526 li
204.146 128.329 li
203.414 129.01 li
207.499 133.404 mo
209.541 135.601 li
210.274 134.921 li
208.231 132.723 li
207.499 133.404 li
211.584 137.799 mo
213.626 139.996 li
214.359 139.315 li
212.316 137.118 li
211.584 137.799 li
215.669 142.193 mo
217.711 144.391 li
218.444 143.71 li
216.401 141.512 li
215.669 142.193 li
219.754 146.588 mo
221.796 148.785 li
222.529 148.104 li
220.486 145.907 li
219.754 146.588 li
223.839 150.982 mo
225.882 153.18 li
226.614 152.499 li
224.571 150.301 li
223.839 150.982 li
227.924 155.377 mo
229.967 157.574 li
230.699 156.893 li
228.657 154.696 li
227.924 155.377 li
232.009 159.771 mo
234.052 161.969 li
234.784 161.288 li
232.742 159.091 li
232.009 159.771 li
236.094 164.166 mo
238.137 166.363 li
238.869 165.682 li
236.827 163.485 li
236.094 164.166 li
240.179 168.56 mo
242.222 170.758 li
242.954 170.077 li
240.912 167.88 li
240.179 168.56 li
244.264 172.955 mo
246.307 175.152 li
247.039 174.471 li
244.997 172.274 li
244.264 172.955 li
248.349 177.35 mo
250.392 179.547 li
251.124 178.866 li
249.082 176.669 li
248.349 177.35 li
252.435 181.744 mo
254.477 183.941 li
255.21 183.261 li
253.167 181.063 li
252.435 181.744 li
256.52 186.139 mo
258.562 188.336 li
259.295 187.655 li
257.252 185.458 li
256.52 186.139 li
260.605 190.533 mo
262.647 192.73 li
263.38 192.05 li
261.337 189.852 li
260.605 190.533 li
264.69 194.928 mo
265.849 196.174 li
266.581 195.493 li
265.422 194.247 li
264.69 194.928 li
.697627 .675227 .638575 .739559 cmyk
f
266.215 195.834 mo
292.609 224.229 li
.75021 .679683 .670222 .90164 cmyk
f
265.849 196.174 mo
292.243 224.569 li
292.976 223.888 li
266.581 195.494 li
.697627 .675227 .638575 .739559 cmyk
f
295.811 226.821 mo
295.05 225.271 294.655 224.171 294.144 222.836 cv
290.448 226.271 li
290.937 226.465 292.81 227.354 294.301 228.225 cv
295.897 229.156 297.257 230.083 298.062 230.756 cv
297.449 229.905 296.624 228.481 295.811 226.821 cv
cp
f
123.679 92.3154 mo
121.818 92.3154 120.135 92.111 118.667 91.6995 cv
118.666 91.6994 118.666 91.6992 118.665 91.6991 cv
118.657 91.6968 118.648 91.6942 118.64 91.6919 cv
118.639 91.6918 118.639 91.6918 118.639 91.6917 cv
118.622 91.6869 118.605 91.6821 118.588 91.6772 cv
118.586 91.6767 118.584 91.6762 118.583 91.6756 cv
118.576 91.6738 118.57 91.6719 118.563 91.6701 cv
118.561 91.6694 118.559 91.6689 118.557 91.6683 cv
118.549 91.666 118.542 91.6638 118.534 91.6615 cv
118.532 91.6609 118.529 91.6603 118.527 91.6596 cv
118.522 91.658 118.516 91.6564 118.511 91.6548 cv
118.507 91.6537 118.504 91.6529 118.501 91.6518 cv
118.496 91.6505 118.491 91.649 118.487 91.6477 cv
118.483 91.6467 118.48 91.6457 118.477 91.6447 cv
118.47 91.6427 118.463 91.6405 118.456 91.6385 cv
118.452 91.6373 118.447 91.636 118.443 91.6348 cv
118.44 91.6338 118.437 91.6329 118.434 91.6319 cv
118.429 91.6305 118.424 91.6291 118.42 91.6277 cv
118.417 91.627 118.414 91.6261 118.412 91.6253 cv
118.395 91.6201 118.378 91.6151 118.361 91.6099 cv
118.36 91.6094 118.359 91.6092 118.357 91.6088 cv
118.351 91.6069 118.345 91.6051 118.339 91.6032 cv
118.339 91.6031 li
118.32 91.5971 118.301 91.5913 118.282 91.5853 cv
118.281 91.5852 118.281 91.5851 118.281 91.5849 cv
116.957 91.1699 115.822 90.5771 114.907 89.8049 cv
114.907 89.8048 li
114.894 89.7939 114.881 89.7832 114.868 89.7723 cv
114.868 89.7716 114.867 89.7707 114.866 89.77 cv
114.862 89.7667 114.858 89.7636 114.855 89.7603 cv
114.853 89.7592 114.852 89.7584 114.851 89.7573 cv
114.84 89.7476 114.828 89.7376 114.817 89.7277 cv
114.815 89.7262 114.814 89.7248 114.812 89.7233 cv
114.809 89.7205 114.805 89.7177 114.802 89.7148 cv
114.8 89.7131 114.798 89.711 114.796 89.7092 cv
114.791 89.7055 114.787 89.7019 114.783 89.6982 cv
114.78 89.6953 114.777 89.6925 114.773 89.6897 cv
114.771 89.6874 114.769 89.6853 114.766 89.683 cv
114.763 89.6803 114.76 89.6781 114.757 89.6755 cv
114.755 89.6733 114.753 89.6714 114.751 89.6693 cv
114.747 89.666 114.743 89.6629 114.74 89.6596 cv
114.738 89.6577 114.735 89.6553 114.733 89.6534 cv
114.729 89.6496 114.725 89.6461 114.72 89.6423 cv
114.718 89.6405 114.716 89.6387 114.714 89.6369 cv
114.711 89.6338 114.708 89.6308 114.704 89.6277 cv
114.702 89.626 114.701 89.6244 114.699 89.6228 cv
114.694 89.6181 114.689 89.6135 114.684 89.6088 cv
114.683 89.6085 114.683 89.6083 114.683 89.608 cv
114.677 89.6033 114.673 89.5989 114.668 89.5942 cv
114.666 89.593 114.665 89.5921 114.664 89.5909 cv
114.66 89.5868 114.655 89.5827 114.651 89.5787 cv
114.65 89.5778 114.649 89.5769 114.648 89.576 cv
114.637 89.566 114.626 89.5559 114.615 89.5458 cv
114.615 89.545 114.614 89.5447 114.613 89.5439 cv
114.608 89.539 114.603 89.5341 114.598 89.5291 cv
114.597 89.5289 114.597 89.529 114.597 89.5288 cv
114.586 89.5182 114.575 89.5075 114.564 89.4969 cv
114.563 89.4967 114.563 89.4965 114.563 89.4964 cv
114.135 89.0877 113.762 88.6337 113.45 88.1352 cv
157.062 78.4122 li
157.556 78.9439 li
155.105 80.7024 152.494 82.3793 149.754 83.9336 cv
142.839 87.8584 136.123 90.4252 130.332 91.5913 cv
127.94 92.0729 125.705 92.3154 123.679 92.3154 cv
157.556 78.9439 mo
157.062 78.4122 li
158.819 78.0206 li
158.403 78.3305 157.982 78.6386 157.556 78.9439 cv
.338048 .269108 .266484 3.0518e-05 cmyk
f
113.45 88.1352 mo
113.094 87.5682 112.816 86.9432 112.621 86.2593 cv
110.066 77.3603 122.561 61.8823 140.517 51.6889 cv
147.426 47.769 154.138 45.2041 159.928 44.0385 cv
162.322 43.5565 164.559 43.3138 166.587 43.3138 cv
170.923 43.3138 174.301 44.4234 176.22 46.6739 cv
176.181 46.6289 li
176.228 46.6832 176.274 46.7382 176.32 46.7939 cv
176.328 46.8033 li
176.329 46.8045 176.33 46.8057 176.331 46.807 cv
176.461 46.968 176.584 47.1339 176.7 47.3062 cv
176.7 47.3062 li
176.7 47.3064 176.7 47.3064 176.7 47.3064 cv
176.7 47.3062 li
176.769 47.4084 176.835 47.5128 176.899 47.6192 cv
176.899 47.6193 176.899 47.6195 176.899 47.6197 cv
176.903 47.6251 176.906 47.6306 176.909 47.636 cv
176.91 47.6382 176.912 47.6404 176.913 47.6427 cv
176.914 47.6451 176.916 47.6474 176.917 47.6498 cv
176.941 47.6908 176.965 47.732 176.989 47.7736 cv
176.99 47.776 176.992 47.7784 176.993 47.7808 cv
176.994 47.7836 176.996 47.7865 176.998 47.7893 cv
177.005 47.8017 177.012 47.8142 177.018 47.8267 cv
177.018 47.8267 li
177.019 47.8269 177.019 47.8269 177.019 47.8269 cv
177.018 47.8267 li
177.069 47.9176 177.117 48.01 177.164 48.1037 cv
177.165 48.1069 177.167 48.1101 177.169 48.1132 cv
177.169 48.1137 177.169 48.1142 177.169 48.1147 cv
177.211 48.2001 177.252 48.2866 177.291 48.3743 cv
177.291 48.374 li
177.291 48.3745 177.291 48.3745 177.291 48.3745 cv
177.291 48.374 li
177.376 48.5636 177.453 48.7583 177.522 48.9583 cv
177.522 48.958 li
177.522 48.9584 177.522 48.9584 177.522 48.9584 cv
177.522 48.958 li
177.568 49.0908 177.611 49.2257 177.65 49.3628 cv
177.673 49.4411 177.694 49.5207 177.714 49.6 cv
177.714 49.5996 li
177.714 49.6 177.714 49.6 177.714 49.6 cv
177.714 49.5996 li
177.744 49.7167 177.77 49.8333 177.795 49.9522 cv
177.795 49.9522 li
177.824 50.0913 177.849 50.233 177.871 50.375 cv
177.871 50.375 li
177.909 50.6193 177.937 50.8671 177.955 51.1196 cv
177.955 51.1196 li
177.955 51.1196 177.955 51.1196 177.955 51.1196 cv
177.955 51.1196 li
177.971 51.352 177.979 51.5877 177.98 51.8266 cv
177.983 59.1375 170.335 69.4321 158.819 78.0206 cv
157.062 78.4122 li
156.801 78.1319 li
157.168 77.7914 li
155.125 75.5941 li
154.759 75.9346 li
152.716 73.7373 li
153.083 73.3969 li
151.04 71.1996 li
150.308 71.8805 li
152.35 74.0778 li
152.716 73.7373 li
154.759 75.9346 li
154.393 76.275 li
156.435 78.4723 li
156.801 78.1319 li
157.062 78.4122 li
113.45 88.1352 li
.337285 .266545 .267094 3.0518e-05 cmyk
f
157.556 78.9439 mo
157.062 78.4122 li
156.801 78.1319 li
157.062 78.4122 li
157.556 78.9439 li
157.556 78.9439 li
154.759 75.9346 mo
152.716 73.7373 li
154.759 75.9346 li
.636469 .551324 .533165 .279393 cmyk
f
156.435 78.4723 mo
154.393 76.275 li
154.759 75.9346 li
155.125 75.5941 li
157.168 77.7914 li
156.801 78.1319 li
156.435 78.4723 li
152.35 74.0778 mo
150.308 71.8805 li
151.04 71.1996 li
153.083 73.3969 li
152.716 73.7373 li
152.35 74.0778 li
.608026 .524132 .508965 .21445 cmyk
f
gsave
176.181 46.6289 mo
274.941 160.509 li
275.612 161.283 276.109 162.194 276.41 163.243 cv
278.955 172.15 266.469 187.627 248.514 197.814 cv
241.599 201.738 234.883 204.306 229.092 205.472 cv
221.617 206.977 215.683 206.146 212.853 202.883 cv
114.092 89.0029 li
116.922 92.2661 122.857 93.0962 130.332 91.5913 cv
136.123 90.4252 142.839 87.8584 149.754 83.9336 cv
167.709 73.7471 180.195 58.271 177.65 49.3628 cv
177.349 48.314 176.853 47.4028 176.181 46.6289 cv
clp
275.088 160.684 mo
222.319 99.8362 li
222.323 99.8344 li
274.941 160.509 li
275.088 160.684 li
221.649 99.0636 mo
220.788 98.0699 li
220.791 98.0682 li
221.653 99.0618 li
221.649 99.0636 li
200.888 75.1238 mo
199.549 73.5802 li
199.553 73.5785 li
200.891 75.1215 li
200.889 75.1234 200.89 75.1219 200.888 75.1238 cv
198.876 72.8033 mo
196.177 69.6917 li
196.181 69.6909 li
198.879 72.8017 li
198.876 72.8033 li
.389654 .317082 .311955 .0028687 cmyk
f
199.549 73.5802 mo
198.876 72.8033 li
198.879 72.8017 li
199.553 73.5785 li
199.549 73.5802 li
.631556 .561395 .528222 .280247 cmyk
f
196.177 69.6917 mo
176.328 46.8037 li
176.328 46.8033 li
176.32 46.7939 li
176.274 46.7382 176.228 46.6832 176.181 46.6289 cv
176.22 46.6739 li
196.181 69.6909 li
196.177 69.6917 li
.388586 .315953 .313451 .00277714 cmyk
f
275.46 161.186 mo
222.276 99.86 li
222.319 99.8362 li
275.088 160.684 li
275.107 160.708 275.127 160.732 275.146 160.756 cv
275.236 160.87 275.323 160.987 275.406 161.107 cv
275.424 161.133 275.442 161.16 275.46 161.186 cv
221.606 99.0875 mo
220.743 98.0927 li
220.788 98.0699 li
221.649 99.0636 li
221.606 99.0875 li
200.852 75.1552 mo
199.505 73.603 li
199.549 73.5802 li
200.888 75.1238 li
200.877 75.1334 200.863 75.1456 200.852 75.1552 cv
198.832 72.8262 mo
196.124 69.7037 li
196.177 69.6917 li
198.876 72.8033 li
198.832 72.8262 li
.380713 .305791 .302739 .00173953 cmyk
f
199.505 73.603 mo
198.832 72.8262 li
198.876 72.8033 li
199.549 73.5802 li
199.505 73.603 li
.626978 .548089 .52752 .26511 cmyk
f
196.124 69.7037 mo
176.7 47.3062 li
176.584 47.1339 176.461 46.968 176.331 46.807 cv
176.33 46.8059 176.329 46.8048 176.328 46.8037 cv
196.177 69.6917 li
196.124 69.7037 li
.380102 .308721 .299565 .00183108 cmyk
f
275.778 161.707 mo
222.186 99.9096 li
222.276 99.86 li
275.46 161.186 li
275.573 161.354 275.68 161.528 275.778 161.707 cv
221.516 99.1371 mo
220.652 98.1402 li
220.743 98.0927 li
221.606 99.0875 li
221.516 99.1371 li
200.775 75.2207 mo
199.414 73.6507 li
199.505 73.603 li
200.852 75.1552 li
200.827 75.1763 200.8 75.1997 200.775 75.2207 cv
198.74 72.8739 mo
196.012 69.7285 li
196.124 69.7037 li
198.832 72.8262 li
198.74 72.8739 li
.3664 .293095 .290227 .000366217 cmyk
f
199.414 73.6507 mo
198.74 72.8739 li
198.832 72.8262 li
199.505 73.603 li
199.414 73.6507 li
.619593 .547356 .515679 .247501 cmyk
f
196.012 69.7285 mo
177.018 47.8267 li
177.012 47.8142 177.005 47.8017 176.998 47.7893 cv
176.996 47.7865 176.994 47.7836 176.993 47.7808 cv
176.992 47.7784 176.99 47.776 176.989 47.7736 cv
176.965 47.732 176.941 47.6908 176.917 47.6498 cv
176.916 47.6474 176.914 47.6451 176.913 47.6427 cv
176.912 47.6404 176.91 47.6382 176.909 47.636 cv
176.906 47.6306 176.903 47.6251 176.899 47.6197 cv
176.899 47.6195 176.899 47.6193 176.899 47.6192 cv
176.835 47.5128 176.769 47.4084 176.7 47.3062 cv
176.7 47.3062 li
196.124 69.7037 li
196.012 69.7285 li
.368933 .293309 .293736 .000488289 cmyk
f
276.051 162.254 mo
222.049 99.985 li
222.186 99.9096 li
275.778 161.707 li
275.784 161.717 275.79 161.728 275.796 161.738 cv
275.879 161.89 275.956 162.046 276.029 162.205 cv
276.036 162.221 276.044 162.238 276.051 162.254 cv
221.379 99.2125 mo
220.512 98.2122 li
220.652 98.1402 li
221.516 99.1371 li
221.379 99.2125 li
200.659 75.3201 mo
199.274 73.7231 li
199.414 73.6507 li
200.775 75.2207 li
200.735 75.2552 200.7 75.2857 200.659 75.3201 cv
198.601 72.9463 mo
195.843 69.7663 li
196.012 69.7285 li
198.74 72.8739 li
198.601 72.9463 li
.351781 .283726 .274815 3.0518e-05 cmyk
f
199.274 73.7231 mo
198.601 72.9463 li
198.74 72.8739 li
199.414 73.6507 li
199.274 73.7231 li
.612299 .546471 .503777 .230045 cmyk
f
195.843 69.7663 mo
177.291 48.374 li
177.252 48.2866 177.211 48.2001 177.169 48.1147 cv
177.169 48.1142 177.169 48.1137 177.169 48.1132 cv
177.167 48.1101 177.165 48.1069 177.164 48.1037 cv
177.117 48.01 177.069 47.9176 177.018 47.8267 cv
177.018 47.8267 li
196.012 69.7285 li
195.843 69.7663 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
276.282 162.838 mo
221.863 100.088 li
222.049 99.985 li
276.051 162.254 li
276.058 162.271 276.066 162.287 276.073 162.304 cv
276.149 162.477 276.218 162.655 276.282 162.837 cv
221.193 99.3152 mo
220.322 98.3105 li
220.512 98.2122 li
221.379 99.2125 li
221.193 99.3152 li
200.501 75.4552 mo
199.085 73.8218 li
199.274 73.7231 li
200.659 75.3201 li
200.608 75.364 200.552 75.4114 200.501 75.4552 cv
198.411 73.045 mo
195.612 69.8177 li
195.843 69.7663 li
198.601 72.9463 li
198.411 73.045 li
.341375 .27158 .269108 3.0518e-05 cmyk
f
199.085 73.8218 mo
198.411 73.045 li
198.601 72.9463 li
199.274 73.7231 li
199.085 73.8218 li
.607477 .531609 .504021 .216007 cmyk
f
195.612 69.8177 mo
177.522 48.958 li
177.453 48.7583 177.376 48.5636 177.291 48.3743 cv
177.291 48.374 li
195.843 69.7663 li
195.612 69.8177 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
276.474 163.48 mo
221.617 100.224 li
221.863 100.088 li
276.282 162.838 li
276.328 162.97 276.371 163.105 276.41 163.243 cv
276.41 163.243 li
276.474 163.48 li
220.947 99.4513 mo
220.07 98.4406 li
220.322 98.3105 li
221.193 99.3152 li
220.947 99.4513 li
200.291 75.6335 mo
198.833 73.9524 li
199.085 73.8218 li
200.501 75.4552 li
200.43 75.5161 200.363 75.5729 200.291 75.6335 cv
198.16 73.1756 mo
195.307 69.8858 li
195.612 69.8177 li
198.411 73.045 li
198.16 73.1756 li
.328618 .260868 .258091 3.0518e-05 cmyk
f
198.833 73.9524 mo
198.16 73.1756 li
198.411 73.045 li
199.085 73.8218 li
198.833 73.9524 li
.602045 .518151 .503777 .203189 cmyk
f
195.307 69.8858 mo
177.714 49.5996 li
177.694 49.5207 177.673 49.4411 177.65 49.3628 cv
177.611 49.2257 177.568 49.0908 177.522 48.9583 cv
177.522 48.958 li
195.612 69.8177 li
195.307 69.8858 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
276.621 164.192 mo
221.298 100.399 li
221.617 100.224 li
276.474 163.48 li
276.478 163.498 276.483 163.517 276.488 163.536 cv
276.541 163.752 276.585 163.97 276.621 164.192 cv
220.628 99.6269 mo
219.745 98.6085 li
220.07 98.4406 li
220.947 99.4513 li
220.628 99.6269 li
200.019 75.8629 mo
198.509 74.1211 li
198.833 73.9524 li
200.291 75.6335 li
200.202 75.7092 200.109 75.7876 200.019 75.8629 cv
197.835 73.3443 mo
194.912 69.9738 li
195.307 69.8858 li
198.16 73.1756 li
197.835 73.3443 li
.316472 .254215 .244816 3.0518e-05 cmyk
f
198.509 74.1211 mo
197.835 73.3443 li
198.16 73.1756 li
198.833 73.9524 li
198.509 74.1211 li
.592645 .51693 .489876 .187655 cmyk
f
194.912 69.9738 mo
177.861 50.3125 li
177.842 50.1914 177.82 50.0713 177.795 49.9522 cv
177.795 49.9522 li
177.77 49.8333 177.744 49.7167 177.714 49.6 cv
177.714 49.5996 li
195.307 69.8858 li
194.912 69.9738 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
276.715 165 mo
220.888 100.626 li
221.298 100.399 li
276.621 164.192 li
276.664 164.456 276.695 164.726 276.714 164.999 cv
220.218 99.8532 mo
219.326 98.8249 li
219.745 98.6085 li
220.628 99.6269 li
220.218 99.8532 li
199.668 76.1572 mo
198.091 74.3384 li
198.509 74.1211 li
200.019 75.8629 li
199.903 75.9608 199.784 76.0601 199.668 76.1572 cv
197.964 74.1928 mo
194.404 70.0871 li
194.912 69.9738 li
197.835 73.3443 li
197.59 73.4719 li
197.964 74.1928 li
.307622 .24152 .239048 3.0518e-05 cmyk
f
198.091 74.3384 mo
197.964 74.1928 li
197.59 73.4719 li
197.835 73.3443 li
198.509 74.1211 li
198.091 74.3384 li
.586633 .510796 .484047 .176638 cmyk
f
194.404 70.0871 mo
177.955 51.1196 li
177.937 50.8671 177.909 50.6193 177.871 50.375 cv
177.871 50.375 li
177.868 50.3541 177.865 50.3333 177.861 50.3125 cv
194.912 69.9738 li
194.404 70.0871 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
276.737 165.938 mo
220.352 100.921 li
220.888 100.626 li
276.715 165 li
276.736 165.306 276.744 165.62 276.737 165.938 cv
219.682 100.149 mo
218.779 99.1074 li
219.326 98.8249 li
220.218 99.8532 li
219.682 100.149 li
199.207 76.539 mo
193.74 70.2351 li
194.404 70.0871 li
197.964 74.1928 li
198.051 74.3591 li
198.091 74.3384 li
199.668 76.1572 li
199.513 76.2859 199.362 76.4117 199.207 76.539 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
198.051 74.3591 mo
197.964 74.1928 li
198.091 74.3384 li
198.051 74.3591 li
.578485 .502251 .475471 .16025 cmyk
f
193.74 70.2351 mo
177.977 52.0591 li
177.979 51.9814 177.98 51.9038 177.98 51.8266 cv
177.979 51.5877 177.971 51.352 177.955 51.1196 cv
177.955 51.1196 li
194.404 70.0871 li
193.74 70.2351 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
276.635 167.239 mo
219.52 101.38 li
220.352 100.921 li
276.737 165.938 li
276.734 166.053 276.73 166.168 276.724 166.284 cv
276.707 166.598 276.678 166.916 276.635 167.239 cv
218.85 100.608 mo
217.93 99.5462 li
218.779 99.1074 li
219.682 100.149 li
218.85 100.608 li
198.487 77.1264 mo
192.71 70.4648 li
193.74 70.2351 li
199.207 76.539 li
198.967 76.7366 198.727 76.9323 198.487 77.1264 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
192.71 70.4648 mo
177.875 53.3589 li
177.934 52.917 177.968 52.4829 177.977 52.0592 cv
193.74 70.2351 li
192.71 70.4648 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
276.129 169.562 mo
217.815 102.32 li
219.52 101.38 li
276.635 167.239 li
276.548 167.894 276.407 168.57 276.215 169.261 cv
276.213 169.268 276.211 169.275 276.209 169.283 cv
276.209 169.285 276.208 169.287 276.208 169.289 cv
276.182 169.379 276.156 169.471 276.129 169.562 cv
217.145 101.548 mo
216.189 100.445 li
217.93 99.5462 li
218.85 100.608 li
217.145 101.548 li
196.993 78.3102 mo
194.96 75.966 li
195.389 75.7429 li
194.928 74.8555 li
194.286 75.1891 li
190.597 70.9357 li
192.71 70.4648 li
198.487 77.1264 li
197.99 77.5274 197.49 77.9235 196.993 78.3102 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
194.96 75.966 mo
194.286 75.1891 li
194.928 74.8555 li
195.389 75.7429 li
194.96 75.966 li
.566369 .482063 .469001 .137972 cmyk
f
190.597 70.9357 mo
177.369 55.6822 li
177.606 54.8852 177.776 54.1097 177.875 53.3591 cv
192.71 70.4648 li
190.597 70.9357 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
274.697 173.131 mo
214.753 104.009 li
217.815 102.32 li
276.129 169.562 li
276.072 169.753 276.012 169.944 275.948 170.136 cv
275.947 170.139 275.946 170.142 275.945 170.145 cv
275.943 170.151 275.941 170.157 275.939 170.164 cv
275.937 170.17 275.935 170.176 275.933 170.181 cv
275.932 170.185 275.931 170.188 275.93 170.191 cv
275.927 170.198 275.925 170.206 275.922 170.213 cv
275.922 170.214 275.922 170.215 275.921 170.216 cv
275.839 170.46 275.751 170.705 275.657 170.952 cv
275.656 170.954 275.655 170.958 275.653 170.961 cv
275.651 170.966 275.649 170.972 275.647 170.978 cv
275.645 170.984 275.642 170.991 275.64 170.996 cv
275.638 171 275.637 171.003 275.636 171.007 cv
275.369 171.703 275.055 172.411 274.697 173.131 cv
214.083 103.237 mo
213.063 102.06 li
216.189 100.445 li
217.145 101.548 li
214.083 103.237 li
194.25 80.3663 mo
186.805 71.7813 li
190.597 70.9357 li
194.286 75.1891 li
192.266 76.2392 li
192.727 77.1266 li
194.96 75.966 li
196.993 78.3102 li
196.081 79.019 195.166 79.7042 194.25 80.3663 cv
.262028 .204318 .201663 3.0518e-05 cmyk
f
192.727 77.1266 mo
192.266 76.2392 li
194.286 75.1891 li
194.96 75.966 li
192.727 77.1266 li
.557519 .479713 .456031 .123964 cmyk
f
186.805 71.7813 mo
175.938 59.2505 li
176.105 58.9134 176.263 58.5786 176.411 58.2465 cv
176.413 58.2422 176.415 58.2387 176.417 58.2344 cv
176.419 58.2288 176.421 58.2234 176.424 58.2178 cv
176.427 58.2107 176.429 58.2054 176.433 58.1983 cv
176.433 58.1968 176.434 58.1954 176.435 58.1939 cv
176.814 57.3379 177.127 56.4988 177.369 55.6822 cv
190.597 70.9357 li
186.805 71.7813 li
.260136 .206882 .197757 3.0518e-05 cmyk
f
272.66 176.633 mo
211.321 105.902 li
214.753 104.009 li
274.697 173.131 li
274.127 174.275 273.446 175.446 272.66 176.633 cv
210.651 105.13 mo
209.558 103.87 li
213.063 102.06 li
214.083 103.237 li
210.651 105.13 li
191.08 82.5632 mo
188.342 79.4058 li
190.065 78.5102 li
189.604 77.6228 li
187.668 78.629 li
182.552 72.7294 li
186.805 71.7813 li
194.25 80.3663 li
193.193 81.1298 192.14 81.8596 191.08 82.5632 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
188.342 79.4058 mo
187.668 78.629 li
189.604 77.6228 li
190.065 78.5102 li
188.342 79.4058 li
.566369 .482063 .469001 .137972 cmyk
f
182.552 72.7294 mo
173.9 62.753 li
174.603 61.692 175.222 60.6442 175.752 59.6164 cv
175.815 59.4942 175.877 59.3721 175.938 59.2505 cv
186.805 71.7813 li
182.552 72.7294 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
270.922 179.066 mo
208.717 107.338 li
211.321 105.902 li
272.66 176.633 li
272.127 177.438 271.547 178.25 270.922 179.066 cv
208.047 106.566 mo
206.9 105.243 li
209.558 103.87 li
210.651 105.13 li
208.047 106.566 li
188.609 84.1513 mo
179.327 73.4484 li
182.552 72.7294 li
187.668 78.629 li
186.942 79.0065 li
187.403 79.8939 li
188.342 79.4058 li
191.08 82.5632 li
190.257 83.1101 189.433 83.6394 188.609 84.1513 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
187.403 79.8939 mo
186.942 79.0065 li
187.668 78.629 li
188.342 79.4058 li
187.403 79.8939 li
.572229 .495827 .470314 .149874 cmyk
f
179.327 73.4484 mo
172.162 65.1865 li
172.436 64.8296 172.7 64.4745 172.956 64.1194 cv
172.958 64.1154 172.961 64.1115 172.964 64.1076 cv
172.97 64.0992 172.975 64.0918 172.981 64.0835 cv
172.986 64.0766 172.991 64.0697 172.996 64.0628 cv
173 64.0583 173.004 64.0528 173.007 64.0483 cv
173.014 64.0389 173.02 64.0295 173.027 64.0201 cv
173.029 64.0179 173.031 64.0151 173.032 64.0129 cv
173.04 64.0024 173.047 63.992 173.055 63.9816 cv
173.056 63.9801 173.057 63.9786 173.058 63.9771 cv
173.066 63.9656 173.074 63.954 173.082 63.9425 cv
173.083 63.942 li
173.091 63.9299 173.1 63.9179 173.109 63.9059 cv
173.109 63.9058 li
173.195 63.785 173.28 63.6643 173.364 63.5438 cv
173.365 63.5415 173.366 63.5395 173.368 63.5373 cv
173.375 63.5273 173.382 63.5172 173.389 63.5072 cv
173.564 63.2552 173.735 63.0037 173.9 62.753 cv
182.552 72.7294 li
179.327 73.4484 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
269.146 181.255 mo
206.233 108.709 li
208.717 107.338 li
270.922 179.066 li
270.365 179.793 269.772 180.524 269.146 181.255 cv
205.762 107.826 mo
205.467 107.826 li
204.364 106.553 li
206.9 105.243 li
208.047 106.566 li
205.762 107.826 li
186.195 85.6028 mo
183.158 82.1008 li
184.741 81.2775 li
184.28 80.3903 li
182.484 81.3239 li
176.249 74.1345 li
179.327 73.4484 li
188.609 84.1513 li
187.803 84.652 187 85.1346 186.195 85.6028 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
183.158 82.1008 mo
182.484 81.3239 li
184.28 80.3903 li
184.741 81.2775 li
183.158 82.1008 li
.578485 .502251 .475471 .16025 cmyk
f
176.249 74.1345 mo
170.387 67.3745 li
170.701 67.0082 171.006 66.642 171.303 66.2763 cv
171.598 65.9127 171.885 65.5489 172.162 65.1866 cv
179.327 73.4484 li
176.249 74.1345 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
267.281 183.329 mo
202.67 108.826 li
206.019 108.826 li
206.233 108.709 li
269.146 181.255 li
268.554 181.946 267.932 182.638 267.281 183.328 cv
205.467 107.826 mo
201.9 107.826 li
204.364 106.553 li
205.467 107.826 li
183.731 86.9872 mo
173.178 74.8192 li
176.249 74.1345 li
182.484 81.3239 li
181.618 81.7738 li
182.08 82.6612 li
183.158 82.1008 li
186.195 85.6028 li
185.373 86.0803 184.551 86.5424 183.731 86.9872 cv
.307622 .24152 .239048 3.0518e-05 cmyk
f
182.08 82.6612 mo
181.618 81.7738 li
182.484 81.3239 li
183.158 82.1008 li
182.08 82.6612 li
.586633 .510796 .484047 .176638 cmyk
f
173.178 74.8192 mo
168.521 69.4487 li
169.018 68.9209 169.499 68.3922 169.963 67.8639 cv
169.964 67.8627 169.965 67.8615 169.966 67.8602 cv
169.968 67.8572 169.972 67.8532 169.975 67.8501 cv
170.114 67.6916 170.251 67.533 170.387 67.3745 cv
176.249 74.1345 li
173.178 74.8192 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
265.295 185.347 mo
199.237 109.176 li
199.287 109.176 li
199.964 108.826 li
202.67 108.826 li
267.281 183.329 li
266.646 184.002 265.982 184.676 265.294 185.346 cv
181.161 88.3318 mo
178.057 84.7524 li
179.418 84.0448 li
178.957 83.1576 li
177.383 83.9755 li
170.048 75.5172 li
173.178 74.8192 li
183.731 86.9872 li
182.873 87.4529 182.016 87.9006 181.161 88.3318 cv
.316472 .254215 .244816 3.0518e-05 cmyk
f
178.057 84.7524 mo
177.383 83.9755 li
178.957 83.1576 li
179.418 84.0448 li
178.057 84.7524 li
.592645 .51693 .489876 .187655 cmyk
f
170.048 75.5172 mo
166.535 71.4663 li
166.6 71.4024 166.666 71.3384 166.731 71.2744 cv
167.173 70.8407 167.604 70.4061 168.024 69.9705 cv
168.03 69.9642 168.036 69.9579 168.042 69.9517 cv
168.042 69.9517 li
168.124 69.8667 168.205 69.7816 168.286 69.6966 cv
168.29 69.6928 168.293 69.6894 168.297 69.6855 cv
168.303 69.6791 168.309 69.6726 168.315 69.6661 cv
168.323 69.6577 168.332 69.6485 168.34 69.6401 cv
168.341 69.6392 168.342 69.6383 168.342 69.6375 cv
168.402 69.5748 168.462 69.5115 168.521 69.4488 cv
173.178 74.8192 li
170.048 75.5172 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
263.168 187.333 mo
195.387 109.176 li
199.237 109.176 li
265.295 185.347 li
264.61 186.012 263.901 186.674 263.168 187.333 cv
178.45 89.6449 mo
166.821 76.2364 li
170.048 75.5172 li
177.383 83.9755 li
176.295 84.5412 li
176.756 85.4285 li
178.057 84.7524 li
181.161 88.3318 li
180.255 88.788 179.351 89.226 178.45 89.6449 cv
.328618 .260868 .258091 3.0518e-05 cmyk
f
176.756 85.4285 mo
176.295 84.5412 li
177.383 83.9755 li
178.057 84.7524 li
176.756 85.4285 li
.602045 .518151 .503777 .203189 cmyk
f
166.821 76.2364 mo
164.408 73.4531 li
164.503 73.3679 164.597 73.2826 164.691 73.1973 cv
164.695 73.1943 164.696 73.1928 164.7 73.1898 cv
164.706 73.1835 164.714 73.1771 164.72 73.1708 cv
165.221 72.7168 165.709 72.2609 166.186 71.8032 cv
166.303 71.691 166.419 71.5787 166.535 71.4663 cv
170.048 75.5172 li
166.821 76.2364 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
260.893 189.295 mo
191.411 109.176 li
195.387 109.176 li
263.168 187.333 li
262.433 187.992 261.673 188.647 260.892 189.295 cv
175.581 90.9223 mo
172.662 87.5567 li
174.094 86.8122 li
173.633 85.9249 li
171.988 86.7798 li
163.489 76.9793 li
166.821 76.2364 li
178.45 89.6449 li
177.49 90.091 176.533 90.5168 175.581 90.9223 cv
.341375 .27158 .269108 3.0518e-05 cmyk
f
172.662 87.5567 mo
171.988 86.7798 li
173.633 85.9249 li
174.094 86.8122 li
172.662 87.5567 li
.607477 .531609 .504021 .216007 cmyk
f
163.489 76.9793 mo
162.132 75.4151 li
162.807 74.8554 163.467 74.2895 164.107 73.7211 cv
164.208 73.6318 164.308 73.5425 164.408 73.4531 cv
166.821 76.2364 li
163.489 76.9793 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
258.443 191.246 mo
217.765 144.34 li
218.078 144.05 li
220.12 146.247 li
219.754 146.588 li
221.796 148.785 li
222.163 148.445 li
224.205 150.642 li
223.839 150.982 li
225.882 153.18 li
226.248 152.839 li
228.29 155.036 li
227.924 155.377 li
229.967 157.574 li
230.333 157.234 li
232.375 159.431 li
232.009 159.771 li
234.052 161.969 li
234.418 161.628 li
236.46 163.826 li
236.094 164.166 li
238.137 166.363 li
238.503 166.023 li
240.546 168.22 li
240.179 168.56 li
242.222 170.758 li
242.588 170.417 li
244.631 172.615 li
244.264 172.955 li
246.307 175.152 li
246.673 174.812 li
248.716 177.009 li
248.349 177.35 li
250.392 179.547 li
250.758 179.206 li
252.801 181.404 li
252.435 181.744 li
254.477 183.941 li
254.843 183.601 li
256.886 185.798 li
256.52 186.139 li
258.562 188.336 li
258.928 187.995 li
260.464 189.647 li
259.924 190.089 259.375 190.526 258.814 190.961 cv
258.691 191.056 258.567 191.151 258.443 191.246 cv
260.464 189.647 mo
258.928 187.995 li
259.295 187.655 li
257.252 185.458 li
256.886 185.798 li
254.843 183.601 li
255.21 183.261 li
253.167 181.063 li
252.801 181.404 li
250.758 179.206 li
251.124 178.866 li
249.082 176.669 li
248.716 177.009 li
246.673 174.812 li
247.039 174.471 li
244.997 172.274 li
244.631 172.615 li
242.588 170.417 li
242.954 170.077 li
240.912 167.88 li
240.546 168.22 li
238.503 166.023 li
238.869 165.682 li
236.827 163.485 li
236.46 163.826 li
234.418 161.628 li
234.784 161.288 li
232.742 159.091 li
232.375 159.431 li
230.333 157.234 li
230.699 156.893 li
228.657 154.696 li
228.29 155.036 li
226.248 152.839 li
226.614 152.499 li
224.571 150.301 li
224.205 150.642 li
222.163 148.445 li
222.529 148.104 li
220.486 145.907 li
220.12 146.247 li
218.078 144.05 li
218.444 143.71 li
216.401 141.512 li
216.035 141.853 li
213.993 139.656 li
214.359 139.315 li
212.316 137.118 li
211.95 137.458 li
209.907 135.261 li
210.274 134.921 li
208.231 132.723 li
207.932 133.002 li
205.965 130.734 li
206.189 130.526 li
204.146 128.329 li
203.998 128.466 li
202.032 126.198 li
202.104 126.132 li
200.171 124.053 li
187.269 109.176 li
191.411 109.176 li
260.893 189.295 li
260.75 189.413 260.608 189.53 260.464 189.647 cv
215.799 142.073 mo
213.832 139.805 li
213.993 139.656 li
216.035 141.853 li
215.799 142.073 li
211.865 137.537 mo
209.899 135.269 li
209.907 135.261 li
211.95 137.458 li
211.865 137.537 li
172.517 92.1647 mo
160.019 77.753 li
163.489 76.9793 li
171.988 86.7798 li
170.971 87.3086 li
171.432 88.1958 li
172.662 87.5567 li
175.581 90.9223 li
174.554 91.3592 173.533 91.7728 172.517 92.1647 cv
.351781 .283726 .274815 3.0518e-05 cmyk
f
171.432 88.1958 mo
170.971 87.3086 li
171.988 86.7798 li
172.662 87.5567 li
171.432 88.1958 li
.612299 .546471 .503777 .230045 cmyk
f
160.019 77.753 mo
159.684 77.3667 li
160.216 76.9585 160.74 76.547 161.255 76.1324 cv
161.55 75.8943 161.843 75.6552 162.132 75.4152 cv
163.489 76.9793 li
160.019 77.753 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
260.464 189.647 mo
258.928 187.995 li
260.464 189.647 li
260.464 189.647 li
256.886 185.798 mo
254.843 183.601 li
256.886 185.798 li
252.801 181.404 mo
250.758 179.206 li
252.801 181.404 li
248.716 177.009 mo
246.673 174.812 li
248.716 177.009 li
244.631 172.615 mo
242.588 170.417 li
244.631 172.615 li
240.546 168.22 mo
238.503 166.023 li
240.546 168.22 li
236.46 163.826 mo
234.418 161.628 li
236.46 163.826 li
232.375 159.431 mo
230.333 157.234 li
232.375 159.431 li
228.29 155.036 mo
226.248 152.839 li
228.29 155.036 li
224.205 150.642 mo
222.163 148.445 li
224.205 150.642 li
220.12 146.247 mo
218.078 144.05 li
220.12 146.247 li
216.035 141.853 mo
213.993 139.656 li
216.035 141.853 li
211.95 137.458 mo
209.907 135.261 li
211.95 137.458 li
.642725 .56643 .536248 .301579 cmyk
f
258.562 188.336 mo
256.52 186.139 li
256.886 185.798 li
257.252 185.458 li
259.295 187.655 li
258.928 187.995 li
258.562 188.336 li
254.477 183.941 mo
252.435 181.744 li
252.801 181.404 li
253.167 181.063 li
255.21 183.261 li
254.843 183.601 li
254.477 183.941 li
250.392 179.547 mo
248.349 177.35 li
248.716 177.009 li
249.082 176.669 li
251.124 178.866 li
250.758 179.206 li
250.392 179.547 li
246.307 175.152 mo
244.264 172.955 li
244.631 172.615 li
244.997 172.274 li
247.039 174.471 li
246.673 174.812 li
246.307 175.152 li
242.222 170.758 mo
240.179 168.56 li
240.546 168.22 li
240.912 167.88 li
242.954 170.077 li
242.588 170.417 li
242.222 170.758 li
238.137 166.363 mo
236.094 164.166 li
236.46 163.826 li
236.827 163.485 li
238.869 165.682 li
238.503 166.023 li
238.137 166.363 li
234.052 161.969 mo
232.009 159.771 li
232.375 159.431 li
232.742 159.091 li
234.784 161.288 li
234.418 161.628 li
234.052 161.969 li
229.967 157.574 mo
227.924 155.377 li
228.29 155.036 li
228.657 154.696 li
230.699 156.893 li
230.333 157.234 li
229.967 157.574 li
225.882 153.18 mo
223.839 150.982 li
224.205 150.642 li
224.571 150.301 li
226.614 152.499 li
226.248 152.839 li
225.882 153.18 li
221.796 148.785 mo
219.754 146.588 li
220.12 146.247 li
220.486 145.907 li
222.529 148.104 li
222.163 148.445 li
221.796 148.785 li
217.765 144.34 mo
215.799 142.073 li
216.035 141.853 li
216.401 141.512 li
218.444 143.71 li
218.078 144.05 li
217.765 144.34 li
213.832 139.805 mo
211.865 137.537 li
211.95 137.458 li
212.316 137.118 li
214.359 139.315 li
213.993 139.656 li
213.832 139.805 li
209.899 135.269 mo
207.932 133.002 li
208.231 132.723 li
210.274 134.921 li
209.907 135.261 li
209.899 135.269 li
205.965 130.734 mo
203.998 128.466 li
204.146 128.329 li
206.189 130.526 li
205.965 130.734 li
202.032 126.198 mo
200.171 124.053 li
202.104 126.132 li
202.032 126.198 li
.612299 .546471 .503777 .230045 cmyk
f
255.816 193.181 mo
182.965 109.176 li
184.976 109.176 li
185.031 109.234 li
185.094 109.176 li
185.659 109.176 li
187.44 111.091 li
187.073 111.431 li
189.116 113.629 li
189.482 113.288 li
191.525 115.486 li
191.158 115.826 li
193.201 118.023 li
193.567 117.683 li
195.61 119.88 li
195.243 120.22 li
197.286 122.418 li
197.652 122.077 li
199.695 124.275 li
199.329 124.615 li
201.371 126.812 li
201.737 126.472 li
203.78 128.669 li
203.414 129.01 li
205.456 131.207 li
205.822 130.866 li
207.865 133.064 li
207.499 133.404 li
209.541 135.601 li
209.899 135.269 li
211.865 137.537 li
211.584 137.799 li
213.626 139.996 li
213.832 139.805 li
215.799 142.073 li
215.669 142.193 li
217.711 144.391 li
217.765 144.34 li
258.443 191.246 li
258.059 191.541 257.669 191.834 257.275 192.125 cv
256.795 192.48 256.309 192.831 255.816 193.18 cv
207.865 133.064 mo
205.822 130.866 li
205.965 130.734 li
207.932 133.002 li
207.865 133.064 li
203.78 128.669 mo
201.737 126.472 li
202.032 126.198 li
203.998 128.466 li
203.78 128.669 li
199.695 124.275 mo
197.652 122.077 li
198.018 121.737 li
195.976 119.54 li
195.61 119.88 li
193.567 117.683 li
193.933 117.342 li
191.891 115.145 li
191.525 115.486 li
189.482 113.288 li
189.848 112.948 li
187.806 110.751 li
187.44 111.091 li
185.659 109.176 li
187.269 109.176 li
200.171 124.053 li
200.061 123.934 li
199.695 124.275 li
169.247 93.3581 mo
166.84 90.5828 li
167.415 90.284 li
168.69 91.6559 li
169.057 91.3155 li
170.534 92.9045 li
170.104 93.0595 169.675 93.2107 169.247 93.3581 cv
170.534 92.9045 mo
169.057 91.3155 li
169.423 90.9751 li
168.336 89.8055 li
168.77 89.5795 li
168.309 88.6922 li
167.629 89.0456 li
167.38 88.7778 li
167.014 89.1182 li
164.972 86.921 li
165.338 86.5806 li
163.295 84.3832 li
162.929 84.7237 li
160.886 82.5264 li
161.253 82.1859 li
159.21 79.9887 li
158.844 80.3292 li
157.556 78.9439 li
157.584 78.9242 157.613 78.9033 157.64 78.8836 cv
158.037 78.5979 158.43 78.3102 158.819 78.0205 cv
160.019 77.753 li
172.517 92.1647 li
171.854 92.4203 171.192 92.6672 170.534 92.9045 cv
166.167 89.806 mo
157.056 79.3003 li
157.224 79.1815 157.39 79.0635 157.556 78.9439 cv
158.844 80.3292 li
158.478 80.6696 li
160.52 82.8668 li
160.886 82.5264 li
162.929 84.7237 li
162.563 85.0641 li
164.605 87.2614 li
164.972 86.921 li
167.014 89.1182 li
166.648 89.4586 li
166.709 89.5241 li
166.167 89.806 li
.3664 .293095 .290227 .000366217 cmyk
f
166.84 90.5828 mo
166.167 89.806 li
166.709 89.5241 li
167.415 90.284 li
166.84 90.5828 li
168.336 89.8055 mo
167.629 89.0456 li
168.309 88.6922 li
168.77 89.5795 li
168.336 89.8055 li
.619593 .547356 .515679 .247501 cmyk
f
158.819 78.0205 mo
159.11 77.8037 159.398 77.5857 159.684 77.3667 cv
160.019 77.753 li
158.819 78.0205 li
.368933 .293309 .293736 .000488289 cmyk
f
207.865 133.064 mo
205.822 130.866 li
207.865 133.064 li
203.78 128.669 mo
201.737 126.472 li
203.78 128.669 li
199.695 124.275 mo
197.652 122.077 li
199.695 124.275 li
195.61 119.88 mo
193.567 117.683 li
195.61 119.88 li
191.525 115.486 mo
189.482 113.288 li
191.525 115.486 li
187.44 111.091 mo
185.659 109.176 li
187.44 111.091 li
170.534 92.9045 mo
169.057 91.3155 li
170.534 92.9045 li
170.534 92.9045 li
167.014 89.1182 mo
164.972 86.921 li
167.014 89.1182 li
162.929 84.7237 mo
160.886 82.5264 li
162.929 84.7237 li
158.844 80.3292 mo
157.556 78.9439 li
157.556 78.9439 li
158.844 80.3292 li
.650233 .565515 .550591 .320226 cmyk
f
217.711 144.391 mo
215.669 142.193 li
215.799 142.073 li
217.765 144.34 li
217.711 144.391 li
213.626 139.996 mo
211.584 137.799 li
211.865 137.537 li
213.832 139.805 li
213.626 139.996 li
209.541 135.601 mo
207.499 133.404 li
207.865 133.064 li
207.932 133.002 li
209.899 135.269 li
209.541 135.601 li
205.456 131.207 mo
203.414 129.01 li
203.78 128.669 li
203.998 128.466 li
205.965 130.734 li
205.822 130.866 li
205.456 131.207 li
201.371 126.812 mo
199.329 124.615 li
199.695 124.275 li
200.061 123.934 li
200.171 124.053 li
202.032 126.198 li
201.737 126.472 li
201.371 126.812 li
197.286 122.418 mo
195.243 120.22 li
195.61 119.88 li
195.976 119.54 li
198.018 121.737 li
197.652 122.077 li
197.286 122.418 li
193.201 118.023 mo
191.158 115.826 li
191.525 115.486 li
191.891 115.145 li
193.933 117.342 li
193.567 117.683 li
193.201 118.023 li
189.116 113.629 mo
187.073 111.431 li
187.44 111.091 li
187.806 110.751 li
189.848 112.948 li
189.482 113.288 li
189.116 113.629 li
185.031 109.234 mo
184.976 109.176 li
185.094 109.176 li
185.031 109.234 li
168.69 91.6559 mo
167.415 90.284 li
166.709 89.5241 li
166.648 89.4586 li
167.014 89.1182 li
167.38 88.7778 li
167.629 89.0456 li
168.336 89.8055 li
169.423 90.9751 li
169.057 91.3155 li
168.69 91.6559 li
164.605 87.2614 mo
162.563 85.0641 li
162.929 84.7237 li
163.295 84.3832 li
165.338 86.5806 li
164.972 86.921 li
164.605 87.2614 li
160.52 82.8668 mo
158.478 80.6696 li
158.844 80.3292 li
159.21 79.9887 li
161.253 82.1859 li
160.886 82.5264 li
160.52 82.8668 li
.619593 .547356 .515679 .247501 cmyk
f
252.994 195.092 mo
178.485 109.176 li
182.965 109.176 li
255.816 193.181 li
254.897 193.829 253.955 194.468 252.994 195.092 cv
166.077 94.3902 mo
166.077 91.2715 li
165.577 91.2715 li
165.077 91.2715 li
165.077 93.7152 li
154.234 81.212 li
155.099 80.6502 155.948 80.077 156.78 79.4946 cv
156.784 79.4918 156.787 79.4895 156.791 79.4867 cv
156.799 79.4812 156.807 79.4756 156.815 79.4701 cv
156.895 79.4136 156.976 79.3569 157.056 79.3003 cv
166.167 89.806 li
165.647 90.0759 li
166.109 90.9631 li
166.84 90.5828 li
169.247 93.3581 li
168.182 93.7251 167.126 94.0686 166.077 94.3902 cv
.380713 .305791 .302739 .00173953 cmyk
f
166.109 90.9631 mo
165.647 90.0759 li
166.167 89.806 li
166.84 90.5828 li
166.109 90.9631 li
.626978 .548089 .52752 .26511 cmyk
f
165.577 91.2715 mo
165.577 91.2715 li
.653803 .579431 .548302 .336461 cmyk
f
165.749 94.4902 mo
165.077 93.7152 li
165.077 91.2715 li
165.577 91.2715 li
166.077 91.2715 li
166.077 94.3902 li
165.968 94.4238 165.859 94.4571 165.749 94.4902 cv
.626978 .548089 .52752 .26511 cmyk
f
249.955 196.978 mo
173.81 109.176 li
178.485 109.176 li
252.994 195.092 li
252.041 195.71 251.07 196.315 250.079 196.904 cv
250.077 196.905 250.076 196.906 250.074 196.907 cv
250.063 196.913 250.052 196.92 250.041 196.926 cv
250.013 196.943 249.984 196.96 249.955 196.978 cv
161.991 95.5471 mo
151.195 83.0981 li
152.228 82.4853 153.242 81.8564 154.234 81.212 cv
165.077 93.7152 li
165.077 94.6911 li
164.041 94.9969 163.008 95.2827 161.991 95.5471 cv
.389654 .317082 .311955 .0028687 cmyk
f
165.077 94.6911 mo
165.077 93.7152 li
165.749 94.4902 li
165.524 94.5584 165.302 94.6249 165.077 94.6911 cv
.631556 .561395 .528222 .280247 cmyk
f
246.686 198.821 mo
168.943 109.176 li
173.81 109.176 li
249.955 196.978 li
249.952 196.979 249.95 196.981 249.947 196.982 cv
249.473 197.263 248.996 197.54 248.514 197.814 cv
248.147 198.022 247.781 198.226 247.415 198.426 cv
247.172 198.56 246.929 198.691 246.686 198.821 cv
157.955 96.5059 mo
147.927 84.9419 li
148.237 84.7755 148.548 84.6063 148.859 84.4344 cv
148.864 84.4316 148.869 84.4288 148.875 84.426 cv
148.884 84.421 148.893 84.416 148.902 84.4109 cv
148.919 84.4016 148.936 84.3922 148.953 84.3829 cv
148.953 84.3825 148.954 84.3821 148.955 84.3818 cv
149.221 84.2344 149.487 84.085 149.754 83.9336 cv
149.754 83.9336 li
150.238 83.6592 150.719 83.3804 151.195 83.0981 cv
161.991 95.5471 li
160.625 95.902 159.281 96.2201 157.955 96.5059 cv
.402258 .324285 .32047 .00387579 cmyk
f
243.26 200.558 mo
166.077 111.558 li
166.077 109.176 li
168.943 109.176 li
246.686 198.821 li
246.403 198.973 246.12 199.123 245.838 199.27 cv
244.973 199.721 244.114 200.15 243.26 200.558 cv
165.077 110.405 mo
164.011 109.176 li
165.077 109.176 li
165.077 110.405 li
153.731 97.3217 mo
144.5 86.6778 li
145.633 86.1372 146.776 85.5586 147.927 84.9419 cv
157.955 96.5059 li
156.521 96.815 155.111 97.0858 153.731 97.3217 cv
.410773 .334051 .329168 .00582895 cmyk
f
166.077 111.558 mo
165.077 110.405 li
165.077 109.176 li
166.077 109.176 li
166.077 111.558 li
.637018 .575433 .541161 .313207 cmyk
f
239.633 202.174 mo
166.077 117.357 li
166.077 111.558 li
243.26 200.558 li
243.103 200.632 242.945 200.707 242.789 200.78 cv
242.224 201.045 241.662 201.3 241.103 201.546 cv
241.099 201.548 241.095 201.55 241.091 201.551 cv
241.09 201.552 241.089 201.552 241.088 201.552 cv
240.6 201.767 240.115 201.974 239.633 202.174 cv
165.077 116.204 mo
158.982 109.176 li
164.011 109.176 li
165.077 110.405 li
165.077 116.204 li
149.274 97.981 mo
140.873 88.2934 li
141.747 87.9318 142.631 87.5459 143.522 87.1359 cv
143.528 87.1331 143.534 87.1302 143.54 87.1273 cv
143.546 87.1247 143.551 87.1224 143.557 87.1198 cv
143.87 86.9754 144.185 86.828 144.5 86.6778 cv
153.731 97.3217 li
152.207 97.582 150.722 97.7998 149.274 97.981 cv
.420844 .339635 .341405 .00781262 cmyk
f
166.077 117.357 mo
165.077 116.204 li
165.077 110.405 li
166.077 111.558 li
166.077 117.357 li
.643549 .574548 .554528 .332494 cmyk
f
235.706 203.657 mo
166.077 123.369 li
166.077 117.357 li
239.633 202.174 li
239.141 202.377 238.651 202.573 238.166 202.761 cv
238.158 202.764 238.151 202.767 238.144 202.769 cv
238.143 202.77 li
237.321 203.087 236.509 203.383 235.706 203.657 cv
165.077 122.215 mo
153.769 109.176 li
158.982 109.176 li
165.077 116.204 li
165.077 122.215 li
144.48 98.4654 mo
136.946 89.7779 li
137.773 89.4954 138.612 89.1894 139.459 88.8602 cv
139.475 88.8542 139.49 88.8484 139.505 88.8423 cv
139.506 88.8419 139.507 88.8415 139.508 88.8411 cv
139.961 88.6651 140.415 88.4827 140.873 88.2935 cv
149.274 97.981 li
147.621 98.1879 146.021 98.3468 144.48 98.4654 cv
.432074 .349859 .346777 .00967422 cmyk
f
166.077 123.369 mo
165.077 122.215 li
165.077 116.204 li
166.077 117.357 li
166.077 123.369 li
.652949 .578241 .558312 .348028 cmyk
f
231.203 204.994 mo
166.077 129.897 li
166.077 123.369 li
235.706 203.657 li
234.163 204.185 232.658 204.631 231.203 204.994 cv
165.077 128.744 mo
148.107 109.176 li
153.769 109.176 li
165.077 122.215 li
165.077 128.744 li
139.054 98.7364 mo
132.443 91.1142 li
132.945 90.9888 133.453 90.8536 133.966 90.7087 cv
133.972 90.707 133.978 90.7054 133.984 90.7037 cv
133.989 90.7022 133.994 90.7008 133.999 90.6993 cv
134.008 90.6966 134.018 90.694 134.027 90.6913 cv
134.029 90.6909 134.03 90.6904 134.032 90.69 cv
134.449 90.5717 134.87 90.4468 135.294 90.3157 cv
135.296 90.3149 135.299 90.3141 135.301 90.3133 cv
135.309 90.311 135.317 90.3086 135.324 90.3062 cv
135.33 90.3044 135.336 90.3027 135.341 90.3009 cv
135.346 90.2995 135.351 90.298 135.355 90.2966 cv
135.365 90.2937 135.374 90.2907 135.384 90.2878 cv
135.384 90.2875 135.385 90.2873 135.386 90.287 cv
135.901 90.1267 136.422 89.957 136.946 89.7779 cv
144.48 98.4654 li
142.575 98.6122 140.761 98.6976 139.054 98.7364 cv
.439155 .360479 .356176 .0127871 cmyk
f
166.077 129.897 mo
165.077 128.744 li
165.077 122.215 li
166.077 123.369 li
166.077 129.897 li
.656031 .591669 .556023 .364477 cmyk
f
222.44 206.196 mo
218.137 206.196 214.777 205.101 212.853 202.883 cv
166.077 148.946 li
166.077 129.897 li
231.203 204.994 li
230.487 205.173 229.783 205.332 229.092 205.472 cv
229.092 205.472 li
226.7 205.953 224.465 206.196 222.44 206.196 cv
165.077 147.793 mo
131.587 109.176 li
148.107 109.176 li
165.077 128.744 li
165.077 147.793 li
136.814 98.7619 mo
128.23 98.7617 122.844 97.6289 122.844 97.6289 cv
121.686 97.7591 li
114.092 89.0029 li
114.241 89.174 114.398 89.3386 114.563 89.4964 cv
114.563 89.4965 114.563 89.4967 114.564 89.4969 cv
114.575 89.5075 114.586 89.5182 114.597 89.5288 cv
114.597 89.529 114.597 89.5289 114.598 89.5291 cv
114.603 89.534 114.608 89.539 114.613 89.5439 cv
114.614 89.5447 114.615 89.545 114.615 89.5458 cv
114.626 89.5558 114.637 89.5661 114.648 89.576 cv
114.649 89.5769 114.65 89.5778 114.651 89.5787 cv
114.655 89.5827 114.66 89.5869 114.664 89.5909 cv
114.665 89.5921 114.666 89.593 114.668 89.5942 cv
114.672 89.5987 114.678 89.6035 114.683 89.608 cv
114.683 89.6083 114.683 89.6085 114.684 89.6088 cv
114.689 89.6135 114.694 89.6181 114.699 89.6228 cv
114.701 89.6244 114.702 89.626 114.704 89.6277 cv
114.708 89.6307 114.711 89.6339 114.714 89.6369 cv
114.716 89.6387 114.718 89.6405 114.72 89.6423 cv
114.725 89.6461 114.729 89.6496 114.733 89.6534 cv
114.735 89.6553 114.738 89.6577 114.74 89.6596 cv
114.743 89.6628 114.747 89.6661 114.751 89.6693 cv
114.753 89.6714 114.755 89.6733 114.757 89.6755 cv
114.76 89.6779 114.763 89.6805 114.766 89.683 cv
114.769 89.6853 114.771 89.6874 114.773 89.6897 cv
114.777 89.6925 114.78 89.6953 114.783 89.6982 cv
114.787 89.7019 114.791 89.7055 114.796 89.7092 cv
114.798 89.711 114.8 89.7131 114.802 89.7148 cv
114.805 89.7177 114.809 89.7205 114.812 89.7233 cv
114.814 89.7249 114.815 89.7261 114.817 89.7277 cv
114.828 89.7376 114.84 89.7476 114.851 89.7573 cv
114.852 89.7582 114.853 89.7594 114.855 89.7603 cv
114.858 89.7636 114.862 89.7667 114.866 89.77 cv
114.867 89.7707 114.868 89.7716 114.868 89.7723 cv
114.881 89.7832 114.894 89.7939 114.907 89.8048 cv
114.907 89.8049 li
115.822 90.5771 116.957 91.1699 118.281 91.5849 cv
118.281 91.585 118.281 91.5852 118.282 91.5853 cv
118.301 91.5913 118.32 91.5971 118.339 91.6031 cv
118.339 91.6032 li
118.345 91.6051 118.351 91.6069 118.357 91.6088 cv
118.359 91.6091 118.36 91.6095 118.361 91.6099 cv
118.378 91.6151 118.395 91.6201 118.412 91.6253 cv
118.414 91.6261 118.417 91.6269 118.42 91.6277 cv
118.424 91.6291 118.429 91.6305 118.434 91.6319 cv
118.437 91.6329 118.44 91.6338 118.443 91.6348 cv
118.447 91.636 118.452 91.6373 118.456 91.6385 cv
118.463 91.6406 118.47 91.6427 118.477 91.6447 cv
118.48 91.6457 118.483 91.6467 118.487 91.6477 cv
118.491 91.6491 118.496 91.6505 118.501 91.6518 cv
118.504 91.6529 118.507 91.6537 118.511 91.6548 cv
118.516 91.6563 118.522 91.6581 118.527 91.6596 cv
118.529 91.6603 118.532 91.6609 118.534 91.6615 cv
118.542 91.6638 118.549 91.666 118.557 91.6683 cv
118.559 91.6689 118.561 91.6694 118.563 91.6701 cv
118.57 91.6719 118.576 91.6738 118.583 91.6756 cv
118.584 91.6762 118.586 91.6767 118.588 91.6772 cv
118.605 91.6821 118.622 91.6869 118.639 91.6917 cv
118.639 91.6918 118.639 91.6918 118.64 91.6919 cv
118.648 91.6943 118.657 91.6967 118.665 91.6991 cv
118.666 91.6992 118.666 91.6994 118.667 91.6995 cv
120.134 92.1109 121.818 92.3154 123.679 92.3155 cv
125.705 92.3155 127.939 92.0731 130.332 91.5913 cv
130.332 91.5913 li
130.893 91.4783 131.463 91.3521 132.041 91.2128 cv
132.042 91.2127 132.042 91.2126 132.042 91.2125 cv
132.049 91.211 132.055 91.2094 132.061 91.2079 cv
132.188 91.1773 132.316 91.1461 132.443 91.1142 cv
139.054 98.7364 li
138.286 98.7538 137.538 98.762 136.814 98.7619 cv
.44889 .36527 .366888 .0170291 cmyk
f
166.077 148.946 mo
165.077 147.793 li
165.077 128.744 li
166.077 129.897 li
166.077 148.946 li
.65658 .593683 .566644 .383185 cmyk
f
grestore
206.581 86.749 mo
205.146 85.7891 204.252 85.0352 203.14 84.1377 cv
201.665 88.9619 li
202.186 88.8848 204.251 88.7148 205.979 88.7217 cv
207.827 88.7266 209.469 88.8467 210.502 89.0254 cv
209.545 88.5957 208.117 87.7773 206.581 86.749 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 88 /X putdup 90 /Z putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/X <1C60D8A8C9B6092206CD5AEE2B9C72D9BBF62CA31CD05101AF9F5CF9EB857137F762E0A067EB05566405EA81D2FCB002166772CA238C3A4282B79454B501C810413B70FFB12751D9083EDF9F814E65F098F740C3CA1B0C614185B0025DF3146FE3B28A413D0F4BB2119BFC45EA1EF8E0238D5969E42C9043F42EC5FAED2EB768D79D7B6025CBD973FC6247CAC87211423314B74FBCBA2E901BBE09A4DC840F3D28B68467B20FED3A901127EE0EA1523FEA8C1E4CBEADC08A2ACE8B315116BA65C96DA2B7773F48BC53F67F61820EE186C1FB1E990E287A6A075E7D673D> |-/Z <1C60D8A8C9B6282379083F504FD1A7C73963E44A2CAF0F3E4C2114131A8EF94C7A5517B1792BA707F31A53751D29E33B5576AEF560095DC390CB6B16FB9062CD0B458C5D6727C283AF0AF77347DA2D14B67531B67AD4164E119E305277963D68566BDEF8D5BAB62C34FA95DB541993F5028635D5C51C0E8041318E5D892C58C42985C4D8AF0360ABACC82164210E32A0234FC351AE461FCE35CA9ABBF75A5B161F2DE9D82EB10A7E794DFC9DDEE0081F1CD73B395D00F36D4D26AAB36DD134A1401799442ADA736AD20CBFB62D99AC7BAF773C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICUC+ComicSansMS /ComicSansMS findfont ct_VMDictPut/QXICUC+ComicSansMS*1 [88{/.notdef}rp /X /.notdef /Z 165{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf191.22 10.4404 mo(X)sh289.381 201.214 mo(Z)sh176.1 48.2105 mo
270.725 158.963 li
271.486 158.314 li
176.861 47.561 li
3.0518e-05 .976532 1 3.0518e-05 cmyk
f
177.387 62.3351 mo
192.441 67.7111 li
192.778 66.7694 li
177.724 61.3934 li
f
191.365 78.464 mo
206.419 83.84 li
206.755 82.8983 li
191.701 77.5223 li
f
201.043 92.4426 mo
216.096 97.8185 li
216.433 96.8768 li
201.379 91.5008 li
f
215.021 106.421 mo
230.075 111.797 li
230.411 110.855 li
215.358 105.479 li
f
229 120.4 mo
244.055 125.776 li
244.391 124.834 li
229.336 119.458 li
f
239.753 134.378 mo
254.806 139.754 li
255.143 138.812 li
240.089 133.436 li
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B84186EC> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/f <1C60D8A8C9B7BF865DF0D20FCA4404E9859CDE906439E1B6481B2FEB75413186C365A9DBC3A750FC8CD5B7F7B8622936B45EA60095B3D37F9B468C68E03657C1298567EDFC2A59EB6AD01922F49B485CDC5C730EBEA4B7AC828B861131433F470ED067D8654035DAAD4DA6650191581F595073FA084732A337B92D51D4D5D1490EB14D559CFDA4011DD74E951F328BCA12BF2268B70EA48A2C4C52B1A0109B3EACFA7B6EF61D5055DE5A6ED1F24E05DB4ACEB6> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/w <1C60D8A8C9B6218487477493A6ED6FC49ADE7DB5A336FA1EBC5DDDBD48D99F5928C02BD528261F4B15A41301EAC0B328314A22E884D6FD1C59CA5497BCB2DD47D888224B9D6A58A779C950597CDE4E747B3963BC377CAE93AA58AA7115E69CE989D76E37B26207B544A0ED52C2A2EC01472B28F0E832B7D16EADBE6104D00877050F8D30EEE2CBA8A97FB7E3C2997DC2B38AE56987D1577B31463680DA7FF636A537A36637C58577517E9D0FA948B1552DF9E47467B7AAFAD757883931987E128011F634BAAAA9FF3D857B1ABD99308B07> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 32 /space putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 111 /o putdup 114 /r putdup 119 /w putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 55{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf238.845 112.4 mo(field arrow)sh317.944 47.8848 mo
199.287 109.176 li
20.1601 109.176 li
122.844 97.6289 li
122.844 97.6289 165.058 106.512 201.567 74.5341 cv
317.944 47.8848 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
328.24 40.275 mo
205.762 107.826 li
20.8243 107.826 li
20.8243 108.826 li
206.019 108.826 li
328.723 41.1507 li
328.24 40.275 li
328.24 40.275 li
.697627 .675227 .638575 .739559 cmyk
f
123.474 98.1988 mo
123.501 98.2044 128.794 99.3382 137.227 99.3383 cv
152.4 99.3397 177.769 95.6617 200.815 75.0859 cv
200.149 74.3399 li
177.34 94.7039 152.249 98.3369 137.227 98.3383 cv
133.056 98.3383 129.663 98.0577 127.317 97.7777 cv
126.144 97.6376 125.232 97.4978 124.616 97.3933 cv
124.307 97.341 124.073 97.2976 123.916 97.2675 cv
123.759 97.2373 123.684 97.2211 123.684 97.2211 cv
123.474 98.1988 li
cp
f
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 55{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf147.448 271.541 mo(down)sh152.414 63.2518 mo
267.467 42.8221 li
266.943 39.8683 li
151.889 60.298 li
f
288.061 37.6421 mo
260.803 54.8677 li
265.646 41.6226 li
256.539 30.855 li
288.061 37.6421 li
cp
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 78 /N putdup 104 /h putdup 116 /t putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 45{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf292.113 33.6777 mo(North)sh194.009 32.467 mo
194.053 32.4629 li
194.15 32.4543 194.403 32.4357 194.773 32.4357 cv
195.958 32.4343 198.327 32.6313 200.569 33.9226 cv
202.808 35.2185 204.959 37.5688 205.799 42.0652 cv
206.783 41.883 li
205.911 37.1372 203.539 34.4683 201.067 33.0556 cv
198.597 31.6382 196.063 31.4372 194.773 31.4357 cv
194.236 31.4357 193.913 31.4716 193.897 31.4734 cv
194.009 32.467 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
.292973 .756527 .000457771 3.0518e-05 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/underscore <1C60D8A8C9B66621B1FC614DC22A261CDC9633D73BEF2B15C91987C6C1966C96C3F6A28EA35CD5B3535A4BEF756AF36EF54196F4BBFAA0F653219B7114F89D716B2B90AF1CCD0C76C5A474E37EBFFFB08B3E> |-/g <1C60D8A8C9B7883C34847673539A3C47283D2869DE727C001A8ED17F310363C066266AC877F71DE696B52BA5756C41FA2C6742427FE25CABE743DC5A8409CA03A46FFE172EB266EBE72B596730C9547F1BA9130523A2B6925FB6C63D24A5FA2932E01CB40C0D974065C69BA7D95C92F84E75317230A20A5B57C1414477131B85EE5ACE9CF2CFFA8F81FDD0E1570B07F54AEF9E9559FF767E5E4A6770AB6167D2B403FC1CDDEF440629F36A00CE900D50814788B0FF5D0993B3F9BE201807168AC2FF35AD7144226A32EFAB4AE57534B933FE2F650AE3AB04CFB63638BA8BDA42DA1BFD76C61D93DA> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-/z <1C60D8A8C9B78181CF7403A347E4AD8687C7377BB84C2D8D37DDAB99BAE45345A0696395EADDCC8C80FC69A4904702F5EACB9BE2C6DB26AA55CBA722D1396922984300856064911BA64AF2B2CEBFA0F71035A73C2EFF18BEE1D055EB6A567A32C8BD76673673D4DE9BDE89B2B554DC0D70CC9E32918CA3396E71081EB3572E875B8503A44A9608DE9D423AA2263CF29FD4C750120816CDE0C7E33B7553CF2397CE2DB011E9F74D9013C00F732CCC4C8B31DFEC60AF92623FD9815754B7D460047E76CA19A3E3304BAF40> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 95 /underscore putdup 103 /g putdup 109 /m putdup 117 /u putdup 122 /z putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 45{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a 2{/.notdef}rp /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf204.39 31.541 mo(mag_azimuth)sh.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 99 /c putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 36{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf258.147 124.714 mo(\(direction of drill\))sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 117 /u putdup 122 /z putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings19 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/z <1C60D8A8C9B76F05D40D9AF06C62C52F8E7A83C69F6CDC031056F31E455ADB43C89D34E1A28A8E500535BCBC2826CEC41780F6E88D88BBC16CBA809407E19164AA6CDC22FB> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICUD+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QXICUD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]QXICUD+MyriadPro-Regular nfQXICUD+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf234.866 18.9121 mo(\(azimuth of drill direction\))[3.4082 5.78418 5.13574 2.80762 10.0078 6.6123 3.97168 6.66016 2.54395 6.58789 3.50391 2.54395 6.76758 3.97168 2.80859 2.83203 2.83105 2.54395 6.76855 2.80762 3.80371 6.0127 5.53125 3.97168 2.80859 6.58789 6.66016 0 ]xsh197.361 21.5303 mo
197.362 21.5303 137.292 74.7251 116.125 93.4697 cv
.675502 3.0518e-05 .872801 3.0518e-05 cmyk
f
197.361 21.0303 mo
197.361 21.53 li
197.393 21.0312 li
197.361 21.0303 li
197.361 21.53 li
197.393 21.0312 li
197.453 21.0388 li
197.562 21.0722 li
197.703 21.1655 li
197.765 21.2192 197.862 21.3543 197.861 21.5303 cv
197.861 21.3343 197.745 21.1548 197.567 21.0743 cv
197.388 20.9939 197.177 21.026 197.03 21.1559 cv
197.03 21.1568 136.96 74.3509 115.794 93.0954 cv
116.457 93.844 li
137.623 75.0996 197.693 21.9054 197.693 21.9046 cv
197.361 21.5303 li
196.861 21.5303 li
196.86 21.7062 196.958 21.8414 197.019 21.895 cv
197.142 21.9995 197.19 21.9958 197.224 22.0111 cv
197.326 22.0356 197.32 22.0263 197.34 22.0298 cv
197.361 22.0303 li
197.361 21.0303 li
cp
.648218 3.0518e-05 .820279 3.0518e-05 cmyk
f
198.646 18.7739 mo
196.785 19.6323 195.469 20.0713 193.871 20.6431 cv
197.859 25.0864 li
198.104 24.5151 199.205 22.3267 200.277 20.5889 cv
201.422 18.728 202.557 17.147 203.375 16.2144 cv
202.35 16.9165 200.637 17.8545 198.646 18.7739 cv
cp
.675502 3.0518e-05 .872801 3.0518e-05 cmyk
f
198.646 18.7739 mo
198.437 18.3199 li
196.599 19.1674 195.308 19.5979 193.703 20.1723 cv
193.002 20.4231 li
198.011 26.0039 li
198.319 25.2829 li
198.543 24.7568 199.65 22.5556 200.703 20.8514 cv
200.703 20.8508 li
201.835 19.0091 202.963 17.4406 203.751 16.5441 cv
203.092 15.8018 li
202.107 16.4772 200.407 17.4103 198.437 18.32 cv
198.437 18.3199 li
198.646 18.7739 li
198.856 19.2278 li
200.866 18.2987 202.592 17.3558 203.657 16.6269 cv
203.375 16.2144 li
202.999 15.8846 li
202.15 16.8533 201.008 18.447 199.851 20.3269 cv
199.846 20.3362 li
199.852 20.3263 li
198.76 22.0977 197.664 24.2734 197.4 24.8899 cv
197.859 25.0864 li
198.231 24.7524 li
194.243 20.3091 li
193.871 20.6431 li
194.04 21.1138 li
195.63 20.5447 196.971 20.0972 198.856 19.228 cv
198.845 19.2328 li
198.856 19.2278 li
198.646 18.7739 li
cp
.648218 3.0518e-05 .820279 3.0518e-05 cmyk
f
182.081 51.6973 mo
276.706 162.451 li
277.466 161.801 li
182.841 51.0478 li
.675502 3.0518e-05 .872801 3.0518e-05 cmyk
f
183.368 65.8219 mo
198.422 71.1979 li
198.758 70.2562 li
183.704 64.8802 li
f
197.346 81.9509 mo
212.399 87.3268 li
212.736 86.3851 li
197.682 81.0091 li
f
207.023 95.9294 mo
222.077 101.305 li
222.413 100.364 li
207.36 94.9876 li
f
221.002 109.908 mo
236.055 115.284 li
236.392 114.342 li
221.338 108.966 li
f
234.98 123.886 mo
250.035 129.262 li
250.371 128.321 li
235.317 122.945 li
f
245.733 137.865 mo
260.787 143.241 li
261.123 142.3 li
246.07 136.923 li
f
51.6192 105.638 mo
34.9405 105.638 li
102.655 90.5417 li
102.655 99.8991 li
51.6192 105.638 li
25.6205 105.638 mo
0 105.638 li
0 86.1694 li
60.417 86.1694 li
25.6205 105.638 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
34.9405 105.638 mo
27.6685 105.638 li
62.465 86.1694 li
102.655 86.1694 li
102.655 90.5417 li
34.9405 105.638 li
f
27.6685 105.638 mo
25.6205 105.638 li
60.417 86.1694 li
62.465 86.1694 li
27.6685 105.638 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
102.655 105.638 mo
51.6192 105.638 li
102.655 99.8991 li
102.655 105.638 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
366.372 77.3188 mo
263.146 77.3188 li
295.392 59.5337 li
298.652 57.8501 li
366.372 57.8501 li
366.372 77.3188 li
261.075 77.3188 mo
260.961 77.3188 li
262.76 76.3894 li
261.075 77.3188 li
238.938 65.9765 mo
238.938 60.1585 li
249.293 57.8501 li
274.426 57.8501 li
238.938 65.9765 li
f
238.938 60.1585 mo
238.938 57.8501 li
249.293 57.8501 li
238.938 60.1585 li
f
260.961 77.3188 mo
238.938 77.3188 li
238.938 65.9765 li
274.426 57.8501 li
296.374 57.8501 li
262.76 76.3894 li
260.961 77.3188 li
295.392 59.5337 mo
298.445 57.8501 li
298.652 57.8501 li
295.392 59.5337 li
f
263.146 77.3188 mo
261.075 77.3188 li
262.76 76.3894 li
296.374 57.8501 li
298.445 57.8501 li
295.392 59.5337 li
263.146 77.3188 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICUC+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUC+ComicSansMS /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/QXICUC+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 36{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICUC+ComicSansMS nfQXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf5.0957 98.8789 mo(horizontal plane)sh231.438 54.581 mo
231.464 54.6236 li
231.752 55.0817 234.174 59.182 234.168 64.1489 cv
234.166 66.6774 233.553 69.4249 231.729 72.0901 cv
229.903 74.7544 226.853 77.3499 221.923 79.5163 cv
222.325 80.4319 li
227.383 78.2106 230.604 75.5023 232.554 72.6552 cv
234.505 69.8092 235.169 66.8379 235.168 64.1489 cv
235.161 58.507 232.3 54.0817 232.279 54.0401 cv
231.438 54.581 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQXICUD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC346364003E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF69F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B95C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC56BF6AA691E1A081F9D254D> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUD+MyriadPro-Regular /Encoding getdup 103 /g putdup 112 /p putpop%ADOEndSubsetFont
/QXICUD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]QXICUD+MyriadPro-Regular nfQXICUD+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf302.655 73.7793 mo(\(plunge of drill direction\))[3.4082 6.82715 2.83203 6.6123 6.66016 6.70801 6.01172 2.54395 6.58789 3.50391 2.54395 6.76758 3.97168 2.80859 2.83105 2.83203 2.54395 6.76855 2.80762 3.80371 6.01172 5.53223 3.97168 2.80859 6.58789 6.65918 0 ]xsh.292973 .756527 .000457771 3.0518e-05 cmyk
QXICUC+ComicSansMS*1 [12 0 0 -12 0 0 ]msf245.284 69.2627 mo(field_dip)sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQXICUD+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICUD+MyriadPro-Regular /Encoding getdup 98 /b putdup 119 /w putpop%ADOEndSubsetFont
/QXICUD+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICUD+MyriadPro-Regular nfQXICUD+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf130.088 15.3726 mo(lab arrow)[2.83203 5.78369 6.82813 2.54395 5.7832 3.97266 3.80371 6.50391 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QXICUD+MyriadPro-Regular*1 uf/QXICUD+MyriadPro-Regular uf/MyriadPro-Regular uf/QXICUC+ComicSansMS*1 uf/QXICUC+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Lisa Tauxe) ()%%Title: (orcon_5.eps)%%CreationDate: 8/9/10 5:46 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l#Ib6Q7hq8G_c2AZRVFk&AEom@q18$DtQpQ=])3%T!iFA'TaS[$O[o3,hCGjq9J!YR@qKO8gFF:$75i=l/CsuZ[X$'I'Im@%HZ=(PnTsZpk:^Is#W%h5/-e+l0l;@/`W&!tbMmiUcF+Zj6H/?M8u11Y[];.0,B5dU*mYj3*oEPB/oJD:\ia;(?gh?n?!^fd3ST$B%^R0F4InehEBE,A!41kE)[WaVord4C\dH/=VWa;9h*l"(L>^u^(^AP`X?ba36SY&`*ci14pI=!lel5k4jqtBF1l/H7P7sFut?65Z/%/WMHecK@,B2f'!QFT1CYmHN<GT5W&*=Bp87$b;oi]]9BHIn_.XoCTL+s68P<m.Ou[/PTYnnu$R*qAN_*Qi-T9`Q\iD)i_qd3;1,d%YQ)(=N\>%_G"I=1oK/D.a2!05hL#*o%PGfT+9%a!I!U3^28;/b]_LB6eA5Bq^-/)qrV[YH1!EmCgED8-94Qg2535qkGrsM19(hWg%kAS]/2[eKV;"Jk!Kd#F4l#3[q/&J]!g()eseGT#BnuP75l5[Yld1]J%[AQ/or-5gJktBa_j3rpUbNh*m>i2+ob<kZ(h7P`G#HaMS%&`^jFo$(NZcPBU>?^tTW4Gp.$qXrslif'3uT0GB+@iYgRERV[#iOep9lbs<1lK-\N(@')rBKa^;5+fSo>[;,\p#S,N(Dkt7rfp"O%C`J7YrH9VG\*]"H6`dWRl&Uu((rr%c6gN=V^X>#D69Ea!dE39_d_:3PFo(t,i_(:uH26o1V^EK:pt;VGbcL&[p-J_F6.1.!DAF$L%BHkXuYGW.j@2kGjVS@IFP^5&K`F@5DNH$l)+SLV)/e7#&o.Oaedf03K`Qtm(G;gYiJc6#Xs5o8iCW4'cqc4U:IYWGl6bp/SaL=Z0%GZp]])7=M)VjpU7B@P*"kfDJZ'm47[SP&q@kuprb<n+unp_U@3pJG^U+&D=nj.$!qe2]S,[mrqKj6<<`I"-5`ccCoR]J:Pm;81#5%p3d3N?f5;@_OU*KC10jq;u$nZ_S<%%)<"rHgK$Y4`LQEN5%-qU(G3`i8^!J5rl)P?)l8o8qNTNpr_X'p_S<$jFG)F(+,jIU=B8:"%$3//3134>HN*XFM]jp-37oi"V6S6Lms.Ugm6(,-.-Td(?W.k'#%a1lnZ^;j6`@&l)p)j=WaAIP=;%*!5^Trba-*j]%5C,.)^rVLa%CsQX>ZKeA7lXoH,1RHL!j>&@P='E'2OrF$9l<nd)R@#"dQ<DD?Qll;r/YR+,:Y%q*`P8@(fkl.GP\k&'<_drPl8BP==tsd0aG!NF%(@5;YT$"Xfk[`5??Wf=HgigWu-=]OtlWm\\kN.'d:IZra;lEjm>h2AJ39'skI](XIcYS#<Vfb%'[S@M'$[!EE:\9F?-Q9:S54,YX%o!AoEOf]n#SlWbKC?)^NV-SA0fK0%fhng,!ro^tB1]<X>+LU^roNV=LqB@47R=<>/V9%ia\,81Fnp)4Wmns,>h3DoUht#[]Sp[,Y%bC<`'*#qMkoNV;V4I"1@Du"<brs:p1hVhhp=8?[)j>Y?0a8MBc%K`cgm^P?EK;4(3.t=;urHj(;^@4(.7n:[r(B2:uP_7dh8uQ'\%B2FJXUB?ji-2J+Jg`Eq.%e-j4+1YGC^>K5lb$W7<Il-.<C<9=aC'?aJO/KOD,Q-qeN#^/a?V*_?kCt6XfX!E`?-F8Fis/AS2TCGH%g-VJFTt`'eQ#Ri/?g.BCf)W3UdX$gb91CQ*5p,[,Pjtao7&&Po6TQTAdYH>@7V%!CT4Aq/G@.@c>APA11=_?/;(4_NR#XY)aSt&!%hqpl[o[gUf-S%t=^AYg%(3\N:ht=9ZdLTND*Skj#mt4#D6c=@#jeuP\Gji=pG5G-/nLsX\IpqF7b_WgPHtCR4h1TrAVEKm8+/(gA%A+VMir*;qMkP_.N9k+r"8D`Qa>%Sh]MbtQf4g(FH)f*iES9@ZkD-G[.5qT#e,8*VB)'"X@s%MHVqL81c50LTm^:=.#BZ(E[<<'mM%p%V5AeYhg71"&0bb22m-S8Y)83ot^7^'=KgX*45eeD9#YhKa"kD`bT%*R23n`Y4:<-i+Tr+LC*j*t5fr]?]+e^=&T:jCaJc;qQQ'%1WOTDVKNo\e#qrh=kd1&URY\*>rWLH`e\dmCANq[\_XQ<6utIo*I6t%jcu?9qQt#c@@G%'q9X8XIG+;1f4;SnTrbhG(T&m`45Jk(%GBriO[rB<#]o<\YR)ZXS4H`4);l*NJV_Wad<GV!4e\.1H`u(O8P`b43*M"U6o1c.O^d7DVau\O0aB=b64jbRZJ$K`#o;:)+fUI,P%rpL5cdus#LSJg6@Bt`qcg;#d`j:8f=j7^WNN^T`upYHWk5KP#F/TODGI.[p<WpI,6/'C"4`md0k:G%@m5Fo#\p;_^6!&Y+ueCE2/%Y%B&QT(^/k;+i0tXR.8>ABZAL4B"07KEOIW-RtA\j]fs`W<BLEoWhmN^6WM@ZFoa%O8EL\GVrE*\!-3Dm+WEKR%&'#-MOjk78=hG%_B^X4btbpq#;T.gD<'4cP_m\>p1<)=LM7jud*4D*XLpX</q>06[h-Y@nN3g*I?UQArg]iA4L"IMqBF3`GQ%(>JgW.0`<hfde2+dl%cUce*r`d_.d'OjDe:"s\ptF6hb%t-\5UHHh/k`Am>4Z2&I9]/9((Ot5Or]cM(g)gaaJh&<O@d&Mc&a8XDb9]XQTFBPG"bY,[pk,e%A[VJ"A9uGJfKt]X(YXudC4&r;1ZR)ah*>F?)`07m)`%eplSQjpDb1VIR8i,Q<3+(h6JqR]kgVFD))71;\HDk+]ScMAp5=B%G;qFN%9^Od<UEaXIl*W:7X)LMXi0='cNK)+t7s;`/M8_jY*m32`[_!Z'_2XDVVVbfcj.lSf(gZhRfA.??p!/`:qs/.JDnKhKE_;#2p9^fF%rdisBS12Tp^lSF@9lm/lmVd@`Eb\dkSi]VdVUO+1XC\"MacU9ZZHK+nLjj5hLu`N;'qHn+@8DBnjjQ,BP06$^_5#QP-o>L]>git=%\D;.>YI?(NE&+2L_at5d[%2BZUd&UH#/d.UPMSJ7H@=ZZGh%2teK10>,#W(5.1,Qf[!A&r'qK((7C;V.1X((?>Fsl^@mWn"fKHON%fSQrlEaIf`b5>?K*f59<4eUKI4k]]dfaG3Ws/p'r]e%Po,XZ%MEJ14@*Ne`r;(G7]-69("o5\=#TVom[-\M0dr6+q;.bt?=o(l=-%rRgpi&H6]?o/I:!7i&P*kZ[i[Abf)cb3*D%n>UrkcHhsq6-gWJr4:?W/*W(U6s]b*>V!29F<[_Bne8$;VQ`INp@Men1oN-gdL5,q%ajtp]m[b0@7s5ntT(JmA:h<,go\o'kjT%,-p$Fl(7!sJ+P6K4<3ab2$,k]kt]A_&F*1l<hLXW4;Ie$-0>j,YKdn[.f9*^Z.e[&,&%EUCA=d\4`Y[=Gd5?;F_Or9SOk8F[M<cm5NkmFqt*g9YXF.Y5Pc]%bQ<$_TlN!GriOG(VQ1pj<=qXCONJ:=e(_mGD28fmg>CL2iVK%)(4$W4423Rrn^l@%_JL,0U\2H^H1``H`9&3)k(@W[FBR-asU^)V7'POllDMd4e]:F27M8\:/5tsH9ob94Abi*\sn#&oGR=CFaY8]%>C!g;Hh*-_VK_miBM^](QgJQ/jZblrAj'9GQ0h0_5.6X.C.5CsREfpr??GYK4PleW.S"mn=t>@`DmAd>bJ0g);5rX_?=3M0=01#b%W.&HY,atiOjZUr!23RZ84.tcN34q4:A53'W^H>!ho\*blhd0T[?+uWng>DhQMoEs.gTCM4$?bN]DD,oDf;BFgcPEjUG@"Y$Ip=+B%\$LF%]""JQY'5&mkj+f<j2K.)g"Cc9E.31]Ze5*Fc0<p'@cn]2[^G^THX\U-k1n\9r:opLq"FX9g#D1cq,BkUT6'&5f(aihgtGoP%UPnQf7=4Z+RQm&uVd5kB<p,((hqGW*\sH=hZE&?*l<_V0DPcX#<5"j&DXH5f\gR+$Y8:8%-T&WX@cs-0Hft6;EHR"=>VD*LnD3p!%p?ZU8Zh&?hKb\k0Aqus;T3n,dE(6mM`A)ILm:>DTo'O&ie(8MUG&FJF-OW>iG@V,a]BtO"S!1glS__2SDm%FKf5J*$dG)"^lgrS`%gSpA7I^ci>3PSiOhRZY3IU?EP]NS-1V\]a=I6PD0^-0@=X"^GlmJVNP(Y>&8alQ;74,]_lcfXEg-W/L[nbe=eBMZ<&];3]b4,he#%[+1*+bF>iWX./@;XMj,bm.;lAIf4G=]\(o&c.H$*dpIklQ_9J!',o<EigbKQ+k%'FU\7"-jA/^b'V:ioGR=LdMq6JW^Y3%uY3*$b%LUU?O4An?lD;>&GS(lYBF\3<Jnt;RuhGQS)-QiuWlfjr<0Y^r$!V-JqHLp:ip6nN_CM1+$dDPD@?(m4p2Rl+WRQjC>T6bPV;lfO<%WUu0LqPJ&Sk5C:hpg.]_h`(/?I!(%3]"UAal(43#31h:"J_mRG;Jgm,#==HXSER)G2n'U,k?#.UBCjjs3es%<Mne^#cfr!Bmg_@#%+oTI)n#gTT(LPJe9OCCQ#ICDIMrRI+qKt;Mfk&P^A^pYP:B/j>?VQ\$^AIr+6/mIHh!DYRgVnC*hCdCIrD(Y`Ha7m0,^0T>mQN&0%)t+`rm`FQ$19CM!fdV]E\Is(!V\];R4$TJNH0=hZ'qNjDGMW)8mVi>=hhsMY%3N%6keICY%GdQ"cV@5B^"T0:SoaVNcJ,DCPM9SV%;Q&%(%G36i5LuBDc53\IZRo8-%e1eal'\S`BE"2<pfU*aa.7k%g!+p,?.<p`kPlW^Mq<lTNrpl(dE-_1inaD@QY.sqjS.)W,['/o%[-$6Y\KI5Lld'M>c1pkaZWm:khleYNhu;m"e`G@(G\(R?OO<ZGp<=-JL\U3XB7J9[l)to4V`0P$q<?Wurb=e*McZ6Hk;2q"SsIgB%M]WaJQZ![=Gq5S03W%.ue_:TnrU&;9Ji9%?>Kb>g8YgesVccc3:LtVcoSD_.)]!q1heNX7Ie.0[G=KgI\rB6E/rrKE52>"Q@jD.^%c1\;XYM[R<]=^7Abq=Lr>1[497K&"ha1(u^`A\U=5^.S'$EH>W?JR`R?E!QNpHW(LjOX(g,k5#33^%q!#OhK&od&GNLTm-ZSR.pa%o[K.R$Vktp[Wq>&'X[I=CCR=1D"rYhOdXKOg<9)s85PkjGVai]i&5N1*-'4>Xhb.Shm:%0c[LQq`nB3;p[u:R/X)FtOuNFjNO2fo%s*TGBCor(3?L)6N-`#l8gROr!IdI[AM6ejAmTjsrb^SXaq=4*,SgBP7_gnXlCjkjE2a4p!IBS))H1Eoeg7G-)pC>oSf]'Vp]q:K`%bhQJrBZ4%GVD\Cg[ktG1%=SRM*"r52Ta]sXl">4m)to&>iQ*1ma1L9(9-j3=$17#$h4EB!T*'<$Nr7h+%mFlnTpj(eXFAdiq0dbN%&,f@u8VI^b80Na$`_aQZfFJ5G0HA%T\enn8.HXal(jG"HglGu/`ZlC]hb#'2PYt7&e[1h>&fKPOa=d?0Em,u!4Q`)Vo3U;"#Pg%q%'q.C-A>=kl94Gs)=DHM@HO-!VQ,@W!%\jt+r<,M7a#)q`N8n%)B6W,MpW%pV&Es>)$EhffC8eC8s#&D[9"!7+\jo!^FapG5e3j'm%W^j\.A.iG/%J3#/fqfk\dbo;JHT%lSs)<]*s6S4\!W=#/cdD1.hQXCXlb;QSa7E*bT?'6RIkq$<rYbO0[\)CL,<8PHqtbB,5DT)V%,X5N5cU8+,$m5cd6tCm'P1XUsEA/@f=\OLR8fE%\*Gp<f4Qo/S@sef<GU8K/89U?AA1RL`TbN80)l\cg/:2(Q"I"k5A1"%m+Ias[%)ke7J*N#E>g+hkiqB>Da!cgt"5m`?<BWImOTq[C(hFC/6;,_&;:l6HK;NfaK2!$d0'$?YV9;nnio6$e3h2]eQB8[)!s#F3\=e?E%%PS=THJ*8o2&s(]1Qpa^U+G4#J"<iEl&46"nmi_fY"0Z7>9F)bnM%G=KN"A0<$:YHD8rT/T3?0W5KCG)3`@Rj)NabcqLJ%d/)Gs1=%Od.J`M;hpD;8pIgL.2r&#pXTR0p,!s-sI_"/5qMUbVCXF:B,aZ#$pu`odAs!Cr-Yb]u8a8hS\,LV&kc*nh^n5pmD[J86?-7j=>iM%?n34sPQSaR>f!h.Qt&Q/dZHEpjEX.H)-EP3U;I)-5I.>Hl3bqVIQ8Yl$Ue-/XBS(aLI=@XkbTD;\K92O4`,SDIGCT-Hpmlk&GI\C%4F?#\qnp/*O$q`Vprb:HK)PY#rBoT)mN<Lf/NOi)QrPF:Y]m=4ACuO0_r8rada/LrhD-N"*??0+F*E\`<$`_@F@O\U4:4UXa;k_F%7u)kT#D`1%=E]Nn7q.^N*fea+5BM[u_%APO5gAap2t^S6U-:C+*,,\M"u>Nem2sc\p5q-u_]3BpGsB]\!tF,S%j\.bBeoQBV-TPB%8CPa=a[fA'1uVkY(IA''@VU6X_j.14d#')PQb^^="!*n!3^ijeU3:8,7U!K!CD^b34e9NB:?E^jd="'V]6%f./R%O8CE@3O4e;%m%c8q[eqfMOUBiddXRnPmXBqINTej*L#OEPN6p2?:@EMU:l[%icWe^Npr>NprgciJ"X*c65"XY3'BM9$eNhf<Fe8&WFXLd:Zi9I_fp%Lh%.g\j4-Y`??35'0ICL\4<I1L2i,rA0tcD6unkiDt$7bKEjo&HUnqFa<Jb4fFuU(7'M;*,#3MN,eSn_16HZ%dS<3iJOnTW3_m&E%F96-`kr@%Qd,E&f:oJ.j5"PY/OMZ_d2PdQ#KiM%7bjl9q1r[T5I\Zg"4F9kfh#.m5\bds*q-W?hq,qX!YEj.^)j>YZP&F%bNCgi=%aYtRB`['H/j;X;1UO7"HYRN$t87=jms0P?-l2,2>j3QZg=PG*NnRd7C<\DghrUogU`SuW9'AcqeI>$LFUTh#c2qIoHRbq6=)f'n4%c#9]ZNA\JUju7V``e<*._M/a_V"!-@H+=)[m,#*4Q=+=rh(QhrmL%"?mF-E_gGcmdDQdJ1PM#iY[_"^&C\IXRYQtn':2qegpYVQK%c-NP$ip0sXkdJr:lHHeUP5KUfL5:F8/!10XJ*tKarSK5(*bKnK`uk>6rqnu[psUe>^7P;truPc">lM4Id'(uScatrLHhJH&^XD(]%TfrAP4Y<DpJiimb(HeVR.Mb)?8uL[^Sf1tUaFB9Y4HpGIiG3Oap:!&iiQ(=@#!^;c23=!>A%&\+WHV]lGk>F?9mprR4oP:A/Y_SH%'AY9XdE=3PZe[,QI2nrHiGS*&#EZuQ7UHAb!#4LBM$YJ<`J'7+HKWa8S]FsTgER_f*kdj7\rE1>Aou>,LJVWtCqDrTS."(^gU,;I%3Y>7,o2KFs`Pp!KCja(%=@#L4W=2'7e&(=Xa,EZrYon/0B9<s\=<2TT4-s+O5DBd#R\s=Mj;>@3_$/RDdlQ&+*4FN9a-%$ine"Ma%Am".>2@ROYYe?hPH\XWg)im$$QcBkI10:sLlZ&4[S5W_"<p48s_oUl8G%i-W"<:i/PjK/>7P0_t]59KK[47P>M633>=o6''<gFEd%.BQ9ZUsOo"D/nma$FhT*:oe.pDXFN#Cg+5rT$St78#6;W4%B@2f?B+WhTfXdcRR2-Lk%C%RuERm)fboT:tfOjB;G-hP&Foc\8NXu%ZSq0VG(W:g&cF=*cE)l\YeR:VrQ#AJ"4<i$FDYDs.W(I3G`M09cMhi;+7S02q2G=Ypri"O[%nr4Q>B7L`3(SI6HohRa!G21*eZ[E%HnNCs,AiX+fN>U5SOe24XHGb/:L!&CFsP6Po.R*>R0S!GhH"nA,F?eq;]WV9G];'9*AJaeL/rmij5W>SN/hTnM\SN5NKj]?9["7-%9CtjR1aH5d(VEqiH0N,mLkcgiP!h=5Ec3ef0H1+R4?<c1LiQ$kTB1.fZ2o*D,7q@9(&EsaLlP"0%gup6iYbWPpp242[.RcGSSdj:%I1H5)!K!5)4dD.t?"R%`P;Y7=OL>63+MUY9'2=bQND!E1/8c7B$BZL&`e5hi"J$g1E9(Jj)5X&t5D.A2*q:e;RqCBP_L,f3]%a;_%D\:3[*[,ug2(mB^Urgt.Ss1Wo^Bb<B]+[!0OGRDlkSTM`.%S^>!TTnod:#_T4Hf'*:.]95+gER*,AfW$a'>,s6bW73$Dnbu\]tQ#%&YqP:hH1CSPP4,n)1E6P/L>PcZq%/akD`Q+\f3F_7:jgRB=Uk5FS%7rYTR,%MH'mu(>0D]4]GFI,nSb(8hTb(U];`EML8dqCC!EO%1&+e"nCZ#[0R-+/aGbcFf&O*<>IS$5Hj-MhLk(/0Cjm*c/M*9V>Bgbh=BqR(O/!7U>!`"6^t/'rTls!:5s&1Le0.CMmF$k<e>5&p%=OE0"P^(9+p53sKJsTfjd&7;"`B69q+(^mr(+Lg]7r4uTB<;5eBf9FOke,>qUqp&)P5;94dS,FGU2UMBoL)#t'P<aYmJf`S5`89E%O;A>NSQR:o#@9]o2*+Dl9CL"n6D>+s.]Yrup`*umBNFVjie.oW<_U*%M(2c'`?A627_^Z$;_X#,&p/auK>OZCBJMt[6urH0//N;f%W.68um%d@QCl]0`L3C5p>X1!'#mMGNCfhi\&=`-^)Lu$#EfcaBV3N<<K/[:V'-m7=97fW#h)bnVMA7Hj7A$?HU_iJu^f60gkB.-q%`K$A#_s:.3&)bdHDWcEkjp_njL<hc?8SUAFaGpbOi*1bH="1_[(3)bRC9qO=Zh8Gl;H_0+3*/%SD9s%1j6h6!!`:Rl4KVYRL,QA!%/X)VG)_;EJ)o1X^qm&Ho-lj9k:R--pU`HMd`&4F<a252V%T=5c,eSo+[F%0R5Kk.U$m^]r>8r.7P#Re!O*tWgdBQfANRc`bS^0gT%%Ue_c;)XILAmr1Z020Nqdo70OBi>&8fZ$3diJHr[XNf5i!1t#n+kB!23EF=)]SM<lE#357V";MJ#&]3BnIXV`TL-+SBN&OYm%"kg%5I/r59KO+i4gKA8Z+/,U63f6nN^-F&Un_+$Xi,npfJcq2!9F]+8<O48.JH7Y58?(CU9@85A0`mh"Rt1RWC.7q="NjqR2qqP6l&i\%rhS^+Mops%%TQu(:l]7T,.<VGjEW5VK[?A'!9s9H(G.nKCbqG6Zr.XFN\nc`[Dq8YW?/VmSY3CQKGAZ>'9A3!"d6u%LJ`;*qBe1m%LUJ<dW(B`$78d>Y-WeI/I8"gq#X*j4l@nC/[1,U<Le&5[F580BP'%^O*P`*QGS_/N`Bj2Lin[l(mc)SBTgS"/=,4b&^H1&:[acP3%K_KO]mFa<f_M7'O4e3r[5EF1RRGeSTo<ER-%J-uTOF\Y/kJ`0a)L:4SFI?*80_"!k5CfY>'YhF5"/c5:U1XtpZ5lRgo>6L>mNoON%,X+J.eL50mI9)3jTk@OHe;W*=dQU;oVMUroP(cY'g<?"Ad-72=CH(stg#*^*'t2Ln/#uVFBKV8*gL2@mP5?\C,uWWWoSS1nNKFu_%TgP#a#La_!]u!AarJ$mm74emV%N,U],^r.5(mZK4)0m"V_]aFBT/.pDkQa/rYo#0VeQ?+ur5utC=J14NdUt<RGmR$TW+,AF!J'GM%8KXk)$8%-aA(`Q!$JU<d23]C=C*[kQ[ZjNT@*_u0A.G87fGMR(LjV>rI8mq5*HKNnBns]!gk55TZ7ZKs"u3B&6^gE]P-CuU<Lc/a%VZ=JD'oVipc*Wm<^bj>Bf>NR]a3jes?J&TTn7mtCa<$XRV!34eksSo9Jfmf.eYZZcmn!EK*eW]JiC._LPg25ZZ#eSNQG^X.BF>Fg%Rp(e-2QLL1s/KfT**Di<L//.gCW'l6$*`X^7+^?X.?!)`kVF[1kJ)nF+D!j]8G17N79YoW@G<sN;7#tm?&u^U2Y\0Ba4T>2bWk6d%;6%uJ<%-f>dRJ;[1X))c$AU26]3S^$+&.morVR/D:5K61eDNenfkDng/4r`H=^eJ/<FZ1PN.D<b8ZW#)1);ahU\H/KPi!A',"&%p%FB7mXKN1UaQI_:"Y0ja\/>RbAfNa!n31MiWOcq\BH6[8Em@P@aSD_9E,-f;69W+,p%Vhp!BOW)!Kt=C*:T+W@-<po;F!OtJ6qBST%c&tYL]61fgL6Y".p5E@'Qpm4SRBH^ZAT/:IT8k%Dp9<(^'J#eT:$,d5<lOqel'tVC9WmPV`X3`'IXlpCK"MH&6>I`UKg&RM2c-J`%rNoH3h>l,kTP(g?R3cAsZ1grqKnH=5ZO6+J8F#JLq^bnXm1?;+3cnb<2o<0>Tf[j9_0H?:V/7)SN*r1B?jUfI6<@Sk=8$kW3^=CE%M&e^[C6GknSZpN#Tk$0,7OPW:`/XmDNW\n1Jj#I@W"<g=&3@"IY7*c*[(A#aFC+f@%%qSZkrl-UU.CmJJ*;*X;*,$r&hF(_SQo,1%-F/=%+!TRXre9e&.m*Br?/A`XrJtPc5]K7(0EE<^c)VjT\F&3`niChm6m:=CXn&JOl]T>$6&j(#lEYeikdGF7%SA'Y&$t61-GZmh%"fjY&?@)>(;l;SonEmO$m6PX<3ReVp.mClm:2DT"MTjY);k4n#3P,@!\5oC]\8S$dd[>7u5ToX8":$/EU6Hc8=Jn8^oetaA[7"*8%l#JK$#g`PYDfQ#bVPe^oH3HCi%)Y12IG")3:j:iaMP-)DUs\YRT(":g/8?^n`\oGq289muF^N(=@E4XT8ZNoj54pZj;Og.O1"R.@%Vu"2+)/jU(%SeLa+#urDon9rIoW4G/A1o8R-@1Q*\o=bQrtWb+-%G1&F6I;poQF?ZE8tt0NqO3BCP7up7W'I_F[8`Cjs3Dtm*(+A%L&HNb#QG9u*SNP,a8mY?Lb1P'&+EiN0&]>fQT8.@j0<_`^B%$#7ff)(1>@@_"5Rd(%?-_/Ypo/rO@,;c*4.*eM?Ym4#*?%Kjf[a2%rcHp5c9GJQ\/:tsMU94&b'q5JpVXfC:LR9X?l29M<hRj:#c$8!8E^O.g$mRMIC?;=77E=o3fH$?f#FZf[+:?S=NHSZdqZ9nBJXk0%AVLH(TWK*bj4er'<gXFN-t9Vai\TM40u<*$iPsB4k_qZ,FXs9Ppe(1Fpp@AN6QE_FhMt%o#?KJ7_J"pZH\n@`]<VJ_,9B^_eL$HE%+0Ehi9pnA:,:fW9'W6"(KU>:[;d``E]UK]ja6"Zo[RbK1Cn`b=O-gKkSQ*Vo/"?Cb$L&;b9-b9<kG7c]g_jh*ZTP0OiaC^ndDNd!%<d%d#<ZiC2Z2:_)JeaX!Ld[P1-h["=Bgq%*`.BuDbkdW\ogeob?9cjNk]9.P!7X,59(2n'r"8'X&apH*K3I1EbeSuW<DcDV:b0Jl%@qQH13/$`0Tik\Q*,(>j"Ca8B6?IbW6j4i/K2^'#@5uUd4A.AM$<o0ZG-Zqp&=TPZ$HI<0gh+UX<ufl)kDJi[;HOp[;]rmZdirea%+II4%%.rX;04u8B"7[FiXU$Kt'%b*Z.+&bk'&!.UbQ2IG3L4'oOG]&<#3eR!opB/E&@5as&]J(2g'aaYJgGL5QX^"2+8:Rp6KD]A%<a\Q\9:1\*-mq0;O9/'=/XdiM:oU"8'R:gGXM@O\*6)Jc$XB'%c<nOg+<23o3/3&W2@B&/JSrnhO)5@h#BnVee"]N2loF-UTu$NN%\IiNs,:"\.<"CE&DB_+GY\^%E04:sp",n-u"J&LC3>F5n=_f8hFKm<bPZ\Le\QSQ5i'Pg!"rtb/k"a4g)-AUS-cu$'Wd<.c"_SNY%nQ[q6f$VQlJd[.[F4(Y.U2ge^dmcHT^1ZneW.bs#4i.tUU<dDUrEu]qGY)&aVE[ro.=8.*HpEdTqBtj5XK(e3_AeXl,H1FnRhPf,%T/r.Qbk^HWS5`N'"!Uu='Rqi)P5$_b`=X>6@OlIEag$VioIEg97,<J7(*a\D5Dt/#"<URZU8un2'i+tY=J:6d!iAauY84MHR1Kr@%8J]*m8:[]\1dVX_PI3O,-dH_ka!/P8'7,;S#p]#;Ei'(?--2=iG(s>kChB[K@^a4^75o>TN*nRr>:\Xs[%tghSpAX&4AGHYn/@nW%huF0cc4aVh"eQc;/[UWqp&Pero\q\7jk>r5]G5;RG+hrGT1t[M_n',s;[a?3R\=!8A"JuY:'DF:nP?q44X*cuCJ"C=RV;pMKLWc?%fEj3@#LPNJ8>To\U,tAmihoJZ<a(ll6$Sp@M![KWN`Zt%Y0$9Li.NkR)>i!bX:h^LKFCFG"0?]SV;SC(V+X"&JIcWiHc=a6mS7pJ%^`Na[*uIF3VGf=+XoUB54.^Q?TK"\oX3!A!k;kB\S+&peD?.mW(fe,H4E+b'(&ZLDqEf%3?31bq6]4=[+lWJV,%pD*K)XDOVWJ*]%N6"e7LrOQ)%dG,52F:.ad8-g?EC?TSd&+^cRiS-(&Q(Ln-1h58i[2rRZK,6,!AI^(*rHZ%7hLc3^`A%#`*bpOE!eRZa7i<BNo8E>%"R9+0//#lklie"CD:6"*JtiM:SObbCGG&#jd=YQA-';aF]bN8>YuB0`(r]#3E=sr^A4b-;O;5]H#<<c(bQ]9?BQ;-&kG`+[4)cYT%)]`)Q).74j*9?./eDKST`&Bu%aK'=!_oS&\Yn8hb"BMR#Gg-[H77P9_GcDD8_m:1Be8e=BRmQTZ;+6kaK:I!.8)Qd&h8FU#$l&=8%UJa6fFM-7YN!Vi(_/VhMPaqq&"Yq9\oSi7_/^%AVbd\d@9>&S:iq+r2).I#>]^Y6nW/%,Zfn:K_ROt(aF-Xtl7/A3m1?_+R(k?95%0$K^D1QNEa%Ya)bBnf_QNe&!YRg!\RKF01W=;4,+/`nD-$2)_17gtMkKk(>J+=A9?\t%[gLd+6`ZYDd"Afu,JrTbFZoaLYWDT?X/%G]OId<,Sh+@;-i>VPR]caGBUW?md<,<N1Hi`2VMN$87(`7OQJVNldj8Q3@O\//`ODB^ZLue=UApdT83t!_iMKE=C2%Yqb,5T_]G:%]Y#`@Cl=eQBc*49K;M6P>$u!TT>]"qA,2`me*W**KWF'fo+Dcl7i1bEVcoqk>fS\#+&rnNZcU+$3o_tQSHecPF1rN=!RpZ\ibIiT%bN@8\*Q-R]n*S'.A,2PLk&k=eI@&SM"'^:K)rkSW>gQ`b8K<gY%mM.p`horVq[24WFJ?]7NlG!ZE4N3Q#)`,;>j;,NZ%pDQgW=YB%5liO!qbE5!*c\P03@,=1At>=tMX/c!Ga:mto=;'Lq_<t8)1EV"m'.e9Z9(4&.^FJU=!^2faD#@kY^`@#:H?gmbJOg:-<2t`&sPac%2;&s^h#(&caN"Y+1Psq.En\'gZ1<s'/'JDNGE?P2R6@E<oF%(ZBib+Xcc,@@Gm"]h/lZ6;O0XW\at62P4GoUBToVK]>?3\4'J;l/%(iq?B_?bj'iPG<J;1'aM)o+g7Lg>%/gn(l.[OGlCr[Nh(UI9cs5Xl1,NsN=B5!;FZ7:HJF0,MU5*oUU!lD1;M+na(,aJ">T:4q^>%"(s`;*o?F6B)2=r]YY8`_Xek,jkFca;+@!CKZp?2B"&_k<:SWLM8[7$R0*9^fJ\?/^c@CGF0h9aO+TD,Lh,/9^2N':?"(YuE&I'S%Q3$6o@.e#oHraeB+=rE!bITuNbB@RpXA6-t'K)!q.-%b^Lh:0u2A=Ln)mt$4Lp23)C]_f+0sVuN"5fr+M2?;&OX40]HQ60m4.`=d%@[?klUEV32c(PRl0-GiY+r&$G6kg;k@stolgf=4kE%#Z.@ARc;3,fLY'XPN*K+Ar&*Kb&fVSX`u%@ui3rB-3K!r]bUa[Y%U#l_Y,%!QC*f@tSE$R>5+iq4TLri'Q$8F(E?[%8:d`)6pE7-;cb.)B.6rZfo'pO,P8tS*^7D?`g1,DLp^sLV8fN.G:5eJI$J)F=M/8r[g^Z%@HMsoQWZG7e-3q?X:[Yk^QO9'3<hNUrZnc19tq:;M2:7)RY&H:Ku"b/iAd,ZG;UAKem1sBC'g@TO=mDsY[gI*ob.$<4n5IN^#\4N%CI/a_=htNp>V6k@&Q0NAi$/^[XJuHt>?MRb@(!,o5I-=k#GgIJ@A7):fi$r0nKcs2ET8c^!/?47<K:Lo2V_8%9tNl<]/>m_2(!L=%%4jK3D&5dm5Z:fA!csSGVTF-9&p6L_Q7K@GY8g192r^o:87C0$aOoX*0(_'AID@CPk'5E-I&&>?8Od:[)tM/p#b!]AH4,oOYI);P%ko<=fP2T.TP*oKVc\S*\5CiW5=NgW$S<_FZ3EXePDT`ZKj'uFQLh\O[Q;JOi.!D#<ilT<"Ee(;^(:et:@MeGka9&V5B"^?<J]]qn%B939F+1eH\=X`AAA>.LaaMR/,+:C^j?\L$R8#D%m5e;0$"o(,[+UcY9^crO=5a#>R^Hr\e?Vp,f`[k6'TOAUt/Vq(qbX.pQBUAsN%-P-Fkc4pW.1dMmb3$ibRZ7r/fO9MH3pQ,Q;\;)V;7O"9Vb^q,d)J6hV&Il(nV^!*l!GeP:4,5fs%-TDR]OTn`#Gj2DK]RhQgRg67%cjn4>k9N_+`<+pi#6ecjGR<(iJZcY-:b&*$Y^B7KVu=3kTZGctK7_tJ*#'[Up'1bYo?oq(9H7L:THHmdg5=?Nna&+`dn)iu-MDV6%K`DZ.)8f&P!5T)9V@W`mZ`AN^!O1akO!nZI!5;M&<(1[Z!'#jl?=O?E,`VnY.0oo):EK^Q=;")+Bqgl%8Oe`QKSCdml4$cFM&Y<(%-/jNud'+de]`YEG8L!V,=N6N>V[kp_d3S36,/R`$'$eYiSMd0U&u8e:NM@A[,d?ms2)NE2a$P2jE0?jr@/\.(,`F(<i$<1O(TP;C%O=/P3@GmS^Ci&:""D5YF)66Z:B+EdGP4[._il#!j8U_1mBD.*FcMmO0>JH80kZG#T"G)!!6]b+X1+']V'f^gX3UO-r3=d&(S`U26%onBf=@((9AS.P:FJSo/ViN=]T@j+uiZbK;$H<d\kqCC2UamK-nr?ql9`B3$qe)doT-bRf&$SC-?PoUu3$[4qoXG/gQ?b:8)H@rT4%E$p08GJ]nI6O3<=CUfSlKX5;p\.d"ME6\""XFkV*p.JVsPP?@Y$]B0p>ht6[Ngcs!U7JNeQD0qsWSiNuURd4]5[%9s'.0&4$(M@l%]@"nJC&]dE=Y*:]76IXCe42WprJ\Go4P:iMaTA%[]dM`0]<E:EA0K\44<`a;kq3'u9k(Gp]aSS#E3++7k<h<%8BXYu>;/VM4@i"P%ga$NAR5C%n0`l0mAW7=F6L'T(,NtB-9F*r2$bbC,3<YVQ`?:9("hOl%3=,[gJt2HQc#jX%'cNIG:?T]9&br1BRbopC(i"hMAI/Z]%AVPkn0hsj>J_UoOc7^F$&YXi.An>N,Ua2B-bl$gK%th>H6c#N,/<%F"'*B!0&dFq&q>ar<AN!SA^ou%]V,mL(p()aR3TVOiHn/.V%H5bj\)R;Lqa_C)"mfE:-0X``]"2Xo;NV9mbUg'7\eu]C6[9GjYp>*_tAN!S)@s'ua>5e%,L,a8`Yt&e<Ob)(D0HS7=C58G1e[Pa0%LHBREMNFQb'I@P35'NCd<husBD*^JTejfsl[p`rI)n8)H16IW`Wad:>((:]+k];Bi6fDNsW5@E-@7Y`O_S*k[%#fu#hWaW^*!O6n%_n/#R%b9Op3A38"L3n-c]["(HhYA&XHe`s5=Lg7:4?NAZgi2_L$mV?FE:49pRc>%K*DPTL2r)$#>ojpNSYLV<0#?D,J!hGS'YY%m%lU,BjGPM'A06^gm&EgHuA_9)/ZjnW:7W3%GGGOKaPa5.q$th)#_nB,e6ZMRj-ZN<`LO0PJ42qU$%O;)4@UUF(ijEeDRMCZf+pH,>%n&UR_AXnkN[()Vs4!ELR5ol!d%N-ZJE>if]0R7c)jD(%da[8CAos%r_=Y,lkYjWDoI1PrjjB%X5I#6;];T&"?Y6_8[+FI"?j4FJ/%SjiG2A-Z5IV^diXe*q]@D-rXfHW^(pf*8J;#P#`q)YP1E?WSj1:bP-<aJ4B!,9Y4`bu6lp1TJ$:n,T5&"d=qQR@8Fm2CGag5W3;,%dCTb,"s*<s&KMu53C["",gMfDY-o/#j4$ob61g!1*.VkD+,X9S@r%4#W0,R`Pj,mfU^P0,QCulLE7PMjN<#B%`EaF(jj-(P\s3ST%g6s^O[<9sYY\bdhAqQEc<i0=G*1pYApCQ[lVXS;qN.P7P]GaiO\Rbb!'f_lh/eaJQCFup>*AH3i)?=!r0Q=Gld_i8***-\3Zkc^*%o$O6IJqcQLXCW3R='NTT_ccLi\_+.<Lq4q*Q_;q9c]03(3-KgC3T<.*]LEiH/lHDnl[WfRO;mU+.SrF.RD>sMS8#ekTro7h1r]a2%7US=T#.`l4Il[?7E?4glXjRd4XM,?H2oIQu"sh$1$$"2sW38jECEVetTX,rjXGRh=i7:HeLZhr2>JiZbaFsd%[YA+HKSAhd'1Skl%=.07`G[3X>_q2raD<63ZkPOR:Le"A>lUcI0X4NQ>K<2\VKJ=t4od"cm'k%O\Sq.Io`&[tm4N)uY#-KO#_+as]Lg5"QD7[%p4hfVc%V"9rDJf))Q(1\.bD6rQ5eMb+tPKDKeSL5)sHk'OAOYs)LK2l-4ih6JP4t/A%1goHdMa2noHT2)u<5pQ4W<N/Y_47pOOO3^66)CuI%*_pRIYVI5p[BMcOO2db.G@QGG%As3>1o/ogeDQa$@)Ir!VU$m+Z@o#CHnN;,<$X=&G_ctLP+'kEjGJnNUk\a[RZAYld<q2.1Ib7I%jFe%d#t[j&+V!+de.D?hG\9HCZO$^55_l0/Ho]7"T[]KV28k6F#/H#AP[2->EcjrNCcH1NVG(`Zii(gl_kHI;e/lH:0K'nn"Mu\!%#,=Z1#m+9nMAdT\E&.Sn6cd/]0G$)UW&hFa$_dk&7]3qP1[r4s(hsm>^ps+UC8;H\*#aPM8NKjl<Z?d^e$a=2(i#tpoGD>1:gBju%:ui9)\2k<kh*-$"C<0H$<*'JcCb>*B_befCF.5=G3`Hu(O._5,UI?p@p$,0Irc(t6In,66LS4?4/3u^$Z[#`&6Vo"M'bQWN5olJ_%\UpJDmVS6]Gt(UTFXsu/KV4'si?c[.&_%lq@Ef6INQCaZQ6Fb^+cBm=1PD2-ONS)"c#&,R#t""j@RpqobpiLPWm6G\3(S\JG7`8#%l]Fou,H*c`HZdIjJEr:RnV3^67>T$e?:@]NOQ)Ap#jRL?.5M*Li66u1&Cb)V8^resNh?SG$`Zo3TSB(sn&s,F$@i-[?n<_UKOCUJ%!7`&1`FT/\(m$KuO)rfWn^CY3`I%56)g8VIn2*JUL_:YO)L86j)7%:X6fKK(gP7$@lmdq-+f>oo)&4B5^hK#f/lco?fguOY5b`*N%*GRV]$&i$sA0g?l0[k!qnYK,(A=DefgekjDI1/Z1;S;Ye,4C"4q2-j0'\ONZ:$aN"D)AIR-HtbN@\m"?\(qp$)F+NTAd^!c-%nlW%Ce/:$ahj5)J^Ok!4m%K_#/Yq^<=4r8+=cX,:stlp41GKX7[,=u#*Hn[B!5'eOJZMF0U+p*dTI69$m;)YqX9d?d7=O/!gg`u'3sD.%)EJdmKf%@Bi98)mnOqNu`9G^T6),)kmcFEn[MTl;!I%$EN(u'OEa?ONa!rJ>K10ioRZ>[T(rY-+>lmGB]rT%)d24j`]+ktgPRN/=%4X:rfU'"8_+ekaf^ES2AO>_;=iLtNhYr"R"oC4!27.nVX*1,%!@&QoB'FYFL.ok3*ck4+SEX)oA9#DK&+>iZ0+En8"NS`KY)[r0]%b#lh."V'9&[]4nOq)_S!@<k77D?uj<!Y$k<8325f5[0XBQQu&/C22,X:aCA;_k3VJ_m[!/0H)oDX:>'^6]tZAig-\U"#a@J4o3jO%@V'ESg;`E*bYj7)4?+/uo%D.op^@Bmn7;YXF*oG!A_8g.AVFDu>0)!S!,X1OflI3n>(RqC"j[S7PuTGP_uS'5;ic75iE06PJmt<Q%Vdr^p4;R#.,G#8e^(P^$Oatr_/5\'\gi*V&?HH^n=iqAR1V@d>[;j&Fe+"KPV=Ym@jHnHY)r-i+7!e#O@[Q?aoBa<=1mZ"IN0\Hu%%ruY)mCYKPNu(*=&l.f0cKl*Pn?%534[WIP"$=E]EhYM"kW^ao5^Fj2)%($s>Q[%m(:J>llqGXGbTk+gV^PY1K/uMu-Ndr1+e:VB%OYjh-FG>Q"VQh;86"D[!HDE?I9k,aak_q3o5k!bOE7'e&r"I:7+H_;$R_bLW&s4"D/%-FBG><,ajr=Wrfa3X<g^n)3*LIoT.2X)F%3O!8[)TEZ"1g%&<E=Pg>)43Y-r*_Z7#tT$V59bS(Ka)Oon%#&jKJUgiYaHQj%*LQU'GTG`UW*$J$?$-7'J$DFDMI/-pdPd3c6+pb%\EBr-=G\_H%,9!/f#?Nt2IgAB$%$2=,R%)Y("aLG]&`iGp/"3Y4+.#2>Vgc@D!#lEk"l4RBrGVL`0boS26WI"P:68<;2@A9\:ZV*%=60gm"ORXC)/7<LB[2Ps%SM=aUp"1^%F5HHGZ;R09"q\5(csQ1I5gq')jiVrZ<r>tQCQp<"D(%P-?tt'R:-@eV(a=()$CtE3B7*O%)Nm+3r1%[jAgB6#8a1fM"l:=%Shc<D2B(A.#%LC6_;MJX%`OAo='WWs6dO];Q:;g5B/8ca*J/Rt0OHL61Qo(p.lR<G68"b.9CQMO%&oMeY08'!d'eo9#!lDXj45a\CpMu'_fO]kE=GR/eL;r9h14gZ:7MJ^*)fQZ\'h1,4DE.c$j^!KjUJ5E14_bk]]NeqK/VE'YZXT4\%j!!M1a>.jD-TPFZ3+EQiS0=2lILVJ2eH!bn!OEq-^bPn+I)giuQ.$k$5Wr@47Ca#ed)lY$71*.@N:::NE##J`j#SQsKN8RhN-.K<%K3JES@VFl!;8uV?E_:A%:leV2\&\j_P1/gH+Ei_fQ(p[n=-:Wr$"RE9E_9_-n@qU&A8ASG#n2tD]p'-8"dq$6lX7k$_sR_-L=^MY%;j2d(oJnUABc3f7J:Pg\$)W[B%8I+(Qnk/ticenj$PHmi4RZ.iY)%CA-tV$mphV?icJ2E=@=p!r9Sjj]@EM,u)s,XnL+*5kO6BGr%;FZ<ANY+W-_]e!Zgec-I]Aep<:s,G3\_rlAb0]",e7Tn8:*-HU$)Ho*5u7ucN$JZ5i$h279*N[4#?$#jpD\&O9V^$,>`IQ>iUB!M%Iao-tL0Z>($-R/gUT2t$;C7Ob;HcC9_d<UsdulMD`j:?mfVjh#31fT7AjVN!##g:T7KrsHf7m2c>DuHp-tNXXcXdEZN'mbk&_gSn%!QdC1Tp-Q^]*qU"*`E.iNuU#l+D$5KiBl`ob/buN%AN2SG!7g?1-CU;L[$#)5pNaki5)ObLoWFi12h?I$fEJnSa.HA#dY\VgE=Y/%:@2eK-prt;rTaq])*89)=:Zs;o@#R!Z0.B'"tN/`[*Rd1KbX]G(W@S5Y[V("$'p:]MBP8^VhZ!C/ehk;X>mJ=;AuVRZIhh$5XPal%!E4&BJebJLiV*R9Y1csW3cUP(5fI-ri3!86#'Ps/8mB+GA!ZV>ooNWr)/u\pU)4G&a>!i46U-8SY_jgRH5foj-dI?Lb,T.7N&q<Y%Dd[$&?HBN\`=g(&LC4q\-o&B!Hr7$jM:qi+C',+/4Ll$li.t;H]<]Hh"#bte,T2OXp(?TqMBYfAmJ&/g)#RbUJ_<l<r+73hhb_7-%VIe@U`0,ZBBgK\Ih[Gn>*^gFUP4`5e&]4u&MIj[:#6sChL*7%Y7-c#70F"41)MAqIZ,EjL+i]DD.P)-?jB2HgTb([Dn't=&+N0@u%(p?5]Od))!gN@P1(#4ja#su9ca,^8X7g<Af+iKCZFu'7U>IeeC'RLsB[1:^;*^L48f#q"qc;l4'CC"BWL7Ee@QOq(daR_0?\,sQS%;M,OAR]0m1ifSkcBaI*7*=B89)J#3g(p0Y79Uk,25_u]+\B/1d6;4;2=c#G#3>t%HLhTteKVU[@@Ru):Lnm=m!GQ$':EdZ(WrTBf%$m>h;+KW55+XT+aRUZRG%LQ2j#VkR\"'jgi+\#C?nTQ+oLl81BKHQ#L;At#:itX&h2uKoCb?MgrIMdP..OLa_8g0uN-CKX9TO;]>%^k]Jhka15FLt;aJ@eaC,DPCON)*dK`/VEI$IMa[^08V"b5MXC<R`C7#ErV5;qC&',<W"O9.&1<N2#)#jaFACs$GWaA^E*O__5co(%"$+QL(]BUG/4]Oe:&&1TG,5N'K<*AXXRDH`Gi`$9i@8^V;HI7EZYYX1:F%6<dCfB$X?1)u[T_)l=r*Ds&EGF<AHTt[E^S#B,$2L2%Q=[%hi"H49-G<"-Yd3aT\E"Q-(:m$O^gTUQ_U_LMBL#_Q0Eml:MN]nNBFg;\[9[<uRB=8^j;h6^CuQH"["OQ1>*4-23.D`q)COc;%N;S<n>)QTOaJ'+"2?V$4]jT=YZ-YO>X0'6KD/FTHUofWm,Ah9+*GK<<K-P5M$l`nrA'dbNRiWG]CLb.N>8tIKg=l2'86[$#7G?H4%.alnF#=[A#1ea\sN^4k+EE3[6jtc9(OleDu4J]Lr%1_&rL+?q.Eu?T]+jFZPY`O$3$k$cE_c8+\-5?)C88p`E3ei=Ke5*d_7T3."%*X$!,TTI6@L'_9b81Z6[^']RI%"bA1+X)to*'j+QKERUKe-:Rorj;:Y%M08J(gLAK63:;Id%]MBJU8>l6Soc.r7Wi]HQ4;Irum=1%#77$0fR#/Ri6&6;>_PJ\^r9].T*ODcjfVUL#geLLZ!GU$Lq)sW0Za!"$%[ltQ$;S^_:quJO#@h#:',f:X!gM6<ci3c"N_RA02&d*%JKDDW^]G-I<pf7r!49*9J]'VUfJ+rh8>Jshq$dC>;327hBgE;_5["`;+HR?Akol-("AoH#"[NOuBgIh%!bjq36U4fd_uPl7"R5H;%('HAiUW#J,s(F-K*rfn.&;*2N%)gMR('Eg;NtqgPn>!rf%/acnO<4=50bD;f=rbJRO"Cji+Wi9GU<#h4K,F1,_B;#6dD@#\I'bS`%!?Wm%dc2AN&d)WYYXc'ij;!Zuh[l2F9'n+pOjfq<?%P4+0BEJ&U)r9gK]gWGO-+A\Mg$k9aEh8GA;>HSN/R38nd#8\`H`kDhLI;Z%]*!:_5)eB;*Qfn#%kg]ML!7<rS^+!XZZgP=rPmRe_tOr`oCKp-Z,AkEOkiA(s6Z_d>P_KKAb5e+fZ^O7IRYY-SXUK:XlB(>Vm8)A%D*CngoAsH%(LdP#[MI_$2EcMo"]L[beMDugF%K^;#^@LQA5FEBLe@eS.(E@d=n=99[/n2b83J(W[;24NJ=[!N*M3rITD2[rL_#5t%4%;`#3?af_\p+u[]Q+4fkqobWH@?hoDb`gH'k(NiqJ*)+%SMm?^>17Sj9dPAr"0[s\V7*'VToRBBQ,<lU[6T9B=,F]<#8)0C3R,9%W"W=?494,ej5lDDXHuVDV--sWGK\J(l:su`FYU.=<MqQnlT^APFeeZ>?>Y,*ALHMb+_j%A9-jHZ9'=V?'e^0sg>lS]Sg&X,)=o_D%m<XfP!N%"m2/1%U=,K-hG*M!hO^BMSNVm+)c`NDfMd&hhPZ2B=3V#sB_RX\b%3BaC,S_ZMQ:Js)(.8S<36:a=,`*![,dsVQE_uVG%SRXad6FaM"BPl#J5qrdfcRm%,,;tBFI9D6QKbB/-k]qfh>[\B:d"YD([3EQqeS/<f\MCY1c_Ma(e6J<u4I>6)[L],AJ?s<r&2"`'%I`$:u>qi4^Y-$^):*h?L8C<V=B7<.['GgcKQWAn!4?2WsVW*4DP1\3+8JTA$/rG95(i?t;Kb^87\<K\qa)#N$Y?,K>OXJuCjL$W;%`O(3D$EG,R&9)$&5"^Qr</$B0$`?EY18#=B3"9BuG[IC,&A5,SKF73RM`LB-<dZ#1)23SQ%Q5rPFU!QHR;?=9ZnLfY\W9L/'#$/9%J-5=>#aht7<ZB[JZ&Em5l,&O2-$'pbIH[uu<C_bAW=ap\c(rkT"R,Z[CT-BuN"q#LcRX"o>`A(G!%4"oXL%(MM*\`D5%u0%B;JE9%Z;g2d^hX&Ml4kb,<H]_2CF,cq7$'[bHM"a*5SRp:!(2?^`ZmJnBQkGbP!W&5K?[Ft)nG-!da>A4?saiqW=X3bj"Rl63j=WriD*9Q%K2E9Y@8Z4l7AggE8kFsJO#f3iLKE7'EfZ/5%pWlsKb8YU9r(UmOHCR3J.Jd8]\Ju5)ZU_4h4dJLBIo6j[MF2'lB\XE:.ep(n?ghK%%#AstB6CEfAtrCAZ=?IM1>7,l*GcsjPG8L^421emLf%eh`":AMB%mUaS]YX)(mDgg],5+u_;)G;/9]$Rf)VQaUi)7pN07BgAN8@@%(_M%TSuS?0']\IH.3=aha>STZ@'tRPND6Z\@L_f<jlhZ?r\uMMSC)mAHXs)dKC;iF)Q<?V9oM>k#R[=Ih(]>hJF.P;R$&/=ciagk%Gbd%RC)UC1<`ik:ZeLcG(85XO7lME3m[DM(c3?-q'=suc.2BZpSD1]V:_<[HNDD<&PepZq>AOQiCOe4E[&ss!=_C*<d`)ZeJn]hd%%Tuk$';_SDqdjkM6'h`a=BAA<-&UV;O9q.P2Y$2^P_.cWTKNU>!O?T(0?X0R=<#96NCb#g!j^J;FJ?55]=R@AYZL;.Zn;T5<75Hl%5uQj1?q2dnL2?#^S4<>^N)@#qg[fH$<\Jk&92I^jfp1,R*J0i-\EZos%tSYVN2Sk[/1F$"$Gf7Ub2l4;?aMK#QXFqBOXr2@NYP.g%8R`qYUR+;JfO_[&.SF1iQK4AiOF:%:^iZ/`0aI)6%7";p4+i6])O>1+QDUoH3uiebO%_K/Goq(UU*oVi$9=kKeYBR[=e,@E?G*F6%$Hiu"J'b%Bb^EW_G.]iQ?o4V$3GMil9pt$lX#Am1'.^R@<Z3BBBpr#=q0oKc`4)g--YpS@AMAV]gOO6ZEe^u0CR:1?641f`5p9.S%NU/YU;$r.!N[@i@XmIMQ=A/g\_@g^"P&Ap.6no?^Y)ManNd4B/;$n\uc53j$US/"@BlEcA>WXmOpbOL45J/g,=J6g0/'OtM0Tl-\%1u[V$*/c>23[SEs':]h8$F@2nNtBmnC`6P^fpXC):XVL)L586qEAV7LNNE3fJat"bD@qs[kd6FY7nA>Rd+=^YTd_a?COe;c4Iop\%0&*TuVF92iBIXPYn^]sa<L:MN>keMUWH1M+&G\@G*<?C.V#aid.r14mh+S1O+p&W_&2o*Vi2s%fkD"kn0eEmFC_)66P80rm,7cOJ%:F#I;G6+;X@`!l;q-$kE\C@lO'KS;^UGMj3H;RXP]!s^p$Xj-1WsB>0Tc#bU67K#;::a]Y8!2KhXcOQi;TS;kd$6KM";tUB*B[YS%/IZehZ7:*4[Ftr/d1gP)qW5%A^lq&mm$KZb/Q+R-4Ii/q%E,,Ki3"#%Drg0(@0/Et'o(_Md+\o':10+?hp8\i#3-[S`h\^pQ81""%M,D0n;UMscF#+\N7O5@"CQ64)@Zg_i4PS@3^n!qn!gjb!0\*1u+0q&VZM.:!IMGk"%88mm%3F2(fc![e4<j+@1hfFdg$%7*>f3Xl%1luPI;3`)<TFkC,N=`aG[OI1?!I)jZ!QH1$e'F4k\(8@YN?N?aq/\%rE]@J'MUE=6nt0V2Ui=ZoP:''=V;O5[3Kh5n6;bTr)^Fnm%Z>BRICK^hF.CcX.]o[b/1r`O[MMl<9nhu_m993I!eul[G>Y_u89p+`LVqob;'&.4s<1t/;3_t>F/daVUhhZ>%>%f9Y.7kEpRnX%F%<`VKF-W]8iC2!]?e4pu2j%BK^ZQZA1<+;+#rO&uK$_B2AH/atA!!=*un$(%_KgSf%oZX#Q)("kN`7jh56jd9S/;:eY4AH*I_GH5$%p`1:(5fi*Ki1+%$A>nt8];:TPCauCMi$H&i6HC3<>74`D>ms'+%-G$f'`f+dJ?c)"DLtnHQQs<'8S6oBk(uZ%aRae7MlhpfZiGG"%P:4(4;HRuq5o3gRSsXWk8;Wq1]YNj@0-(d!)0N?\;=b&>0;u46b<4Bc:5`.=,qU7Z(Q;gU\5I<D6?E.q,LS+F#`Q2k:*G7ukr,W&%8mtV-([jQoH9@931rd0j!2rY!M;,)+$>GRH%dbMi3?,7u[h`bP1`[pDZ'b:qCdqXS`)L3YOGsX^9l2a,2p%n\2?M?')5/pI^bqi&%7g*#W9?MKbe-JR<Za"Pdd2F]'Chc_+,WTDYHj<RuVR<:;)AdE]7T6HVeBn?A1mh7]KssrnSr>3ZZ<.3S#jp7jCOesu7\GbIJ;:-R%9`4T'BqQRr>/LNf/"UNr<4t)G=$m>nBJ-QaSpCUFRq-'WC$ioPBI"=q5c%Q:*5:oE$HkD^Nom,<pthK(m4Gu58eY:^aW!=f?;dO"%T^cE):i82jh7Cq7\5>'ZPGKs4A"VoF7Todub+UW7Z*cZ-SgG:.L29=J;-+RFC(<`LajttQ[Q#7)f+Bib<Riqd&[VWXVs!js`$NYC%M*cjZfr"TI(Xs_ufF3j@M6!(4To>_E-b[]%V2an'1@0WB5,h,Cg=_3\m;>CW7B<J_+@ZdYEebK_q]G]VWi]<C#?On.;Uqk:`^!`1%DQ#'"M?_'I!GWR>2eG5KjUs3024q>E=)A:iQ?6:Z/47nb@+Ep$\HrjCHd]bXKip<K:Vdb9VL#/^>plhHHu>cTc!rrdMC4hH#!4_+%^K\RsD89[qSad8X(hi%ONS_%+6LtUtEV48QI$[3"/n&ob'',N<TRnAaODbb.i\m>A`H`Zr>%M/gnfpnoLoaITP71-F7s8p$R*<@8%@k##b]J@T2ZPI(EHmPkYFZPuF7G0OG7G_qAK($SoCgt7rOn5):0JIR4MV^:-UT&meWAa-/rD1K9p.K.i'Uf?&b-O6;RtIH;CM5?s%/.QbNjOXF8BL4+Jr<-3Sl3R%Y:n?l"M\;LST-_3"%Iibp[b=`OK3=I_/r])&7I$70_6P?K8->N,gMC/1^'r*.Te2oiL,/SP<ZoS4%?^3H:o0m(G)`DHH$d_+NSr@j&p]Y/I`<Pb1@T&p1F$`m5?]$;-<#kk8o^56.A]RPCFaC$+17'AZ$*QW&`S-#/W-,f*6Eg8i,k<8Y%g1"If$3HEV<=MEn9c)Ca8$tfZD6B8GU2cNlpL3@Q\X%E'!GO4+UL^O-DBN@\/i9Uhl7((1aedPC:,`10<n/%"*p%haV/DFG=g-MH%Ul70mEj^'jVXds*#$i,T*@$EP/M%-]V1C,;RO0JUCMD:;DKcZe`Jpb+7O=)KHkn6WRdNmk:ns`nNB2.Pa-WLqHrWDk#4U?BC?h'%%rg^?3@\'(;;V950-UesC!mB,Fq&hIDI-IQrR/36?L53bn(j%,_?$+Y8Z-XI/aC\Z]FZpsgc:)56`ET#Dfec+g#2kf0glA<_[!4BA%MFQMB=";!UUtj51)DF$+Mh=bD:p5lZ2RJRR3b:Ec1S\&0m;<YKMq:O(XHZEmB^pGF4M!<%H<5H`GBnH8Z+4)h,A%BY-^P"fF"Oii%jE*pIg#ag-Wp+#pc<UC5k8rGZ$c[32L:'ZHY/SVLV\Qr6G3l!GGW]33L$pYKs5h:`dU?lmPY_`h*1CjdVbqFr7qNmt##DYs1Gp?a%a2@7g3V."E2)*m'*VHuG1see"OW0H5Rr4(=X7]hh;_]5&Um?ur3VEGI#WC+&..R@11N%pFU[A][FK&8?;TB/S;do1DS8A%=(g7#2%JeffppG"ZiR_^8d00N(qM05X,p6&VW.JGocjIRGG2Pn#NIZ:KLWt]km_d_5s1ltqg1Uk.'=reP,;$S-\ka'Ri%Iag5]&.hFa9F4`%@jLbq*6hkE'+O$""D%U7CZ0BHeJ^b8FYKZH2n=sXF>p[a;h%[o/L1J/NtmXDCqa&@V9"?*ZETYp6)?Id3s)X.:!d,2XPi4"PEW5Z%-8!7^\'2/[.BC-q8.\5;(lP^?*b.G"I)&CqWY(h$-QKn"bc$):brW#XoT$$CgTG%-G*QAER!^Y^O,%++&OY'=0TQR\jGfV+a8s$t%br@l=_/h3!Zuh4TPYp;m.YXkH._!-hTF?^KjYRbGC[iA&Cfu_iN%HHMjn_VsIN6R,)(0,)jH]+<j2lVRV=)"k`IKo<c3du9=h?P(%P7,q5VG\_f5Z^h%7?p8n-+sQN2JM?CWu`qNb'&$h+>+qP#e[P?ju+ngYLJu.Jl8VY+Co)gX/%G]8`1mH1]K`.U(ml):gVUFCpHaY%-dR3p'eQUgHb5h?Ci4G:3]50&%eq@egN3mAEQ+RiRJZ/q[WrU1acF7)QtS4t$B6q[D_qh+D\QtTB>HSb>"qTLaGCV.`Y9a$kI9[n%ad@R@?_M9#Z_`oG^$2NDL<n<S3h&9:@%V0E\J_k:.YWn2MOg_ar'kk53b986P74Qj4GbCk:q)gigoF@e`,2g)l_s'(<#A!G3+sRt%G"6U:n7?uF3'(!9/DNDj=IdBF)s)A&HpZYLq+en;DlXS@?YtX1-<GI.2,jp(15<TRWCW]d_f4:_RI-s-[Z#Wtg0(^[?<-4J1A&Da%f#^Y'%5^hVW@*)LSo([%nPR[W@l#[;!="U`maJ&&-SMYM!b,9:3?D?l(Nje(E>,"J1I&5Acd>bal>rXU&3=I(-+&WHc^Q/cLu!nC%B5Xt8;#tQ/B\H[0[b`n&k"ZN3S)<UAQEqZ*HTo%7I$NXOfOlsCG\lHa.nsqqd0dO4:t'p"7$k;8RLmrT'.u(!42pd;X></c:AO'V%bh!"HRn6P`V8d-;E+ot(6^ID+/[hO5p<llUBt9Y8:4'.?UmIHsWcf+\XCd6FMD>CHa%-uGj_Wp.fqr8X"@r4#G$9gt4du.UT4Jt)%2f6o>oJ%P4HtCDge4+40FN-AdaZ!j!A)$4K1ae:$ho@/(90!#)hgCC-Tp&]0lDSusb9nEUB4X\0_+WRQ[:iH`9[,`(dU!9%Yslp^%H\Pug8KN^^NJ\9OP!%[;[XZ#*a`t4o)cq<4l@LB\4^+5R*XbA[/6e/#R`ddnlXu0.rRLL''t++['G)/4DNeNoVRB_Fs%tWmARj8J%*>d/)$`$nrMoO7Gi[Li90Yh'XlW\mjd=Gf"PGSd_.1GM@Za]M.EZok_KbT<Yp1qeaZYYm]G8_/C,tJ+\Sef!]Q"=MuePpNJfZr!r%m)#&4`@he)2D@l'*OBu8QO-gPbTnC48[Hj%BsrPfYk-NaPpN8j3g0ej/1hL&-2C4A]k\g0FOn7g&kgIqL'C,B6OQJZY3'Clp*pDb%F6.ou=T_SZ2eg\I7Q]1$<aIg?3&Bq[Jn2SGQgK(i2GP\%.!-6eO4Eea`_iJ_A+0%,91p4pP#5)_*<b9*,4Nb.+Z2;[_)GL,/Hp-q%/O)a8L%7?rH:A$',91ifZaur3<PGWPG.(6K'i4@5X-eL0!]N8JU?/uq-;#dnIk;aF*=d<XgG(N(]^!,ZAXlIRYIt.^$qbJGY1'A%%'*a6dXH"kW>hqJ@QtqUKS*(8]9<g>@#2;E)Q3fC,f'8L2C]S8bAt'V6)6DL?EGA;k?(D,sA6>jpTk:[un$/>L;j"h33PJVu'U<$Q%A1k$X%JU]Zf(<rr^c/?YNqU"!:RPjCI2WHFUb,2EYph22pe?H[g^qH@E+J<2HEP4#*O=_$'t9E<6NC+kMUlh324LT)cA,q/Mak'u%6Z0+S$SA?\#/N?]P&W.4*>PH+"B1><iAq'XN"'0LAm=\fV;kV63Ro\"[c0md6^)K_Z8H$[)PY!"Q"?Ji(`98b,t(&"=9Fj2'BK[E%3Wb9J+kp4f$Q1T%Z=Brfp=Bp0UUb+n!#7arSBG*'?)qW]5<RiM,TOHnl:=>K^pdWATuGhtk<EGNV.I-Bb,WDD/;9V-+%DrY;k23Z%-r*guFZ*[J%$#qW0\CPm,6.qj3jZJVl5IAf$=#oCMJb^I.e28mF6lFj$>B`f9NdSV_'>IY0rBn0e86$g[V<-'gUZDs:1[<A=,V+^%C#b%6fQO:u#+pe_"qW.OR1)%<S&^K`DtMl:51a8Iah2WQM1)'p2f;aEFF`$09XP2cfJq\H[bUeW65G\]32o#rN7h'=;u=,I5g<jL%PPJAB3`t4nC3k\ON.XK=VT<lF&:IJ_<W*HF@&5PW>?fB^1i8?3^cf+&9WScV)Q8k%?1MZ=[0RHtc"-aukFagACoZ3'D!cPB(>0a-%Su3"b.(S3cmWA"N[Pmu"F]AdbZ_12uOYGq%0K48n@CX^m=:O\*<XihX3_'apXgr[5'.Cs!XNVEsi++Ik,SIW$MD0]k#oIXGBkj<D%Tm>.8lc]u/i"I(=T#T`WBAula`[<.d65^`,+LF78.\tOrFC\OnKjQoZo4j+XE^s$pMP\[=B\<2kraO0LcrOAt1,[#qLn4?8i\E6"%>K#4sId6nBP1\K?K;uNfdF?.9kZc%uO:WlKOU`;;0NkPE73kg0&Bm@;E/@H>+g?%*U:b)qL6c>+JFFD./V:HDET<$:gO*Xi.48=i%%_Y'dkjq2!VWmWa.!A!f$]O/OAM,,-.Y8Lkl@KE[MF:E-B3h]tX`G,+fA]Ua]r!VL:GLMJ1bli4>WE&*neDR7'-qJk>`3mm3a[m*%oAsZ>Y1Wt],OA=\@SY"4:o,e#fC0Y*D+s+>lbQ":LP"$m']@%>BU.c2P/R#SlGiKq)?\hE;j7\W$OC9+RF80+'Q>(f[fJI2OQRb#%E\>kRZD?+^eprG[3UrsN,;2b&o$&ioOoup;ph$#2'.=j59Dhq1@#0fRN6cL(O\n7H!Ih:RA1QCeEn6^:0JlV;DqlE.Ai7D6eA5:-%G4'`N2(L8#)k)5;1k.mE:ibrt]V7d9>&*g8'%)%.Sni=FjL&n4!-f$71Hq3Y#<Kq!f;/G4`>G$m)]A]29ii8fHs4^<2l-Ic*$U5#%g@6!ol%'iB@T:8XN+\Z`9gm]KaS7<DWuV\Ji@`o<YA&DNUq7D.;XDoAFe/*MK;:t"j6Us\i(gZ$2mT9'PRU'Hpa0"q_ceU(T(E[J%[#ctK\85B:>5B2l:"CrSe,PA8",:4kP349J3LIU#3=pFXgb?07E=JWr:1UF+T\;`A61,#F#0$j,%22d=#i%_39+u,lX-lH-A6"TE%Z&]>0A3a\dXGN_R<%/auV07\]N"$;Yo.P\1L#1Pm<6sqS:n_r.i/2IGY$tkWbc&l2Jl1AS+GJ8cP_O#YhF`D4@6u?\QMDIH\.7Em%BjrER#mP!E?,=CI5^"H;^m=@.6bB->Cc@;98i;d)l@P[DVP$5:W7s*th3eE\R]_]Efs7RmmF26;=mU6L)Yu8+r+]VEQ+(CbO1#=e%muUWOSgt;nbIdA;a[H<#6g._WcVIAL0-CdC^^#.OS";[gktsFm)Y,D@V9m#k5nMVuJ0,\f'>"BY',ef5.tcFfhp?)_4uB1B[ldVp%p/$aUbToHIAsE*$G_(2mM?nRd@^C<3SiSTS9A.?9e'qRl?(s=9?PmWg'O]koojB-E</EpD@q2B1G2\Gm2<DM2,G&+Z'SFe+r54Ej%@/F>UFAUqXCqN3#*qA)EN?7jiTluma`l4gpi.beb9eNJ1D7:$K<t/cXGLe]J4\4kV:n(t;2co?"8rQ["eqD2-Ru8Drb`)XB*##Bl%D?lWu>#HCb%>:#l1KipcD]S\T>XsH.Sb%Bhl6jQPW^qQO?O+4p)?QK*O4F__&]Bn^_a]561I&@<P5OOo5dV2QG6E4jdYLkaQ5L,Y%H>^^$+\":USc-;T3E_,l_ISKX_\?W5d[Cl>>C,kt:5N4(ba(p^ZkSL>_Q2k^L`/8o`NmLa=ii0MYc6_r7UTbSHb1%0$cfV?j=W[6%CP)ALRhnCtM9nr`Q$/d8LTt'@/2&!-imQ8#9<sXQ8X;EU#c;5Q..Z$u9lc2tl#jOFYW/Lii@E)m]/tQA2DR)21bZg;Am.mOJqP5=%V=X9Df;110AA&;--\3]S1KY2E[Q@eNUYak^^C:T1Qs)gpOXnP]f\+'_?o\ET>/[cOpKYmNjG9d<r)4lIj^^?%HAn$A'.lX]V0a67%;S#J`6(n]GMFuRK/H.];6<0J:7$FL,ACD^[*GEPEaYK*\J1>*6B(A_GIj@RQl[*2B8p6.61_2D6\8s5s[6Z77E#;8f\lsYJ"OGu_%LpkT1FP:"3X@&OoZ*F!/a,,-K=q6uJDkbIh#7<PK(8[p8<QZAiC>lh;"403Jb:"=4NYV/,/$A:-#[eC=>OcBu49"RAq\sh+2Zj!,%4b3:@,1@"leVh3AqpFXG27'^>rg\DI[I^l2TE"`XA:ZrU:60<g0/)HhmsaY^Y@`:Zq>BT2^3W8d\iTfKp1A=Ca4\4EmHe.bbu\X"%^H"G=\QW7rHU$9\e&BT(*WETppND,Vril9tQb-mKhooH=5L+Gd^GnBR04.QA(U'/Ipi1b+.o2\,:sJ`7_4?C\6,PsYJ,@_oEPq:b%\s%BF3.:bfk1=Bmo<IQkH;6\qT%pt]HV.K=PL!q@q7KpY0(0kR4FUU`*^>./H!L@<Ihp'`H^D2X-T&3Db7BPTRas!$AQ8?bHL2"k%4nET-bikb)ad_%c+4a_bX2Xc!g%rA#WdjT1a..%n()P#LF_<%^XuS0$k7c2,ipt(5l-8`'(u[<LCTdWll.KNo11#:hPL%UZ411"$%o5BY-k!.^4B)NsHSu$<8C#->u0Y^p6>qQ'=QKWO@6*^"13ZR?"-K9Jc,4ATo3mP;2Y!76I53?5*Ka5g(:G4msV7j0j\t>MF?<l>n%*A@EjCB!qOl1+W!]#Um9_k]IQ^1ep\D\lLHS'.k?k;,9jfhTfkjn[ZSldM>G%aE$2!%T]Em!Io'nS7dJ"1S!``nK0LHOn7kg/r\@%C[[t$aerh>]t0Yr@Xn+7bL>d:^%\Jl]sVGEj0SL2FujQc]a)db2s/u:gtS3C&(01e>PtujHgt]sEr"0_#k>k]B_:+j:63<VHfgrX%fls'Vgsbb>4P%jiB=AtE)ir;`&p8_Q@8B<0=PHNZ^,\2Ur-19CJF6hIoacI/S`&Dg\(B60o8>c*aiC,K?bUi/]suaBJd6",W]O@U%e";!t<knW%en=V&T>SWl+*N'NT(\S4rAT+Q*moPRI_.T=k4So?p[OgJ1[)nNIQY>,]=e"2V`/(UXXSGMSZV?TeCm^aoR,Z/XIW%)%I=(X%I_9oF4MT2P/Nrajc).lr7n<+CCjrdAH#\6g^KCN#h0ncK"9e0TbJTt0?=#13_^q\j+-UP."rdHLmNVU>m8`u&k:egMIHL+9%%HhhoWVl1Mo1.1o^:cYB\9Y5@V9e+]>eJFYqHTld7N_K^qTs/$,<YTpaZ]C`Tkcr`+NZu\#%shmhp,"^Un^%9DQpRbqtgV_f5<@B%qJ^TC^PDJ0&g$\*I),^0:F&+.T)?rhb`e"+YCCH@hk%T4Nnp+1S_h">?eh`t2?0tfoC:JUpCBSQ(AI=MMlYG;XQ1$qJtCt.I(TJr%;MKWF=ml:Rjo4B'g"t7gnW1(`qjVu,:H9fsjRS#mYtGV`mCDpY2E6i>NtY[Rl$'GInGXDTEp\]G(0?IL?5k2?2*X+7?(Y6$qW%'&%5AY]BjRd9&IKI>q1blbZ]R'J;o'Gr?]16D#X:P2Qi,%f&JbYfZ>MCj<%5[m[4Q([eQ\Wf0et0un@;!oX9_Rs=OHP[BNVDWlDLYbm%1-YJS^:oPU,j5(H4SXI8q9:Ju;ZH:CU9Jero]*PP@;UIu\OGK+Mkpqpa?1ZO[.[07Mca/06J(r67XQON`'#rM#G3(0F>S`eX;ql+%Il"jL=Id',S1Tciiu,B(i$Y/Xmb6X3h`Alk%t6DsFDuR)p2#2j3+#qGHp)uVR"WlcY'k]=_J&>)4;M?^bj8tck>/SZkINJ4^XcIq%Xni-#/06jU5G(kQCPU&^P?msOGhtXR^0fXe*Y#kggZX"Rr,1ni4;NBi%pAP?:]:,\jA0jeb!S1;CTkp^X3:,-PD-O;Vfs525`g/_%M@\fMpT]V1c_7JEbtDq,f9]:"T4&r8Z_-CKf%q6QFZ8omHa-&>s64[B[HI/a?88n&-VnK,#-[iNZADqZSt4[bGOXrTbiifX-K)I6%R\-+?hOOST^:H6dn/4On([KE5q"XR\p;;.drQMiC5!=jBD$f"BdCT?6:L`-o/jK$NB6n`IZ'_^(oJrM8*IiK_ZMsKn#<n>C1;>e3%T7=;M@3=euFN70().ri84;NS5fsjV.fd+K5:8d-o,f?]JPK.^hn%jVu\Dq(_$tEK&@nVPZs'E7VQOU9HLZCf<9MZuUB)S,[(;[Ad%rqSP%@IBfk4ns,dVkZ%adU>&u0FpVi4dgDZok3htK[C$F@%M<ubWSq$#L;WokqEX,h`[BLR.Y+_=SU]8AC1KDoa`Vpk!@%;*`"]?%4da87n`i?Y>6F>VdC@k`O1#E<n'6e\YR)Ci!2$7^-ZNk\!T-*3np^#W[8acY,GNc`a?Gd!ELu5;fpd>/2B;***%h1@F0r>&^YriF%Njdn[&"KC8?;\O.7GBN'LX+6^+Ogibg[MOlpt8,&g[MNY5MP\6a3W*.T[(aXjb>lP[^Pnjs+Op,Rq&eMYpo^qa(F_\DiW*)fR/&B%oA],kZh_5"pB+tj`-e*$q7<4pI<igd95E]1b#&+YO0lgmM9!R1grt3.LRCg-mkCO:^S8L-pK."+m&=Q0](POTGkdWAD!k,F*-\>d%/^?"6FFhNn\jPTOiahTEo\sukd)jhtm:(NcE/ug*4n0D5Ci`+j^HK:m@b-dsO8XZtlaOAJB&,I2jU5N=M@T<sIGW3H^_?A/1RH.F%UAk@'^pnAd4C!&KI!P_bnsZq\Df40U8c7U09)"?$4`m(b]f>chB+5q$hr>36mG$TGU^Z5(h0uf@9C;0iR!L\/<.2:G\%dD8(TO)u%GgJPCJS8IVOn`&N[YHJMIZ&C=cpc7V7q_eVq>9@-SGC_"c("=Dc2,#r^T7il4<]aB,^qZP_#"OJ'2JNi_TDPaqsttWO#GtX?^ooe%5WG05"T`1!I!)V-g4YPPLUseu+`B]gRh5-\fs+6WGnWOD`Aqhm0sV*/0C?h-K`&'fgm\lG-A;:'pZCQ/eZ7Hthp(Z;3PmqWo2qBs%;i2KsI6HEZmF<`8CgYud.f#or*c??l8EkSE>C,Gj:/0'mroF;djVR6TXujsXngV:WS=Nsb[-g'&:1(cHU$nToj/V"EVn)ZV@rf0&%!e'b<C9b;DMO;iO.l+;(?XJ9Tj6>[Yio[;B`Q;2J=7_@%CNJE(j,JCXDti(4j#5c(NAkb8NP!flT!C<C5,*GbP2!M-IV7JG>W[0j%s2XC"mEGlB44k49ec4]@QIh_Wif$(VbN729n_*h'#H)C749t'E>T#7$@PL#Ime)B,rqc$AR$dj&'*KpM-!uXYg<Q.p=d5'7]mUfC%++2.VW.R82q(:iW^L<GWK:bI"rd\YX?eTFn?5i@gW"XsB2]KNV`c&3Rg\h&pB]HSTph_p<RuQ<;j0s<NI[`.$rLZL?`5W+kEC0W$%0t^?CDrZOtY>4\VdKgpUUA6b7f0f;:D=5bqBM@COo]Fp(l%coYO,kNe&"S4.f4V17lbqr^N!GbnqsXd6PC1?kqW,)q4(BKss!cX3%\U3V8$I?uQ;\)TIr[+E&TaT6E.a\c4G&H`=qU^q%O!hSiDm?pbF6Ypkpe75CM*%VA]U>Bsrj6s#dJ*[bKi=%f'5\<VO$]C?qu4&6%,6*iKU!$N@Xqs#6o[Vs^?<$Z$%b049%R#*HIR;o'#<e1[8;hp@5C\EEI+4\ZcZK*"iH+Xp@0$4KT(,p+o0/JU6eR`#'1I-K)mV3C%*jBAPq!S9-@JF<f8\A2R3,,RcO&c5PF,K;0l)3!oHXu/Nm8#p@B.g;LU\4;oc_:'gB-uppI\0!rgGh&K:5pX]eArT,`e.9FT>"66%Hn%mNod@%bC4,U4^N"!NV;9od2'2:BCn)CSd]%4B^IN1bK6:mE%'t(Wl1f_AWs=Tt>^n)]73=_mGf`LKqGeP;oAc>9fq0onf7u?,%_e[Q?HMZ\="2)-(]fH(BkHHn7;>[uSZ[:L)ZLlA=GG;72,^aTYrXE`8O8##Fs2_+aIbnE.<i7&%f8HE)`W+^G/rnOB4]e5$9N'gj%C\-iVnpGj?ad#*d<^3DgN/$`-hZ\%A\N^&+r!ZMLWcp17mOm5K?*l`'c.tf1a$$uI>i&^koW-Gf6rt1Q'W9?&[oYfLSe2i'5!S$?%]:e4+%Z(F.oPX(Cq3X\G8[qqO[e'%l=Q)d.E-9&3bTXU=S/t01g%t;cfGS5ccXW/'p@uN>2oI,:RX>(3f/YcBnOMUP?TYm_nTi'.%LZ]<-R!VW_gq+),h\^_[KCA%AHu$(BNPY?SkHlu=*p,RC#2dGYH\_m`-4B+DRXAo.;XsNU^9slIZ1p3mho=[1=F;'Gmp6deIpQHQ%]Y9i<:FQh+ge1Gigq1Us*f%<#bWQ\nmliP\R!atPjLZ5\pjn'[T'h"C:[F&^CR[PX)_XAgHMshIKVs<La6$:J?^o.!rf2bSJ&eJ4%BYMfNPoi%']@UR7$fcPU7Rju%!;jq]cK</ss(WlLQZ)'-V`4(Y]SE!KqW?VeqAt!crRh\0&Z5A[cI+RW\@MX(:=RbE$iZPuL`X,d%qgQcfJK$rqGP4DaGP?M;kQC!jpRKN=@;m;gc2Q4:-*464gg7[_+"pq?cgRXt/3WXih>R)C]_frjl'[;g2*HThQP\74o+/N@YW#rk%TDR\Jr9;Hh/g*,@7#AX-[YBJ'B"@cj@re76fUpB9?7r>(MWXpu4hn[#Cp)=gjHI`%?`17jUC[*>2KqrE2BD,APaTF1NW+BeX8s4A%1TKVaOrogppD_t!]2=\K.amM-,E,anX[q5qn2"VNhfkBAs$(l!\X6!l/<&F%i#TV#S3#%,R%2"F`dhnG1!)=#RP9*7q=-WFQ..fQ%@Er%4B4gj^"0F1I<N;uIl+a:\@XPsB`>AQ^Q[VGOl!JMr?ZYK3[(4]K"P(9\ddL^"r?G7U&"qPCD@?F_1B60`_JHMpp*XI<g>>[M%=>nC$-7pO-JPH1=CQ9rA`8jTCksWVMH6O]h"4E$&^L/8_mP=b7MWQ"KWbQsm=XVPf=&>g0Snu1(j#o"4q,_e>X#p?*=Q_WpS^rdN%Is'pmm*kn#qK$"(n@P_rlYQ0rlMRQYcG*-pqVPKqrs?-\5EQ_2h#RFD$_ap$3N[cIZhPVeKDE8p/9,:dhsQH"J*p$PruS6<4,`h?%G]dMfU%A#Bm^O:trmgijr*jg&k`^.Lj.$(P:O@S6rO_C&GoqRBHtLGcg?b.dHF)`0MP&b_7:Q1YC\@[X-K2^0I/L^[FRtPHILTGg%rI4K>0gbo-@kmu)Tsh_lnJEt4$OP8W#G1^<\9RoLpPAP:RsoQCiSRVKhcVd<Y&!sIaG*(ChXA`VGh@=ZeA'#sY?5f#O7BeD=o[N6%?%9OGqYTV,Du0Y&Gka@:ILp\GHNRsLp\TXoAafQ.UUYK*@I%hW:&].5/Bla$qu;Xu<r$s1rPE]3s'H@Nq-TCrJt*i`Fkp3p(RkpC%[n-E\lQ)"VNPb]/mBcsG1Of(+a<@GRn*\Eu)\;c#6j(T%bKXXK\PW(upc=1%bJ-\(s)4+%q,_[PfC_qB>Re`"V8Z!8"q(>DKtm8_%Q]!0jJW;/cYs7ElT9G!$JaIc;?r63bp7LrmEe\ap`caW,jaVZdSIMp_fW]=R-:j*&@pt+Nd0p1B@,N+>Q[AcTnQ:_mUNYGLmG#Rl%S*lp,9-&ET#!`(,:>)i;c``^a"FfaHC]k?1;)Dbn5tH5_9%rGdn<o*Q8Y!60_[Jn1PeCMC__E?-fVpPlPG!3=(.)ppRQlMaDc)r;%hims^64\q2e\c(Q5&@AC=R00/9=oN,&3FS7P7T49cOGZAH#'r*!d1Xe+ApI.V[\@CE.EGD$2A;K?GL&lf%U\D<a7f3*m$(%1O5Gn%Zudh1ab]%I<tA@7C&r?m[VI]4&KD]`h!Xjg]+:(4_c$GpKbIsg1hSo>pBKIJA+ShPbJDi&?gfm[p8e1es#FE?Dq6/;Wf<Y(fnY:\%Cc;*"9dQrR#N-_6O4m[iYW]JjS;g#NXtd`WblZ,b$b3DaY](o5$X`l*E7pk_Rn?n-qEQKj7s7/:,m#eA7st"a4#qg#g!icU,+Y,'%<(NqPK/mdGn1TF1s$b?8\:=Of7]M/(0J4Ec4rCAYf^BSP5`N93TR"K$ru6ZtJRjQbqEWt93fZBlWAo.F&e>5a!=oiQ^7Na=p)gB#%daPI1a93iM(%r0XKSEuR0RKQUc9;7RD8W.<2n$fh@elW"q>t2[2n)mAm!'5us4:Y+8E0d)n].#8&OD0,DD;bVs+A7W/F72*18dS!%a<Oq'UmLKsRgG/t&>0q.HeTW;pOJ@oD^Ij9lO^>Ph^?d'g!,t40dnuO^sn_*ep+\-iaDs3ZHY?;fWAm)e7)ru'rKf!pI`6j\eOcD%Pc6gom'!l:'.YUMUYTHrAPNG+i*?"AXs#8;/.iIj4VR?677$&[83DX%%sX%hdo&?R@.>'<2)bV?&O'Y8"7Dk`@65>bKonW*$L6no%1G8V\?JLK/3[co%'?e=)d9c\E!;tqG,LaJlQRmmgP8.I=Q6eht0uktS$%ti^Z8KZPNeb^n"]f2Mg]qn&0=Oa4Ut?dOrG<'8<PoLd%N\ad2d^#og8Krp0$WD%#-N0LNi9qiaJ0:Wu0^aW37`K"Fip?,2#%M2Y'-&,;9.=!S\8!]#>O6/_HRqjRr%$ue\Dh&t-j,-OD([d$%^NR08`1fjP#`Bj2q#ZK0YW,e"I@%:6-,0NQB"S+]/"bsbI`,=gFHhpHOl5_b1Umk`Ql7P%LKYZ9Zr5C_lDEj=0N'f*e-c.B`5<:n%OX832OX"^B`%cjoE=c6T=nUDFq*lW-D)'^=qQn<DN(7.9aNPTu<NTlE(%>bSCS2nQ9D/udre34BOu?a$mH++==g*JJ+6-Mg^Au(M%c*BpDa+#XQIgESbP'=D`L&O^<oD$)Tokq_J/9K2rcM_sm\O'&^AB^7V+"T3L`_-G,kaX^GZnbj'ct#ZW)LkS^AGYX#6brH^IWN/V%[HULhb23![O2cS982RP<[CbgO3.Hc*?^tq5Zi6T`=%#el7>#R]F*TiRTb.T(#%=_c>is2THa0%B"b5'8>=Xr7bKU8*mY"9j'-N3_%JDkRp""o0kLX`S2TU""m7\U<hS$1q'Wfn$6(Y`b%ltD[_?U7Hgoo9?>3!'l9/,%mg#u$.>DCRF7K-U&A@DMC8$7-_u?6V5niXCMQ%EMS#%*.<Vf>m$IRf0VHNis^@#p-HSGLhC[qWq&9Ji2O)&Sm;i=)?uplYquo0r#u8L4_]h=r];1hi$cqSmbVSNH]e6>mD\,+n;AmD%(,E7Q3.p35;*%<'XF3N+A"&,f8]PMoL8ILLF4n/cbA/+_hJW9B(HWTXES?\,CA[nhbO)L>i"'p@%Q(p".I6%2:?`Q%H0S`[s3Cs$%r*A"D?h+&tGlCc,l\Xf'6p.q+o@6MGc[;DR)#J<&?O<:cUHe$%\m"b#<[n&M'Z*(AOKtP]`O<&:"8hO?Le;H<U5S@!b0KU8;(rnH%AD?>QV.Hm4Kr)aB'<8Zp0esnY1[;0AdTFn)[ZH1MLR[su$UY:f/9nc_$N#KrRfDc9nTq86m;'93+'#\',p<r@#TUfFicL,I+#&:3%nK/1;.@t.l"EoO+[3@Lid>RPmhc2\_i7IsG[XC$\3IA#9b;t4KM.UF:,IA7j>)^Cj:t+g]Aq)_qDT><+2@#NQl[>)]7(i@-ft.2n%;uUZM%eml.pAnPZ`4flP1Van/8l42F4ANn+0tXM+re4B!Df<I6!;7-GO/%N3pb!T+WL/'`igZ"hfaObLTU14(5uVc+-Xm^LoW?8^%4C2t[7<'YL1=@4`,"fl8noo*4h85e4rmb,0UhR=daj>$tejM#]%dm>aJ&K#md.'("k8=Bc6hs5e6:bIsl@4g1gHP?i:<*C,:cLMU%>$Z-"+j`D%7PjCc.Bp^!1jjsHM)^4O"gGm`+B*NTZr^.9gn%;=;1W'3<>s6mV[*XG-OGsjClMBW&HkR:a1D@S!hci^,%:O'8Lp,.%"5Y0JU7l'*:FM`=7T:);K;P=r=rCH3;^E1!'OUt<6-C[2d52bY%+q/WXl26XBL^[c"0`%=!a%Ec*;ftZ0bH$h,:f%:;)&>/`o&*X%Q,/F\_\KVR_>6[6d0)::8KMa`%MoU>T8LX6\5X.ijeF'j=H&E\7<rM7&c;kc7YG\$/ci4M,4q&r@Yi"=1g)5;S3]sW;RWB1*-,Nt%*4H8)NbAV&/qFq[!.ihbLaE<B"\-LBN"Vu>29bR2"o-$1EINU=(dp\1%[Q7n1),^<AXjBo1Dl1*3.sa4E",@o"bK/u$T<l5(;g/P%L>j)5-=]o[$,]0I'NrF'!>a[V!s.r&4W4A1&',n0&/lPm8OW.q!n0GO7?S>u7E[I+TTqsm(_(P6^de`a848:?OMdm00SmOncV4gU%dAU$'JB7nBPn=5`aXkZ$jT?8H8I8>7E<0m7U6'na@kff0.`t/S**ii)*@)(p4d#lRC618_Gs'7=1,I2uD?al^7U'kg1n66MnfdRs%fV;k>/51q,l#;Ra_6[a4M38-_;1b[>3eB([Z-FFb]gN`;P!S(Q*+UV?dj5J@O;/a4MWG\<MGl&U!W/YY/!s^pV@j,u@77DBj.l]\%$I,,NLWSfdJd0GV(mp0n#U0bVM(m.p$ct`r\-4SpPXN;p'ioIA5_B%L#j6Fec7Wj`Lqtr6M=MHp2B]!;YmCV[)A!::N$g@qO%-[>%7i]_n63=+FoE8RG\4i^g+u@B)MJ#/.([sE'ZQB`m&0.,Q6XXSai)gCX;A6-5)N,ce!9u9U^MIlI`E,rV`c4<,i*[;*#c-G_.iMn+%JQ<#taU8]/m.bg66h'l/@k'QkJI2Dj"/?RC,O-:MJ:ik"\?r&HLI>)bE*gQt0pJ"0=Fi_p!bc^KAm6teR\Aai4U$3Ee70K#lPO(H%!I[6$;i"'IBTcZZ?ucN"*Q*uET\3\7]V47U&dT,()AabM`6O;aB3AF`$IFND#s\QX-%Qnl,@)Fj7UA*:;Ul$u"&t8Ac7o>J'4n9o%)P^-W'FdSG6a2*t8(JA'Ld[7q"=q`"TJ8E*`7/m.^a@=1_D+O"&HQR<IT^ZF6Qmc'"#Lu>lAgr;$*"&WJ1-D%LR5Os*ed2-E$<'A%/gLpW@ROu]*fHe!GFHDL`C_12HB`0d_5/;nj%+[=#TbNkO=X?"48(B9MkU>m0G>E<S(D!mYK])X,Lp-lI0n>b"Ekh1(JOpEO)ur[%(kFuR4Go69d2ZmQDGB)1El"#u/-E_O!Al"J])XaI>/1EF3<tWYN?Vk#d'4RW!r`g0)i#8<&^04"@Mi-41-h8T/8$^ti`-mN4@1:/%Ntpig$PNS^!%Pi9M*s)A;u)!(Y^7=Q`ONYe7Wa-uApWsE;=aE5q`"N]I$oB=VJ=FCij4()?P$lY49Y)_AY@3>ipb+hdFd;Yg0+Hp%%$&!.k0VghrUn<n*#neRjE!'4>(E[L&d7Z?Y9rT7Cu^_mci3em!VU88M/?CD`L_tfK/Lp"]ppiYX$Z&!BIk@ME[XZ28E'\(.upqk%&\'Tt*X!u&fD*.<>dua!\E!e#:WFnbl2\F3rZ>NG`5ba5-_]':rl<]4d!1@50b`Z&2B=(]UctNg><o2%BM/P$/21$[0TmN=ncK8a%5n!rlH:F!O5b]I/+c8VsLEA4)6,3c!=HVI7K`@io)?,?<MAId.]i.H_6\uD98j?]WPZ.&KY`p4h^]Y:&a@?;]H$1Ka3(;;lQl%@6%J4bX'WYLm9%&[9BWKL^J8sGPj.Gt7OBh8:HNb2!)5\ld[_=/[JIc(2^XS,$$"2dbGTK6aC6l_Y#%/LM]jh>e0plAW*(kpI&Pg/,>%YOH%$Pg/.j'Lf&4R+D`uGE2H\.6m;?+%*1B>h"Gj])a.5FY&@tX,b.0!andgbQ"2Y#a'6r6)'"H4Q!PJZi9)[?p&u*..ZGL"\Ttb%!-fT*Ji,-Qhi3:@0H-'*+=J&1IVHWU`0"nt$rT,5Y'oN"6hM4-FNe_j?NUF?LbIac?]IG7GSH.0jHi)-Ws$6O3JJ2E9t3/unNhTI%fiO]MaI1?c0/;&#kG^uQ8V,4g'FdNIQ;3,OhO#Wl9)sJGUW*&j!K;1M!Fc<eMhYhMLm@KRZ$g?s)O&EH)F5(GJlFHbeFK9<1/(kP%#/U4eo%Gif#nkuZ^F*n'`T;%t#HFlXhtCJi(&o9h<QV9p_0<.<;uKP%^(Jn2Yn`:K4bscef-s*%CWs.X&R@Q'Ha2i6d9gfEF:&M3%\jXm\rk:*99GBt%Oa[+r@V;rNkZ*1+&MmW$V_CKm*&Duci3/^'@'UW#J`7I-"r9^U]Y-du0V=uEongb>,USIBEEt_#o:Ng=9.LD-%PcB3\7SiqjRFP`p?bE,loS1!&FufT1P3fAVLP\_Imd!00#?]48Er=,VU2>5?mf2EGrWui@q=r9SXGq]a)f0,MiSRoV'215V^`<_6%cU)QQ?X,mZ3JkM(d\C/008a.6)3EOar\GG.iZdu.E=IEbXDg314[$r(<e";@d@\1"2?ZL(E>\%$R>on5,jYM[ok]<B+MDItQ<R`0%1r^WlS+YhU*IhQ[/+l!=JbhlWO$2t[%o`F%+p.f$c<9bM6;Ze*HJ[8;O\u=29P.eP`j.HED>e7:32Z4F3j3CMrAi^9dg&?62RT9E%fr<m)gUla<R3^G%'+n=E20Zm,3K@Y;J$F4X/>I\G/Ftm'l/h2=bpOrWrQCP<1&]a7Z)gAs`4!GVU__.S^$$b\s-lf%Z2d:[onV+3%->i]#kZ`,io"X>Db,+d7*mJ`5S]iJ]K5tOQQSAN%q,\)852Q!'rGDSeEQ!nXLNCE$Kim:o8`QJ02OEr:HT\A&\&II5YoNIM0Z:Rh%caA!qBFBl<=kAPZQI<eo(q,"/C(EQ@1&]dYj*cfgCKSkA$-;UFC:'F_fq1g/KONCQN>/P4B!pDD,hTcER0nSiea0j&G%kmf2dl!9%s%slV(UpU+8RhD<AA4O)NqsEH1@hdAGQ]%CH]^)C&UeYGJ%ZjRqs0Am-jk"Oc7>u_X5&$VcNttdaH5^&;]p&I"@>2$nV7_1.@N`*%=(KMrNR9G(+WBsgf4[5e`Sj:3'W8pH_+e(r;kt%$P;,rP1;CY+kV)r!DqY7j"?3VA>7UM9ep+TlD$575;:(m%[-bAO+CI]cbTUle%Q_f,A=:V7Ph:DS9?LCjK9dcDVTZ,QD:2&V3D#r)s%pa`2\/K;""MuA*fiqtUi_Cb.Pb<i"rh'QOPk!C@>JULe1"eO(G2!b!Q17BN%$"U"m$:Z]eJ]/uJ_/'f0RS>4TR@Itq@</l:,#.J:,(!u#hlXRKRV_kRac&<l8R1GWXfudQ1s'WHDtFj<]Dh!GhH[4.EdOF^`hUXn%/j[ga7(-f\.F4ZLZiD)gSp+]]pS4NO`U"[56a4RBPJu1g5p^jsj2V!O9D7Hhj7Nas:n,*OS5!#aD(pA;?\#R\0SbX60l)b]$ZO1D%3KY)_Q><j^6@XrL><iq=KRIqEYZ+Xil>\e734n#>+Z\lup=LUCA=Nu/)'Zo_1fl3rAhtL7p["kIi2LJHmIGn#4gbtNLDAN['eWmP%!^m'6T&Wk6NlEgLXou=@rFsUPLJoTB(*h(teJ?%?4Q`ViePllbppdh<bpGe+3+.ji=t01CpoFG87'NnTa+3#s"do7jrGF@cYN?t'%NNUpn42WrePJq52+#.H4C,(jVP]DE[-(A?_L5mP.'.sTq_fK8R0,V@!*HAa"f/@eL!T<K2]>Bh2^qslW38A^Ye:I(Ngj?:hh]iir%dRPGK+O,J=gW5$c>-[R0H[@^H=O'Bd__n8,Cj<E,.iW7W#R-@+iWd)a;:a_gm.<"BB>e+p`O%()neTK`L$eOKY.;PH?IDtC->tWm%]OC@H^[1Z?M)]1!;<:F#?P/0]W!V'\o`!po#.CRUXr9V/H[>qoqXp_s"LcTrZ0fjg^B4&Q(5V.Aes_i<cm_/oh4go[-O_ed?^e1,%Ihp&1R9C]5hl/.G^a/(Hn4]<#jf`XW#J;i/Z"_hs?tqu_)GU8Ib=Z9o7]hf?\E^99PJ@J4XeDX?3QYO4Z&Y!C)29=(W4EX>?/#`B%mmi'E;7u!K.P7j/'U4[[MY^PBj/i1\gCHD%>&1:(L@T$dc(l,RjLO%jlmu3NLJ[uO"dc@Zdlc?IP!$I/O+h=j"oae+lE^$?EI4\<%[bhp(Y(Rh*^c.bag6NYqQsQhR@&BA$KO:Jd0r>c_?4OifVjIe/_K?cj!V^4_,tV,(i1]_WPqW6JR8-cb?nP6'L-o1+iK9Yjj]YKa%B&ho7-!noun(^aRahJu:onD=!_0YqRE_otf/F?oJ6pae;'FK`?h./op'sXPh$&&ntl7^.5e_5i6(JE0AYtl.VX5U4FZ0&0^_-6KX%:g<!@'KG9T-$>fT/eMj@qU:RReecJ%I3D`9J8NOI`7Xs;YM%!I_?6-MmHdKM63fP+kU#<K.UTL@YX3A4_u\Up*sq5@R]J$Y(#-qf%ZIn=:@Z,ZX**jlm6^u7"Vej4d\t;/Z%d2gHEl9WT]5TiJIi&[r(4i+rfjDDZLR[Faci/^>*Erk)X7[*C#g3s\U(,nmR.-5;fsr(l%Y^tFGUZosXYCaOBcGCeA,2t^k&t+Okp_qajN;He(B/P:.Rk60%C,N:*S0aZoL3Q+q[,Gc-%O:]r4<&cdXgQq:\WBZf4:PT.j]]#'%))2Rn].KK]U/8uf)T&r_=UIZ0)`@Lj1t,DKU[_se\`g'rJXZFI^h&-85su/.9A$ISIl!I.kP^Zc;msqS_9?)bLU/j7mgFBUd"XcO%>ed,.>R'D6'R'J7B']+<$lfV!eq_?I5f4*T5Pa>u:tSsX("-XXE5&@(5N#;u.f<k_h&lK'>CFepiA%pi`u52V(K_Fcl"T6"5dW+*%Cl00)=?P&;eJ'\p<$7@j45HSt;elFC'9d$DaT4IM9i6"XcsJ:TBN;qN1lMH"8L/tC`e';Vcuq!^--]Ud"U2$_I,84+2tBgMBIo+r%6<hR1/[Uh(>"cr[kIB9*JXqU%&d(>s=DYmMfkUJj>SsaC$E.p:#_3?:(b^eA(s#AfnQq/5)i:\jCAHaeGc_ZOaHk4gq.W9BJTdRM%g8_5dm<7h+Jj)S5]#ZiPf:imm`^fh`)uZ@jH,Au>%-N*YpbJ"ebO*o+D1HSuWQ^;OfS3?(gfhU<'raT_0QGoLdMujP0V<ju)VG@F%g5G:=+(L9\2O3`h`eo>9QAIF]-*7bG;Dgc[EgHYcg"8.SSnP+gX-<4S\]Oqi3-?H+,Z*0/1[NH-4=ns)#3q+`[$pM6Egd@M[2CST%7OSFW[Zd,`D6']X2Z/\_#&TI/1=J!o?D;0DR2'*bP%_;Wlj!Bh88Z1#'DL-9\S)'R.HpUF9#&@?ZS*X-k_`8Gi[p,DbjZb_?E3o\%V7;5GC9/`9TUN"D&t.-&Wdn39m7?N!cIp.Og]S(PX.b*$JJr>5VN)RRG)$",!=+8/N>\)uf"8oJP!D:7qhkWML*D]NjS4Im=O4^.%k0dpXs,Z[b&CQcmCn-^0V%*d]9bu42Add2DDP7npD)&H9l>=..2NL=$;H#;;@*N/kLEa7IjaS%^eXJ$IK$[\=3\R8dDJl]>3J]S?%[31naQP3rKfudOS(;#\4_S6Eg.QMUBnopAJ1`A&q;g5kYmp.L]bMh'!3?O1XMC?o]b)G1WcBg<)'ni5E?cl:(R^CU%PkfOVgTScX%A\^S2=g"Y3A(+`X]tBbgT_i?E`2;.7Z*Q8^UG3<Y4A7JNKT/ofOX_@T@QD7r&nY+WD]qtN;rLhSNmV"kf$\^m]W@GsUq9%j]VumT%9a:Q5U]9M%D>Y<g^4l\NBVQ.llK3+F0f$fEpGe;Ci9hPjqAN#Z)SD&JbB471K_0C#ok+?j!#Y4TF;23`N<$'%a$^2o51aBH.kpGm%aFAG*<m.ud7DC;o7n86+&`7HF8C)K*euk^>L5W%G*I#5@o>..cR2J!6!lomms"GML:WEF>W4K?h3>".!P@,#5FiK6JVNM6lX#eDg%aP^jb#KCtL>8t("I,iLu1;AF''D&*'nYa?l#a9OJ^e8$&!/4K1N4+S["@`:J&0uIVlNI0NdsDq$"MXXIKKNnJD-Ql;mML]DA52YB%;(VNn-iB:6:/_KXjl9SY-Wq7%)u+tLm/dg""a-++3/#O[$d?h0P`Da`:$3h_/5d_?hVRrB,9\qnW+Bt]fhU0?M?=!rjR$F\ra,&6%VnE%TD<T15XT?:?.j6=uq#\^l%a].OIZ<`"i6/jn'5%782."ooCg'ef@@(^LW7UD7%K)X-9EG21ZIZoAa^pB\bCTW&gt>cE>d4CS%B+--q+N(?bE1cWCO,9s5TH/,$]Xe(nf=kNW&Atc$K!stAp0%DkQqS#;L2pUo<OLKh^YnTrM^$ku'#Cfc/HF\q_!%(+@eZ(GICGT\%HO.KS.6_!4<YEU%JfQ,)>DYd6Ttb&8aX:RQrs$-Qg8+s=EH<rMdEOS">9HQqLlF/9TtVN!DqIRCD>6YN_E4s3G+hrp7>kY8<VVZu%gpisYabQ,DU>HF28bYq-T3YO\?]!*_UL&*H]q3*:+5WO:GL[>n9P!TAkpn6IBY8SmZKp>..@5jkQj]f?-\cJqho3naG+QBl$i@9P%i+eJ3>S7X<.soZ_XSG?YD>pkfgW1_@EP!nrV2*$/f^l*-W\Jf&r@u9s/&=>J[`.^e4S9Bqk2sk,-<Fu$^B/-'\LSJqo8!8<bk#4`%'gJr!5SMd1'E;J.DkCBWSO3*X^JejY`+q7k/\bm2S+&O:%(^UnDe8QLF!5(ZhZ4*$5@,G!r%'qq-9h!-gVOcuKZha4mOf">`_SL\%nN=$p^lUL/\'MN0puME'ej_Me4r!lXca?-c"ZqHVJ$cPminrV.YV_<qH4+(Zmin0@OmYL63qsc;(-Hg&_Kb6>hq+E+(W0[2$9q5d%V2rV4gG=jYqTO8+rgoLieOTG'/)pr<"#%8kU[A&3j7d+<l<g@37:4ibAoim(B-'TL>st(U95;<tOj+-!>7YLo@%+k7Lr3\MEt?X;%GfIr0M2`.36DP.UMdN<nU#7mpA"%I^#*03p[STUX+%j@oF9C`)H`!?JVQbFU,k"7L$"Dh?7:=RP(RS$fp,aEhT'6LVFoh,tc;/k1%Lg->BUBZIf3j4F'IaVMF"J42K(E,J^6VpSmRgU1*eL:&MO=hok:W\C?-/6'D/A8C*Le"0DQ>RKHUsl._;9XEb3&hGJjMg?[q@-;"%(bgJaPE0atJ4B@G0S!5E!4Xu<JrRbaqCV!R(OHG<5\O[VqMG1mjuUKM5k-(>q,?SQ4m.*:E-IeQ(45:NkA.TP2:%%Z\ILn,lK=Pd%7jiOooMk+iB6F?6fMsG+VJfBF=DSaZ=*]B\/rLh=dKneFJF348C$3G;9-FSojsp&n^jVg>f#ub>qWj/6>WlU/KjrHORKg_%#6Xd5%r(W#?q8B+SkOHJ'(4rj&/cr#C[p5H^H)r&]J3Ocb_SSmnK4XbNZTZKSlJ%jJPmU,UnBM]]]6;!I3^A`(KI8c+Sp%72\En@AI"a5b%oi)i;8Uk`m?3d`T1NaiLKLLZHN(,,FX5dm$,t%-4aJkNb@dTZLZb4Ts1tMYo?fl7_nlOqi7m2UcQ\//G0Ub3MiMf+q8q'7-*^nZQ%[ZPmY=$+]l@LP.2(rc9I=IHb?TW?fmPV=BVOa(!.8#pGb"J:;#b3EdSNs@;9CB[0[C7F<T@Bu<J:g/UFRtT*jX,=6p(an*[^r\/M%>[CK_<;ifAGP_+:j;82p\f1Rj[PsZ<g@+]DA<QML=TBP8.\5m1/O-T9SQ`d5MVWGmY%.M_]a3h(Q%I1pU?n`j>sS!e]JQ/X\G6UG%K?X1n@!4b])F-E^4Ls$Zjd3Efm8nl6o2&-Hb9,#85.27cQUHMuc[4=Tj1Zs!IQFu4Abb*#O.>B-V?:#`EmNqD6IPoiG;0:Q'ce]o%En#ljV_UskH.rjoBOt<RG(qGr`S1X5f\Q-a3^o7rBs&K#/ddfam0HJ3!Ln1gQ^?6!3E_79cr2oj:]H#`hRUe?o!:@mL9u7Bq3-YH%-@RFk5DV#<l;\36]\V[?\)Y+hps.b(Gbrd._G=mM`:4O"*[ELccs+Qs^SPd"q)`CcoGd^sLI/7r?:8/bG([;Y:K-IoTn<FE/^K$k%,su5j)Ci1OhUAJ-Rj<PYL<\Zf7A6bECih8G@=*S(a['Hk_5DuG/l33@RO/pc)?Z?7J<OJu!iO.8(_-m^VZVF\5et<E&-sS>i/k?-%7:/'66&9A<1=80"n0seq7RSQW(_2SFio9Rh<^8qiiD\qd.@H)b]X/hr/JCH:#+J7O#kf9p/.je/#/ZQD*@WfqnLFYeoNW!K?usG(%RFYP^L*U2_N'7QS@QP=>Z>3-T@9?VIY]3$tQ+0eXCR1NL0!\CA9G-IWkX^POL5g,YOK.5<RnH"T8hj$@-ODehN-mGcnQkcdd4%R%%OmaPG7Rkq8\8"lNLl%W+X'>oTC^S%3?)6glap=%6XAr4m`aH;_&BY%H+W^g>Be9@AVC&P0I`i97KZ.%kkQ$UI7E9B)%Jn#;?^N90%hhOFH!<4B+]bf!HEikDK941e,XqV3ff=AY$Pd<>5[CIci8e9i*lD5f8amR`F/GHRnJ+`qZ3Wc/TDO":7TlZ&N+gDB=?BVZ9=NSoE%@*KL\JccY;%$(LGjYBVYJEc6Df(Go-Ml0$)7o%Cra:FA.."E9?Rk(qK@n\<cr1Jq6R3,&T9>3@1[2//A>^K\EQNE/&=8m;BcGj-?%hPk2a7-BKqT_@1:ak[[%9k_F`f%"#[(uTs3.ni-*M6Xm%%.@@[k,$oaf%9nF/HE=posL*tI(0?'1,lL#f<hio)6Z'LY<h?&g3s>9%^-gQ*G;/_1TQS*J%M0JpgqA_$M]]EtG%B$K#%hr@Vnh$@,]WNoljW-i68k1[)%p"!S/U^%GB5_)iqGgD0_qRj(E[_M-a7Of35A,^%SRG]s,og/\[#[1&[QSsP6%P<F!W+6i(:7G)#Gd9M+^]uki0I'O"%2Iq;tp\^(*\ra.`'M)N[L5J1'Pib>S\>g+NL97BN>`A6)ULl%"qMX=RcbHaA0?1nKfdP^F--KleJ[j-7/L>/rC[>5T8kQ4?p^VRq7W,T(FtQj#B7^V"@c@h.j`hPL[R[jUp+X9`-;*->Ptu=<.LJk%(CAut`,[!k<1seXZ\%Kpl(721'iTR.ofL?n`U9:9`TJt9qT7Z@j>k3g)tj,G1CN@935=Sqr8"+uGC//[0,K$]rdhT3QYqbMmKQCe%EB.-X5-cs+5WhaA>maplN^P!ql1Oh:obn#K$t&.p<rl^_2a9^%9u'<C>CK2?*9%&D&:c&ro,.ata>Lp0P8NZe*hPpZVs]t\Pcgja%]*dF"1AC_h^4QoZ]srGP"7G396Oru?f<1(H!F8T=,(&L/,8q[3UqAcu%%#`SH3!#.k%h:j7#p.+TaH*klN7]h9rYV=#MG"s:KS5T%,GMNNMiV0844h%/5Cs@X1T^M;-,F8p+[J.>!uNptHraR&kcG\,B\D@T<sm.qpQEs\U+u[W"J'TM#Lp8#b.Wsh5jnRR/%P"^c7[8Y%kS"P!5JI!E&1r/&'!MfOpZ<F.08*+dQS`"*'uR.N.%@aGSdHsI6_BV["YMV;(11bJZ^_^Sh2<hF:X;#k21Bn-ptTh@Wt\L&"FWg0%TpdA"o:%S`@PYj]R`aOSa<uN'ets/NdiT3^-*B>>Pj!2O:Fqu[pmGB7<!T&K7(4]N`CastGE38N/u5b9_+2(o?qYT#f+RZV5CGTr%oR".tN`S.KA5:Ls#3CNQ&]Mr=eX>&QF$FG^J>15WQ[7<D[J8,uIb7o%i::WLMe7%VV."H-;j^3_AFe2,"TgQ1`bZjNpUO$D$e[3T%;@btUc)sG(?*;k<]I"tDYn'+i#="l>`4TO/;(;WJ9Z%ALPaB"&n)>jlm$('@bQ3hj*SI(/E%F2'[+aVNK@OTOYMKMphZ/La4k;Xn%$'i3I\52W#+#I_c#XZnAE6-Y)r+qCAJFt[GU=4sga6^bpNiT(t[=`Q%/Xb8Yd]_C22+``rK-,6"Vbdt`5C(D*0g3d(ML@TOM`G8a%&cA&-'0!BV6njIN;6;%L5EQk-T)mCTYB$a?p.)eSS=@A@Fg]=<b-!q!Tt?T,Fl>M/=GJ`2?^Tnbpfsm0>Ko;'5\sGRIrdZ$o"].d%hKl%2YJ-71S.WsW0aniO-%0cYT)0pb3aX<_YmM:t3Ag8aTTI\/JUNKDE7$frIHRaS>i!NM+S)n&>Me_f@NG2g]A.J=gL,J]QdXX_%G)0UhC4''jV*Wu,[CHoO!V/8&l*qb>`KI2,?lN@8MH^i*<XA;(?Z[&SeQFNc?@ds#X`]17.gA(4+_JfU2EoBN3]SPDqM\AAq)OgQ%*n+s-'gWqQ9"rXrfFc=`i.Z=A1Xg.q]m9[iEjid=)Bd&qWFoG];ibR8e^OugYr#D)b`b?_L0n=Ae(QZu5>"QthpL+'e:r)_lNG[r%P"spZ4N0`##s@@[0)H]ZgYCm85*C#V]"B(!8+Ut%\n;%5jonZ^B)3t!?WIFchnPlu:).q*=FhF$?@E\Tiq6Goi1IO=NV@S$S=;+U%:cMFZ?3'ZW<aOds&:#^2?7$nuWCG[O6fes[i@QEtXYZQA%pgCS3tXMRcDC->CDAGPqD4I1rlgfpJ=G.+Pbm?uAaQQ!UnsT4P/1Gq%Z(/eA4[AVXT^;.QET"^j_0=lAi#M;.Y[Jk*!DE:&51[8T3m8PXGEm<mGMbA*>a2q0GqT*hEpYCoRof!_CIJ9_nhC'eP5-Itj@.?&%!hVj_$glp7R's>_"92B-a\^WffaDWWY/"H8$YWK`eNDuajsY0IY2nCI?D/LXQ,pg#_'_VO^pp(.h-Sfp4Q62$BS+#_oau;606>=?%)o'mD1?)9?m!4Z<E8_2@pLgi@!,4k9qsDO!`Dq2CJb:eS8K)Ldj]=_Glo?giclOL?PNhF60mrSXPcWRq*F+p/^*!m/+NajmM<kXf%2I;@&_g?8/Niq82B.=?VA;KeFn4[r^<GP:.[TB5bZM1X;QP(1<e_:lfHn`aO#HJBd>9rF=ci!\lp+<P6ZIRJ9c]t5R6+oCBaZacc%Hdg3HGB\^DTg[MOg3g1,C+DLR,Fm0CpFB<MhZC;Z,[17Y=/1LKS(tYN&W8:e_pVpq%@OTh\0#$MrV,#KINEH$'K!SE,h>KJ\dKoL%OmLgQJ4]N22,gGM5'ha8<W<R`\SKg07RlD/HgU'`h7M2s:[R_gdfH&K`$\&Lk2$r:T]+<Ms8Cct(2K]"D6`O%QJj`8NSQP9c2)Kl%)O7c!RY1(>^&urrg3@IJ=g4D6]694m\dRY<rB6esLN?]MNpF;/<dUtp(&Ykl"W/Z*:?)+eYUdK'&TbJ%87==Q8\1-aj1IeX6U#/Q%i52A;5WNr"`=M^c8T-8kWH)nmNlZO7]ELM#2)]n1nJ5fUrLe\(/u3DO!eZ$gk9uC()93gO,IpofZ\<)q^n@b$]@i1IHWIe\^]"qf%agX'g@*%J[Vgs[(=97s^&totk)n4A,iOa*f>ZIidhY&g+c?dJNq.:V+(kn5/]OT:kW];$pMLkbYQ-*%,o26KKEY$.8W-b8#?@q+p%AX9!c=ZOH`UkEDiF.k2,_Uil"VjqO7=,F!&DCH)*de"%kD\\%]rj:m]7#"Bu/<*:u+177CSjZ<,JE,BqW13Xo==AP$@j)R4[LgHI%:JBrb)CZJH3OCA`$S2c`W*!BeY(6N<q!umlA;E$<'G*K[J8=U7,;F1jQ%g:*gTu:W=,m8@2G+ZJ-.7s'hJmR<k&>O2CFpLoFSa$:%Q+G0Na*CId;$t&"J\OtoF"oY4O9Kapb623(rSt't#MjA-E*KnWH0hZiOc1",7gJVeEO[u:$4-,tfh&AcWu5=AA:TKMr5k]Wn^14n%f"6Y%.7rDS7hNP9GJUQmpB&,*[M:@E*?UYj#&N<7:>c)!jH)t^],F@0!F'4Gel^W(oXQB!/7/K-FJKehk!XV]#,B),atC>Qb?[=-%@NtJR$@o$2gmu-tDQ74p:'U##j^.F?TpU`<Vc-bKe@$@BHf=Rsm")e*1"hWl!%YXD>Q/F_0Y?ABpc<\B8p@=)!Ka8Sn#s\*bM;;c%@/jPu4V_&/3Z$Qqi#k1QLPthU1Fhd;[QQ8Q#Jh"r,'Y4cgop<*2^Eb]g1s8_V#-G!?G(u8\P@_?!O$PI4R>V;T3LHtAT;Z?'[iJ_%aBlO9jdAQ>K,7lZ?O>ZZ[qFA"%h-O;jp:J6,RGeK1IXrJGGVPWduhKWGPn&0l]Y,U'7,$M8rc_3o!K>-cf:W.CG=<h4>87G(FG/T%&)`e)J+us\c9hu8hP6*_*sY!Gr!\tiGCp6]S@W\1s.tE9/pSpO&KPPEMCk4*U^0]O8kcV+:fhpJ#a^Cj0C=GGIdCX;n5L8(R13^.%8q55^^'ga3mgS\o#8&L"\-`4U\g?;_JkFlH8E%Cen-M7f+>]R**gltmC":m/o`7o3e&#$-OD<0M%WA<7Es1shY&#^\i:\])jM\Fl%#fT,h_`(;=@?K'7&+p0Hl+<cM`9%DcVDnbSI8?(&(`<FMDuPDF@*gfmp_9e&`eF(Hh-X,npYUW$qpfNn+9IpVJ^QpEX;e/$Sh>(a%3`@GN1/p1Ofd8Z9mJ7g'^,HEdV`3sUdF9l-GmrhjX:$,8(J!oUX`F`k$gO4RG[n'd':V1UbEKF'#ZQ9$%dsZ24$r>Y4e*8L#_%2G%^`n*#i7,EfWDUJIr058#\X+;)7QOj=s&Mg,j*:52#uCE!M!-%"'TR!='dD\>^4EJQ))cM"(8W7ff\EZ;B!Fu[6FGL<-"(3t=-q.f%HG/5oHm)6)oE#?,IP(?$@BpL""k"-@>9j@:PZkNL$b]<meuucj[SEa"pZRZf"bXP[DV7eBkbk:aVcDnr&:)^l2!K8A3:@rYMG?Gj%Cq$l&:HD?tY%r.u\/8+8SPGqerppP@V;3TnfYu"#+09"t\Xo'VoJtCk?#+S?PrfLFSPEmsX4be['V3*I\8L3/MY$(-]@0A#l_t?1%>tst*I.q?Xe#(0\TIG/kSW1u7X3AAB*0fM`I9aN"okW3Z:JKC/1R5O$"@/m7;VC=#>I(?oPZu8.gZ\"dCoc0%J,SMQh<T/d*mtE,%9knj_ah<iqQekuJeFNETWSM:Zbe*C!m^6)nleOYjnp*%;Y@=CfQXhNk03ZN/MH"`tm%,']:8u9HXF-FPC<lIQ49mL9Mn1OtC<[JD%0.1nu:>Ju1j,.0@A#s_:HkJM0C"EE<Y9,IM1ihIXSMD]aV]/F.7rk.aL:iC=UHd4NMs[nD1+g[1I=b_WW5V?\X^<s;lL]k*nek'#%;lh_R)!c>`].1K'`(m#</FE-?]:%K^[6)(o4C*]ZbI(r[m44@ImF:95<2`G^B<KPpeu?'*3h>]Im7-3*dHpKHgJ5[^!F=dBG/i-r%0>1+rf_q9eXkd\9m^`'QXts7P!kLLImbPHqIE6[eS9g`$Ybtmo9tSm?gA'DWoQsH52OAHeYCj/3h+jl)RA[4:kt;5-Hco8iS_@><%Z^\b`aq)G&-A(-sY#i*]Zc>"S7(^pD_m*O7Ro@sR!/4tE;X&qW#0p]"+m:cQUQeA4Hu[JT3fX"OSc88Kq&4A_[(WpuG%u)L\b_bG%`,](6h$-lM??[TrS&nY<FIM#6B3MlQ@9f_b9L'a,?.aF`AK%%rGhj_3EWL0<PtH73fP+G>$=+.ffZQC/:<P_q:/+/D%rA-]r%]O@%$=kpYp8h3]YQBF#gbg!*F)&=+&;BK_G)E82H;D8&GDf$Wkd9bSU3F:'"]2*n^JpYC`H)7rYC5n$=8e@'ej?rDJHNKR.A"[-J%FlN%lb8@DP+s0"[&pV;)VOC3s7BVHhP%;mFaCXFZ,Z!UW;lM41&EeP8tC`+N2`H,m&&\:Dn#2qEJ(/rV7bfe'Ot7C[Cjn8HbBk$]Mbdm%Wl=!=o><e@;6h(Tf_oGkVu%H\3,bB-4JcDt##D:,71j%pk>0LgJH"<,;t#_Fdl/r1<BQOTm-XC]XSXnPn*.4Y;sHQr2o$9%$@gjq%^R^EaPlB.t1qD+cHLm?10Ygf-]it,OhfcL3Kdcu.[oP[U^Ih;tVh9s9@h&PjcK3AR$4dQ&R?ldO]$]"!b*Q?6l#a>k6r1R_k<?T2%1SPkI<`>RK'JJMlonT8_>]1E7JT`CVEk$>O;l'd_9M_A;I4:5=s+Xh_+IjJ^&)%nhU]s"J`3U)<kF%XQ*a>6KSl@Mag0W.TO^KC#%,X'507A:On3KKoMNEjF<*oM?fG>O.3jn4a8F:+rW]*/g1J]e2!Zr?&Mk]BEYTqCqVe*5m#l;Y.2A90maY=SUeTqA+7.J.[Fq+`Fr%e1($Q:q'#O:HDRWI4ds-1J12!*P(!$$$r<<06Bh/3fSSSl[L88@pHJEJm\144Y-9E\t(&2?dU=nP.8%hli17ge&S%GVj2=,^JehE%9C+B2Z':nUdF[]kAUrY'bBl[U^q()hKf4XTWorkc;"taabU%`g@]:AN^gt*]f+NH)-ZTtF,#_.!(,0brM,>GWM+^t&K<QSTA^^*@%[m50n=:HI/<6!/1_,=,#V\&D8"D8ar,kCjKrmm7dquEir?Qd,=>dL1*T8G=?:dR;q6kee`XpMhR@IRdik<!'G@'0T?1iSF3h(-3:%4"H:S!O7F1UFqo.-b])23h40Ji/!=")M;I1J(Q*R^`\RbJKa2$?fRjgrc&:tnS?,?^^QfmGlQPt'bEo,&XY2]\3Ig1V)T`V1!N"L%2d1hHL?-:*GBa\uH'ZHTjP`@Wnr+B^.[qS%rTSNaU0k#[5P"a3ZCs?ERnGM26OH/Xs3(QC+FcRGI2\ngPV\!4X!+c"dgmCIO7,*T%_BQ:EJ8M.o`d"sq=mg760CdKVVR"gr'%`C&(Ns@qKFc#6)XkAILj)n:*/s]S6MT5cA?]dO/1>lkU8RXHp<,m#8L\t=fkZEc'^=/C%`a`s>6_H,D\`ani_f"$R;rb"`IHd2Z/!]/Zm6!YB?NgVgH$+*#<[(joq+GS0Xi$E?4AKC$TsFj!`bR:c\P2#Vapchh4u_IE4WLX.%%[5+of4'n#?b(9"eCP8,V3bY)rs:,#9F87N;@+SPTkp:3iLcDgRBR5"lqn`)>%<=1`^ibc^"f>R>t)\sbQ`3sJ`WN`FfW<BTEMFX%@cM_5X:gWd?$S*;1Z5hFYnMCiS!K1n1D*$)3%9YA.5[>Zs/^FA92:sL+K12EW$DqVioIC3$Hdp2Z17N?U)MX6o]bT<rn/$[43>Rq%16>C<@G3!c4?h=oP`_bNAqaA'4eiAPc[V;7]d1!p1:J,INMj%`Z!+G9VCreag[7>m8]giE,cM68jd.H'r?70HoQ=_G(lniaY(B>.%SKZgr"J-&hlC1\ufVGi=5=$Vlj"=gKmQnVbO91ZrL=mN5M8:EgZFS217?3rb[/)aif]b)ET+YYP.5=:51J+C.-#o<Fg2[(m@O"[`%FJ*b-NX"uG^,n*9*"mm)>E3PV%Pp*l0sJ'ro!9gtn],V12KQU1UQ"nV2(4m]DI!V)8?>"UfPt,=4p9Y3UC&Q_a8Okc`@un@@0l#D%;t@2N?S%;\Jr?NDLj\rV)iBf$%iC,F[QFgC-Ch+*$uIV)YA>^-.]S@mfDG@(!KA?L+h&iZ/Zo,458PT?IGK9gpZXprW:=.\Y-ji1%UEr+r)!#i2F(RN[S)lpV,60";neTpd->M5>!-m=Gh>@$FqXYpfpRNfB.(>TSC@c#2Od5GF%83:Pp!qEdhJ!`?p>Pi3.O9Y.$`E7a%kkO4Hm;M_+/#)7+5-h,^ObHVcp;Q`8EM"kA#;UOPUL8'34MKP&>ioA%H$!b,QUfAD,:#a`"S+\64Z=@?8OumV/*fe8?98^++XB.Q%bO'LO`qpOh,[bAOGH^K?lQn!8U/]>5LH!"0fHHRoNIf'9P$4.u'`T>!h.T74#HffK-s[j1mN*8?!GM:"Gb5CSI7dA0'<cu>0o4FP%=0ed+#,G%'9FL;We>Dm';Jo*B,2["OQmOV5!Tu2I"*B+S0o1!UZ\1?o-#PkL.t[B3p/6QOC5M!HAT]HRJVU>ubahC943DbmX@K$=%<I2u)6C\4[2'JgE4$WckDB2:&8aN\a&OTb6!&ggVe$3I;<Jo'q%k2?u=\K-><lsqlDV<pkq9GAnplu8@E8]CIM#ne5V()3c]:r?8%+<dtB"U%GlXXLeKe*qn';VNF-Ejq%:.*Q8.E@`//c!9A`XML#\P'`7Eb8rd;"'I$-Dc5jFmg054^A[_r&0"[NPOB(NV*sEREOa9Z%Kf^M7M\H(.2Wc![+Z'H3'DGjmf[*mZ5[]%N25mq'VmknhBeM$2;JLXbjB>5p]L1eSQ>#3c_^([#63;GmJ6b9kgeaeGaSc"M,oQd7%fNF;L2@DT;&6RD$[&)9c42J?UUmdlCgPbeLS:`)Ugjalo:*@q,PS<Ds+ujV"-JNjW'mFX/]<Z3'TVmJ2$pA:WetKO3_XCOs6h(?0%#(?7F1`NYi^HAZX*GGnI)'gT,bKN:hgnL/>_">*/FbQpjhCA_@fkJqP1SpES-Qe+(gd&DO,rOpPi?aE`*:'K8/ej?B8&I')W$OOo%k&BCNmX'VR'tXbXfVr?1BRWJg.c_HAoiV*_>GV$sjEQ`h!!GmF=Fj%c+kMXd2DiXUYaS;&H57(Ei2F-dV!3N70&0*X!NI.UdSa$D%=Sn\D,1hMRC,#uaa1g/W,$97sE;%Y5L:Zlj,bAgT)[a/1UnJ1.W0`^D,6@V8Ws_dP9ThML@K'OLW2o3B98Z?h37Zo7.tCA"`YPC^%9,D.NI9BrK/!_df2:[YZlfVFj@*FM=/+X!g=)r4rM9h0):E_6AQ.\u\VUHuKAAG!"@#^SZQVoOI2JOUVYVB0O)Y%?D`Dd-']%3'b%k*hUN5M4%9]l[+cJ[lgtQu*4])=H>5>T3%:hX1gUL0li6'-S60/B*fqFp@#lN,Xs;&hk=>"6L9\>Pd?:YZW$3`>,)g>\rhA94/,u%L^'XA=n#T'<Qd*=cQ>jNWI3UK7^i+^C&O@_kuQ0a>c4Qpis)5V5prWK3i[q[\:T`&;s!3]3mF'"'m/0[K)=0H)->1)eUg<Ccl#p3%8Na_^C?P_R'm)dMi/om=3h::+FLp"SHe-O]=4$L5aiDuZ)7K\b4%TmPE<R@%Kfd#'cFAI$D8DYd,jUf1V,k0&Y>,S?IO3?NW3ZGb%<0:K@W.M9Yn!"-'rHbH&_FHdLZW7h*eIE'kMY%[Lg4!tgEI3)+K=5csR8l@$j]+50>#@T+>:Tnn0.c$Q[`<"\bTm_Bo))lK`g(V2%kP(]R-7[sjbC_QEmaE5?<op)JjN:k$H6mX<8hLcqfqPPs^!r8m17FWK-3[BGVh4,XI#fGkraB<-WBHhUa\jp_RK_0rAtdlEk`,TT%GG`LhMVX6"D+$&!XOte5ju;+8i2%_bN"nk$Jf=bW.D8u#hRE_sne<Xi3_IpUC\d#raQ0Y4FNN>&e]mLGQ]6nsXd>CbL`]2od]pML%5aL852R:B16YAl>6g@/V-CMm7"i!rF@a?&F0WV@*OAiUq9L9OuBptICA\F+"O`PY1`JICpAm539Q`erWT]EYDqiqr>,Oj0l;g2%^%l)`9.)SsqIJ[ZP%XXGE]HM"OCa(JEdA%EMqluWMl56p02Q)3./d&9Xk#FIt]rS\Sl"B^`&R))hEhNO0q[(S2k#lJSh5K_]JI.p>a%KTu1t2-Y6nhO2pfnZ8l0[kt4R;h33pTKGe6U[k\C`R,b@m`p$+cE0,^nl'1$gg.>UltMqu<HX>]rZFmq7UbO46q=AEb3_iqoZ"+1%>].u'ZNVn"1ZNnu:bec,%Ke(R^?eR/jJ7.+]'(iR>i:9oO$$iH40`BfC@$+mf?C7(H'Ff"jP$3a*?A2fT%.OU+=EL:\eS'gI;Q^%%4ncI0.>q@]Ci4"AA$nJ;48NN3!KT?qkYOAV[p%`2`=fCX.JMOT,,6'>E;g\*BA4p\@k]/C1E1*a"$GrcOjVKMYO*9kOUXm-FpE:6%T17o3hth%21?<`?m-Npe[<^SC6q0;L7B\fY^N:P<Ol?4d0KIp0FOc[p6q3JXD-D[k+*b#;Sl5M$&K+]*VN/`2<2>u7kNs:P;8r>S%@\OVL@pY[((E(M/-!O"!b9WN\AK>OJcK1.7I-PMd/&j?Kk+#HgK>%e9\URFGB18mSTgh4;:^9\=CR3FbV$uaI"Em)G,]4Wi`lVY9%Q]GjX!ir@*c0FR(8X`XiW5?-W4nA:<.-+21CV<>Kdi^'W%V(cNH/$aq<R7^(?G#U<'HQO/0/;^5ol)6trY*i"m<AQ^U%NBI/EldV%W^g%]E!L!RmTC'uS(Dl4HFQmQ$_#\bfei<6:0eAXq"q@S\5V"sal5!@7GOm.i=&Kg3*AD79p*k:QtgnK4e0q:e(N;$W(nm-ZsN)u%Q38a%;s-P`fp5ZZ,4@)E7%3]GrUT1CH74FJ(,I+.iJ>NX*5'24_E#%+$d8dj3FZJu*0%*'W6BfOcZk2`Fnu+nm;`:(I\i2:+'328%"M^A2Tn3S.UHJd_XG2/:10AqB1EeD'%qie,$cgC<jd7Y>hXAF<3n?:/p[N&*FEgX*VVgu%?j+LO)k)&U/=]WQ63]k*4SYus"NN&'%UH2+B2pE6Be),=+ob*Le20q*>"GS4/%:]QR`M)F3AiTl8n2($cKtT!7nM<g,Ut."nnMBHDf*,Q/I"$H3lGJH.;BJY3Ons$kMU[Cp%<MVf\56b:3dSf6#("C8hb7YTa9eu:4<+iYZ9#?>@f/mIGAo/2`<XP`Ja8UZg3(`e,<^tDl9&W`kq+F?=%Z=QZ>7,#nY<8s%NfT5-%`Gg;u.@_T^?s[Pn:aqo(I*>LB>sWUhYgJ<sjr1cA541g`\NMk'SEN3q"A0_!er(q[a9mUNC\!)dO0E%"@E[V$?/`V"UVdOjP8K,?%l+F8":e0WP]iZ\#<n,Z&>S3._W.oU0q%qm+Vn&<X)R)/TIl]oSgE+!4^#TI\a>ZVf*\Y@1cjT?lUWpba)\2jX*J%Y/mKaS4"o&=/%WYn#;#jPG!RJS6[!*aA\Qh99"TgFUJMj$1H&om<MZfIP/W7W[AP-,U(Vh$,`Gq7WtP?26SmoHc-]jeGuULL]NisNDZlaGALft3@9%H>fb6l,]e=/)QX]i=s7KcEFK$'U9tPl(@RX0N2PfgS7&g*C+R9^VUI2a0BEN:2/m:CJMP,<LoOWfPN&8:+O0THehHUD6RCDp[Nrs%Y/Y7%F?<cHma;U$:*&$>:e)FT#MkF#quG(kNY&qAdqEWqh:lh]ctWe:=D:F^q=@YPhO$WgIW=\6;k:/RkU!,\7/86jGL"4KA.#`W%e%[3N6HZFcK(X/*OmN`D(Tf#D)=$N3oYAW?4heferN_mH_XEEI%n^^B+'.KY\FQFSa_;2UEMgkbDN_=GKe&VT:g:#U]TCqHAL4P+%asD)^6dge-*I`j8dJT7'^+&MM3HT_IG7@YE]&h.6<l,i*J(u+CEa`u/K4_]q?8\:X;C/_mqN9W%X6K>=_]2QKV\b%KD)IlLo3mZ_%VULD/b4t'DeT=uLrumYgqeot[AD/,.9rCuaV`K=ok\<.1:mSG\/Q^CATTKb`VUO@J4_ZdE(*<q`rlM2)ZtehVjS%qC9rA_AB2:WL%AMp"_FXsO54(U:?Q>n.@Vf\qR3iuRHXjcEnX/;'ka_>-3*E,\1AXobE]gl/QC!f_=%<[8;3[lJ`4,"3KVUGU#c;Zf<24ZU`*Eu5c%"i[B2SH<;uL7p?A%]ZDTg.'K#\QH^Oqc;0[e^E,EmpOq[RSF$Zfu7g2;chEO1j2M;QI:VikmY8WP?$'Lm#7I=Ra,$MS>r#Q$Q6$'%I`cCd_b.(q<RYYbOdc%77?;TlM:]up/38=@rF5XDh5#OYf>=58GNmp'((9A#R9b\tT<<<VgjO>9+h>hV0F-H9Veo^A`04h`4Gd/Q%1EjMKk(\T/-1GL)^/q'q8VUbY'R3>jQSZ>?e_6)bohFc:Xl;pER5H:L&Y9ojbMFFa-'p=SWNFSnJji[OC"B/D3MaX<0"O.@RQKr-%.uPbMU"A(6h_&PUIs@#imPHH)//?V#F!eClI^8mG]7VKL?ZTk+bD];_b47E6`XtZ-U,t0LQmSLlIPJP"mc\HSd-X&EjoK8UmSXo[%396S[@%"UM"G##`$SleD==AX+OJ6ir0Y%^ojT/<Om1i(?guZ)RRX8_T5$+)Fo;iaZ[s13073QGcWWoPuZVgg>>$oodmrq:%ScK:Y%%#p-PKU$BHL95pNUT,^,pIl?Tnn]_fr>o&^BZ,*qZdYE8P@[)^:oDKkC<iqr4+fBpnZ<m>hkTbikI$`!-];sAB%49qkGX@X0!br&%$(b[.RWjsp.YTHbG!TNePKd2iAlr1$;es*bkCf`7!aqq;aLKF5q=Sg-[<7fg.S"A#@Yl^88(&f@>2q;K=G`@uaQqS.L\cJ1^ZhnH%;kE-QX]c?X:q/C;dRqL@Anl?^QR1KiSU5a'jl>mn"G1*Ie[Z3\':]\ci#I/L21d#`6KJN/qrOipC^Nkfs#shGf;"I2!A![I`X&pi%JNq*_G;+2KFN<3ODR_dhhWk&X\C7R-Ho_%\0$+QH8)KPDWLh2J9mJ+riJss23sBd9DRbn[-!@/W3V8%fh>:Mce@YPmDRd#tW]@/0%C0A&!g9_tqB'*cOYLX(s+0:nk2@G8b__HkQd`TTD'\;8V+g&Ubq-K4A3!VpZA5R+Fk7mTZ+[r,hShF[_a'`+=?,VEIQu3cT]In-[%qKB!#BV@<b(.P:U&H$^/\/'G[gU$=a1<M@!Z]^i3=47iE[$]B!-?52q\a>2*\rJiPG*6Aec@<*&`ak)aqG_niT]EeO$adknA$$#!%/Bfrt[!NQCJK`tV;2#*e>k?dlOKu_<VIl3dg18Gm)f,oc'+b=6%Z/^Tl1VgY&YW+W*Wsl])S8G(O/>6()ce/?Q>0[rh5rl>rG7kA%rNCRtbCbMFT#Y44#k+N%<1Z\3Z[%N\(m<j#O4(%@6hMSubqQi>Z-hcr1]:^LP/DcpJYNi@=Ou)I"FJK6GPF6[)LcREeU<dt-l2&B%),B^tQ;d&;pumn=*]C3N4^>'+_;qj/q*fM!oArSZDp%KVo+'&M;nZu7PW-mmnRS>$lV5.f%kHi-)kB`<kP9_Bkiii@^"HWp[=8o]%<56mSAc4$!W[u#.rm87nYquniE_-i?C/FeOS!DhT-ne:&>g2X.MX[?I2O?Z*i*Y`6iG$mBn`]qiF?@IaY>n0)+k2eJMsdI)qgi(O%IA:TGY_6nl2V39H=a0/TQ$,2pSFiB/4b>tpRF^0abUu.\aI48/!;)+$_VC+beCSS^iuB#Ij)6V6]1G"65[<c(;jTmH_E"ZU:7cIA%]0S)JSW\rDJl/'5VPU!RN7'&Bm^]hH,i2uWO.ID?bL]?:`+0].d4\)6>"r^@LST.n=OV,Uj_h3S8lGV0jNT5M[n1nFc$H(D5M+CY%6*ig;\M)P+m$307<%+Y,H1LI)[".\.`'60OolLd.H@@8W%85LMaO;ma;V6q8XHs"VQ)+Y=Uj^[REL_:"+Z627h-2[Qm^.%F(#nL5%\57!JCW2YO]//P'W*^BY3<i\Kg#7p/-05&oT5\IPhtf'LAiqq$]0)pb:SL:c4Md;#A8@fH2grHoo"!>J@j9**mO5.<4SBV*L_e2,%@]!H>"K%ffAL0O;W1$_Y'j'8l^&oA^dm*0`*m1gUO'G/j?jik5>M/V'"aBf'F#URkl6csp?'SE0IVU)g.E:FGQ%1oH?rSjDF[=b'%dI>)PZ&Pp5hm\]+McC\NR:<^gbk1+Q4_h(l\l_?T,`-uL^ri1YSl.AP`oTRNKf]UO4gnuPi47B9:;KiVVr5Ge+s&9,@s?c[((,2c%0*_*_`[\[:#;EJgFB$eu7_g)<Dt)U*@qN,2HV@>FF*S26bjNs5$Y/5!*\^U)Yb#tCHTA_GctX#_V/o1L5Zkcu:X=Bq<X!0E#1.P/%%9jbC1T:E9:H1J<$IEMs+PPp;\-gSt%A<*e.R:$lJ8D+*TiHVDCB,Y<<X2S)>-.fn54ZNiJ/Uf'/0!UC/(sHkB6BY9q(1CDG3#KI%Hq!=-HRYRLWpj(qb%Gf@gZ^?P1Qc/p\s1O<g8"Zu0'/:"I=KqHI+n<>TDDGLoD:&!\<Kc-<Bu2">L,(ZR2q>[Bs@-0I`Iug-/Rs3%9J2k.Hi6XaL-!GiIf.^&DtVj8gXb:h5O3Sea5#u.U\P5AL=3ffcT!DMp;@KRf2"gYfr]_'Z_7lAf?\C^4!ch6+*FcZEFoK^`_UQW%TCK%4L,#Mfme&B]B<kYNkSi=DB08&n8j;NH5I'KK/"F67%3W7VqAE("RA"rj]mdu1qAiaHWP$j/39*\T(:5&C`uLV_P1u;#\C](%%<km*_V,8R@O]Xeub2ckn@ol`s"b#=BI`Akn*H<1YnMTc^hs70N"ff5!grF'=Tjg+2]mdtTn'[*CA+'"g<T2)<p#CJ*A+0)SZD%+q%5Lhb>#N"cZ]G5-BdCk"K\,+4Vnq_YkN"`A)MU\Eioh-7\l6eUTlDT(.N&S??CIS!0f2%1!goZ#Q\<"tQm]a+rpl7MVK>3K9kdlPS%dB.kE<-+!up\L<-4W%hd*ceHV6#$V.]JNBQ5NlE</KHI8Y'b%cR^N&%M>qVG]mduuc!hI)EVK<df[b)<&%Ra>s!/&EqtQ1_6cH0V%a5+dKeX&0T]g7(MhgSYsaX#)%me%7Md(Im>SOILLHi4##\,,JnQ"G(7Ks$i=Z,R9bf2$<ieFBFp8ac75-Iui.?9_pJ86;D@?9_rO%HE[5@%^*[685&WhIRb*ibA[(6HBDaN*-SNXZK=`-X.SN'B*[5XB:.Nje;M32H`s&]U6@DqrKqs1'Qd4-lDK+agj]"o*>Z->pKg(b%IcYSDq?]$9R^`,6Q9D1\f2$TZ893XL^Xpfa0EbSG,kq/'CZJFLlR,HU0WXfdHi8&WE)DOai*JVu(d%_'5G"%l\,,>gfBVk'rk3d#%b!ELoF3f43N0OL,0_.Sefj7uDTDDRD/E:Ib@Oe4o]+5PW]+SEFC_YS\8\CCV/X@+p/[WO9h4&W?9ZHeQBG5EB=i&<*_'_NB3ndhr%pf)L4YkG26F2^HUpTF.MIrKpFgFKF(Dd6DJ;a`ftp\O)r\/#M7n0G6D_nU$F3f$3$.W@+8j9+Yr3ZGT@r:46llP58Aj/";-IXS>-%Q/Jg!244:tep)W^K"5.^2dre9iJD%2?7(`hI1Jg"]k?khh)FgFm!_r!`u[!g,5-==]u46di@`]^Kbi=Q^ZE>hPAe2.qE!\?DfW&R%HF%_Ff"8loH/i/k5JgqU[c;,[*<+8q1JN39=*Jp+_0GjKERT45e4H8cerd8-TR,4]pN@a(eu90IJPNc?8`(l8F?h5XoMijaV%D*p%Ifki:b-:4ajB,2a,HdNX<=9]ARZUojIAq-?M`Utrl;i'3,eQp9ni[2?a\Y;;=U5mQ\o-m5b'ON^pl+>R\/8-%D(Lmjb+4;C<cKa]%lV6_SKITQIim:FC'a^SG.*pP7`)>h]ZJN5F0ApbDe]Gf^Q\b!l:9>d30!XOA(N40/V0as9GjrJ6GOT4g0"`JD?D&1KHK[E&U&Go\%Z)to.([t>IVBZdp^Ho6'iGG&;n06+:*1l4`Fk3!!DmM/dX5&*Uf]4Y,*o6t;TPIX&<bjSVMk/1$b!"YR-/e%..'u"[TnEFVpU`6"%H;<_gb6EETE'cNfoa%2&n-6WFN!7$jFfKo!l5/[M+T*-G?Wid:L-L?F(F+LZICBR(o0R'W=8B_/+2P3QRdub;`"a9_V,&'Z*fP%7%fo(Sp%3G_K%iU!BH@R9bAOu[]N>W,m7&1>oKhpY./pU:8s1i>Rqk_'`GmA`WCNooGjO#>4&fu`=-Lg;G(.23BX._9T+5dD2GW!s%%?Z2dF#G2$QQ<P,#q!aeF#e?]q$F4\i(eWbk;$<.SiknG!@cs$Z41r6o?t%GtdL"#0JCU5DQBJrn"gcB5'!r4a9_JP]Eaa$OREi7+%T7oN.\`WCV;7rtjg7kebl9,MqdoPEUjp>D&S4!pri(5HcX@'X;U]cMLkdGb#Y.Qs;5'-,Iq5!X>C-pJ!_1ac=%^jsW/^(8ja#B/g%73+uUojWXnncX:F+TrFsgB'M5pE@C,p'1SEn-[K0I),R>qLJ4p'!8DD&q,M,-l,58@LhMY'*kd$7"g%&puMeq5"SconP6_kpsD3d%;Q_;%Mpq:GE;C6g,1H!/3u>FcPZtA0R0(##0ih[rg/ZeY>fEW3\6F'8G,<&kV:A;QhCQ?*WEn'G^=g)cNGRio^4_2%(Jg#Z\h^nd%^>u<$@j"cs5fLTkGh<c"cc&"c"oA#Y2OAga;kuJanA=8rR,?B!E+F"?FHbnXq%gl\i=.a%BUCrW!u[$T/*0,G.K\.`KjPJo^gZ,7%<k&DJ"CNe<]uO4]!t>s3@hM8i8\FU0IUWJ@[Zab2KE^V+\GAHGGYnN$*lJi_&dcI53':;^$"DkVj'U_sKNVHAB'u^RpM"M5jIbiq%]PM@k=EJMMd?$CG=R;Y=8G&RTZt1*5OhFI(OqrsT$:4Bpr`K[YX%EgZBbhu&Q[BU?IEF(3UdFT"1[aN.:Z!$F+8<0Nd4U,S)+U)C%3Tq)2XS?R:lZ6aUh+C&V-j8=0#>!If%leBK(BMsuT-AY7ne+Q^qp(J@njbhJ]r`PWHk+]KbZuDa]O.!DGjra^[:_^R55uA%F<d!i%cYGLtSsD5d8RcY&A23ZJ_;r\mg5uS;r\K14HMdV_LT*cNNfXm-Pqo5t_$>rsRIJJXE%p7[,Tc<C?YV[AP'r;b)sF;e!C$'5E#sjD%'H9"$/3s1Afb&GFDF3Wnbm>Y@(c1R'GfcI?H&:(LXY?8d%f-YqW,CJ9k56o\!"M=F"8J]P]SQ_"q$@=,M`80HNdB:I3M58_[s=!U%:S)I_5ltr`h&e*ZmuC(ICZ:6*lM2A9EZn0Pk1(6;3Xqrm.hK[#4GK_N3q8@L]Kp,E!pRWJ=7)VnA5]t=K/Jt,H8?pmoa8oN)^Y*<%:_k/$Rl%UN?tIVB?nQ]#d07P%1[bDrh,+/k-:uITX+\k++pM(>^Aqq2_FV/n?]7Y_DcJP7,<l7H=UV`(5:WBMY,YM:dPh?dR9/pp%$BN!u?]a^M@EPri?OSc'Z='B.U;ZrHllJFfXqJ^Og+/=rWkO`]?TV0mm'>icK!cIqAC;H'66#(C%+5&J"fsEc=;S4;"V?pS$c3^'%e1@lr]+9\?3=FEj3JDkq*CZ^`n$Gr.7SA\2@XWCcUG5Al$$W^PO<ahB)JR!U/'?<2WcYJd,aue`p$NrQ#Gqo3,rIHX;d1guEYQ[1%'#=':Joj);<IjAt)A`E1?!c/RcX.rFUJ`+Xi\*S_""">MdSjDo\OQ:TWWIcb1Zdl=aJh-P]g[L<DJe!@@WSS0Ka.BU`$QaU8IkJK%Ft&h.qTZ;<D?LMF'`cB`#ufC0*#lF(7Gn8$rJGZCTP'c'Yq\j]Je6f6,:P5fp7)k!rk-=)(qN]Indu0.]\KXIE$(L_GoY`f4GW]d%l"!kRa<Z1867,66&ko*`dDGp,s24m1\;j7#('3tgR=%M2&C=M1QSRTu[0;"*G@hEU;3<)k]U/d'XP@m4#@6C+C7L\ZYeC^<&A%=:%E1,\<3ITs?K*TJ0J<ggojRZuTB<jK#+=NrbakTQM-^E?CU43O*g7'TDE\fmHhQm'<+eORqY%&=uETb4>A3N1%4:-ch]`>s%Wj(NG%l7RJ'&YAR,8Pqa#h?kZUP+hr87\1,HNNIFNA4[(?>Y2stNs$qaOJ$`<'742X"q&^Lk)k`s9G]f(r/-,m637e0:>)C\=H]&F!,400%)\6-N4,8Up#ISi#>?M2I?85X9H/GHKK'I.Hm/%9d!3EH]HT38p6*UomL[F-,R)!j1OqE3TcO[CI/?VHZ&GTDD_AI)A!tYcWn@30H%_BB$^@I144ga+/ae.BZn_j/(5epko4L@.Do"Mea4]eI8Ck@?]7Ie$YF!%au0)'4un=;<O7BimbL*]gL`#f,T(;U$Ed#\16js1B\.%,V=S2j5X=/^BML':)A%YHrjSZEmu";ZPeg,@gsn=Y-Gl0]Oe?Xf9kaEHe]OW(-\9HAf3u]&2[Z8;?/VAC)V"ap_[c(_9Z(K!J&(T%AIt-HR5qmZ!(]o2LLEFuZHlneDdc@>g0BrC;>I"]3F6>,h#7[f=XB*'7eJk_d7#A8'fDNdn5M"2L=R37B0eKGUNcmN-A8?f?Df$X%!2<)&_fnZYLr#SH3#s^J$j:g7XG[CK0s#>2rfiI0.P6p\(nNOWUK5;ePS0dg789T-6USGXA9$E[kX`m*VO!?nXkmTb?Z5CR>hClj%H\qYFc6chSiA.C-!R*Ejb7T!i(*0*)kLpNX4hGk?M=QWNfGd#jrL&E#]GQ9j0V4RTGh'KIpcmB>:mKiLT(H/?^kOrcYds^'kc$uG%POgAZCrMNR*3YqXiCUG+YXndA`c!dfOfmp<dE#(M21..9Gmkp0D3rLI$H@L4faI0G>W*YlS;e`!%WF,j,C4Dl$Fc,WKQ#M^iQcO2%'u?(nU"hJL*uXGSnOBu0O\m12c:dnX<Ir9o$:^])_$EU`0m^u)$IaF]j-F@bGg1:1D$@+b67Dhpbg_1C]kTku*lfco7tE'KWiS;-%DD$03h2M]&_peLg6KFc[.VJ@J!F4\ipK)%[7=9b0`2eq\R&?5@!G<EKK&;kCYd..m]Ro#U!+ULf*+i&q_3oC6-IHXdbk8\!kk'3H%PNH-_mYe?,/b_Il3o4@t2#S7]^j%U<=]D-/*?f7SKi-ZZi9I(sOtsMDg!&E_$OmTj"Uo<3823MPPeR:[D?l#BJ#:)ZT6@.,W!i`F%>gVsok!U?PF7"e?;jN.qp(oDdk9/Tp)\RQCHFjprR[e4dpXSF1N";bX^[Jf(5W=B[$B70_.+M>I\6J(b@%q"_]u4>)^PED9F9@&Q%d!/r%87M7(/I^Ys03V4e=C\b-kO;m*;29]="rfK7):H3)B0fVp.Lb5\pb_QA=54nuDauoF=ttITXjWG8N0d23$7j64$6.r',pLD4%67AA0FZI_S\MM?1aC7P,'tJqqU3,"VNUqdr^h"[Dpr.@B]gRV"FeI+694Yij\7MAMjoDNn=[g4LBqupF3("WNI"8I6Q.LlaS(i8r%%CsRL5t5n<K;AuY)r:t(5'R/bR<4Y_;Iks9k"mP7<M?[Ya@O-<n$Ehd?YEOT)1_sKKHZc=??'3L?-K9s0cJL+1`;\a)&Per>BQ+#%gFIN%as2D?aNK=O;tq6OMshA=49)BK.7(g!Ef)9r6;\R5^&_U\=a8J?%+q5J$rP5pWiVkD&N;F\bQWt>XTWg(cV*a:#4OO:7s$31%+Dcr)IWk>@q'U`V0<gSJon^J/;#UG<1nYJ+2-Xo%fT_'0LBt+^<_tBc9g+`5Tu5eL]W\T.K.NNlgc]rj82`jfW,H&c+M(e_q,@qK%a4X7M<Q)7AId\n_T/7aO_%nD3QW97Y-uoK$QpA4hfcSQj*9VV45D=uWIaXe^>^5\ZaV+9K80?fBoY$e7YD*(o@-T*4OdK&qcO:mZ%4nn''>Wf?n`RQ-/!L^K61q:c4^%iXLR0JO+-Jb%sZZAr\O,A'':LD:&m4G%m%*jUh&"rT"%If<U8?q=M8&C/j4;?_Ze@85rp()uj%?(iU,%<X(f,$q6d<X>5;XpTa!3@PI062W`T!=@)Ka0<ViYOU&(`CVSEeEM(*'.*5?$D9G1X/pnU`5QR&DS;)<5mc2+/jd\[602Or%KYdZfp:bmcD.Iq`$2>!PO=_qYk\bJE:l\LuOK>]tfp3@dO2jjn\7,EiBA`0YDNFiiac\4DT!RU(kM-rT#W/Qm.p&G>FoCD':&ZXQ%iQ*&ek7)b.)%PhCMWMs7@)H_:r:[e$A#WM[<//N>[ZVQ)AZOX)\U/^$qPCi&33]Mt^T;ogR/=7<]f>\"@V^)ZbH'?dHarsaf&8"V%.<f-Y4M)RTg`!f'oX/6+bic!5So;;Mkjf4W960R``V.#UdHBdAM'%UUk6Fo;J@PlbL3<9OAjK1eAXbLL?0i&KVX"+VQMlCs-!%ZT%U=t+.R($t[,3=$9:/>TpC2,H8?0f[W"Z^i!FJl8-9(kph[<bAu8iD,H;[7*]R8@I$/?CJ3H]GVcE&a34@Xk4;9n#lF?sn,3bZ?<!%T:qG@@Gc<bHg^i08nH`dTMaGml]hpo=OI.of'h@Q?;@Us8r&7I<2dFG]@EXhP(-dj9t#@TSef`NnU1E*RoocIVR91PT;pG5kV$F9%A'cpqRCN-?rd&c&(XH;Hlq]-Ch9`FC$S_C?YG^'rQ&-GU:GK5$e>DI)F&*.3Tqas32nYf!]>KO^([acpP[?=VKV$NcZ?g5kIbt7K%,Ol^Q`D%Dhk_h5;0>*oUT4Sm/<rTYc(MLMR?Le;<pB>rMi]b),e18/DJ]IHfUdq]5)n=!+(k/,25^CKEWpeDdOO$/@jU:.O0[^6E%\?aTko-\qb<[@["I/`3dpO3#D,5`?,3W2jB-#?ci7n[1mjNg#f2njJrd2Jsr/)e'G(dD8d^2BJmd]p"^#.DRHe[b9OgbT-dT[q-U%r5N[a@@pgGq>RHMCM$qd49Ai9=,\<:@"UWp_+>JNOU`Q!LZs"pk5BY8]tAiQHg4Q+bPXR<33^RD2;C-p*o95/\:;kO]CqR4_@?L\%7Pt.=EV4$pWdjO97KlV;O7,7>i8nMLdTmT<o_%ke#9H_C0EZel3,k&_(qRH`BY?3"p]2;j9E0O8^InTpW%mjkEG^Hd[dTh^WPdiN%,oWJB5GA--ID:sp]UJtYIsOnis#1XBdsK7kQd![m];12`=N1Xuas?J]_/#YS/EHZu*=_m+4hdk\P,UA`kl8:Y`>kG$C[c3^Y//*t%.smmlZMuX_\QWSm,U<d6*]f^;FuYZZT>m:]=ei]uB<U3k3o"[q\os;irkFfuc`siS,9g7fJ588q)VMI12/0"\^Y]"#3B_Bt2(F#1%94m8>r=]@DCBd76'C?8XHK.)>$TCHu"fLI[+@6mMm8:UeY#183"?N"J.t+n@-L`S_g:tt4AK>!W[N#3_ce@r77lT2W)p+b_`iWT$%4j[hV?uG^++iYqFn^ck%]F11AK`u(<ZVr!UjA[en2%++q\oY'T=(+80s0o[NLl/RS%sNL\YGJ!WK]BrtF7QBnfXm3^_&EpF'=qIn%&_r[RlSBfW>3XMXhF]jnQ*,i\ZNYQs'o[.pn=0AVp/h`GB*J>2*(gB4(>*o$[42D1[(t.1W=a[%*@mcSK)R[EGXAg%M6cr?*A)(l%];-gonE9'beAlo((./`kU/uGRisFdo4Bj@k&e!`XcnK6n\orK):LWWH6B:4Vb>NIJGk$6Fb(C`dO&l")4'IqdlshCV$aZPp&k^@f%^4"P!=`U^3Aqj(Sp]AJ1$6kD+gPbd"s7t\F(8NU#bM=2'LTeDjQMS+Do'hjYn#ejsA;L)lKCT<:n?t.8pK&G&H14>i9$61h]QH_>%h%1VH@D[<m0l?l#I"1g/#NYu9/4f!ahuhNM09c^r&#FLBGLXZ'dn9SL*m3LfP_)A8U%aT!&qh/pb23]?Ahn@2Je%B=DiJ5,lY#UH%"'kDC1g1n_=eg):=E.&aU;<h&^Rrh-O#ZV"#=IZ%Mn&2&4_W#$lVN$>AF8tV*hb-t`>=/*lpRJ/asDDHf>9eJ]6PC1_Y_]-j:*0N%8N&_PGs4+YC18btdQb3*^`l!YIb]M7EOGVcUh#f2i*QRgr*1=]*Tp8@&_I&lH52g[XRo*\ndd*$-.BJlh3bi+f3]S`]F;P/,qUM=%9jZ6WW0L^E@!0+:Tkh9cJi1Rf&>\Pn2Ih.Bop6W)`+*@4WF>?;k2Tu+WW!)_176p!c?AEGRkpF1[2N#sFO[q#@7p9"dDZs#l:D1-%YB?J*q<M]nhA3b5%Wh2PY:PDhI!u.SA,()$Y"Gc2k8I:12XOUnZrH-7I/3'6k!:QA$U+KcZ)GG:Tm]sd8iWqhT"ff-ct.Yf_m2dB%#a!oVp$\h!%Y%th1NF#u4mq1-E4bQn\b0k3j-0>gpE01eq$u::hdhesmZYIsZf/Nif%C/5k$L^Kh&LPo;ib76*PC3.ah&K-O4c]Z%?&W.YC:d-^eoK<`Q[DCVpY*;t5+hI0f%JfA]\9!Hn99(g"r:e_T.VbBP?Gn516*^+bc>sRKpVRa>pT(2<o9lM#U;,;XfB36-KIh*%*VL0%[PamG>rIJ64r@U2l`BW!'aHC`4u=4?UGRQ9\nj(P2_b,`m,uE:KA?bJ_7q_Ko%;"srM?rnd7R2jQ"GB)p;4:_fSCYop4[cH%[[TPkpK0tjS-1X3i7$%Oq#XNl<]h\`NQ#Sk`tCVuedpm4'o%_bXg1C0mC=Fl*cV0jIrXo2'#Obt);GS*K5mTOkhtWF7S31jju!<H%"24:0oA\:5e!"qhg1tS"%J=X02"[ifQah?Dqnf>[g<9B>/MmFMC;QMMrTK^u6U/mUT+%o6+.`mIO3Y-:;T+\R+s'l0LX,([IQJ/a%]mP&M51MlId1M6$g<t6KNnj%R$d]Jm]-Rh):]I+Z4I<L/]"$2,p1;qR3!S].Q5AB7iBZS^K4Pj&?FG*O".c4Z[fZ4Anucn9Bt_>8%hXgOm_sE'3n&&u3U8;ACoNa+3RH2:X"d@mC^T<57'Br9Q;l#F\-uUFM^bah+XhHur:^ahJL"/$dhps@9&?sRIga2UT`Rd!(PN$O^%)u@bQ4)(gSo\T/S;E1nH/06,?be[nNn.[\MASMDK>%$r`*JZ36/jns-VL30&Z1QU`YJ.`b9HAN[8*>;Ke,::=I5aRRpLrea3.#5$%'"C[kgSHk*WE5Qr/hc>6%$+@$T2M`-&$Cc\(M2lUI7ZE^Yt&sfF3+`+V4[\C;%q:%13f&4rP)VJ0A6;AB/3!Bi-GOBhPXF_WgSEG%A:5aDU,%53S&nJXIMrSS/D)q:LM9sJ]WHig37O>XCk+5r4*%c!ruj@LlsH#=,NW[/Dt:Y@97>,\>;fSJRpr4@&N7%Wq"+IN)GHQ_%-AImL1<H!(PD+rc[So/khiNgZotn,eHFY''T<Co&,X[%+"2"6T<fq+"4f&<Wa`6.;s"J8#kG$tn2lDY=9/.Ot$j"9.T2`S$M1Y:$%)5<>4+:L=TF"u>;Z$V$dkN_k[NKKOSN_4A>@&Hf;\<4n/ejB!BbaTNoLNQ9!(;AFN4u\UR0fRneU,:_:),X<//$Qq#RJa,;W]be[%eDV/j#26<@P8ED:$==L=b`O""LB36=4q>^l&?t4[fD')Jae.Lr-i!;XFF3Dg0M1A#6hY4:0DWlmi/fh1Ks?qQ.plfThRjo',om?-%`X'AG/3Ddf[#DZN2)%Nbpn#U>_8<i.s5s""g@5%KMrE8*\q^<>.Fmfl,N*f-GD?o[X]Obt@W%ZH`S*r\2G4i*dk@3Zk*M,UScg@P%Z`RE+KQJr`H+`l&nBfI0/;3'U62Ed:Eg;>'4*W@V_baasK<:9Olj)9eA<q$+[&X8G*dlP&fs8V#*UK9ndnqY(KS06.0eB[o)jW4>%!,R^L]790:q5;PUDEDOt6[Wla$=A10@eT`\Y:o3+qc[:WZZ:/]p?J3@0[47l,Wl'NH&">c/3Y#s0DXo]3ODQGmN68k%;Y4(d&$f"%Q5A:%UH!7"P3L6DLHpZ+Ic`G;VME9o23op[$r.<2Fl@NV[VOYo6N"DP]%cgHkeDS<rg;$pDuWI&aNt!93NI5F)!tu!KJ?ZGe_uV(%qDL&`^G:8X[g!cD[_,!!_nI2<*^;f)0X1Mf2&XW9Er=e"Rp+,Kmg_ZrV['1jf?&qBQuB@a)"qF``0of<Zi<0k8Wq:udl:"#,9,7T%c&:0ihnOS(XU\@N.O-am8o:+?SM`$gc$.G4>g8l]?Cs&MYH"AJOdXJ)jlP";2\45pRaiQAe1XBd<X&YeLCOB,;eprV_DV?N>Ptbu%Ch$q(rbJksff?XHIsA`Jg]>;*KHS2)QPrYSe)B@ZmDo"ZZjo6KhRjjq]+=>j_t`_f``_lh6q:M`dH&6^bg?0dQ0Hic&gf;<)Ll+4%S:-4n>.FA&+nEV(M4'2f&[n0@%c)u-RTZ)@Qb,f3jH&gYI8.+AO)Isqne2#W`KXhE__#k/HhLL\jK2%HHSp$><!kh<,F:o1NU5>Z%2[f)Pc0+NJ>O?;<2Yl7Jpe#UKQhc&Gj4bLI<AM=#j4d3+hK-Wm?u*PbV=2`ipa_=or*puNg&q="[JGYJr3_H$0M[+6`*]c7pub-E%[0QWW2>L/qrWZR/rqs"85;V<&4lDC.r2C9XD)G8Vqf="]g&q=(I=H.Q?[KS\ru%Us1ZE>W2;jNITmpgq?[KS\3'_t,`*_8tq&N[:%6U0NAXWRaWZ?D2_RA4trZ.G%(N[Ob#lLh@R)9u$H2_X=f$ff#0iF9isHfYInQA_>u+UgFlZ+4gqbODG"eU6ktT-#rbmN=.,O0VF)%I_+k<I#0L^"/r@5hY\pb\b_t#]#IuLm$tFP53^7mmQjo9Di.3?ZUX*jApO-H2(<=i0@7l:GTQFA['@[!gU36uKO]r:_8L-nh#:.Y%Yl10r!VYR<+OcI],n*;?Bu=RJDLZg.Q_T7&@i+92KfR5HMBf!Y[pIlI@]I1f/i$u&^*BN?B6ToL"A\AFBBoQ&ddN-^Orqd7>;1Q;%.EOH^#p5(pE4u.[[0bUL9c+d"ce7Tk"_RUJIt-+&rMeE1&SYTA03`M+*\qJH9!)@l)C88F]B`Q.g>V7HUW33kd?j67ARRc)035Yq%>+&@(#B&VAip#@5KQOp*"qK(1e7+1</^YVBG,%TZQ<VK#5QC]O_/FULh<+!Lo5oKP1l;Z_mK68b"t\J4Gr$>INGe'#mfR76)2m8A%;k(%eV>8AgI"@j;N_t'7ab1[m)Xh9B#J]l0j)BBLjL9B8W-'3%A+HZ0[k9oe]5<D^Oa,R4if60`a,9b5gB%O"lXJ=p`8AWY73&n+%ZmDm9Z%ni=ruFk0]mq1Qff?&%:-3IMW5fD8>HhR\-)5XI`8>s4*TKQ>C[KSqi5EcEg=PfGS]N;Fhg9<R@DG:5I@q)rUTM$eE%$^J%]M1;!GEC,u0BYR6%1DCCc^bhsTW"h2,+esSY3^j0OSp-'O<od3q&gYfXB:B6+!R<ZGMl)br[jFLi1XJ.jIr(C1e1^qeRDWf9KN_*%`sr$2`tH!E7X[qMd*K&[dZ:,E^\=#fG?a=!O[-2%'\I06lnO'gF8h-ePKKB1V5.:rAaI(4(NQof';KW6^6u)>A#K-eR*B^B3:67P%d0n(9%VG7hKmn3R\l[,;G0Z1p2oIY(SQb;7YAhcsF`mKWT004J5I+B^"Qeb8?E_ojrl+r<n3bUtI^,u$!7_OB`q*8R*r2Y\?>l(i%4SB'LPh#U8DjiiNZO4I74sfDIdkIPOekY?hS'K\X`dY1W,tAdJ<Xp(7J(i6Zc5&-=HI&\eMrMIqHh#kR3An0d^=M=%nW1B3+S&u%%gVTh[/@&@7R[J`*U%aS=7r36L/T''kB1h!`!Ms%3s.;FRs5a"U-dVhm>FqHY*F$bH]bl#,g6hd?ek^pO]l"=)(3hjE3=s+Ir5jE'%@JX#e/7>@30C2&4I/!F8?JVY4Grr!Nq*TUlX8VWp,G>AP_/;j5YjeY`2h-[&]2^PgKfL4dF]%Umc7TQR[2e;=A,e=p0>\OPK(R(K%d8>DnBV$Ll'f,X9_WT>:*&]AeVEYo%Br5U@dd(J$O7N-o7p?Fi1F1Br#4`\LX2/9<rNkS"?A2;Viq_e/COF[Vs.6<N6$ei^g06O"%.[JL5I=6W^2Qs:0H%Fe@D1;A2]!hXrk!_^=rBCnniP1SXWcVFpf&@35kh8>!?`pN2>'95>d^M.jF)a);rUB+Lg$/LTJ#f=ID6L-[%/^IKgX8^g9>WZ!R#<'sNY/XO#f'i?4F_(44m$Q[H2VqLOrc<O3EE2\Ts7Q?]qn[9YqX1FG\%2>#l\jAGo"@XpS\b?8s,DMF<2-tI%&uUpC4sX2+%jn[j#cf="ZSo]+AJ-/oY-bK0+POh<FdjoW?,;Eu`?-W*n..eaY/]#blE7+TlDLS,`!:0ZN6CLK1U_%7>`Vc]4fQA^%X]q!hW_#lIMG<cRZIsTnqXMp').dU6Oj0qbn#,'CrNigdLH)r+Z`AL\=s3AS:OEW:&fYO2`+9DhjG-9AN=T0f>b%S'?eH/NND&TC%*QFPZ0hMJc(//:Bh7=j9NjHL4EVm$Z8Xb11ZD=WJ/!!;s\kX8SBg&k<>U:YP"d7Cl@iQVkY*7(/FbC8`9<3hMbLO"Wj#67+@'Ke:%$`$g)NPf85F+q"&!ICo._4_F@>sr.=4Z:*H&>sf9WMeM`famCH5]f02o"3=,8W"<q5X]8(FZSbMXF.-d"U7jb"5uI7'j'e+<O^k@%1Q:ff_aD*,KDu1GqY2UYN<UWGeMrHPf%PeT'IR9uA_XHLMUjL8".@/<.l%p.jR2rt&f%]YC9uQNK[Z5rK$B4K#R;?5),n;_kLo:l%E'8A-aZtm;;;F>MbJrJ1/-@\C"jT])#V]X)ndJWT*RN=Ra.((G.Z]ULEWRs6N2!]]JmcD^gh-%lK<%s$[iGPbj&&td#Zr?P;NYPA%5>M@dXq[cD]WW<rJemK@RHP8k>E<9AB>O+XXGIOL#Q+f4U`rRD%^n9=$#\d'cGZ\eKmb[U/sJgb3A(g$<OJ<&ZKu`/-c4l*P-'VL%MUI_2U,912f*GRso7Q.R3r+js%r#eZ;ch-"ahYlI)5mPND(`d[7N/<S&DI>>j<2OV-rD=lRP]VTiN.!-f_UQVQk\fmaQ#o`]k'WP%Ufe[$=:1_Ocla2P&Z!%'RqH23O#.Q+Ymu(,L>Wsi@g"-QN`HH@0Lh-?SJWfPGotZZ=Q)oRl7/Yd_%o<o.<u>^-j9a:!<*-)7iWK9%T"tHk>T(MB"/E!MD^L/nd1IM+W@&Au"8.g+6Z+Uo(b::t1C)XQJrll='K&Y1A>7=0G&o:7Q]ai6fs2%Ep.3.bZQr;!cXU`1,u]A-%')=W7,$k$Fl+r\Vlu4N&Y^Cmt#PX&$-/_uuPtkcD1.*?=+NU@6):1s2VUF!SZ7LRn#pb(Z&W$#@K&t*7Z@%h3U<iq!SP97lWQg)T%@ca[]6Fghi<elrpcl,ak84dD]mNE]M9'TE0ZSY"<j.4tdaEhGn;TNcOD&F?iD&I1d/hFRGR+M[2?j8a3VO<4L)#Qo1YRf6\TLbC#%R>V0T4;NOAi=_j/`L^+CS-P:@$H*i!MfFR5(g=$k=t%Na&bnCAEf__lQ;F.387cG>Qjaad/S!gt/KsLq9t4%'61kRnW<72T&1%kt%68Ac[1mg@YIMGG.M2s&u?tC<B[uE'V=TN(lp?.fSSp:$uEO?a`5cZfB5:_pdSjeo=,G@!Bg,PcWNVk]q+"VR;p4BYp@H2&R@ngDg%Di+fn<(^o3]!B<]`-T^`VD?FaTNPQn(=M;TIB?EeW&:"5cfAC>+JLUk!7$LXPgKj!6GCE0`R&s<7[:jDP$Ecl$H*Z:Y;^!CgbLo<%Q#<rl\H^&?@*3(bL_DY@;ha%ar<C'%U]O,dTfoqXPZUf-/rk!nTanKGd[3'OV1S9ViBUAM)m)@Xh4)nmM%ck/hr$fBl,G>U[Ui2.%?SF/O^j>kuW%DN>W@_WIW>.]CbSfMVZdq-f_!(X4[G5dh%)%il\^.6S$V]#3$H-KS5#!=U&8iU68t3%VBh&+,BRsl=#tU7"Q@dKe%,$l`AashIch#iKJ#K#[[#f%@.O]<kr9"X"?(Ih'nc&LZ.E=3A5&1q]NCnGAPMiCM;l%A>D^:Rr3r9flLop[H5UNo!C6\2bc$,g!!%+@9Hb4TnlDKuFBYA.erBlh:[H-qOSO9cu$oW>,]'A_=C';M!JR)N#eD&IE9=9#rRr9Mnh5N#u:S]ET=D7*_!"`l/Tp`n44Y`gMT2%.SG?>/(+8[LQ6[T>ZGYUSfJ):EC=e#eB9kO8k2Wa@RgQT<!\D=FB7cs.M)r*<YPX`ObDf2(jL2%&6B130(hE49leXT>1>R+AR%?s%AXko_)&ut6kmZ3h#^B6GH_rh6&=j-G\QIt#174eS"!4d/X\L:>irl4c=*Z>r@QjBq]E5M1#@\hhY)lI!-]+5`#`a`-6QhC2^sf"o%1Ij(?aXs2"a=X)+a@5;E0M%cOoJB-b'mpV)]E6KC&I?mcaa)Nq@A<pBP+5cGV$EA$?*Cma+VN:GeS__q[0S>4bYora%*=LIfnT*h%W]"Q&/,hc-s3foa&fuUV9DA]oeI`>>6*hFB'Hr*s"NhZ,X>^:?DLk2qcp?7&'Ls-+bZ<)'M.h')Iq$'hdQkWD6_bQ*m7&R%M9W8F%Q3`D%;;i`EneX?hd-molXF)-Lo)mbch(it]CcnggSA"NW-1k1LA#<Di`)he8n:52j6]SP6BN&NR&f:XG&Nhos/.-M-]:(frn0'+M%Y_hsd8LmLIKk$E:?7hG)qV;hP`.LI$U3eFFKH)8-gR-D13H*oaU]6M(ZI:ARZ6:R:S2Vt.01pk[&Y4(r0Gn0&VkGV:0+GXtQ(s!:%!g@_7of,k'Ka`h*7/C"nSlicF'd0`saj<D!NqdjTJnk^LohHH?[=V3r9aI_ad=XBg>0[o<##^YXF^rE4SQJ%4!q&I2Uit`k;G@]q%(]0R?#-L]a9L)"f,Ck%CNNc5[,c-7A1kIgE/>3c9_l"+YmjC@'QeF*h7IA%W;%.1e-7#o"?W%1H/WL*h86QTs.aNd0Q5;$5>:L0j%a%.TGMk%g.g;FY^j_YV<$sk@H_2bAkA3Dkqi:KQX;AV*a[1he7a^Rj(:cgEsO-C:"M_$Fm@n?n?"_/bgD'^ZnXJ2L"JA,LjIOnW$%n=58jQU2sl6lA#A30@_<7-ehtmOiUK]B_kSe1tP\^KTi_/0](u-V"G%;:AY\WMM]ZU?UKrgnZRBJG:Y5XHMdAU"^h8L*T5^e1f3D%8`:OsZ]f,_?B5dsFl>]647OZ22M;F'Q5.T^P[)3?fF^Xq/7'm%$QVrt+W[AF3fU*K1..M_OP#T7+@]JQ1A0\]flB[7FQ<$bnT#F0%Uph"UdVBC+`M>F^d#jGs*<Im0&DQfliW!T&:b4J+$0cF`DulqeQle-8kOFrN9*LP,P3@Mp00)*1E\#sJ4]3W&$QW."M)M>m(o?gT%[Em[J@.dL9AO%G/P([ep[8fneHJ+!pT`b]$9E:/XS<op9"tVPE:`p@$hrL"R-*S>j8'5jpi<+*^d0?uifgo55<7@k!cf(EVJLKZF%@rOHR"6MUUBH;s&_,[b_I%o'9jT;j6N(Vfi4J\A?Z-5=,$NoCi:932Qjja91riunNdb9O8M7&qM=BnB;erM+1bfkLZ@"=)TE.XuP%:?p+0Fh#LhApBm_%YG=.nOQ]bSG$!B8S=[V#/k/*]?go'_V?IbYcE#)+N95Y"HOqT&hh[:*/k`tC&A0sfnJ-TF@^6Reg+;nOG=ql%1D'\EK&83m.:'r$"ICj]O'Nb<&7$^$i36epPL9Q)m-P3).Y<o#B7foa\e3]0Q6=:jE>W]\c39Ma@8b<ndd5A$?pYmJWtS7t][86n%%s">]4hkO4M'ZH"Z(t!d22b5cgCSNeNKdQ;326R@e4mm].Vhs5>=uV,V%3to]M@gf!h7q5/U!KB.BO56.;grK&l+a]1PSLpZ+7/i%bT?p0DW[WlgK\KAb!2ZQKhWaI.dB>+&8V`GN<a&j`I\5KcDo]6"_'9A0L<(Wp:;qQTe8k^Hl#S&S-N/9*ajOJ?0$:1$QkPdM)WPa%gi\d<PAsD>0u$\n!SYTHi"]#m+gFd2:[fjWME%EL7%(tq>g%GE8L'P!q*7Hjg]gO@7a%"]6Hj*TlpT^1_1<99aX$%?%k#:t_?0*A%Ws]LPg5.Ki<M:gr%k3EWE?+ee"X+/<+@cV@`X7E[adlJBT3!`],?q#V0HjD8cUe9gG)WP4eqN>*!J31Se=Cgf8en;U_(QI55o(9'%'m_$elDr%EX7ccH%;8D.[hBk1gP%TM22TWm'.->'-/Y(.d=;N@Gs_Gu"RHUAN[>%mi[Q[Q,,o;!V2V+sk=%7>^hE4"R&*o(cl#Q(%(KQ)jXWue)CD^-q$)alrdoo.?N1J'8/X&\.L,DM?m(1Oe[@Lup>#TVOo0IoGb](N*h!7j6Y%DoS#Wu-4&;;@&:=QO]<L='V+2CXf%JC&1c7Y\&OVVn;.oEUZ%qI%1*;E8TN!jG7bp7#8P7;/(Te[RDIP1WZn;+L>[;&Y;6Xh^0tg&iU!g0\D.2KnNjGB^*3#E#[E/>$6?%]8io:S6gW93W?aBq>Ks?HLpFjZ_LEV%Jpb0%6Y/SmXfeM&JK0e91qa."ItbZJ#[q$e"*2)X2HPrLlGme5R(^pjiAHa`3[Cn*X3)J%6,XCU?RbG_,"7#,-\<GF!1!4:oXP2IqV3;:3nERK?[%jH]?KGCV+8)/];4:`J=,rm2T'L&V40<kY(T+jhIWC$=[(oWb28KYQ.*n1%a'l?R-_pW;0###;kCuM$Ma<>e^/GD@`/J&$Cb@5$K3`COkP,Q*0hIUJ]ePYD5mC:9<:\m"_N/;95iT,ClmAr?C.pUJQlZm-1%WiN%[jPT!bI?OcGe;f_eP*muE3Ec0$6</]'8rM<I::ab(eGa-R;=<UUnZ_>@(aZV'P'YWP'*#3D(ukHMB/`fNeq-q_M5:Zh%=oY\Vir6%GsdqWS[TL2?L3GoAsTJRf2lV8NW%&$k/I)peSO+o-N]#_3]h$Cbq*LSY7E7T(]S4kmB&;H]B:iY$nHKZ4EgYYC/d=Q^Xtc]Ck''E%qYf^Vr\9u`3,i!br!\f[2OaNQj66B^l`XYKRoeA?"cDt"W//_,G5MM@riD%?@Ik1$eT+8uDe)"b<ARufq"hCDGZEB[>:]0Zo',8d%romj4Dgq_$IrBU]DghYuf"Fogs(NN\o+C('$;@UAq<?RH<EU?D"*iNYW;L86<lrY*;<BsDaNCLTQ(H'@?I=O'R5YoL1ouqqd-(ba%_<QXg9c6$4.bXH[g;l?d/s`/a?(@Vaa0OP63*jCFCOKt@;%Tqg6bJVUPiTVC/>9c(hE6(%O+fFps!(8965D=![m:o@lO$JQ;8gs,%(,FkddmGJ%h%[2>lR$o)&WFT_e<5dM@c&m-"cI@C(C,$?!r6X3Uq(l!eGKjVem.X%]^>_?X*!X2]<A&[\^kn:IVe[HJpgak.()W%%bpDV7LlIGC;A7ao&h5H)D3n;:eG:L'p>\b&92Z>fr\3=^R_6Pb8Gu6Zc<VkeZeEZ7NJi0JO=.k,M8Z)WZFuaE7X2(S9651sE$ZbJ%Og>go/UT*NZ9s]^!3PIdp5Z0Cd0E[Y:0^naXdV@dG,MmhVjalRcNUAn44J9s68FD?NM;qG=VG8;*$7pfVN8\H[jp(EcRSbP=l$]n%'s8K$><7A+(GP8-PIon$fS#UuEjh[IH=0B"EL\:K(d%28pmeUV)K':8q.H3f_AXU=+S#+'e`3XLOJ,2/Z*adBVk[9H^+7(l8X-Gd%d('!MfiB%H8h[t<Kd,be+[p+B?0K^KU.tu'>6%`:NBskgI)<X;kM6ZrhHAccF!jZShi\m6X=dGe;U?;=,a&0Q+ke97+!8HY-p08N%W\`D<T]7iklbq(n2b;*B`htQDg224)Wq;Q4,FW:(Ud?jnodHrSSVnNgZFB`!7hPJV$?`+RR%K:K56f#56oe<FWcA4k0?RF\f/?g+%ZLc2U<Z?:&J&Rgg?<SnEnQL`,/n,-T3rqiLN/f/`\6D^d&8g:d%4B;3F[pBFAr>Pnp-9.[jdctLgO&T1#dul6F3jGP+43hQO1856%-P[cp#ZjG-ln-4L':hT]PqFb_3XrWtp?N%kdoD5V;[m(\.md4\W+i:njYO/L<,$RmPpbNWi(_(O!fVu3R/P%!&/1@]fs*2*)f%'(%nX[@E',]IBQ+B%s66%GX1,PL^/ajpg906W,Or4=K?oMW]4Zu,>%?*]q^/P6"1Fr,n/g^<m\cu42i]k'NRAYiulWE/DlC]UaEt[%S%s4B'D8ctf`\V:mFZ&q<@@NC,>CVh]G#)f`t1'IHsZ7-%8"]Ji5mUP.*oiEje/2iE3GXcQWb<;C!+'&jm@jAUsf39Tb62UpkPL=$/%L2ki[i=gBZ0X-d(&iG;cpmb.1bM*8&q/AXq,+hib'57j2'L%`IOgO"]0uXD^K.?uS4,LkDZ&3paArJ^b=(!jl%:XIK/cRG'r]7bb%,7,4)14b^'1\VaV.@Mn%ARS#kb,[OWDG$@NRZ8XIjkU"R(5t%V=i[:b6I=>#,r'#Kd?T,CeW.N7p$r^g]U7K4XFCn<5"XmiAcs$f%e_2otXT2ig_dLTo_S*Wjm<cTK@,("u9%?-LF!Vu(YB8P(XgLGW>,upeqp&NPp8q]jTekO'Cip#-+2_>>$h"HfR4K]>@/UI1A6Gh#%QVa=LAU--ld.[g`IViGp9?X=3>-"`d@-]N;`H<K?;-5jV?!&%@6-&7rL-!%e&Gk]@FD]UD41fHX,d3gM%p/W(hX#`-^:W%tIb_T7%I(S26=0oJfH:i>34NBD2D\pYkXP0a^rdFKY6?#SHH!fIGlUL"9!*X*2o`~>%AI9_PrivateDataEnd