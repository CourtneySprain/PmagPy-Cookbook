%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: orcon_2.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Lisa Tauxe
%%CreationDate: 8/9/10
%%BoundingBox: 0 0 340 275
%%HiResBoundingBox: 0 0 339.6348 274.4004
%%CropBox: 0 0 339.6348 274.4004
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 104 8%%BeginData: 9008 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD42FFA8FFA8FD7DFF7D527DFD7DFFA827FD04FFAF65AFFD77FF52%A87DFFFF653965FFFFA8FFA8A8FD77FF4141AFFFA852A8A827A8FFFF7DFF%7DA8A8A87DFD04A8FD67FFAF65AFAEFFFFA8275227527D7DA852277D5252%7D52272727A8FD66FFAF65FD05FFA8FD04527DA87D2752FD067D527DFD66%FFAE65FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD09FF52FF7DA8A8FFA8FF%7D7D7DA8FD54FFAE65FD1EFF527DA852FD057D527D27A8FD52FF8A89FD1F%FF7DA84C527D5252FFA2A87D7D7DFD51FF8A8AFD20FFA8FFA87D7DA8A8FF%FFFD04A8FD4FFFAE668AFD18FF7D52A8A8FD61FF8AAEFD19FFA827F82727%7D7DA8FD5BFFAF8AAEFD1BFFA827F820F821F827277D7DFD49FFA87DA87D%A87DA87DA87DA87DA883657DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DFD07A852272727F827F8F8F87DA8A87DA87DA87DA87DA87DA8A1%A87DA8FD37FF7D7DA8FFA8FFA8FFA8FFA8A8A8FF8365A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A87D7D2727F827F827F827F827%52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D7DA8FD35FFA87DA8FD06FFFD04%A87DA8838AFD16FFA87D5252272727527DA8A84B2027F852A8FD0FFF7DA8%FD35FFA87D7DFD05FFA8A87D7D7DA87DA25E5F7DCAFD0EFFA8A87D522727%202727527DA8A8FD04FFA8F8F8277DFD0EFFA87D7DFD05FFA8A8FFFFFFA8%A8FD2AFF7DA8A8FD04FFA87D7E7DA87DA87DA85F5F7DA29AFD09FFA8A852%52274C4B52527DA8FD0BFF522752FFFFFFCAFD07FFCBFFFFFF7DA8A87D7D%A852A87D7D277D7DA87D7DFD27FFA87D7DA8FD04FFA87E7D7E7D7D7D847D%7D3A5F7D7E7DA19AFFAFFF7D7D4C4B2727275252837DCBFD05FFA8A2CBA8%A2A8CAA2FFA87D7DCBA8A2A8CAA2A8A2CBA8CB9BA2A1A2A2FFFFFF527DFD%0552FD04277D52FD26FFA87DA8FD05FFA8A87DA87DA87DA87DA85F8AA2A8%7D7D52524B522727277D7DA8A8FD04FFCBFD06FF9BC4A2A2A2C4A8CAFFFF%FFCBA2FFA2CBFD05A2CBA2CAA2A2A2FD04FFFD067DA85252277D7D7DFD24%FFA87DA8FD05FFA87D847D7D7DA87DA87D8334584C522727F82727526FFD%0AFFA8A8FD05FFA8A8A8CAA2A2A2CAA2FFA8FFFD04A2A8A2A2CBA2A2A1A8%A2CAA2CBA8FFFFFFA8A8FFFFA8FD05FFA8A8A8FD22FFA87D7DFD06FFA87D%A87DA87DA87DA87DFD042752527D7DA8A1CAA8C3C3FD08FFCBCBFD0DFFA2%CBCACAA2FFFFFFCBFD06FFCBA8FD36FF7D7DA8FD06FF7D527D5277527D52%7752522752527D527D527D52766F76526F76A87DA87DA87D7D7DA87DA87D%A87DA87DA8A1A8A8FF7D2752AEFD0AFFA8FD37FFA87DFD08FFA87DA87DA8%7DA87DA87D835EA87DA87D7D7DA87DA87DA87DA19AB5A1FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFFD06A8277DA8FD07FFA8A87DFD36FF7D7DA1FD08FFA8%7D7D7DA87D7E7DA87D5F5EA87D7E7DA87D7E7DA87DA87DA884A87DBCCAFD%1DFF7D7DA8FD35FFA87DA8FD0AFF7DA87DA87DA87DA87D5F5FA87DA87DA8%7DA87DA87DA87EA87DA8A8A87DBCA8FD1AFFA87DA8FD35FFA87D7DFD0BFF%7D7D7DA87D7D7DA27D5F58A27D7D7DA87D7D7DA87DA87DA87DA87DA87D84%7D6FA8FD17FFA87D7DFD36FF7DA8A8FD0BFFA8A87DA87DA87DA87D655FA8%7DA87D7D7DA87DA87DA87DA87DA87DA884A87D7D7DFD17FF7DA8FD35FFA8%A87DA8FD0CFFA8A87D7D7DA87DA27D6559A27DA8FD077DA87D7E7DA87DA8%7D84776F7DFD15FFA87D7DFD36FFA87DA8FD0FFF7DA87DA87DA883657DA8%7DA87DA87DA87D7D7DA87DA87DA87DA87DA87D7DA8FD15FF7DA8A8FD35FF%A87DA8FD10FFA87D7DA87DA2595F7DA27DA8FD107D527DA8FD13FFA8A87D%A8FD35FFA87D7DFD13FF7DA87DA85F657DA87DA87DA87DA87D7D7DA87D7D%7DA87DA87D7D7DA8FD14FFA87DA8FD36FF7D7DA8FD14FFA87DA85F5F7DA8%FD0B7D7E7D527D7D527DA8FD14FFA87DA8FD36FFA87DA8FD17FFA8585FFD%0B7DA87D847D7D527D7DA8FD14FFA87D7DFD36FFA87D7DFD1AFFA8527D7D%7D52FD077D527D527D52A8A8FD15FF7D7DA8FD36FF7DA8FD1DFFCB7D7D52%7D527D527D527D7DA87DFD17FFCAA87DFD36FFA87D7DFD21FFA8FFFD05A8%FFA8FD19FF7D6F76FD36FF7DA2A8FD42FFA8527D7DBCCAFD05FF7DA8A8FF%FFFFA8FFA8FD24FFA8A852A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D5252A19AA17D9AA8FFFFFF%7D277DA8A87D7D7DA8527DFFFD087DA1A87DA8FD16FFA87DA8A8A87DA87D%A8A8A87DA87DA87DA87DA87DA87DA87DA8A8A87DA8A8A87DA8A1A87DA87D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%7D527D7DA8A1A19AC39ABCA8FFFFFF52FF52527DA8527D7DFFA8FD087D76%4B527DFD26FFA8FD19FFA8FD0B7D52FD067DA87D7D7DA87D847DA87DA87D%A884A87DA1939AAFFFA87DA87D52FD047D52A8FF525252FF7DFFA8527D7D%52A8FD1EFFA87DFD06FFA8A8FD06FFA852FFFFFF7DFFFFFFA87DFD08FFA8%FD0E7D7E7D7D7DA87D7D7DA87DA87DA87DA87DA8A8A884A89AC3FD06FFA8%FFFFFFA8FFFFFFA8FD05FFA8FD22FFA827527D527D277D7DA8277D527D52%777D527D527D7DFF7D277D7D7D5252277D527DFFFF7D7D527D7D7D527D7D%7D52FD087D7E527D7D7E7D7D7DA87DA87DA87DA87DA89AA1AFFD07FF7DFF%A87D7DFFA8FFA8FFFFFFA87DA8FFA8FD05FFA8FFA852A8FFA87D7DFFA8A8%7D7D7DA8FD08FFA8527D527D52A8FF7DA87D7D7D527D7DA87DA87D7D7DFF%7D7D767D7D7D4BA852527DFFFFFFFD0D7DA87D7D7DA87DA87D7D7DA87DA8%7DA87DA8A8A884A8A1A89ACAFD06FFA87DA87D52A87D527D527D7D7DA852%A8FD047D52FFFF7D7D7D52FFFF7D527D527D7DA87DFF7DFD08FFFD04A87D%A8A8FFA8A852A87DFD06A87D7DA8FF7D52A8A8A87DA8A8A87D7DFD04FFFD%047D597D7D7D52FD0B7D52FD047DA87DA87DA87DA87DA19A9B93CAFD05FF%A87DA87D7D5252A87D4B7D52FFA87DA8527D7D527DA8A8527D7DA8FFA852%7D52A8A87D7D7DA87DFD1FFF7DFD0FFFFD117DA87DA8527D7DA87DA87DA8%7DA884A884A8A19B93CAFD05FF7DA87D7DA8A8FFFF7D7DA87DFFA8FFA8A1%A8FFA8FFFFA8A8FFA8FFFFA87DA8FFFFA8FFA8A852FD20FFA8FD0FFF527D%7D7D527D52FD0D7D52FD047DA87DA87DA87DA87DA884A193FD05FFA8A8FD%18FFA8FD09FFA8A8FD31FFFD0B7D7E7D7D7DA87DA87DA87DA87DA87DA87D%A87EA87DA8A8A884A19AFD5BFFA8527D597D52FD0F7D597D7DA87DA87DA8%7DA87DA87DA284A19AFD5BFFA8FD0F7DA8FD057DA87DA87DA87DA87DA87D%A89AC3A1BCA1FD5BFFA8527D527D7D7D52FD0D7D527D7DA87D7E7DA87DA8%7DA87DA19AB5A1FD5BFFA8FD0D7DA87D7E7DA87D7D7DA87DA87DA87DA87D%A8A8A884A8A1BCA1FD5BFF7D527D7D7D59FD0F7D52A87D7D7DA87DA87DA8%7DA87DA87D9AA8FD5BFF7D52FD0C7D7E7D7D7DA87D7D7DA87DA87DA87DA8%7DA8A8A87DA8A19AA8FD5AFF7D52527D7D7D52FD0F7D52A87D7D7DA87DA8%7DA87DA87DA89A9AA8FD59FFA8FD0D7DA87D7D7DA87DA87D7D7DA87DA87D%A87DA8A8A87EA8A8A89AA1FD59FF7DFFA87D7D7D59FD127D7E7DA87DA87D%A87DA87DA87DA89AA1FD58FFA8A8FFFD117DA87DA87D7D7DA87DA87DA87D%A884A87DA8A8A89AC3FD57FF7DFFFFFFFD047D527D7D7D53FD107DA87DA8%7DA87DA87DA87DA876A8FD56FFA8A8FFFFFFFD0B7D7E7D7D7DA87DA87DA8%7D7D7DA87DA87DA87EA87DFD05A87DFD56FF7DFD05FF7D7D59FD107D847D%7D7DA87D847DA87DA87DA87DA87DA8A8FD55FFA8A8FD05FFFD0F7DA87D7D%7DA87D7D7DA87DA87DA87DA87DA8A8A87DA9FD55FF7DA8FD05FFA8527D52%7D7D7D52FD107DA87D7E7DA87DA87DA87DA8A8FD55FFA8A8FD06FFA8FD0D%7DA87D7E7DA87DA87D7D7DA87DA87DA87DA8A8A87EFD56FF7DFD08FFA852%7D7D7D59FD127D7E7DA87DA87DA87DA8FD56FFA8A8FD08FFA852FD0C7D7E%7D7D7DA87DA87D7D7DA87DA87DA87DA8FD57FF7DFD0AFF7D527D7D7D52FD%0F7D53FD047DA87D7EA8FD57FFA8A8FD0AFF84FD0B7DA87D7D7DA87DA87D%A87D7D7DA87DA8A8FD58FF7DFD0BFFA87D7D7D59FD107DA87D7D7DA8A8FD%59FFA8A8FD0BFFA8FD107DA87D7E7DA87D7DA8FD5AFF7DA8FD0CFFA87D59%7D527D7D7D52FD0C7DA87DA8FD5AFFA8A8FD0DFFA8FD0A7D7E7D7D7DA87D%7D7DA8FFFF7DFD5AFF7DFD0FFF7D7D59FD0E7DA8FD04FF52A8FD58FFA8A8%FD0FFFFD0E7DA8FD07FF52A8FD06FFA8FD50FF7DFD11FF7D7D527D7D7D52%7D527D7DA8A8FD09FF52A8FD04FF7D5252FD4FFFA8A8FD11FFFD077DA8A8%FD09FFA8FFFFFF7DFD05FF7DFD50FF7DFD13FFA8FFA8A8A8FD0AFFCBA2FD%05FF52FFFFFF52A8A8FD4FFFA8A8FD21FFA2FD07FF52FFFF7D7DA2FD4FFF%7DA8FD1FFFCAA2FD08FFA852FD53FFA8A8FD1EFFCBA8FD0AFFA852FD52FF%7DFD1DFFA8CAA8FD0CFFA852FD51FFA8A8FD1BFFA8CBFD0FFFA87DFD50FF%7DFD19FFCACAA2FD12FFA87DFD4FFFA8A8FD17FFA8CACAFD14FF2752FD4E%FF7DFD15FFA8CAA2FD17FF7D27A1FD4DFFA8A8FD11FFCBCBA2CBCBFD19FF%A8A8FD4DFF7DA8FD0EFFA8CAA2CAA8FFFFFFA8CAA8FFFFFFA8FFA8FD05FF%A8FD59FFA8A8FD09FFCBFFA8CBA8CBCBFD05FFCBA2A2FFCBCAA2CBCBA2A8%FFFFFFA2CACACBA2FD56FF7DFD05FFA8CBA8CAA2CBA8FFCAFD09FFA2CBA2%A2A2A8A2CAA2CBFFFFA2A8A2CAA2A2A2FD55FFA8A8FD05FFCBFD10FFCBFF%CAA2C4A2CAA2A2A8FFCBCBA2CAA2CAA2CBFD55FF277DFD16FFA8FFFFFFA8%FFFFFFA8CBA2A2A8FFCBFFA2CBFD56FF277DFD7EFF7DA8FD9CFFA8A8FD05%FFA8FD78FF27277DA87DA87D277DA8527DFD73FFA852527D5252F8A82727%52527DFD74FF277D7D5227527D52277D527DFD74FFA8A8FD07FFA8A8FD51%FFA85277A87DA8A8A87D7DA8FD75FF7D7D767D7D524B525252A8FD75FF7D%52527D7D7D527D7DA87DFD76FFA8FFA8FDCBFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2010-08-09T17:24:21-07:00</xmp:CreateDate>
         <xmp:ModifyDate>2010-08-09T17:24:22-07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2010-08-09T17:24:22-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>208</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA0AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FWDfmbqWuWf6PPliSafzSBO1npUfxQT2/ECd7mNmRKRfCY3Jrzog2dsV&#xA;TvyzqOmReULC+/SMt5aegrPqF2W9aRyfjMitur+pUGP9k/CBtTIykIizyas+eGKBnM8MQi9M1631&#xA;GS4a3jZbO32a7k+AM3UgKd6BdyWp8srxZhkuuXe4ej7QGonIQieCP8R2s9wHPl30fJEHV9JGnw6k&#xA;b2AadcCI2956qejILhlWEpJXi3qs6hKH4iRTrlzsUXirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVad0RGd2CooJZiaAAbkknElEpCIJJoBK2R9ZQhwY9J&#xA;b9k1V7gfrWL8W+XWmvE/q/f+x1RidYKO2n+Rn+qH2y8o/UqdKhttEm0+ySimKVYwTUlnB6sfEnJw&#xA;gIihyc7S6WGCAhDkPid99y+e7T8vfzpby7YaJPp1xFYW9jpsF1YjUEkQy6de6fKkkEkl5KsbiKCf&#xA;aKCEKdqy/C2Tchnmq6J+ZL+Tp7SxgvvWuNVeSwgl1Bzf2VgbbjGJZ4r62+sEXALFTebKw/vOPEqp&#xA;VY+U/wA7LnTbea+vru21uW5Elw/14fV4xF5fCwkxQy8PT/TLN6iIPj/aBSmKrdU8l/nHeRINE1DU&#xA;NGguHhsZ4L7UTc3EEU8Ti/v0kWeYNSRYjboH5L8VFStMVek/lzZea7byvFJ5tmMnmG8lmur6LmJI&#xA;4DLISkERUlQkcYVfh2rU98VTe917SLHU9P0y7uVhvtUMo0+Fg370wKHkCtTjUKa0J37Yqq6fqthq&#xA;IuDZy+qLSeS1uPhZeM0Jo6fEB08Rse2Kt32pWVgIDdy+kLqZLaDZjyllNEX4QaV8TtirWm6pY6na&#xA;m6sZfWgEs0BejL+8tpnglWjAH4ZI2X6NtsVRWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KqdxcQW8LzzuI4kFWdtgMEpACy15c0ccTKZqIQCW82pMs14hjsgQ0NkwozkdHnH6k7d99h&#xA;UIme55d36/1OvjilqSJZRw4+kD185/oj05y32iZ5c7R2KuxV2KuxVKLnzf5WtNVbSbvVrS11NVV/&#xA;qc8yRSsr/ZZFcqWB8VriqbKysoZSCpFQRuCDirF/N3kpPMeraVNO4SzsYrtWdGZLiOab0jBNAwBC&#xA;vE8PKtdjTrirC7X8qPOP+Io9U1G90+9dr6G6N8vqxT2ywXSzySW0QR0El7EixTDmoVRsWBpilG6b&#xA;+SOg23lfQNPn0zTp9TspLGTWJ5UM8cxt1CXHD1Ub+8Ap9leQAB2AxW0w8kflrP5c8yS6zW3D341V&#xA;tS9JnLPJd6glxZ05KoKxQKysNuLE8a8icUPQMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSJ/&#xA;N1pLcyW+k2lzrTwErcPYiL0Y2U0KGeeSCFnB2ZEcsvcDFW/8Q6v/ANSxqf8AyM03/ssxVx8x6qOv&#xA;lnUh23l0z/ssxVTuPNd/boHn8ualGhYKDz05iSegCreMzH2ArkZzERZac+eOKPFL9pPcB1Pkh/0j&#xA;rUt4Z7zy5qEwhc/VIo5NO9JQDtJ8d2pZz4kfD27kwESTcvl+OriYtPLLIZM3T6YdI+Z75+fKPKPW&#xA;RGf4h1f/AKljU/8AkZpv/ZZlrsXf4h1f/qWNT/5Gab/2WYq7/EOr/wDUsan/AMjNN/7LMVd/iHV/&#xA;+pY1P/kZpv8A2WYq7/EOr/8AUsan/wAjNN/7LMVQ1/50l0+L1r/Q7yzi3/eT3GlRLt13e9AxV4f+&#xA;fHnn8rfNuhehOJYtfsgW0y+t5LG6UE/ailNrcz/u3791O47gqQ8B0bzZ5o0Qg6Pq95p9DXjbTyRK&#xA;e+6qwB+nFL1v8uPzi/5yC1q/Gn6Iq+YmiAMi3cEfpxr2Ms6G341ptzfftih9JaV5h81/o63/AEt5&#xA;ZvDqXAfWvqr2Ag59xH6l6X4j3xQiv8Q6v/1LGp/8jNN/7LMVd/iHV/8AqWNT/wCRmm/9lmKoHVvP&#xA;jaTCkuoaBqMPqtwgiD6c8sr0rwhiS8aSV6fsopOKsls7g3NpBcGGS3M0ayGCYBZIyyg8HALAMtaG&#xA;hO+KquKuxV2KuxV2KuxV2KuxV2KuxV2KpPqvmixsro6fbRyanq9Aw020AeRQ3RpmYrHAh7NKy1/Z&#xA;qdsVQZ8varrFX8y3Ki0bpolkzLbU8LiYhJLj5UROxRuuKrdS84aLpEQs9PjWZoVCRww0SGMDYLUb&#xA;beCjFWJah5w129JH1g28Z6RwfB/ww+L8cKpNLK7EvIzO57k1J+/ITmI+9xtTqY4gL3keURzJ8v0n&#xA;kOZROna5qmkzx3dqgumiO9pIfhZG2dYyfsOV6N49dsqMJfUd5fjkns/SCWUT1EvUeVbxh7v99L6j&#xA;7qi9W0vWdP1PS4tTtZQbSVeXJvhK02ZXB+yykEMD0OWxkJCw5ubDLFMwkNx+PiD0PUJNq/5nfl5p&#xA;HIah5j0+F0FWhFxHJLT/AIxxln/DJNTE7j/nI/8ALppWh0ddR1+dSB6Wm2Urk1/4y+jimlJvzZ/M&#xA;bUCq6N+Xd7Asp4QT6tMtpVyKqvpMFO/jy2wgWyjG7b+rf85JasKyXmgeW4j0EEct1OvzEgliJ+nA&#xA;xQNx+XGr3Vw0Hmz82L+SYkCWzsZYNMoSAeJRXcftCnweG2SET3MxikRYBpGWf5F/kpaXFxJfqNTv&#xA;LWj3cuoX7u8de8qq8aipP7a4OEr4cttjunetaD5V8t+TNQ1Xyd5fsH1FbZv0W9jbwM8k8nwRMJAK&#xA;uFdgTv0GAimBBBovAfy5/wCcfEv5DqnnvVbfSdPik4SaetzD9aeQ1bhK/Jlh5UOx+PY7L1yXAe5s&#xA;8KZ5A/J9M6Avkny3piabpX1PS9NhKiBVliVJOaI/PlzZmJEi1Z/iPXcEEvAV8GfcfkU2TWdIeITJ&#xA;fW7QlQwkWVCpVn9NTUGlC/wj32wcJYnHK6opbD548tyhGF5GsTyTRGZpIgimBuNWbn0k6x/zDJnH&#xA;JtOlmOnd9v43Wzah5k1OX0dItxp1lX49WvV5Ow7/AFe1BVv9nMVA/kcZW47zTTvzT8v6J5ek8wya&#xA;Vc6nr9xpEmt/WJZoBNLYiVxColuJImP7tQ8qWsJSP+UEqGVTLz1+ds2j6bfS6Zp0kF9p0lzazxah&#xA;FG8Zu4dJk1T0Q9vc7ekqoJGAYHlRT+0FUTD/AM5BeS9Qvo9K0xnXU71o4NONy1sqPNdj/QWMIn+t&#xA;NFcckYMsfwqw58CcVZ15S8wweY/K+k6/Ahii1W0hvFhY1KetGHKE9ypNMVTbFXYq7FXYq7FXYq7F&#xA;Uu1jzBpWkLGLyU+vOStraRK0txMw7RQoGdvegoO9BiqW/VvM+uCt476Bpjf8ekDq1/Ku20s6Fkg7&#xA;grCWbuJF6YqmMVtoXlvSZWhijsbC3VppiikkkCrO1KvI7dyasx8TirzXzH+adjqTNbwXJtLHpxdX&#xA;jeQf5XIDb2H04qxz/Eeh/wDLZH95/phVIvMP5hx6bPFBp2nyaq8qFvUjkWOJTWnFnYGh+jAT0YmQ&#xA;ur3SQedPO96P3B0PSg37V3epM4/5FOQPpXIQx0bO5cfBpRAmcjxZD18u4DpHy+JJO68Ra3dq0uqf&#xA;mBbW8abmHThAG/2Lhkf8DkiaFubjhxSA2F9+wXWvlj8sUube71fXZfMWntIW1C1utQKS0egMyIhj&#xA;k5JQclO7DpvTKjKtxy697nwwcROPIanXoPEDHb+G+W/Q3QPPY2Oy6L5c/wCcd9MSN7CPy8aCsck8&#xA;9vcPQ715TvI1fpy51xtlcXnPyDaW/p2utaWkcYJSCG6tUGw6KOaqK4qAstPMOiXtxFf3erWCRxVN&#xA;nbRXcUgBdeJkdw1GfiSoC7Cp3NdpEgbBsMgBQTP/ABP5b/6u1n/0kRf81ZFqY3faT5W1O7vpE1mz&#xA;NxfmUgq0Tuoe1SBQKPU+mYzIPnT3y0ZapyoaoxAFcv12lXmT9FeW7H9MXms2721tKvoKIY2PqzXP&#xA;qhpy1xGrjm1K/D2PbCMgLZHUROxFfHyrbZP/ACvd6pLoVqNPXTdShCBzdR35NZJKu/8Ac28yVDMd&#xA;1c+ORkYktWQ45SJs/L9q2LyTqcNpJaQ6pCsEkdtbsptW+KC25/BJSdeRk9T94RSvtXJeIO5mdVEm&#xA;zHvPPqfh8lS/8jR3ktzPPdJzmEpWkPwxvJbwQclBc7L9XJpXo1O1SBlpENVwgAD7fMn9KgfKk73c&#xA;j6ddp9WnnSaYPCSgWO7N4qROJF/bYgniRTwx8T8fYv5nbcb13+VIyXyTBOoE9x6hD30gLJUBr4sa&#xA;qpag4cz8/bAMn6PsYx1JHT+b/sWQ2sPoW0UPLl6SKnKlK8RStMgXHkbNsVH5VeS3s4rO8tZL+1t4&#xA;rm3tre5nmaGKG79USJHCrLEpEc7RLIE9ThtywIX3v5W+Rb6zltL3TmuYZ5ZLiYy3Fy8jzTWI06SR&#xA;5GlMjM9qOBJb/K+18WKtQ/lf5RtJbufS47rSbi9aWWZ7C9u4IzLMGrIbcSfVmKliVV4yo8MVZFpW&#xA;mWelaZZ6ZYx+lZWEEdtaxDosUKBEX6FUYqisVdirsVdirsVQ2o6np+mWj3moXEdrbR/allYKtT0A&#xA;r1J7AbnFUl+v+ZNbHHTIm0XTm2OpXkf+luN97e0cUj9nnH/PIjfFUx0jy7pmlGSW3Rpb2f8A3pv5&#xA;2MtzLTf45Wq3EH7KCir+yAMVTFmVVLMQFAqSdgAMVeYeavMcmq3ZiiYiwhNIk6ciNuZ+fbCqRYoW&#xA;ljWg3P6sqlPfhjz+5ws+pPF4eMcWT7Ijvl+iPOXkLITjmQzvAQwkQBuTDZge6n2Ox/2sMMYj723T&#xA;aYYgd+KR+qR5n8dANh0VgKnLHIRUTBQAMUrrizs7tVFzCknHdGYfEp8Vbqp+WQlCMuYb8GqyYvok&#xA;Y3z7j7xyPxRHl7zMnkoNBePI/lhuT1PKV7OQkmo6s0Uh6js2/c5UI+Ht/D937HYZcv50GRoZ4jpt&#xA;xxHkNuIfIx8x6usKysoZTVSKg+xy91Ci+n2DuXe2iZ2NWYopJPuSMVW/ozTf+WSH/kWn9MVWS6Np&#xA;EqFJbG3kQ9VaJGG3sRiqV6x+X/krWLI2WoaNay2rMrtGsaxElG5LVo+DUqOld++Kpho/l7QdFhMO&#xA;j6ba6dEQAUtYY4QaePALX6cVQN35rie6l0/RLdtY1GE8J1iYJbQMDQi4uSGRGHdFDSd+FMVWQ+WL&#xA;m+dLnzLdDUJFIZNOhBisIyDUfuqlpm/ypmYVFVVMVZCAAAAKAdBirsVdirsVdirsVdirsVdirsVa&#xA;kkSNGkkYJGgLO7GgAG5JJxVjv+Jr7Vj6fle3W4gPXWrnktiPeEDi91/zzIT/AIsB2xVE6b5Wtbe7&#xA;TUdQmk1bV0rwvrqh9KooRbwqBFAKGnwLyYfaZsVTrFXYqkXnW7ktvL83p1DTFYiR2DH4vvApiry/&#xA;ChaSSeK9e7eH9uUymSaj8+79rr8uolkkcWE7j6p9I+Q75+XKPOXSMrAAycICIoOVgwRxR4Y+/wAy&#xA;e8nqULd+lMqqGIdGDpIpoVYd/wCBybets7x5CY5wEuV3ZAagrWgde/E4qjWuY4Y+choo8ASST2AF&#xA;ScVW3N+0Z9Bi6SzMEtI4F9a4mYbsIoVViTT2NOpoMVZN5X/LS4ubh9T80jlFI4lg0JvTdUp9n61J&#xA;GAJiv7MdSi9y+xWIHm25MgkBURGh0vfzNk7+6vc9JwtTsVdirsVSjVfM+n2NyLCJZL/VmUMmmWgE&#xA;k1G+y0lSqQoabPKyr71xVB/oTW9Zq3mC5FtYt00awdlVgf8AlpuqJLL/AKsfBOzcxiqfWdnaWVtH&#xA;a2cKW9tCvGKCJQiKo7Kq0AxVVxV2KuxV2KuxV2KuxV2KuxV2KpDeeao2upNP0S3bV9SiPCcRMEtb&#xA;dvC5uSGRCO6KGk78KYqsj8qy38iXPma5GpyKQ8enIpj0+JhQgiEljMykVDzFt91VMVZCAAKDpirs&#xA;VdirsVQmq6bBqVhLZzbJINmHVWG4YfI4q8e12C50a/eyvEKuvxJIu4dD0Za06/hkJiR2GwcPUwyz&#xA;IhE8MP4pfxe6PdfWXTpvuC1tVUbRx/Isf4DJRiAKDkYsUccRGIqIUmu5ZPtNt/KNhkmxcsgAqTQD&#xA;qTiqElmk1CRIdGR72+RyheziN00NVJPMIGChiAp5kDeuKsx0P8ufNd6/r3wi0KOXibj4lurxqD7K&#xA;hSYI6V+Eln/1MCvQvL/lDQtB5PYwFryUBZ7+cmW4kA7NI24Wu/BaKOwGKpzirsVdiqXax5g0rSEj&#xA;N7NSaclba1jVpbiZh1WGGMNJIR34jbqdsVS30PNOtNW4dtA0s/8AHvCyPqEor0kmXnFbgjqI+Tdx&#xA;IpxVN9K0bS9Jtvq2nW6W8RPN+NSzueryO1Xdz3ZiScVRmKuxV2KuxV2KuxV2KuxV2KuxVKdW8zaf&#xA;p84s1WS+1V15RaZaASXDA1ozAlUiTb7crKnatcVQR0XXNa+LXrj6nYt/0prGRgGG+1zdDhJJUdUj&#xA;4r1B5jfFU+s7O0sraO1s4Ut7aFeMUEShEVR2VVoBiqrirsVdirsVdirsVQGsaFpGs2ptdTtluYT0&#xA;DVVhuD8LqVZd1HQ4qx1/yk8kEfu7e5iPci9u32+Ukrj7sVcn5S+SgP3kF1L2BN7dJT/kXIn44qjr&#xA;X8ufI9tSmjW05G4e6U3TAg1qGuDKa4qyGKKKGNYokWONBRUQBVA9gMVXYq7FXYqluueY9E0K0N1q&#xA;t5HaxClOZHJidgqr1JJ2GKvOtZ/MTX9dZrDQ2GgwSLyW7uQDfuh6NFbN/dg0+1Jv/k5Ekcr3b4Yp&#xA;CPiGJMLq+nz72QflrdaVLFcRyxhfM8QA1S4mYy3E61+CZZHJYxMfsqKKh2AGRhO9jzDZqtMIVKBv&#xA;HL6T98T/AEo9fmNiE983+btE8p6LJq+rzCO3Vliij5xo8srn4Y4/VeNCx3O7AAAkkAE5Y4ilF558&#xA;tiy+u397baZbcbc+rd3dmE5XUInROcc0qcuLeNG6qWX4sVUL78xvKen2ep3eoXsdlFpdxJaN9Ykh&#xA;iM80dulzxtubj1CySjiOtcVTS48yaFaWlldahfQadHqHAWgvJY4C7yKGWNebDk+/QVxVDSeePJUa&#xA;zNJ5g01Ft2Ec5a8gAjdld1V6v8JKxOQD2U+BxVER+afLEty9rHq9k9zH6QkgW4iLr9YoIaqGqPU5&#xA;Dh/NXbFUTY6rpmoJzsLyC7Tij8oJElHGReSNVCdnXdT3GKorFXYq7FXYq7FUgi8geTImkaPSLdXm&#xA;cySsFNXdjUsxrUn54qv/AMEeU/8Aq2Q/cf64qxCLWfysTzBrWh6jZwWF3o8rKWkWVo3gSzS8aVpQ&#xA;gijIRpPgL8iELfJSuOv/AJMKbZXRUkunaKOF7O9SVXR442EsbRB4qNNH/eBdmB6GuKr11H8r4ksP&#xA;r1isDai7R200VpfS2hYPInE3RgSJSBCzMHI4gEn4fixVSl8yfknDbxzzBI0lZ1RHs7xZKRxJOzmM&#xA;xc1T0ZVk5leJT4geIJxVZDrn5ZC91q3vtIks00i8jso5Hs71muHkt456RxiEMXq7UjXkSi+p9hgc&#xA;VRllcfl1cW+tahJp0EWjaNDBdtqFJHEltPaLd+r6YXmKI/2aEn8MVQj67+VnqWskdjF+jZUu2u7u&#xA;aOe3e3a0SGTg1vLGspMi3CldqmopXkMVVoNd/Jme+t7BURLu4FUiltLuIpSeS1PrepGohpPC8Z9T&#xA;jRtu4qq0um+SfNmmXbeUOAvbEoW5QSxB/UTmgpcIvJJF3R1+E+NMUMAla4hleKWJI5YyVdGiQMrD&#xA;Yggriq1bhu6R/wDIuP8A5pxVZPdOs1oqrGBJKVcenHuPSdqfZ8VGFUcroescf/ItP6YFdMrNHWCO&#xA;ESqQQHjXiw7qaDavj2wqr2sllcISkUZ4sUkUxoGVh1U7dcVVLXSNJhuRcx2sYuFrxmK1cV60Y1Ir&#xA;iqYy29rcxiO4iSZAahXUMAfHfIyiJcw24c+TEbhIxPkaQbaTdWl3b6jpF5LBe2RLW6SOZENftRsz&#xA;8pODUoRWntlMsJBuJ3DssXakZRMM0ImM+ZiOGQ7pACo2PdZ5E0S9Bju7Tz15ZEEM31G6hurSS+gZ&#xA;eckMtpcxXLRleS7SelRXrSh5b9MshPiDganTHDKjuDuCOUh3j8bHY7hKvMv5USav5gn1uHVEinlu&#xA;BMtrc27z23A2aWjxyRxz25kr6fMVbjvQqwybjpZr/wCWqRO0C+YY7e/1765p6+tp4uPUjvbO2hm9&#xA;OGGSERui2HP1BRFBIK0pilMPNvlWLX9Qt9OsdXW21Sysv0Zd+pp813GsdxwuVkUpJCsDN9TpyZyp&#xA;2U/FxxVMLb8rtHittEicW8smlXz3tzMbVOV0rJeBInqxoEe/ZwSW3rt8VQoY75j/ACo0yC1vJLvW&#xA;/wBH6bLOY9H+r2nGW0uNU1S1uBydHb1R9Yhiji+BVROtQK4pZZ+XXk6w8qabf6fZzS3CPeySB5oW&#xA;hKRhEjhhTl9tIokVQ67ManrXFDK8VQOs63pujWJvdQkaODnHEojjkmkeSVwkaRxQrJI7MzABVUnF&#xA;Va4v7W30+TUJ2MVpDE1xK7qwKxqvNiUI5ghR0pXFXG/tvqcV4vOSCb0zGY45JGImKqh4IrMB8QLE&#xA;iijdqAHFUoj8+eVJJI40vqtKYApMUwUfWppbeDkxTivOa2kQciPioP2lqqn+KuxViWq/lh5b1WW8&#xA;kvGuGN9dzXtxxdVq0+n/AKNaMEJXgsPxLvUPvWm2KojQPIem6Nqp1Zby7vdSkS4S5urpoi0xunhZ&#xA;3cRRxLyUWsaLxAHEdK74ql4/KrShJZhdV1EWdlbT2a6eWtWgeG7ctcBuVu0itIG4l0dW47Ajeqq2&#xA;L8pNACS/WL2+u7ie3urSa6mkh9Roru2jtCv7uJEHpwwKEoviW5EnFUdqX5eaZfST3C315a3094l+&#xA;L2BoTKky2I05uIliljIe3qG5o25qKbUVS+//AC9i03yD5k0bRGnvb3UtIawt1uHiDO8Gn/U7deQW&#xA;JAWCLyJ2rvsMVc35S6NcWo+u39/PfvJJcy3zPbiY3Mi24WWiQrFWH6lEEATjt8QauKt2n5RaBDHe&#xA;ie/v72S/eCS6mmeBXYwX8uomnowxKBLNcuHoPsn4eJ3xVN/Jnkqy8qWRsrK9u7q1CRxQQ3JhCQxx&#xA;V4rGlvFAlTy+J2BdtuTGgxVKvzB8l/pKJtU0+P8A3IRL++jUbzIo7AdXHbxG3hirybFChdN/pFj/&#xA;AMZz/wAmJMKUxR8VV0fFWpEkWRbiEnmgPOEUpKKbA1/aH7JxVHWtyk0SyLUBh0YUIPcEHoR3xVGR&#xA;viqpLGZ4uAleFq1WSMgMCP8AWDKfpGRlGx3NmHLwSsgS8jy+yj8ig4JPMWi6tFrOnmO8eP4LmEVh&#xA;eeDujCpjdx1U/DmPKE4niG7uMOfS5cfhT4sfWJ+qMZf7oRPUeroej13QdcsNc0uDUrJiYZlqY2oH&#xA;jf8AajkAJ4up2Iy+EhIWHU6jBLDkMJc4n4HzHkeY8mOedtI1K717TpbYzRxXOm6ppKXkKPIbS6vl&#xA;gaC5YICVVfq7qX6AkeOSaWFP+TXmOW11CKC20fR0u4bmOO0spZmh5zaPNpyyMxt4jVpZubbE0J+0&#xA;3VSmmtfk6RrOl3GhW1l+jbNC5sLqWZEhvmlSQ3sfCOWR2PpjkiSw8qbtucVVY/yoe68sPpGraVo8&#xA;1+t9Z3cmsms8196F4s0810JLdWSSWHmnEO4PIrULiqjqf5Ua7PqbzQPYNaveTTWqyGRGsFee3kS4&#xA;tUSMqZ1itzHT4KV+3SqlVO/In5eXXlma5lDwJLf27rfTQl2d7n6zNJHJ8YFQsUwUV6Up0xQx7Sfy&#xA;XnFlFb6ta6VOsd5p0ssVGuI5lswwurqT1oh/pN7y/eDcbCrtim07/ND8v9R8zW9vDp9tp11BDZXl&#xA;klnqLSRQwS3KRrDeQiOKcerAEYKCo2bZl7qEDa/lEYbKe4CWqeYLjVILqW9V5SpsYtSt75oTVR8Q&#xA;Ft8I405dwGY4pQuoeRNe03QtVgULd3Wrafa6TZJaCRylwNQvLkzSMUVY44ku0bmxG6kdePJV6xih&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KvNvzG8l8TJrenR/CfivoFHTxlA/4l9/jiry+8/wB6bH/jO3/J&#xA;iTFUcjYVV0fFVdHxVayPFKbm3Xk7lRPHWnJRtyHbmB9428KKo+2uYpo1kiYOjfZYdMVRkb4qqSy3&#xA;CxEwRrLJUfAz8AR3oeLb5GRIGzZhjAyqZMR3gX+kfjog9L80/wCGNY/SLQy29jckLqlnIAFNdlnj&#xA;kUtEXHdeVSPA1rjHIIG6Ivn+t3uPRS1OPwwY5JxHolE71/MlE1Kv5suGgdr4TcezWV7aX1pFd2kq&#xA;z206h4pUNVYHMoG3QSiYkgiiFbFi7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq4gEUO4OKvF/wAzvKCaPqOn6hZgLp91dMgiG3pym3lbiB/KQpI8OnhirGQaYoVEbClXR8VV0fFV&#xA;h5Wzm4i/uKFp4FWpJO/Nab18R3+fVVMoJldFZTVWAKkdwcVRUb4qiAQy0O4PUYqCqeWNcHlO++ry&#xA;g/4dvHFeIr9VmagBAA/u26f5PbagFH92f6J+z9jtZH83G/8ALxG/9MDr/XiOf84b8weLq0ckckay&#xA;RsHjcBkdTUEHcEEdQcudU3irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirHf&#xA;NcENxqXliCZBJDLqcySI24KnSr4EHFXmvnPyjPoN7yjBfTZyfq0vXievpv8A5Q7eI+mirHQaYqqo&#xA;2FVdHxVXR8VUwWtJDLGC8ErVnWv93UfbUHt/MPp8aqppDMrqGUhlYVVhuCD3GKoqN8UKrpFPE0Uq&#xA;h43BV0YVBB2IIwEXsWcJmMhKJojkmnkjzFLo040LUWZ9NaraffNVvSBO8UzGvQnZj9Pc5VC4nhPL&#xA;o5upMMsfFjUZfxR5b/zojuPUD6T5EV0jLXAdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVSHzJ/x2fKv/AG1Jf+6Xe4qmup6baalYy2V2nOCYUYdwezKexHbFXiHmby5eaDqLWs/x&#xA;QtVracD4XSv/ABIftDFUpBpiqsjYVV0fFVdHxVSRxYHlULY/ygH92xPXb9g13/l+XRVNo3xVExvi&#xA;hW2daHFL03RTKdIszKSX9FKk9T8IpX6MCo3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYqkPmT/js+Vf8AtqS/90u9xVPsVSzzDoFnrmmvZ3I4sfihmAq0b9mH8R3xV4hq+k3uk38t&#xA;jeJxljOxH2WU9GU9wcUIRWpilWRsKq6Piquj4qpwyPaSBDye2kYlXNKRE7hT/kHt4dPDFU1jfFU7&#xA;8uaXJqd8sVD6EdGuH8F8K+LdsVemgAAACgGwGBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FUh8yf8dnyr/21Jf+6Xe4qn2KuxVIfN/lS31+w4bR30IJtZz2J6o3+S34dcVeKXdp&#xA;c2lzJbXMZinhYrJG3UEYoU1bClWRsVV0fFVb4HQo4DIwIZSKgg7EEYqitGtZGvILSWRYLGaWO3gv&#xA;JSeKSSV4ROx/abjSOp+I/D16qvZNJ0q10yzW2txsN3c9WbuxwKjMVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVSHzJ/x2fKv/bUl/7pd7iqfYq7FXYqxLz55MXWrY3lmoGqQLsO&#xA;glQfsH/K/lP0fJV4+6OjsjqVdSQykUII6gjFDathSirWK4uJlht43mmf7McalmNBXYDfFWeeX/y3&#xA;u5Ss+rv6EXX6shBkP+sw2X6K/RgVnf6J0saf+jzbR/UaAGAqCmxrU1713r1rviqQ6XquoaLqkega&#xA;/ObmK6YjQtZkAX1xu31S4KgKLmNR8J29VRUfEGGKspxVj2n+fvLl/rMWiwm9i1KeN5YoLrTtQtax&#xA;x/afncQRIF7VJ67dcVZDirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqQ+ZP+Oz5V&#xA;/wC2pL/3S73FU+xV2KuxV2KpDq/kfy3qlw1zcW3C4f7csTFC3uwHwk+9K4qg7b8s/KkNC8MlwRT+&#xA;8lbqO/wcOuKsistO0+xjMdlbR26HdliULU9KmnU4qqzTQwRPNM6xxRgtJI5CqoHUknpjSQCdglaR&#xA;zaxKk86NFpUZDwW7ji87KarJKp3VFO6odyd28Mny97aSICh9X3IzVtKsdW0+awvo/UtpgOQBKsrK&#xA;QyOjqQyOjAMrKaqQCN8g0pLoesX9jqC+WtdkMt/wZtL1NgFS/hQVNeI4rcxD+9QfaHxqKVVFUD5M&#xA;0nzpp+oXVzrljpr3OpytLqOqW99PLLxUEW8MUD2UIEUS0UL6v8zbsTVVmeKuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KpD5k/wCOz5V/7akv/dLvcVT7FXYq7FXYq7FXYqgbvV7eCU20&#xA;Ktd3tAfqsNGcV6GQkhY193I9qnJCLZHGSLOwUotMnupUudVZZGQhobNKmCJh0Y1oZHH8zCg7Adce&#xA;KuSTMDaPz6pnkWp2Kpdr2g6frmnNZXoYAMstvcRNwmgmjNY5oZBukiHcH6DUVGKpZofmG6gujoXm&#xA;SSOHWYQDb3W0cN/CWEazQgnZ+TKssXVWIpVWUlVkmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KpD5k/47PlX/tqS/8AdLvcVT7FXYq7FVK5u7W1j9W5mjgjHV5WCL97EYQLTGJPJA/p&#xA;sTbafazXhPSUL6UPz9WXiGHugbDw97Z4VfUQFC6FweB1jUorCCZhHHa28npc2bon1h+MjE9vTCHC&#xA;PIMo1/CL/Hd+u0wsIdNt7QfUViS1NW5RU4nxYsOp8SciSerXMyJ35qwurYxxSCZDHPQQPyHF+Qqv&#xA;A/tVG4pjTHhKpgQpQXdrOSIJo5SFDkIwb4WJCnY9CVNPlhISYkc1XAhhn5lflpa+drWyP6RudM1L&#xA;SpRc6XdQNWOOdSCryQmgenHY1BHY4qyvTjfmwg/SCxrfcFF0ISTF6gFGMZYBuJO4rvTFURirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYh538w6Hpeu+UYtRvobSSXU5HiSVgpZf0fdQ1W&#xA;vX95Mi/Nh44qy/FUA9vrju1L2COIk8QluxcDenxNMyn/AIHJWGwGHcfn+xb+h5ZKi61G7nU/sK6w&#xA;AfI26xP/AMNjxeSfErkB9/3qtto2lW0vrRWqC4/5aGHOU/OR+Tn78TIljLLI7E7IzIsEn1TR2u9d&#xA;0u8pL6VqJTIyTyRqDQcKorrWprXbcbHbJxlQIb4ZKhId/kx6DS/ORuLM3f1mVEgiUiO5VUElXEwn&#xA;rIfU2YU+Bq7Dku+WGUejkHJio1XPu+VLbbSddtZ9Le9trqSGwNu7PFN6kEcMVn6boLZHLPIJ6mqx&#xA;sSOh7YmQN1+N0yyQIlRG9/f391eab6vqE2prbw6fBfukcvqXkKR3GnyPEFYAJPOLda+oykqHBIrk&#xA;Yiudfe044CNmRj5cpfYLY81h5jsbXS7WdbtUka1t1tbW6Ebu6W108o5iVAPjCFjyFadyMsuJv8dz&#xA;kccJGRFdeY84+TO9KjvI9Ms471ud4kEa3L1rylCAOa+7VzHlV7OBkIMjXK0VgYOxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjfmzyVY+YtV8t39yql9Av/AK8pIqSohcBR/wA9vSb/&#xA;AGOKskxV2KuxV2KuxV2KuxVh/ln82fJHmG4voLS/jt5LE8uN3JFC01ubeO6+tQqXLNB6MytzIFO+&#xA;KqvmD80vIeieXJPME+s2dzYiKWW2W1ubeSS69AEulsDIqyuOJFAcVRd55x8oLqFtZtfW13drfJZF&#xA;IXjne1u5UcRiZVJaEvQxgkdWp3xtIJDIMUOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxVjsn5g+T49Yn0ptVtfWs7eW51CYTw+larDLHCUuW5/unZphxDDscVR/+KfLPper+l7L0ghl&#xA;9T6xFx9MReuXrypx9L95X+Xfpiqrp+vaHqNxcW2n6ja3lzaGl1DbzRyvESSv7xUYlfiUjfwOKo7F&#xA;XYq7FXYq7FVssSSxPFIKpIpVxUioIodxviryLSvyIvrbQ4rRtdFrqNvcwTQXtvbrIyR2WitoluP3&#xA;hALGPjO1VoGqm/28VQ6/8483yWvmaNfMyvcea4nt9TmntJ7rhEyJQW5ub2aVX9RCzM8j1FBQcQcV&#xA;Rek/kMNJvtMaHURd2thdW8iSXD6g1yltbXIvhGPVu7m2Je5hi5enBFtyO/QqvXMVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirzRfyh1JLq2mTXIOGmD/cRG1gTxYXy3oN0RcD1/iB&#xA;U8RGTs1a1qpQcn5BWEl9YXcmsTFrMW/qxiFQkpBcXtQGoouomWMD9gD9quK2yzyn5Ch8u3n1mK6W&#xA;Uut59YAhEZle7vDdLIzBjvGren77HbpihleKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;v//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:FB7F1174072068118DBBC16639B0EF74</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:24:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0bd166fe-e485-cb4e-8348-fb036802320c</stRef:instanceID>
            <stRef:documentID>xmp.did:0CC3BD25102DDD1181B594070CEB88D9</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>386.725586</stDim:w>
            <stDim:h>315.044922</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -274.4 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 274.4 li
339.635 274.4 li
339.635 0 li
cp
clp
[1 0 0 1 0 0 ]ct
145.948 90.0784 mo
148.61 88.6947 li
148.149 87.8075 li
145.487 89.1911 li
145.948 90.0784 li
151.272 87.3111 mo
153.934 85.9274 li
153.473 85.0401 li
150.811 86.4238 li
151.272 87.3111 li
156.596 84.5437 mo
159.258 83.16 li
158.796 82.2728 li
156.135 83.6565 li
156.596 84.5437 li
161.92 81.7764 mo
164.581 80.3927 li
164.12 79.5055 li
161.458 80.8891 li
161.92 81.7764 li
167.243 79.009 mo
169.905 77.6255 li
169.444 76.7381 li
166.782 78.1218 li
167.243 79.009 li
172.567 76.2418 mo
175.229 74.8581 li
174.768 73.9708 li
172.106 75.3544 li
172.567 76.2418 li
177.891 73.4744 mo
180.552 72.0908 li
180.091 71.2035 li
177.429 72.5871 li
177.891 73.4744 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.697627 .675227 .638575 .739559 cmyk
f
145.417 90.3867 mo
145.417 244.15 li
145.417 90.3867 li
.75021 .679683 .670222 .90164 cmyk
f
144.917 90.3867 mo
144.917 244.15 li
145.917 244.15 li
145.917 90.3867 li
144.917 90.3867 li
.697627 .675227 .638575 .739559 cmyk
f
146.441 246.513 mo
146.94 244.859 147.4 243.784 147.934 242.458 cv
142.889 242.458 li
143.114 242.933 143.881 244.859 144.38 246.513 cv
144.915 248.282 145.28 249.887 145.411 250.927 cv
145.542 249.887 145.907 248.282 146.441 246.513 cv
cp
f
308.988 39.1621 mo
123.716 39.1621 li
.988762 107.828 li
308.988 39.1621 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
308.988 38.6621 mo
123.585 38.6621 li
.744633 107.392 li
1.23291 108.264 li
123.846 39.6621 li
308.988 39.6621 li
308.988 38.6621 li
cp
.697627 .675227 .638575 .739559 cmyk
f
130.514 70.6553 mo
246.055 194.949 li
130.514 70.6553 li
.75021 .679683 .670222 .90164 cmyk
f
130.147 70.9957 mo
132.19 73.193 li
132.922 72.5121 li
130.88 70.3148 li
130.147 70.9957 li
134.232 75.3902 mo
136.275 77.5876 li
137.007 76.9066 li
134.965 74.7094 li
134.232 75.3902 li
138.318 79.7848 mo
140.36 81.982 li
141.093 81.3012 li
139.05 79.1039 li
138.318 79.7848 li
142.403 84.1793 mo
144.445 86.3766 li
145.178 85.6957 li
143.135 83.4985 li
142.403 84.1793 li
146.488 88.5739 mo
148.53 90.7711 li
149.263 90.0903 li
147.22 87.893 li
146.488 88.5739 li
150.573 92.9684 mo
152.615 95.1657 li
153.348 94.4849 li
151.305 92.2876 li
150.573 92.9684 li
154.658 97.363 mo
156.7 99.5602 li
157.433 98.8794 li
155.39 96.6821 li
154.658 97.363 li
158.743 101.758 mo
160.786 103.955 li
161.518 103.274 li
159.475 101.077 li
158.743 101.758 li
162.828 106.152 mo
164.871 108.349 li
165.603 107.669 li
163.56 105.471 li
162.828 106.152 li
166.913 110.547 mo
168.956 112.744 li
169.688 112.063 li
167.646 109.866 li
166.913 110.547 li
170.998 114.941 mo
173.041 117.138 li
173.773 116.458 li
171.731 114.26 li
170.998 114.941 li
175.083 119.336 mo
177.126 121.533 li
177.858 120.852 li
175.816 118.655 li
175.083 119.336 li
179.168 123.73 mo
181.211 125.928 li
181.943 125.247 li
179.901 123.049 li
179.168 123.73 li
183.253 128.125 mo
185.296 130.322 li
186.028 129.641 li
183.986 127.444 li
183.253 128.125 li
187.339 132.519 mo
189.381 134.717 li
190.113 134.036 li
188.071 131.839 li
187.339 132.519 li
191.424 136.914 mo
193.466 139.111 li
194.199 138.43 li
192.156 136.233 li
191.424 136.914 li
195.509 141.309 mo
197.551 143.506 li
198.284 142.825 li
196.241 140.628 li
195.509 141.309 li
199.594 145.703 mo
201.636 147.9 li
202.369 147.219 li
200.326 145.022 li
199.594 145.703 li
203.679 150.098 mo
205.721 152.295 li
206.454 151.614 li
204.411 149.417 li
203.679 150.098 li
207.764 154.492 mo
209.806 156.689 li
210.539 156.009 li
208.496 153.811 li
207.764 154.492 li
211.849 158.887 mo
213.892 161.084 li
214.624 160.403 li
212.581 158.206 li
211.849 158.887 li
215.934 163.281 mo
217.977 165.478 li
218.709 164.798 li
216.667 162.6 li
215.934 163.281 li
220.019 167.676 mo
222.062 169.873 li
222.794 169.192 li
220.752 166.995 li
220.019 167.676 li
224.104 172.07 mo
226.147 174.268 li
226.879 173.587 li
224.837 171.389 li
224.104 172.07 li
228.189 176.465 mo
230.232 178.662 li
230.964 177.981 li
228.922 175.784 li
228.189 176.465 li
232.274 180.859 mo
234.317 183.057 li
235.049 182.376 li
233.007 180.178 li
232.274 180.859 li
236.359 185.254 mo
238.402 187.451 li
239.134 186.77 li
237.092 184.573 li
236.359 185.254 li
240.445 189.648 mo
242.487 191.846 li
243.22 191.165 li
241.177 188.968 li
240.445 189.648 li
244.53 194.043 mo
245.688 195.29 li
246.421 194.609 li
245.262 193.362 li
244.53 194.043 li
.697627 .675227 .638575 .739559 cmyk
f
246.055 194.949 mo
272.449 223.344 li
.75021 .679683 .670222 .90164 cmyk
f
245.688 195.29 mo
272.083 223.684 li
272.815 223.003 li
246.421 194.609 li
.697627 .675227 .638575 .739559 cmyk
f
275.65 225.937 mo
274.89 224.386 274.495 223.286 273.983 221.951 cv
270.288 225.386 li
270.776 225.58 272.649 226.469 274.141 227.34 cv
275.737 228.271 277.097 229.198 277.901 229.871 cv
277.289 229.021 276.464 227.597 275.65 225.937 cv
cp
f
103.519 91.4306 mo
100.717 91.4306 98.3145 90.9666 96.4483 90.0304 cv
96.4482 90.0303 li
96.4259 90.0191 96.4029 90.0075 96.3807 89.9961 cv
96.3805 89.996 96.3805 89.996 96.3803 89.9959 cv
96.3581 89.9846 96.3359 89.9731 96.3139 89.9616 cv
96.3134 89.9614 96.3131 89.9612 96.3126 89.961 cv
96.2906 89.9495 96.269 89.9381 96.2471 89.9265 cv
96.2466 89.9262 96.2464 89.9261 96.2459 89.9258 cv
96.224 89.9142 96.2022 89.9025 96.1806 89.8908 cv
96.1803 89.8906 96.18 89.8905 96.1798 89.8904 cv
96.1655 89.8826 96.1505 89.8745 96.1363 89.8667 cv
96.1361 89.8665 96.1361 89.8665 96.1358 89.8664 cv
96.1287 89.8625 96.1218 89.8587 96.1148 89.8548 cv
96.1145 89.8547 96.1142 89.8545 96.1139 89.8544 cv
96.0998 89.8465 96.0852 89.8384 96.0711 89.8306 cv
96.0709 89.8304 96.0702 89.83 96.0699 89.8299 cv
96.0485 89.8179 96.027 89.8058 96.0058 89.7937 cv
96.0055 89.7936 96.0056 89.7936 96.0053 89.7935 cv
95.9838 89.7812 95.9625 89.7689 95.9411 89.7565 cv
95.9409 89.7564 95.9412 89.7565 95.9409 89.7564 cv
95.9195 89.744 95.8983 89.7316 95.8771 89.719 cv
95.8769 89.7189 95.877 89.719 95.8768 89.7188 cv
94.7932 89.078 93.9198 88.2555 93.2895 87.2504 cv
136.902 77.5274 li
137.396 78.0591 li
134.945 79.8176 132.333 81.4945 129.594 83.0489 cv
122.679 86.9737 115.963 89.5405 110.172 90.7066 cv
110.153 90.7103 110.135 90.714 110.116 90.7177 cv
110.116 90.7178 li
107.744 91.192 105.529 91.4306 103.519 91.4306 cv
137.396 78.0591 mo
136.902 77.5274 li
138.658 77.1358 li
138.243 77.4457 137.822 77.7538 137.396 78.0591 cv
.338048 .269108 .266484 3.0518e-05 cmyk
f
93.2895 87.2504 mo
92.9339 86.6834 92.6558 86.0584 92.4604 85.3745 cv
89.9062 76.4755 102.4 60.9975 120.356 50.8042 cv
127.266 46.8843 133.978 44.3193 139.768 43.1538 cv
142.162 42.6717 144.399 42.429 146.427 42.429 cv
150.762 42.429 154.14 43.5383 156.059 45.7878 cv
156.021 45.7442 li
156.069 45.7995 156.116 45.8556 156.162 45.9123 cv
156.168 45.919 li
156.169 45.9203 156.169 45.9203 156.169 45.9203 cv
156.168 45.919 li
156.299 46.0811 156.423 46.2481 156.54 46.4213 cv
156.54 46.4213 li
156.54 46.4217 156.54 46.4217 156.54 46.4217 cv
156.54 46.4213 li
156.653 46.5894 156.759 46.7632 156.858 46.9419 cv
156.858 46.9419 li
156.859 46.942 156.859 46.942 156.859 46.942 cv
156.858 46.9419 li
156.924 47.061 156.987 47.1825 157.046 47.3064 cv
157.075 47.3669 157.104 47.4279 157.131 47.4896 cv
157.131 47.4893 li
157.131 47.4899 157.131 47.4899 157.131 47.4899 cv
157.131 47.4893 li
157.215 47.6789 157.292 47.8735 157.362 48.0735 cv
157.362 48.0733 li
157.362 48.0737 157.362 48.0737 157.362 48.0737 cv
157.362 48.0733 li
157.408 48.206 157.451 48.3409 157.49 48.478 cv
157.513 48.5569 157.534 48.6355 157.554 48.7153 cv
157.554 48.7149 li
157.554 48.7153 157.554 48.7153 157.554 48.7153 cv
157.554 48.7149 li
157.592 48.8668 157.627 49.0206 157.656 49.1756 cv
157.656 49.1756 li
157.674 49.2675 157.691 49.3608 157.705 49.4539 cv
157.705 49.4539 li
157.746 49.7099 157.776 49.9701 157.794 50.235 cv
157.794 50.2349 li
157.794 50.235 157.794 50.235 157.794 50.235 cv
157.794 50.2349 li
157.811 50.4674 157.819 50.7029 157.819 50.9418 cv
157.823 58.2528 150.175 68.5473 138.658 77.1358 cv
136.902 77.5274 li
136.641 77.2471 li
137.007 76.9066 li
134.965 74.7094 li
134.599 75.0498 li
132.556 72.8526 li
132.922 72.5121 li
130.88 70.3148 li
130.514 70.6553 li
130.147 70.9957 li
132.19 73.193 li
132.556 72.8526 li
134.599 75.0498 li
134.232 75.3902 li
136.275 77.5876 li
136.641 77.2471 li
136.902 77.5274 li
93.2895 87.2504 li
.337285 .266545 .267094 3.0518e-05 cmyk
f
137.396 78.0591 mo
136.902 77.5274 li
136.641 77.2471 li
136.902 77.5274 li
137.396 78.0591 li
137.396 78.0591 li
134.599 75.0498 mo
132.556 72.8526 li
134.599 75.0498 li
.636469 .551324 .533165 .279393 cmyk
f
136.275 77.5876 mo
134.232 75.3902 li
134.599 75.0498 li
134.965 74.7094 li
137.007 76.9066 li
136.641 77.2471 li
136.275 77.5876 li
132.19 73.193 mo
130.147 70.9957 li
130.514 70.6553 li
130.88 70.3148 li
132.922 72.5121 li
132.556 72.8526 li
132.19 73.193 li
.608026 .524132 .508965 .21445 cmyk
f
gsave
156.021 45.7442 mo
254.781 159.624 li
255.452 160.398 255.949 161.31 256.25 162.358 cv
258.795 171.266 246.309 186.742 228.354 196.929 cv
221.438 200.854 214.723 203.421 208.932 204.587 cv
201.457 206.092 195.522 205.261 192.692 201.998 cv
93.9321 88.1181 li
96.7622 91.3814 102.697 92.2114 110.172 90.7066 cv
115.963 89.5405 122.679 86.9737 129.594 83.0489 cv
147.549 72.8623 160.035 57.3862 157.49 48.478 cv
157.189 47.4292 156.692 46.5181 156.021 45.7442 cv
clp
254.928 159.799 mo
202.159 98.9514 li
202.162 98.9496 li
254.781 159.624 li
254.928 159.799 li
201.489 98.1789 mo
200.627 97.1852 li
200.631 97.1834 li
201.492 98.1771 li
201.489 98.1789 li
180.728 74.2391 mo
179.389 72.6954 li
179.393 72.6937 li
180.731 74.2367 li
180.728 74.2387 180.73 74.2372 180.728 74.2391 cv
178.716 71.9186 mo
176.017 68.807 li
176.021 68.8061 li
178.719 71.9169 li
178.716 71.9186 li
.389654 .317082 .311955 .0028687 cmyk
f
179.389 72.6954 mo
178.716 71.9186 li
178.719 71.9169 li
179.393 72.6937 li
179.389 72.6954 li
.631556 .561395 .528222 .280247 cmyk
f
176.017 68.807 mo
156.168 45.919 li
156.162 45.9123 li
156.116 45.8556 156.069 45.7995 156.021 45.7442 cv
156.059 45.7878 li
176.021 68.8061 li
176.017 68.807 li
.388586 .315953 .313451 .00277714 cmyk
f
255.3 160.302 mo
202.116 98.9752 li
202.159 98.9514 li
254.928 159.799 li
254.951 159.828 254.974 159.857 254.997 159.886 cv
255.085 159.998 255.17 160.113 255.251 160.23 cv
255.268 160.254 255.284 160.278 255.3 160.302 cv
201.446 98.2027 mo
200.583 97.2079 li
200.627 97.1852 li
201.489 98.1789 li
201.446 98.2027 li
180.691 74.2705 mo
179.345 72.7183 li
179.389 72.6954 li
180.728 74.2391 li
180.717 74.2487 180.703 74.2609 180.691 74.2705 cv
178.672 71.9414 mo
175.964 68.8189 li
176.017 68.807 li
178.716 71.9186 li
178.672 71.9414 li
.380713 .305791 .302739 .00173953 cmyk
f
179.345 72.7183 mo
178.672 71.9414 li
178.716 71.9186 li
179.389 72.6954 li
179.345 72.7183 li
.626978 .548089 .52752 .26511 cmyk
f
175.964 68.8189 mo
156.54 46.4213 li
156.423 46.2481 156.299 46.0811 156.168 45.919 cv
156.168 45.919 li
176.017 68.807 li
175.964 68.8189 li
.380102 .308721 .299565 .00183108 cmyk
f
255.618 160.822 mo
202.026 99.0248 li
202.116 98.9752 li
255.3 160.302 li
255.413 160.47 255.52 160.644 255.618 160.822 cv
201.356 98.2523 mo
200.491 97.2554 li
200.583 97.2079 li
201.446 98.2027 li
201.356 98.2523 li
180.615 74.336 mo
179.254 72.7659 li
179.345 72.7183 li
180.691 74.2705 li
180.667 74.2916 180.64 74.3149 180.615 74.336 cv
178.58 71.9891 mo
175.852 68.8437 li
175.964 68.8189 li
178.672 71.9414 li
178.58 71.9891 li
.3664 .293095 .290227 .000366217 cmyk
f
179.254 72.7659 mo
178.58 71.9891 li
178.672 71.9414 li
179.345 72.7183 li
179.254 72.7659 li
.619593 .547356 .515679 .247501 cmyk
f
175.852 68.8437 mo
156.858 46.9419 li
156.759 46.7632 156.653 46.5894 156.54 46.4213 cv
156.54 46.4213 li
175.964 68.8189 li
175.852 68.8437 li
.368933 .293309 .293736 .000488289 cmyk
f
255.891 161.369 mo
201.889 99.1002 li
202.026 99.0248 li
255.618 160.822 li
255.628 160.84 255.638 160.858 255.648 160.876 cv
255.726 161.021 255.8 161.169 255.869 161.321 cv
255.876 161.337 255.884 161.353 255.891 161.369 cv
201.219 98.3277 mo
200.352 97.3275 li
200.491 97.2554 li
201.356 98.2523 li
201.219 98.3277 li
180.499 74.4353 mo
179.114 72.8384 li
179.254 72.7659 li
180.615 74.336 li
180.575 74.3705 180.539 74.4009 180.499 74.4353 cv
178.441 72.0615 mo
175.683 68.8815 li
175.852 68.8437 li
178.58 71.9891 li
178.441 72.0615 li
.351781 .283726 .274815 3.0518e-05 cmyk
f
179.114 72.8384 mo
178.441 72.0615 li
178.58 71.9891 li
179.254 72.7659 li
179.114 72.8384 li
.612299 .546471 .503777 .230045 cmyk
f
175.683 68.8815 mo
157.131 47.4893 li
157.104 47.4279 157.075 47.3669 157.046 47.3064 cv
156.987 47.1825 156.924 47.061 156.858 46.9419 cv
156.858 46.9419 li
175.852 68.8437 li
175.683 68.8815 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
256.122 161.953 mo
201.703 99.2029 li
201.889 99.1002 li
255.891 161.369 li
255.9 161.39 255.91 161.412 255.919 161.433 cv
255.992 161.602 256.06 161.775 256.121 161.952 cv
201.033 98.4304 mo
200.162 97.4257 li
200.352 97.3275 li
201.219 98.3277 li
201.033 98.4304 li
180.341 74.5704 mo
178.924 72.937 li
179.114 72.8384 li
180.499 74.4353 li
180.448 74.4793 180.392 74.5266 180.341 74.5704 cv
178.251 72.1602 mo
175.452 68.9329 li
175.683 68.8815 li
178.441 72.0615 li
178.251 72.1602 li
.341375 .27158 .269108 3.0518e-05 cmyk
f
178.924 72.937 mo
178.251 72.1602 li
178.441 72.0615 li
179.114 72.8384 li
178.924 72.937 li
.607477 .531609 .504021 .216007 cmyk
f
175.452 68.9329 mo
157.362 48.0733 li
157.292 47.8735 157.215 47.6789 157.131 47.4896 cv
157.131 47.4893 li
175.683 68.8815 li
175.452 68.9329 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
256.313 162.595 mo
201.456 99.339 li
201.703 99.2029 li
256.122 161.953 li
256.168 162.085 256.211 162.221 256.25 162.358 cv
256.25 162.358 li
256.313 162.595 li
200.786 98.5665 mo
199.91 97.5558 li
200.162 97.4257 li
201.033 98.4304 li
200.786 98.5665 li
180.131 74.7487 mo
178.673 73.0677 li
178.924 72.937 li
180.341 74.5704 li
180.269 74.6313 180.203 74.6881 180.131 74.7487 cv
177.999 72.2908 mo
175.146 69.0011 li
175.452 68.9329 li
178.251 72.1602 li
177.999 72.2908 li
.328618 .260868 .258091 3.0518e-05 cmyk
f
178.673 73.0677 mo
177.999 72.2908 li
178.251 72.1602 li
178.924 72.937 li
178.673 73.0677 li
.602045 .518151 .503777 .203189 cmyk
f
175.146 69.0011 mo
157.554 48.7149 li
157.534 48.6355 157.513 48.5569 157.49 48.478 cv
157.451 48.3409 157.408 48.206 157.362 48.0735 cv
157.362 48.0733 li
175.452 68.9329 li
175.146 69.0011 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
256.461 163.308 mo
201.138 99.5146 li
201.456 99.339 li
256.313 162.595 li
256.321 162.623 256.328 162.651 256.334 162.679 cv
256.384 162.885 256.426 163.095 256.461 163.307 cv
200.468 98.7421 mo
199.585 97.7237 li
199.91 97.5558 li
200.786 98.5665 li
200.468 98.7421 li
179.859 74.9782 mo
178.349 73.2364 li
178.673 73.0677 li
180.131 74.7487 li
180.042 74.8245 179.949 74.9029 179.859 74.9782 cv
177.675 72.4595 mo
174.752 69.089 li
175.146 69.0011 li
177.999 72.2908 li
177.675 72.4595 li
.316472 .254215 .244816 3.0518e-05 cmyk
f
178.349 73.2364 mo
177.675 72.4595 li
177.999 72.2908 li
178.673 73.0677 li
178.349 73.2364 li
.592645 .51693 .489876 .187655 cmyk
f
174.752 69.089 mo
157.701 49.4277 li
157.687 49.3432 157.673 49.2592 157.656 49.1756 cv
157.656 49.1756 li
157.627 49.0206 157.592 48.8668 157.554 48.7153 cv
157.554 48.7149 li
175.146 69.0011 li
174.752 69.089 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
256.555 164.115 mo
200.727 99.741 li
201.138 99.5146 li
256.461 163.308 li
256.504 163.572 256.535 163.841 256.554 164.115 cv
200.058 98.9685 mo
199.166 97.9402 li
199.585 97.7237 li
200.468 98.7421 li
200.058 98.9685 li
179.508 75.2725 mo
177.93 73.4537 li
178.349 73.2364 li
179.859 74.9782 li
179.743 75.076 179.624 75.1754 179.508 75.2725 cv
177.804 73.3082 mo
174.244 69.2024 li
174.752 69.089 li
177.675 72.4595 li
177.429 72.5871 li
177.804 73.3082 li
.307622 .24152 .239048 3.0518e-05 cmyk
f
177.93 73.4537 mo
177.804 73.3082 li
177.429 72.5871 li
177.675 72.4595 li
178.349 73.2364 li
177.93 73.4537 li
.586633 .510796 .484047 .176638 cmyk
f
174.244 69.2024 mo
157.794 50.2349 li
157.776 49.9701 157.746 49.7099 157.705 49.4539 cv
157.705 49.4539 li
157.704 49.4452 157.703 49.4365 157.701 49.4277 cv
174.752 69.089 li
174.244 69.2024 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
256.577 165.054 mo
200.192 100.036 li
200.727 99.741 li
256.555 164.115 li
256.576 164.422 256.584 164.735 256.577 165.053 cv
199.522 99.2639 mo
198.619 98.2226 li
199.166 97.9402 li
200.058 98.9685 li
199.522 99.2639 li
179.047 75.6542 mo
173.58 69.3503 li
174.244 69.2024 li
177.804 73.3082 li
177.891 73.4744 li
177.93 73.4537 li
179.508 75.2725 li
179.353 75.4012 179.201 75.5269 179.047 75.6542 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
177.891 73.4744 mo
177.804 73.3082 li
177.93 73.4537 li
177.891 73.4744 li
.578485 .502251 .475471 .16025 cmyk
f
173.58 69.3503 mo
157.817 51.1743 li
157.819 51.0965 157.819 51.019 157.819 50.9418 cv
157.819 50.7029 157.811 50.4674 157.794 50.235 cv
157.794 50.2349 li
174.244 69.2024 li
173.58 69.3503 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
256.475 166.355 mo
199.36 100.495 li
200.192 100.036 li
256.577 165.054 li
256.575 165.156 256.571 165.258 256.566 165.361 cv
256.55 165.687 256.519 166.018 256.475 166.355 cv
198.69 99.7227 mo
197.77 98.6614 li
198.619 98.2226 li
199.522 99.2639 li
198.69 99.7227 li
178.327 76.2417 mo
172.549 69.58 li
173.58 69.3503 li
179.047 75.6542 li
178.807 75.8518 178.567 76.0475 178.327 76.2417 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
172.549 69.58 mo
157.715 52.4741 li
157.774 52.0322 157.808 51.598 157.817 51.1744 cv
173.58 69.3503 li
172.549 69.58 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
255.969 168.678 mo
197.655 101.436 li
199.36 100.495 li
256.475 166.355 li
256.391 166.985 256.257 167.635 256.076 168.3 cv
256.042 168.425 256.006 168.551 255.969 168.678 cv
196.985 100.663 mo
196.029 99.5606 li
197.77 98.6614 li
198.69 99.7227 li
196.985 100.663 li
176.833 77.4255 mo
174.8 75.0812 li
175.229 74.8581 li
174.768 73.9708 li
174.126 74.3043 li
170.437 70.0509 li
172.549 69.58 li
178.327 76.2417 li
177.83 76.6427 177.33 77.0387 176.833 77.4255 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
174.8 75.0812 mo
174.126 74.3043 li
174.768 73.9708 li
175.229 74.8581 li
174.8 75.0812 li
.566369 .482063 .469001 .137972 cmyk
f
170.437 70.0509 mo
157.209 54.7974 li
157.446 54.0005 157.615 53.2249 157.715 52.4743 cv
172.549 69.58 li
170.437 70.0509 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
254.537 172.246 mo
194.593 103.124 li
197.655 101.436 li
255.969 168.678 li
255.88 168.977 255.782 169.279 255.674 169.583 cv
255.673 169.585 255.673 169.587 255.672 169.589 cv
255.669 169.597 255.667 169.604 255.664 169.612 cv
255.663 169.616 255.661 169.619 255.66 169.623 cv
255.659 169.627 255.657 169.632 255.655 169.637 cv
255.653 169.642 255.651 169.648 255.649 169.653 cv
255.648 169.656 255.647 169.661 255.645 169.664 cv
255.643 169.67 255.641 169.675 255.639 169.681 cv
255.638 169.685 255.637 169.687 255.636 169.692 cv
255.634 169.697 255.632 169.702 255.63 169.707 cv
255.629 169.709 255.628 169.713 255.627 169.716 cv
255.624 169.723 255.622 169.73 255.619 169.736 cv
255.618 169.74 255.617 169.742 255.616 169.746 cv
255.614 169.751 255.612 169.756 255.61 169.762 cv
255.609 169.767 255.607 169.77 255.605 169.775 cv
255.604 169.78 255.602 169.785 255.6 169.789 cv
255.599 169.792 255.597 169.797 255.596 169.8 cv
255.594 169.806 255.592 169.812 255.589 169.819 cv
255.588 169.822 255.586 169.827 255.585 169.831 cv
255.584 169.834 255.583 169.837 255.582 169.84 cv
255.579 169.848 255.575 169.857 255.572 169.866 cv
255.572 169.867 255.572 169.868 255.571 169.868 cv
255.284 170.645 254.939 171.439 254.537 172.246 cv
193.923 102.352 mo
192.903 101.175 li
196.029 99.5606 li
196.985 100.663 li
193.923 102.352 li
174.089 79.4816 mo
166.644 70.8965 li
170.437 70.0509 li
174.126 74.3043 li
172.106 75.3544 li
172.567 76.2418 li
174.8 75.0812 li
176.833 77.4255 li
175.92 78.1342 175.005 78.8195 174.089 79.4816 cv
.262028 .204318 .201663 3.0518e-05 cmyk
f
172.567 76.2418 mo
172.106 75.3544 li
174.126 74.3043 li
174.8 75.0812 li
172.567 76.2418 li
.557519 .479713 .456031 .123964 cmyk
f
166.644 70.8965 mo
155.777 58.3657 li
155.893 58.1331 156.004 57.9014 156.111 57.6711 cv
156.113 57.6668 156.115 57.6613 156.117 57.657 cv
156.118 57.6548 156.119 57.6526 156.12 57.6504 cv
156.57 56.6753 156.934 55.7227 157.209 54.7974 cv
170.437 70.0509 li
166.644 70.8965 li
.260136 .206882 .197757 3.0518e-05 cmyk
f
252.5 175.748 mo
191.16 105.018 li
194.593 103.124 li
254.537 172.246 li
253.993 173.339 253.346 174.456 252.605 175.589 cv
252.57 175.642 252.535 175.695 252.5 175.748 cv
190.491 104.245 mo
189.398 102.985 li
192.903 101.175 li
193.923 102.352 li
190.491 104.245 li
170.92 81.6784 mo
168.182 78.521 li
169.905 77.6255 li
169.444 76.7381 li
167.508 77.7442 li
162.392 71.8446 li
166.644 70.8965 li
174.089 79.4816 li
173.033 80.245 171.979 80.9749 170.92 81.6784 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
168.182 78.521 mo
167.508 77.7442 li
169.444 76.7381 li
169.905 77.6255 li
168.182 78.521 li
.566369 .482063 .469001 .137972 cmyk
f
162.392 71.8446 mo
153.74 61.8682 li
154.476 60.7569 155.12 59.6592 155.667 58.5848 cv
155.704 58.5116 155.741 58.4386 155.777 58.3657 cv
166.644 70.8965 li
162.392 71.8446 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
250.762 178.182 mo
188.557 106.453 li
191.16 105.018 li
252.5 175.748 li
252.476 175.784 252.453 175.82 252.429 175.855 cv
251.916 176.625 251.359 177.402 250.762 178.182 cv
187.887 105.681 mo
186.74 104.358 li
189.398 102.985 li
190.491 104.245 li
187.887 105.681 li
168.449 83.2666 mo
159.167 72.5636 li
162.392 71.8446 li
167.508 77.7442 li
166.782 78.1218 li
167.243 79.009 li
168.182 78.521 li
170.92 81.6784 li
170.097 82.2253 169.273 82.7547 168.449 83.2666 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
167.243 79.009 mo
166.782 78.1218 li
167.508 77.7442 li
168.182 78.521 li
167.243 79.009 li
.572229 .495827 .470314 .149874 cmyk
f
159.167 72.5636 mo
152.002 64.3018 li
152.168 64.0849 152.331 63.869 152.49 63.6528 cv
152.491 63.6522 152.491 63.6515 152.492 63.6509 cv
152.5 63.6403 152.507 63.63 152.515 63.6194 cv
152.518 63.6148 152.522 63.6104 152.525 63.6058 cv
152.528 63.602 152.532 63.5968 152.534 63.593 cv
152.843 63.1739 153.139 62.7561 153.423 62.3402 cv
153.425 62.3372 153.428 62.3335 153.43 62.3305 cv
153.433 62.3259 153.436 62.3214 153.439 62.3168 cv
153.541 62.167 153.641 62.0176 153.74 61.8683 cv
162.392 71.8446 li
159.167 72.5636 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
248.986 180.37 mo
186.072 107.824 li
188.557 106.453 li
250.762 178.182 li
250.205 178.909 249.612 179.639 248.986 180.37 cv
185.602 106.941 mo
185.307 106.941 li
184.204 105.669 li
186.74 104.358 li
187.887 105.681 li
185.602 106.941 li
166.035 84.7181 mo
162.998 81.216 li
164.581 80.3927 li
164.12 79.5055 li
162.324 80.4392 li
156.089 73.2498 li
159.167 72.5636 li
168.449 83.2666 li
167.645 83.7658 166.838 84.251 166.035 84.7181 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
162.998 81.216 mo
162.324 80.4392 li
164.12 79.5055 li
164.581 80.3927 li
162.998 81.216 li
.578485 .502251 .475471 .16025 cmyk
f
156.089 73.2498 mo
150.227 66.4897 li
150.265 66.4454 150.302 66.4019 150.339 66.3575 cv
150.549 66.1117 150.754 65.8659 150.956 65.6204 cv
150.96 65.6151 150.964 65.6106 150.968 65.6052 cv
150.97 65.6027 150.972 65.6002 150.974 65.5977 cv
151.329 65.1651 151.672 64.7327 152.002 64.3019 cv
159.167 72.5636 li
156.089 73.2498 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
247.121 182.444 mo
182.51 107.941 li
185.859 107.941 li
186.072 107.824 li
248.986 180.37 li
248.394 181.061 247.772 181.753 247.121 182.444 cv
185.307 106.941 mo
181.74 106.941 li
184.204 105.669 li
185.307 106.941 li
163.571 86.1025 mo
153.018 73.9344 li
156.089 73.2498 li
162.324 80.4392 li
161.458 80.8891 li
161.92 81.7764 li
162.998 81.216 li
166.035 84.7181 li
165.211 85.1969 164.393 85.6564 163.571 86.1025 cv
.307622 .24152 .239048 3.0518e-05 cmyk
f
161.92 81.7764 mo
161.458 80.8891 li
162.324 80.4392 li
162.998 81.216 li
161.92 81.7764 li
.586633 .510796 .484047 .176638 cmyk
f
153.018 73.9344 mo
148.361 68.5639 li
149.012 67.8732 149.634 67.1809 150.227 66.4898 cv
156.089 73.2498 li
153.018 73.9344 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
245.135 184.462 mo
179.077 108.291 li
179.127 108.291 li
179.804 107.941 li
182.51 107.941 li
247.121 182.444 li
246.485 183.118 245.822 183.791 245.134 184.461 cv
161.001 87.447 mo
157.896 83.8676 li
159.258 83.16 li
158.796 82.2728 li
157.223 83.0908 li
149.887 74.6324 li
153.018 73.9344 li
163.571 86.1025 li
162.712 86.5682 161.856 87.0158 161.001 87.447 cv
.316472 .254215 .244816 3.0518e-05 cmyk
f
157.896 83.8676 mo
157.223 83.0908 li
158.796 82.2728 li
159.258 83.16 li
157.896 83.8676 li
.592645 .51693 .489876 .187655 cmyk
f
149.887 74.6324 mo
146.374 70.5815 li
146.428 70.5291 146.482 70.4767 146.535 70.4242 cv
147.166 69.8065 147.776 69.1851 148.361 68.564 cv
153.018 73.9344 li
149.887 74.6324 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
243.008 186.448 mo
175.227 108.291 li
179.077 108.291 li
245.135 184.462 li
244.45 185.127 243.741 185.79 243.008 186.448 cv
158.29 88.7601 mo
146.661 75.3516 li
149.887 74.6324 li
157.223 83.0908 li
156.135 83.6565 li
156.596 84.5437 li
157.896 83.8676 li
161.001 87.447 li
160.095 87.9032 159.19 88.3412 158.29 88.7601 cv
.328618 .260868 .258091 3.0518e-05 cmyk
f
156.596 84.5437 mo
156.135 83.6565 li
157.223 83.0908 li
157.896 83.8676 li
156.596 84.5437 li
.602045 .518151 .503777 .203189 cmyk
f
146.661 75.3516 mo
144.248 72.5683 li
144.876 72.004 145.488 71.4363 146.08 70.8661 cv
146.179 70.7713 146.277 70.6764 146.374 70.5815 cv
149.887 74.6324 li
146.661 75.3516 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
240.732 188.41 mo
171.251 108.291 li
175.227 108.291 li
243.008 186.448 li
242.273 187.107 241.513 187.762 240.732 188.41 cv
155.421 90.0375 mo
152.502 86.6719 li
153.934 85.9274 li
153.473 85.0401 li
151.828 85.8951 li
143.329 76.0946 li
146.661 75.3516 li
158.29 88.7601 li
157.33 89.2062 156.373 89.632 155.421 90.0375 cv
.341375 .27158 .269108 3.0518e-05 cmyk
f
152.502 86.6719 mo
151.828 85.8951 li
153.473 85.0401 li
153.934 85.9274 li
152.502 86.6719 li
.607477 .531609 .504021 .216007 cmyk
f
143.329 76.0946 mo
141.972 74.5303 li
142.753 73.8827 143.513 73.2274 144.248 72.5683 cv
146.661 75.3516 li
143.329 76.0946 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
238.283 190.361 mo
197.605 143.456 li
197.917 143.165 li
199.96 145.363 li
199.594 145.703 li
201.636 147.9 li
202.003 147.56 li
204.045 149.757 li
203.679 150.098 li
205.721 152.295 li
206.088 151.954 li
208.13 154.152 li
207.764 154.492 li
209.806 156.689 li
210.173 156.349 li
212.215 158.546 li
211.849 158.887 li
213.892 161.084 li
214.258 160.743 li
216.3 162.941 li
215.934 163.281 li
217.977 165.478 li
218.343 165.138 li
220.385 167.335 li
220.019 167.676 li
222.062 169.873 li
222.428 169.533 li
224.47 171.73 li
224.104 172.07 li
226.147 174.268 li
226.513 173.927 li
228.556 176.124 li
228.189 176.465 li
230.232 178.662 li
230.598 178.322 li
232.641 180.519 li
232.274 180.859 li
234.317 183.057 li
234.683 182.716 li
236.726 184.913 li
236.359 185.254 li
238.402 187.451 li
238.768 187.111 li
240.304 188.763 li
239.813 189.164 239.314 189.562 238.807 189.957 cv
238.633 190.092 238.459 190.227 238.283 190.361 cv
240.304 188.763 mo
238.768 187.111 li
239.134 186.77 li
237.092 184.573 li
236.726 184.913 li
234.683 182.716 li
235.049 182.376 li
233.007 180.178 li
232.641 180.519 li
230.598 178.322 li
230.964 177.981 li
228.922 175.784 li
228.556 176.124 li
226.513 173.927 li
226.879 173.587 li
224.837 171.389 li
224.47 171.73 li
222.428 169.533 li
222.794 169.192 li
220.752 166.995 li
220.385 167.335 li
218.343 165.138 li
218.709 164.798 li
216.667 162.6 li
216.3 162.941 li
214.258 160.743 li
214.624 160.403 li
212.581 158.206 li
212.215 158.546 li
210.173 156.349 li
210.539 156.009 li
208.496 153.811 li
208.13 154.152 li
206.088 151.954 li
206.454 151.614 li
204.411 149.417 li
204.045 149.757 li
202.003 147.56 li
202.369 147.219 li
200.326 145.022 li
199.96 145.363 li
197.917 143.165 li
198.284 142.825 li
196.241 140.628 li
195.875 140.968 li
193.832 138.771 li
194.199 138.43 li
192.156 136.233 li
191.79 136.574 li
189.747 134.376 li
190.113 134.036 li
188.071 131.839 li
187.772 132.117 li
185.805 129.849 li
186.028 129.641 li
183.986 127.444 li
183.838 127.581 li
181.872 125.313 li
181.943 125.247 li
180.011 123.168 li
167.109 108.291 li
171.251 108.291 li
240.732 188.41 li
240.59 188.528 240.448 188.645 240.304 188.763 cv
195.638 141.188 mo
193.672 138.92 li
193.832 138.771 li
195.875 140.968 li
195.638 141.188 li
191.705 136.652 mo
189.738 134.385 li
189.747 134.376 li
191.79 136.574 li
191.705 136.652 li
152.357 91.2799 mo
139.858 76.8682 li
143.329 76.0946 li
151.828 85.8951 li
150.811 86.4238 li
151.272 87.3111 li
152.502 86.6719 li
155.421 90.0375 li
154.394 90.4744 153.373 90.888 152.357 91.2799 cv
.351781 .283726 .274815 3.0518e-05 cmyk
f
151.272 87.3111 mo
150.811 86.4238 li
151.828 85.8951 li
152.502 86.6719 li
151.272 87.3111 li
.612299 .546471 .503777 .230045 cmyk
f
139.858 76.8682 mo
139.523 76.4819 li
140.118 76.0265 140.701 75.5668 141.273 75.1033 cv
141.281 75.0974 141.288 75.0911 141.296 75.0852 cv
141.296 75.0847 141.297 75.0841 141.298 75.0835 cv
141.525 74.8993 141.749 74.7158 141.972 74.5304 cv
143.329 76.0946 li
139.858 76.8682 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
240.304 188.763 mo
238.768 187.111 li
240.304 188.763 li
240.304 188.763 li
236.726 184.913 mo
234.683 182.716 li
236.726 184.913 li
232.641 180.519 mo
230.598 178.322 li
232.641 180.519 li
228.556 176.124 mo
226.513 173.927 li
228.556 176.124 li
224.47 171.73 mo
222.428 169.533 li
224.47 171.73 li
220.385 167.335 mo
218.343 165.138 li
220.385 167.335 li
216.3 162.941 mo
214.258 160.743 li
216.3 162.941 li
212.215 158.546 mo
210.173 156.349 li
212.215 158.546 li
208.13 154.152 mo
206.088 151.954 li
208.13 154.152 li
204.045 149.757 mo
202.003 147.56 li
204.045 149.757 li
199.96 145.363 mo
197.917 143.165 li
199.96 145.363 li
195.875 140.968 mo
193.832 138.771 li
195.875 140.968 li
191.79 136.574 mo
189.747 134.376 li
191.79 136.574 li
.642725 .56643 .536248 .301579 cmyk
f
238.402 187.451 mo
236.359 185.254 li
236.726 184.913 li
237.092 184.573 li
239.134 186.77 li
238.768 187.111 li
238.402 187.451 li
234.317 183.057 mo
232.274 180.859 li
232.641 180.519 li
233.007 180.178 li
235.049 182.376 li
234.683 182.716 li
234.317 183.057 li
230.232 178.662 mo
228.189 176.465 li
228.556 176.124 li
228.922 175.784 li
230.964 177.981 li
230.598 178.322 li
230.232 178.662 li
226.147 174.268 mo
224.104 172.07 li
224.47 171.73 li
224.837 171.389 li
226.879 173.587 li
226.513 173.927 li
226.147 174.268 li
222.062 169.873 mo
220.019 167.676 li
220.385 167.335 li
220.752 166.995 li
222.794 169.192 li
222.428 169.533 li
222.062 169.873 li
217.977 165.478 mo
215.934 163.281 li
216.3 162.941 li
216.667 162.6 li
218.709 164.798 li
218.343 165.138 li
217.977 165.478 li
213.892 161.084 mo
211.849 158.887 li
212.215 158.546 li
212.581 158.206 li
214.624 160.403 li
214.258 160.743 li
213.892 161.084 li
209.806 156.689 mo
207.764 154.492 li
208.13 154.152 li
208.496 153.811 li
210.539 156.009 li
210.173 156.349 li
209.806 156.689 li
205.721 152.295 mo
203.679 150.098 li
204.045 149.757 li
204.411 149.417 li
206.454 151.614 li
206.088 151.954 li
205.721 152.295 li
201.636 147.9 mo
199.594 145.703 li
199.96 145.363 li
200.326 145.022 li
202.369 147.219 li
202.003 147.56 li
201.636 147.9 li
197.605 143.456 mo
195.638 141.188 li
195.875 140.968 li
196.241 140.628 li
198.284 142.825 li
197.917 143.165 li
197.605 143.456 li
193.672 138.92 mo
191.705 136.652 li
191.79 136.574 li
192.156 136.233 li
194.199 138.43 li
193.832 138.771 li
193.672 138.92 li
189.738 134.385 mo
187.772 132.117 li
188.071 131.839 li
190.113 134.036 li
189.747 134.376 li
189.738 134.385 li
185.805 129.849 mo
183.838 127.581 li
183.986 127.444 li
186.028 129.641 li
185.805 129.849 li
181.872 125.313 mo
180.011 123.168 li
181.943 125.247 li
181.872 125.313 li
.612299 .546471 .503777 .230045 cmyk
f
235.656 192.296 mo
162.804 108.291 li
164.816 108.291 li
164.871 108.349 li
164.933 108.291 li
165.499 108.291 li
167.279 110.206 li
166.913 110.547 li
168.956 112.744 li
169.322 112.403 li
171.364 114.601 li
170.998 114.941 li
173.041 117.138 li
173.407 116.798 li
175.45 118.995 li
175.083 119.336 li
177.126 121.533 li
177.492 121.193 li
179.535 123.39 li
179.168 123.73 li
181.211 125.928 li
181.577 125.587 li
183.62 127.784 li
183.253 128.125 li
185.296 130.322 li
185.662 129.982 li
187.705 132.179 li
187.339 132.519 li
189.381 134.717 li
189.738 134.385 li
191.705 136.652 li
191.424 136.914 li
193.466 139.111 li
193.672 138.92 li
195.638 141.188 li
195.509 141.309 li
197.551 143.506 li
197.605 143.456 li
238.283 190.361 li
237.862 190.684 237.436 191.004 237.004 191.323 cv
236.56 191.649 236.111 191.974 235.656 192.295 cv
187.705 132.179 mo
185.662 129.982 li
185.805 129.849 li
187.772 132.117 li
187.705 132.179 li
183.62 127.784 mo
181.577 125.587 li
181.872 125.313 li
183.838 127.581 li
183.62 127.784 li
179.535 123.39 mo
177.492 121.193 li
177.858 120.852 li
175.816 118.655 li
175.45 118.995 li
173.407 116.798 li
173.773 116.458 li
171.731 114.26 li
171.364 114.601 li
169.322 112.403 li
169.688 112.063 li
167.646 109.866 li
167.279 110.206 li
165.499 108.291 li
167.109 108.291 li
180.011 123.168 li
179.901 123.049 li
179.535 123.39 li
149.087 92.4734 mo
146.68 89.6981 li
147.255 89.3992 li
148.53 90.7711 li
148.897 90.4307 li
150.374 92.0197 li
149.944 92.1747 149.515 92.326 149.087 92.4734 cv
150.374 92.0197 mo
148.897 90.4307 li
149.263 90.0903 li
148.176 88.9207 li
148.61 88.6947 li
148.149 87.8075 li
147.469 88.1609 li
147.22 87.893 li
146.854 88.2335 li
144.811 86.0362 li
145.178 85.6957 li
143.135 83.4985 li
142.769 83.8389 li
140.726 81.6416 li
141.093 81.3012 li
139.05 79.1039 li
138.684 79.4444 li
137.396 78.0591 li
137.425 78.0387 137.453 78.0183 137.481 77.9979 cv
137.482 77.9976 137.482 77.9974 137.482 77.9972 cv
137.492 77.9901 137.501 77.9836 137.511 77.9766 cv
137.898 77.6983 138.28 77.4179 138.659 77.1357 cv
139.858 76.8682 li
152.357 91.2799 li
151.694 91.5355 151.032 91.7824 150.374 92.0197 cv
146.006 88.9212 mo
136.896 78.4155 li
136.916 78.401 136.937 78.3865 136.957 78.3719 cv
136.96 78.3699 136.963 78.3678 136.966 78.3657 cv
136.972 78.3617 136.977 78.3577 136.983 78.3538 cv
137.121 78.2558 137.259 78.1576 137.396 78.0591 cv
138.684 79.4444 li
138.318 79.7848 li
140.36 81.982 li
140.726 81.6416 li
142.769 83.8389 li
142.403 84.1793 li
144.445 86.3766 li
144.811 86.0362 li
146.854 88.2335 li
146.488 88.5739 li
146.549 88.6393 li
146.006 88.9212 li
.3664 .293095 .290227 .000366217 cmyk
f
146.68 89.6981 mo
146.006 88.9212 li
146.549 88.6393 li
147.255 89.3992 li
146.68 89.6981 li
148.176 88.9207 mo
147.469 88.1609 li
148.149 87.8075 li
148.61 88.6947 li
148.176 88.9207 li
.619593 .547356 .515679 .247501 cmyk
f
138.659 77.1357 mo
138.95 76.9188 139.238 76.7009 139.523 76.4819 cv
139.858 76.8682 li
138.659 77.1357 li
.368933 .293309 .293736 .000488289 cmyk
f
187.705 132.179 mo
185.662 129.982 li
187.705 132.179 li
183.62 127.784 mo
181.577 125.587 li
183.62 127.784 li
179.535 123.39 mo
177.492 121.193 li
179.535 123.39 li
175.45 118.995 mo
173.407 116.798 li
175.45 118.995 li
171.364 114.601 mo
169.322 112.403 li
171.364 114.601 li
167.279 110.206 mo
165.499 108.291 li
167.279 110.206 li
150.374 92.0197 mo
148.897 90.4307 li
150.374 92.0197 li
150.374 92.0197 li
146.854 88.2335 mo
144.811 86.0362 li
146.854 88.2335 li
142.769 83.8389 mo
140.726 81.6416 li
142.769 83.8389 li
138.684 79.4444 mo
137.396 78.0591 li
137.396 78.0591 li
138.684 79.4444 li
.650233 .565515 .550591 .320226 cmyk
f
197.551 143.506 mo
195.509 141.309 li
195.638 141.188 li
197.605 143.456 li
197.551 143.506 li
193.466 139.111 mo
191.424 136.914 li
191.705 136.652 li
193.672 138.92 li
193.466 139.111 li
189.381 134.717 mo
187.339 132.519 li
187.705 132.179 li
187.772 132.117 li
189.738 134.385 li
189.381 134.717 li
185.296 130.322 mo
183.253 128.125 li
183.62 127.784 li
183.838 127.581 li
185.805 129.849 li
185.662 129.982 li
185.296 130.322 li
181.211 125.928 mo
179.168 123.73 li
179.535 123.39 li
179.901 123.049 li
180.011 123.168 li
181.872 125.313 li
181.577 125.587 li
181.211 125.928 li
177.126 121.533 mo
175.083 119.336 li
175.45 118.995 li
175.816 118.655 li
177.858 120.852 li
177.492 121.193 li
177.126 121.533 li
173.041 117.138 mo
170.998 114.941 li
171.364 114.601 li
171.731 114.26 li
173.773 116.458 li
173.407 116.798 li
173.041 117.138 li
168.956 112.744 mo
166.913 110.547 li
167.279 110.206 li
167.646 109.866 li
169.688 112.063 li
169.322 112.403 li
168.956 112.744 li
164.871 108.349 mo
164.816 108.291 li
164.933 108.291 li
164.871 108.349 li
148.53 90.7711 mo
147.255 89.3992 li
146.549 88.6393 li
146.488 88.5739 li
146.854 88.2335 li
147.22 87.893 li
147.469 88.1609 li
148.176 88.9207 li
149.263 90.0903 li
148.897 90.4307 li
148.53 90.7711 li
144.445 86.3766 mo
142.403 84.1793 li
142.769 83.8389 li
143.135 83.4985 li
145.178 85.6957 li
144.811 86.0362 li
144.445 86.3766 li
140.36 81.982 mo
138.318 79.7848 li
138.684 79.4444 li
139.05 79.1039 li
141.093 81.3012 li
140.726 81.6416 li
140.36 81.982 li
.619593 .547356 .515679 .247501 cmyk
f
232.834 194.207 mo
158.325 108.291 li
162.804 108.291 li
235.656 192.296 li
234.737 192.944 233.795 193.583 232.834 194.207 cv
145.917 93.5055 mo
145.917 90.3867 li
145.417 90.3867 li
144.917 90.3867 li
144.917 92.8304 li
134.074 80.3271 li
134.087 80.3184 134.101 80.3097 134.114 80.3009 cv
135.061 79.6853 135.989 79.0558 136.896 78.4155 cv
146.006 88.9212 li
145.487 89.1911 li
145.948 90.0784 li
146.68 89.6981 li
149.087 92.4734 li
148.022 92.8404 146.966 93.1839 145.917 93.5055 cv
.380713 .305791 .302739 .00173953 cmyk
f
145.948 90.0784 mo
145.487 89.1911 li
146.006 88.9212 li
146.68 89.6981 li
145.948 90.0784 li
.626978 .548089 .52752 .26511 cmyk
f
145.417 90.3867 mo
145.417 90.3867 li
.653803 .579431 .548302 .336461 cmyk
f
145.589 93.6054 mo
144.917 92.8304 li
144.917 90.3867 li
145.417 90.3867 li
145.917 90.3867 li
145.917 93.5055 li
145.807 93.5391 145.698 93.5723 145.589 93.6054 cv
.626978 .548089 .52752 .26511 cmyk
f
229.795 196.093 mo
153.65 108.291 li
158.325 108.291 li
232.834 194.207 li
231.883 194.824 230.912 195.428 229.923 196.017 cv
229.915 196.021 229.907 196.026 229.899 196.031 cv
229.896 196.033 229.892 196.035 229.889 196.037 cv
229.858 196.056 229.826 196.074 229.795 196.093 cv
141.831 94.6624 mo
131.035 82.2133 li
132.058 81.6061 133.063 80.9832 134.047 80.3448 cv
134.056 80.3387 134.064 80.3332 134.074 80.3271 cv
144.917 92.8304 li
144.917 93.8064 li
143.88 94.1122 142.848 94.3979 141.831 94.6624 cv
.389654 .317082 .311955 .0028687 cmyk
f
144.917 93.8064 mo
144.917 92.8304 li
145.589 93.6054 li
145.364 93.6737 145.141 93.7402 144.917 93.8064 cv
.631556 .561395 .528222 .280247 cmyk
f
226.526 197.937 mo
148.783 108.291 li
153.65 108.291 li
229.795 196.093 li
229.793 196.094 229.79 196.095 229.788 196.097 cv
229.314 196.378 228.836 196.655 228.354 196.929 cv
227.989 197.136 227.624 197.339 227.261 197.538 cv
227.016 197.673 226.771 197.806 226.526 197.937 cv
137.795 95.6211 mo
127.767 84.0572 li
128.153 83.8499 128.54 83.6385 128.928 83.4228 cv
128.937 83.4176 128.947 83.4125 128.956 83.4073 cv
128.962 83.4042 128.967 83.4011 128.973 83.398 cv
129.16 83.2936 129.348 83.1882 129.536 83.0818 cv
129.536 83.0815 129.537 83.0812 129.537 83.0808 cv
129.556 83.0701 129.575 83.0596 129.594 83.0489 cv
129.594 83.0489 li
130.078 82.7744 130.559 82.4956 131.035 82.2133 cv
141.831 94.6624 li
140.465 95.0173 139.121 95.3353 137.795 95.6211 cv
.402258 .324285 .32047 .00387579 cmyk
f
223.1 199.673 mo
145.917 110.673 li
145.917 108.291 li
148.783 108.291 li
226.526 197.937 li
226.211 198.106 225.897 198.272 225.583 198.435 cv
224.75 198.868 223.922 199.28 223.1 199.673 cv
144.917 109.52 mo
143.851 108.291 li
144.917 108.291 li
144.917 109.52 li
133.571 96.4369 mo
124.34 85.7929 li
125.473 85.2524 126.616 84.6739 127.767 84.0572 cv
137.795 95.6211 li
136.361 95.9302 134.951 96.2011 133.571 96.4369 cv
.410773 .334051 .329168 .00582895 cmyk
f
145.917 110.673 mo
144.917 109.52 li
144.917 108.291 li
145.917 108.291 li
145.917 110.673 li
.637018 .575433 .541161 .313207 cmyk
f
219.473 201.289 mo
145.917 116.472 li
145.917 110.673 li
223.1 199.673 li
222.998 199.721 222.896 199.769 222.795 199.817 cv
222.784 199.823 222.772 199.828 222.761 199.833 cv
222.759 199.834 222.756 199.836 222.754 199.837 cv
222.167 200.113 221.584 200.379 221.003 200.635 cv
220.49 200.861 219.98 201.079 219.472 201.289 cv
144.917 115.319 mo
138.822 108.291 li
143.851 108.291 li
144.917 109.52 li
144.917 115.319 li
129.114 97.0963 mo
120.712 87.4087 li
121.678 87.0095 122.653 86.5811 123.638 86.1232 cv
123.872 86.0147 124.106 85.9046 124.34 85.7929 cv
133.571 96.4369 li
132.047 96.6973 130.562 96.915 129.114 97.0963 cv
.420844 .339635 .341405 .00781262 cmyk
f
145.917 116.472 mo
144.917 115.319 li
144.917 109.52 li
145.917 110.673 li
145.917 116.472 li
.643549 .574548 .554528 .332494 cmyk
f
215.546 202.772 mo
145.917 122.484 li
145.917 116.472 li
219.473 201.289 li
218.965 201.499 218.46 201.701 217.958 201.895 cv
217.145 202.209 216.34 202.501 215.546 202.772 cv
144.917 121.331 mo
133.609 108.291 li
138.822 108.291 li
144.917 115.319 li
144.917 121.331 li
124.32 97.5807 mo
116.786 88.8931 li
117.475 88.6576 118.173 88.4058 118.877 88.1378 cv
118.885 88.1347 118.893 88.1317 118.901 88.1285 cv
118.908 88.1259 118.915 88.1233 118.922 88.1207 cv
118.94 88.1137 118.958 88.1067 118.977 88.0997 cv
118.977 88.0996 118.977 88.0995 118.978 88.0993 cv
119.551 87.8799 120.13 87.6496 120.712 87.4087 cv
129.114 97.0963 li
127.461 97.3032 125.861 97.462 124.32 97.5807 cv
.432074 .349859 .346777 .00967422 cmyk
f
145.917 122.484 mo
144.917 121.331 li
144.917 115.319 li
145.917 116.472 li
145.917 122.484 li
.652949 .578241 .558312 .348028 cmyk
f
211.043 204.109 mo
145.917 129.013 li
145.917 122.484 li
215.546 202.772 li
214.003 203.3 212.498 203.746 211.043 204.109 cv
144.917 127.86 mo
127.947 108.291 li
133.609 108.291 li
144.917 121.331 li
144.917 127.86 li
118.893 97.8517 mo
112.283 90.2295 li
112.654 90.1367 113.029 90.0385 113.407 89.935 cv
113.41 89.9341 113.414 89.933 113.417 89.9321 cv
113.419 89.9317 113.42 89.9313 113.421 89.9309 cv
114.211 89.7142 115.014 89.4742 115.829 89.211 cv
116.146 89.1085 116.465 89.0026 116.786 88.8931 cv
124.32 97.5807 li
122.415 97.7274 120.601 97.8129 118.893 97.8517 cv
.439155 .360479 .356176 .0127871 cmyk
f
145.917 129.013 mo
144.917 127.86 li
144.917 121.331 li
145.917 122.484 li
145.917 129.013 li
.656031 .591669 .556023 .364477 cmyk
f
202.28 205.311 mo
197.976 205.311 194.617 204.217 192.692 201.998 cv
145.917 148.062 li
145.917 129.013 li
211.043 204.109 li
210.327 204.288 209.623 204.447 208.932 204.587 cv
208.932 204.587 li
206.54 205.068 204.305 205.311 202.28 205.311 cv
144.917 146.908 mo
111.427 108.291 li
127.947 108.291 li
144.917 127.86 li
144.917 146.908 li
116.654 97.8772 mo
108.069 97.877 102.684 96.7441 102.684 96.7441 cv
101.526 96.8743 li
93.9321 88.1181 li
94.4712 88.7397 95.1232 89.2731 95.8768 89.7188 cv
95.877 89.719 95.8769 89.7189 95.8771 89.719 cv
95.8981 89.7315 95.9197 89.7441 95.9409 89.7564 cv
95.9412 89.7565 95.9409 89.7564 95.9411 89.7565 cv
95.9623 89.7688 95.984 89.7813 96.0053 89.7935 cv
96.0056 89.7936 96.0055 89.7936 96.0058 89.7937 cv
96.0271 89.8058 96.0484 89.8179 96.0699 89.8299 cv
96.0702 89.83 96.0709 89.8304 96.0711 89.8306 cv
96.0854 89.8386 96.0995 89.8464 96.1139 89.8544 cv
96.1142 89.8545 96.1145 89.8547 96.1148 89.8548 cv
96.1217 89.8586 96.1288 89.8626 96.1358 89.8664 cv
96.1361 89.8665 96.1361 89.8665 96.1363 89.8667 cv
96.1508 89.8746 96.1653 89.8825 96.1798 89.8904 cv
96.18 89.8905 96.1803 89.8906 96.1806 89.8908 cv
96.2023 89.9025 96.224 89.9142 96.2459 89.9258 cv
96.2464 89.9261 96.2466 89.9262 96.2471 89.9265 cv
96.2688 89.938 96.2908 89.9496 96.3126 89.961 cv
96.3131 89.9612 96.3134 89.9614 96.3139 89.9616 cv
96.3357 89.973 96.3583 89.9846 96.3803 89.9959 cv
96.3805 89.996 96.3805 89.996 96.3807 89.9961 cv
96.4032 90.0076 96.4255 90.0189 96.4482 90.0303 cv
96.4483 90.0304 li
98.3143 90.9667 100.717 91.4306 103.518 91.4307 cv
105.529 91.4308 107.744 91.1921 110.116 90.7178 cv
110.116 90.7177 li
110.135 90.714 110.153 90.7103 110.172 90.7066 cv
110.172 90.7066 li
110.762 90.5877 111.363 90.454 111.972 90.306 cv
112.076 90.2809 112.179 90.2554 112.283 90.2295 cv
118.893 97.8517 li
118.126 97.8691 117.378 97.8772 116.654 97.8772 cv
.44889 .36527 .366888 .0170291 cmyk
f
145.917 148.062 mo
144.917 146.908 li
144.917 127.86 li
145.917 129.013 li
145.917 148.062 li
.65658 .593683 .566644 .383185 cmyk
f
grestore
191.806 10.4404 mo
117.305 76.8652 li
100.331 91.9355 li
.437385 3.0518e-05 .758724 3.0518e-05 cmyk
f
191.473 10.0672 mo
116.977 76.4871 li
99.9991 91.5616 li
100.663 92.3094 li
117.637 77.2391 li
192.138 10.8136 li
191.473 10.0672 li
cp
.60296 3.0518e-05 1 3.0518e-05 cmyk
f
192.887 8.10449 mo
191.32 8.83203 190.213 9.2041 188.867 9.68848 cv
192.225 13.4541 li
192.43 12.9697 193.357 11.1152 194.259 9.64258 cv
195.223 8.06543 196.178 6.72559 196.867 5.93555 cv
196.004 6.53027 194.563 7.3252 192.887 8.10449 cv
cp
.437385 3.0518e-05 .758724 3.0518e-05 cmyk
f
192.887 8.10449 mo
192.676 7.65102 li
191.133 8.36758 190.051 8.731 188.698 9.21802 cv
188.001 9.46872 li
192.377 14.3765 li
192.685 13.649 li
192.869 13.2105 193.803 11.3428 194.685 9.9036 cv
194.672 9.92492 li
194.685 9.90331 li
195.637 8.34518 196.585 7.0179 197.244 6.2643 cv
196.584 5.5238 li
195.76 6.09171 194.332 6.88165 192.676 7.65112 cv
192.676 7.65102 li
192.887 8.10449 li
193.098 8.55787 li
194.793 7.76873 196.247 6.96884 197.151 6.3473 cv
196.867 5.93555 li
196.49 5.60679 li
195.77 6.43327 194.808 7.78568 193.832 9.38184 cv
193.832 9.38156 li
192.912 10.8877 191.99 12.729 191.764 13.2592 cv
192.225 13.4541 li
192.598 13.1214 li
189.24 9.35573 li
188.867 9.68848 li
189.037 10.1589 li
190.375 9.67721 191.508 9.29648 193.097 8.55797 cv
193.098 8.55787 li
192.887 8.10449 li
cp
.60296 3.0518e-05 1 3.0518e-05 cmyk
f
186.421 85.8643 mo
184.986 84.9043 184.092 84.1504 182.979 83.2529 cv
181.505 88.0771 li
182.025 88 184.091 87.8301 185.818 87.8369 cv
187.667 87.8418 189.309 87.9619 190.342 88.1406 cv
189.385 87.7109 187.957 86.8926 186.421 85.8643 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 88 /X putdup 90 /Z putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/X <1C60D8A8C9B6092206CD5AEE2B9C72D9BBF62CA31CD05101AF9F5CF9EB857137F762E0A067EB05566405EA81D2FCB002166772CA238C3A4282B79454B501C810413B70FFB12751D9083EDF9F814E65F098F740C3CA1B0C614185B0025DF3146FE3B28A413D0F4BB2119BFC45EA1EF8E0238D5969E42C9043F42EC5FAED2EB768D79D7B6025CBD973FC6247CAC87211423314B74FBCBA2E901BBE09A4DC840F3D28B68467B20FED3A901127EE0EA1523FEA8C1E4CBEADC08A2ACE8B315116BA65C96DA2B7773F48BC53F67F61820EE186C1FB1E990E287A6A075E7D673D> |-/Z <1C60D8A8C9B6282379083F504FD1A7C73963E44A2CAF0F3E4C2114131A8EF94C7A5517B1792BA707F31A53751D29E33B5576AEF560095DC390CB6B16FB9062CD0B458C5D6727C283AF0AF77347DA2D14B67531B67AD4164E119E305277963D68566BDEF8D5BAB62C34FA95DB541993F5028635D5C51C0E8041318E5D892C58C42985C4D8AF0360ABACC82164210E32A0234FC351AE461FCE35CA9ABBF75A5B161F2DE9D82EB10A7E794DFC9DDEE0081F1CD73B395D00F36D4D26AAB36DD134A1401799442ADA736AD20CBFB62D99AC7BAF773C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTS+ComicSansMS /ComicSansMS findfont ct_VMDictPut/QXICTS+ComicSansMS*1 [88{/.notdef}rp /X /.notdef /Z 165{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf174.6 10.4404 mo(X)sh264.923 208.291 mo(Z)sh155.94 47.3258 mo
250.565 158.079 li
251.325 157.429 li
156.7 46.6762 li
3.0518e-05 .976532 1 3.0518e-05 cmyk
f
157.227 61.4504 mo
172.281 66.8263 li
172.617 65.8846 li
157.564 60.5086 li
f
171.205 77.5793 mo
186.259 82.9552 li
186.595 82.0135 li
171.541 76.6375 li
f
180.883 91.5578 mo
195.936 96.9338 li
196.273 95.992 li
181.219 90.616 li
f
194.861 105.536 mo
209.915 110.912 li
210.251 109.971 li
195.197 104.595 li
f
208.84 119.515 mo
223.894 124.891 li
224.231 123.949 li
209.176 118.573 li
f
219.593 133.493 mo
234.646 138.869 li
234.983 137.928 li
219.929 132.552 li
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B84186EC> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/f <1C60D8A8C9B7BF865DF0D20FCA4404E9859CDE906439E1B6481B2FEB75413186C365A9DBC3A750FC8CD5B7F7B8622936B45EA60095B3D37F9B468C68E03657C1298567EDFC2A59EB6AD01922F49B485CDC5C730EBEA4B7AC828B861131433F470ED067D8654035DAAD4DA6650191581F595073FA084732A337B92D51D4D5D1490EB14D559CFDA4011DD74E951F328BCA12BF2268B70EA48A2C4C52B1A0109B3EACFA7B6EF61D5055DE5A6ED1F24E05DB4ACEB6> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/w <1C60D8A8C9B6218487477493A6ED6FC49ADE7DB5A336FA1EBC5DDDBD48D99F5928C02BD528261F4B15A41301EAC0B328314A22E884D6FD1C59CA5497BCB2DD47D888224B9D6A58A779C950597CDE4E747B3963BC377CAE93AA58AA7115E69CE989D76E37B26207B544A0ED52C2A2EC01472B28F0E832B7D16EADBE6104D00877050F8D30EEE2CBA8A97FB7E3C2997DC2B38AE56987D1577B31463680DA7FF636A537A36637C58577517E9D0FA948B1552DF9E47467B7AAFAD757883931987E128011F634BAAAA9FF3D857B1ABD99308B07> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 32 /space putdup 97 /a putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 111 /o putdup 114 /r putdup 119 /w putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 55{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf218.685 111.516 mo(field arrow)sh297.784 47 mo
179.127 108.291 li
0 108.291 li
102.684 96.7441 li
102.684 96.7441 144.897 105.627 181.407 73.6494 cv
297.784 47 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-/z <1C60D8A8C9B78181CF7403A347E4AD8687C7377BB84C2D8D37DDAB99BAE45345A0696395EADDCC8C80FC69A4904702F5EACB9BE2C6DB26AA55CBA722D1396922984300856064911BA64AF2B2CEBFA0F71035A73C2EFF18BEE1D055EB6A567A32C8BD76673673D4DE9BDE89B2B554DC0D70CC9E32918CA3396E71081EB3572E875B8503A44A9608DE9D423AA2263CF29FD4C750120816CDE0C7E33B7553CF2397CE2DB011E9F74D9013C00F732CCC4C8B31DFEC60AF92623FD9815754B7D460047E76CA19A3E3304BAF40> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 104 /h putdup 110 /n putdup 112 /p putdup 116 /t putdup 122 /z putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 55{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /.notdef /t 2{/.notdef}rp /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf22.9873 120.118 mo(horizontal plane)sh308.08 39.3903 mo
185.602 106.941 li
.664101 106.941 li
.664101 107.941 li
185.859 107.941 li
308.563 40.266 li
308.08 39.3903 li
f
103.314 97.3141 mo
103.341 97.3197 108.634 98.4534 117.067 98.4535 cv
132.24 98.4549 157.609 94.7769 180.655 74.2011 cv
179.989 73.4551 li
157.18 93.8192 132.089 97.4522 117.067 97.4535 cv
112.896 97.4536 109.503 97.1729 107.157 96.8929 cv
105.984 96.7529 105.072 96.613 104.455 96.5085 cv
104.147 96.4563 103.913 96.4129 103.756 96.3827 cv
103.599 96.3525 103.524 96.3363 103.524 96.3363 cv
103.314 97.3141 li
cp
f
QXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf127.288 270.656 mo(down)sh132.253 62.367 mo
247.307 41.9373 li
246.783 38.9836 li
131.729 59.4132 li
f
267.9 36.7573 mo
240.643 53.9829 li
245.486 40.7378 li
236.379 29.9702 li
267.9 36.7573 li
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 78 /N putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 45{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /.notdef /t 2{/.notdef}rp /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf259.564 27.4834 mo(North)sh198.603 47.3271 mo
198.607 47.352 li
198.632 47.4876 198.743 48.1558 198.743 49.1216 cv
198.743 50.6053 198.479 52.7807 197.274 54.8272 cv
196.065 56.8727 193.932 58.8219 190.051 59.8974 cv
190.317 60.8614 li
194.412 59.7366 196.809 57.5975 198.135 55.3344 cv
199.465 53.0723 199.742 50.7189 199.743 49.1216 cv
199.743 47.9308 199.588 47.1543 199.583 47.1299 cv
198.603 47.3271 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
160.353 238.994 mo
160.378 238.992 173.909 238.157 191.046 233.141 cv
208.18 228.124 228.934 218.932 243.367 202.154 cv
242.609 201.502 li
228.376 218.057 207.797 227.199 190.765 232.182 cv
182.25 234.674 174.625 236.128 169.133 236.959 cv
166.386 237.374 164.173 237.634 162.648 237.789 cv
161.885 237.867 161.295 237.919 160.895 237.951 cv
160.496 237.983 160.292 237.996 160.291 237.996 cv
160.353 238.994 li
cp
f
.292973 .756527 .000457771 3.0518e-05 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/underscore <1C60D8A8C9B66621B1FC614DC22A261CDC9633D73BEF2B15C91987C6C1966C96C3F6A28EA35CD5B3535A4BEF756AF36EF54196F4BBFAA0F653219B7114F89D716B2B90AF1CCD0C76C5A474E37EBFFFB08B3E> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 95 /underscore putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 45{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a 2{/.notdef}rp /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /.notdef /t 2{/.notdef}rp /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf205.655 241.828 mo(field_dip)sh304.655 63.8291 mo
265.84 63.8291 li
275.233 58.6487 li
289.726 51.1621 li
304.655 51.1621 li
304.655 63.8291 li
224.292 63.8291 mo
222.655 63.8291 li
222.655 58.4094 li
255.162 51.1621 li
279.608 51.1621 li
224.292 63.8291 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
222.655 58.4094 mo
222.655 51.1621 li
241.674 51.1621 li
240.643 53.9829 li
245.106 51.1621 li
255.162 51.1621 li
222.655 58.4094 li
f
263.769 63.8291 mo
224.292 63.8291 li
279.608 51.1621 li
286.736 51.1621 li
263.769 63.8291 li
275.233 58.6487 mo
288.807 51.1621 li
289.726 51.1621 li
275.233 58.6487 li
f
265.84 63.8291 mo
263.769 63.8291 li
286.736 51.1621 li
288.807 51.1621 li
275.233 58.6487 li
265.84 63.8291 li
.212802 .170932 .173159 3.0518e-05 cmyk
f
240.643 53.9829 mo
241.674 51.1621 li
245.106 51.1621 li
240.643 53.9829 li
f
.292973 .756527 .000457771 3.0518e-05 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7883C34847673539A3C47283D2869DE727C001A8ED17F310363C066266AC877F71DE696B52BA5756C41FA2C6742427FE25CABE743DC5A8409CA03A46FFE172EB266EBE72B596730C9547F1BA9130523A2B6925FB6C63D24A5FA2932E01CB40C0D974065C69BA7D95C92F84E75317230A20A5B57C1414477131B85EE5ACE9CF2CFFA8F81FDD0E1570B07F54AEF9E9559FF767E5E4A6770AB6167D2B403FC1CDDEF440629F36A00CE900D50814788B0FF5D0993B3F9BE201807168AC2FF35AD7144226A32EFAB4AE57534B933FE2F650AE3AB04CFB63638BA8BDA42DA1BFD76C61D93DA> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 103 /g putdup 109 /m putdup 117 /u putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 45{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a 2{/.notdef}rp /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf214.318 58.9746 mo(mag_azimuth)sh.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTS+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTS+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 99 /c putpop%ADOEndSubsetFont
/QXICTS+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 36{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTS+ComicSansMS nfQXICTS+ComicSansMS*1 [12 0 0 -12 0 0 ]msf237.987 123.829 mo(\(direction of drill\))sh104.967 62.7754 mo
232.4 64.3291 li
232.412 63.3291 li
104.979 61.7754 li
f
234.78 62.833 mo
233.133 62.3135 232.064 61.8403 230.745 61.292 cv
230.684 66.3359 li
231.16 66.1162 233.096 65.373 234.755 64.894 cv
236.531 64.3809 238.14 64.0347 239.182 63.917 cv
238.144 63.7739 236.543 63.3887 234.78 62.833 cv
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 104 /h putdup 105 /i putdup 107 /k putdup 108 /l putdup 111 /o putdup 114 /r putdup 115 /s putdup 116 /t putdup 119 /w putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings17 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/b <1C60D8A8C9B7E2CE503F0CE2BC5634A8F8728B9E7DF78E9EB37EA1AAF5A6E14429B2FFC30BA7B2B7F7056F226E2401F24ABDAD5426247AC27BE4FA97CE94C91E5B97490DDD42E9AC1499720E52A641A6B5FD3039B53C33A6C3FB59A9FDC5809A26029808C985DEBED644B28F1427AE3990CDC08FE3F67389E1C6D971D03C58C4203806687562D626FE9888BA19E8E374C457B0F0CAD2096A35C2A25CA9F88F3E7B91EC8C23BC> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327FF61FDBFBD8D5E47777F54E7AF76DDD4C35288F1FDE6342A197F7E1746F9F08E1E2F6A013F2F56A027205F5576546> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/s <1C60D8A8C9B70FAD6F31E6985338EEEA1793890FC3B3DC4027B9CC9488D5A6B4D4C4E3E08CED307B2C798C1699A9DD310011666D86920512F1C3EB9CEE4F24B897BB1E950EE111237B9A2BC5BBB8732A07D9407EA3C86D8241785B5209F0AEBA9DE73147EEE82D829B87C7> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2BAF5100CBE402299FC69ADD471E1494375657D0074EB17A39D5C9C17257D613AB99E3> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTT+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QXICTT+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b /.notdef /d /e 2{/.notdef}rp /h /i /.notdef /k /l 2{/.notdef}rp /o 2{/.notdef}rp /r /s /t 2{/.notdef}rp /w 136{/.notdef}rp]QXICTT+MyriadPro-Regular nfQXICTT+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf297.008 55.1958 mo(\(strike\))[3.4082 4.75195 3.97168 3.97168 2.80859 5.62793 6.01172 0 ]xsh200.549 18.9126 mo(lab arrow)[2.83203 5.78418 6.82715 2.54395 5.78418 3.97168 3.80469 6.50391 0 ]xsh221.787 259.62 mo(\(hade\))[3.4082 6.66016 5.7832 6.76855 6.01172 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QXICTT+MyriadPro-Regular*1 uf/QXICTT+MyriadPro-Regular uf/MyriadPro-Regular uf/QXICTS+ComicSansMS*1 uf/QXICTS+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Lisa Tauxe) ()%%Title: (orcon_2.eps)%%CreationDate: 8/9/10 5:24 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l#Ib6Q7hq8G_c2AZRVFk&AEom@q18$DtQpQ=])3%T!iF?'TaS[$O[o3,hCGjq9J!YR/k3Z8gFF<&k7K;l/CsuZ[X$'I'Im@%HZ=(PnS7O`QS3".LRH>.Q?&A3(q76Sid[NuAT>CeB04%2:iSS,&ui=sY2bW-Og&+r)<n\abN%@K`Pp*2=-psclg+MmZcfE805(0#%k81J.kHF*=q<Yj3B4mPqch>ZHa+*P!3P)l56.O0Me)M89MsIQRd$Odam-D,^Vt1R:n(D%`YAV\K=5>)SDVr)e4'eAXs6/mCdLSjG%B8`P.X7Q/3bRN;/$D%3*n+QD?jNk<u5;'+QS:t3E*.HfPI"+j88+ZA&.K7f8n_*<Oi`hkgioEnuo^t)U-pR5$?S$)4B\@&eNlJ@(%omcqTrGm9G)n&BX]VFApe3!s7ceuL7s4"mH3;^UCdtgf'Dm&4]VjA5"qi<e*X33Hbo;fW)_gWG70"LA26CO`*D\o&:/EXScl56Ao%GDl&OBChSrDdTGg43bX(nF-"!X[t%[[9VDqfoOY\p/pme7,$oG_CX(J<$8TH4^S&.](l(og=YH7MjqoUf<SZ=SfZ'Amp=h_3;j)a%S;S!>`P:ug?Z+1*=5RAT@b3`"W]^.NjiQM@QVF):3h'V"#QA_l^Ja%&q:2Ob%8lEPfe"!)bLpPlcqZcs^Kk)MCMWTuDr*#t^:X:n%O8)kWgH"D!%W:F;*Dq<BF]NGi7dae,B?gsg?YBC2j(Jc/=V!nO?[PKcs39*YX4)t[FaW;+J%n$-l%m1%7f?t39b4TCqH$-X'>D"[%>j/,C0)*,P=r<!2O>`R,mPU-l`V^FN72tBD35bRH,I4j>R,?-&SCM$bBE)c;bA?Y7%ENU`59\tBSFLO"pih5F8jgD_&FaNBpbi9N%p?2cXb>UEr<mLK)1MZ$1=udZF=dugn:9CHnkmsAg't%dF/c6.ZU=T<-C@1KMao-X8ZbMP^7n<@JkU:(+I<:/2O,i9=)6o-%`ZmXh%[s6?8%q4c3r/4aG'E1EPbfOHHhdK"L(NhDVr/5jT9$"?+'E5rubR"6C-!;U0))K.EQoBJh'QZU5ZC93+C11HD(Nkau:hKTWOinZd%.`s7"?[5O]/u+c<bLiV7N84-JC<.LH_YimV>*9nj=j)#pA,)$eR%NcMXGT,uq;G\._X(h5nZRlk-28:a0L,Ic]-pW&lRMk.8#$*D%guufP9ZAH\N`r`+[Os=V)*LGAj-"kfA_Sl;@=M)YZSTbBm-qC+>/%uRn1SM_I:I`3-Lr_e730TilO0J(4$0`gdXtB*dBM#U;&_tW%PTmJBkJHplem1`mX"O@n\ma[.,;qIu4).ped^hOohod)Z\XZ?eB%_6.)en8ers8QuVd5nIqSH"nFL#_R-JB:$2S,OE%o5tXA1)fZ%AR"81+#"mC8N]/<L5ja'C]-l;ng*aJre'+F'qP?o?G;hVb9+eWr0`#WT<0bEP*5(=r$b&u:VZ#;36LE([(]'/Zb%aF9Y]]8hO]+d%I`n@c0+JJfAGRm-%M.[moNV;'m>paXllH(jI?i.P8Uf.dI,'eIkTK_sUYV(4*gD;PUN2GYrT=.KNkQJR%$CO5Pgf%4Q'S2?"L1/M%HWpG;)Fq[EU^_3ql9lHE/sdoG;IAoV>"@K3!+jpi[>nm?Ys*=AV);VCa5:ofgA!m%L;*34(]<cd=e;FTP0@BkGRCS5H2=%J:67G7%kE'Hq)7,<NjnHSf0iO$uB>rc%D]-mK6&O6V4%)d\,t9&kalq(Q4^P,=&c+u!\<$)5(M^crSG8ehNpH*S*VdJ%;gOYABjeMUnVI(f%W9Zq+1KjV!D9s1B\>oEb@\mVr4JG!?Qe'i*FU%^.UooY'<p:]UA\XT3NZk=NZMXYs:Lhpd0Ca,%4l]&pGi-u^cCR3\#R*$GruWim%Pnh/l<klQ$X0nk?ZIcD)dtjm93$n$BH?X2c3=*`-$hPc-AKr9!mo,MjfQWaucj\=>Sfc<$p5kk-&h9URDQWKPV.m$B3^+Q2Wk2'/%%u9k\[(c2:g78#d;p;;%*O[>]gU7jU<BK]^NV`<^WdWOg:-(`A]>!^UGsP`+:lKt8b9#fGCU/^O_WR']n<doSp\3aT;1MJ9o!To(%=,bRoksVlj*Qjc=1IaK4%`0hf`?TL^ZD65#fdDa"<^-=6d)ta`\bl=gSi?>T^Urg6-^7f&e_8o]Hh>G-?_*0q(ZN)a3C"9b73g(u%<OD^/rgRjB4o.Wt(`Cn!`n=*Oc^%'/RCTdKd5R%3@V!@%nNDrfbH,riT#Zh1EXT_lZ+e(NF^655`MIRsC,S]%k7D*3hIS&<lU\q0%]Q]A0gFRKd]So*O)n6]fU5Y)`OOkIpYd2`7Cg=KX8)s4^`TkV&j\2uZ6@$F6W:b-plj*B!`%(<R5e7Q(d\g@g+]G5?0TY<<jQV%&%fd%g@/b5BSXN4"+Dr"b58gRti9('aNY@g(?XFkI*Zj"`+.k3YWB/NH^=K#fbR<3[\&,_bh^g>`;n)K:mi@]0USo$2cm8h'V(a^[k%nH7bRL]-CI4u#P)hV6)Mhtk21]Rt,P^KLOD*cq@oEVahV7VNsH\D=.'-2tI,bA[@H\c$O"YE[ohMr8n1#FTeTQ)S%l+/StMqp'F]%l"D"2]@s_oP#bkN<c&>1'HHi8aoUq*mM`8\X*]B2krb;[`,2F6dC5F&QIk">r5tJCEsC&">.=1?fVakD@H-/q]rFU6qc6H&s$,-U%72#:jM!l\IH(PR%m:8HP2SRhk7sDhJEg:AjJVQBk8)Ye3Hn0'@))>JCC4WqTSl(M2]DQccr]IMmd?e_2/5&U]=(G<BL&2a,klLRF%oH[4.IuQ6nI,Ka[4aYej5iR%sPuk=%*nL0r%7MfPBiiUP0^ZF7WQh1,dBnKsMuL-!^TOd=5#7*$"_ZV5jad=NbpF'_UH`$8fs*0R%9A;Y>4eGJ2qL4bHg\C]Vo%VtJ%3GN#p06:IRI(7=qti9-BO.Kn8Ni?AQm^QTco@C&o!J#*c]ee.o#Ur%pELL"7K$,f@eD2=B"^P[%=%4;J<DVePot&$fkAo#tZICZ>dBnNt)Y+4%1r+<V-i@A:=;bmW.(-Me-6#j)%:AH)R4dXVH%bhY:RF[kl/2+`V4OIHr7g[`^6qd_%GDGW*4X_&rpJB(ces!^TaY7l2o/Mnsf1nB1Ci@9&U[<bT(uqb^c^IIp%*e?'mYNi9]*$=CmQO>ET/a.D#gNG;b3l(S$0B7Ce%1BI%+hBA2SZ_;NrtTEqA99"rZ^oI"*so>4ajmKVreu^uGpN;-rRTQ_F?8DEHU_YPmaY_#EB<""I7C</N*W8T-XlA*m@[;!ZIFY"60H>T%mTbs5I[Q((c*>j*hYjr2ah9diMTY5K9"BeVRV$I;QgqJPm/9c,"ciuM0WRZElJP`E%&5$WdTN?l'oefcPm,2i](^"'V;nPGL</cN%WWtq*^?Ts'ChHgN:&k(OBB9F[BCG7-]Oob-(NrH"qMp/ncIfG:AlQ_&qpb(,h>?>QP"9bClG)YslC@h/2Yq^*Ci%EapO"'dm<s=T%CXU)&8_n:Pp[l5%C!m<NVsDL\n)Z*a%-?=VjYo/sZlh1gc/8?&A>QA"@"$J9RS,$pm`[aAW;T'.Ub^%Dj'+Qr+<']soB*fUB:`>r%8+3>OhQ"u<LW\G9r(^BTKkcW1s'bJcaE-CTVio*J:*a!slL-UsG=u6<?)7]d1"/^uOb4]k23oi7HUa*V)Hu%S'6hJ?eBk<`a&Cka%$d.5$ol!XZ)-C29]D]1o=1bo=I?GmH63G46Z"*?Xp.*Gf;0Mkd3hK%>a\hrh>G:V]IpRA7C:nXbY-PY43r[sDBD^+lWfs;?EJ-7-%aU;YUjmFn;2D;F00'U2':ZY6)g1Q'AZ+5_J@^</e.9=Kf+q;tpF/rKrP)e>qqppu-j2J>W<gLfE[0O513pBhsC$PO'P:X((A=jig%#"8n9D-XfIqI9?FgO,G0f's$:MnE\0<C`#t[.,3+heLe\hg0QOX@)^'[GBp4?$i"hJc/qMa%f!K)UUM6PL3O<n%5tWdQ4`B=LSoe%M2)`60TUiM?URfsGDuk+C;Vh459NFH*`ZS->.WUHf$8`Ng2p@iP;aO-\me1q<P6SD-2sA%=$2W#ql]QDhH4XB@ofmn4VuXLRbr/C%4Q,SZA3[BpMn+SLA=pg_]?F3!c@_'plO/.k[b>4qS))X>5;/UUYsrR6-EBUaXJ='FT$$a@nO-[5\j)1mD#Z8bShCc/OoK350F.ii%3#5$Z,[R3&U@]]##cZE,,5tViC`G)gko9WP?@'[0Mb5V,42aWAHF/*5I4s>,oPL2`6?Zi(M_>Pn:68$ls4b:N8']Skjk+s-Fa80+%9"o*@kAOZXDJn?JrV'?k49'AKH*b"E]m+\.R+8k@l>$=I!pMa-]-jM7/,JCSBD7:thUt,"S=H1Ac$'Z\a1"!cSNl#%St.EU^9MEW%45[Lpk#,d9XmO>n:TodscX37qIbC,bFl`?Y2h#S&0DNYkSV92;kT4$:7o,uW;lOileN%Jh0"C_ZSP,r/.<R;U\sKPeV$uHdWnp@u%gSsJhc>BV/14St3EOBjS"'dC#NbQ1NY&>(WB:-[2iYX+N4$VSnSLn`&hTW1-!cME6ckGU6Mj#7/BU,_[CQ;R[ff?cooChJAea&]q%S#cA,!dSiK15=B9p;Q.<al;F-mbuGMf4X^@f3>B@c.VLWq<>lc<69U(?!Q`dhl[`5h5P&%0<\,W/uYbuMZs*05/0:q4i7N*0W/sY%rI8]$f9kX@jj+`)MdMLjk3)YLU9;u*q&)?BSpG[*8Xk'N(p@gkWu'rc2eS&82q'-WM8e0$ko7kEqT\q_Z*PsMZ)bg?^CGH?5pI0n%1o-\]3WEPTVBt@om=VdfT;HWX4?<B)'Eli"Xf_DK[K!qQR`g^4hHjLY8GT'gEUtPqDJSFs.8<pdK6lC"6iC8]J3\@_VfVRlr-H`p%a<.AGc0NR-CEenCS_];o&%hl1$=t3c_&^\Hr(5'2e<B3j>,=GTV/N0X2dLbgmr,#ApJU&K^7"HOWtXjLp%@QEpU"bTq>C!poR=30%C@bq!&9=T.6uVJ*^:ebK^UcQmS)<)L3P<",r-daQ:=!d*GK@=Pks'XlmeZX)n`B,`oVEgP17L>;35.e$n!C@&]"H^m*8:GLl+bs:%X%E$EGQ49l83G7fRsfL']D1g]S&O*phoX<[-Z>>@Ei3m>mXp\(H/GQD:G.-]@K![Y:-$PBQ*<V;[J6BKq&+V%4/WlJl(m1KmERq>%LFWr5?Hb]RporjL#<"h`kiQu9G&mHMjUP#WSF^lIhHX?Xg`@,m3i*U1^i$.IZ0m!\^3DN-D7Q*YLaV.PcWi%`o/H<W004tOmMme'%DWWbDU7NSjs8Q2+]NWO,*)QHi:=]q/hOaalH1o.9r*J*=,]!;[XnfFo/k@&>qXYYR1]Hn2fe%XFmoPjbDuOkKnoF%,]J?j0aPhP)%qrYs!6[\TgZTi->oY23OV`0P$q<=A5rb=e*MjKc3k;2q"SsIgBMk:btQZ!X<Gq5S03W%.ueXQ:lrU&;9Ji9%?>Kb>g8YgesVccc3%:M'!5oSD_.)]!q1heNX7Ie.loG=KgI\rB6E/rrKEhV[1J@q>UGc1\;XY@#Vi]=^7Abq=Lr>1[497K(9Sa1(u^`A\U=5^.S'$EH>W%?JR`T?E!S0H_<#6F6i^EP5)+*SK?\?_*-\bT&dM=&/K>]e*HU^T":)'_'tGk(,+O-Jp.-/X^O)C%A+1T1=MX\H[5SpOHeFVfCLp/%DY*#`&_DEX)GK)d4mRIglrSF@SF'U(?iN4?1.g.PM$&jf8;fA&cds#Nf#hXb[=5Q.6>HM(bmEY&fD[!ZEV@?^HWT#JZX<Nhr-8(-%B8NG<0];13>@7<t)kZ!!ISde34SbImD9l+PHO"CdCiSoNn)pJ[1O#/u>4L.+C!H\H/^7gKK-.rALI=@P.)S#DqUln_LAg(=3-%RW%oe*c<&rHQR6G'g7\**JLkJ/+L,<pG9K9'5I(1sjI.iH6OIbu7B6[oe`;B^]1;TPPb1"<EDp;90U$qG;n/qt3QME-t^`ne-@pZ"P%%N(5]C^Qh-C.A`P,WbFEZV1WlWL[;=m+ig*na^_K!2t,l,I#nm1;5":17i$+nYp;)69,UAS]4J24PNc6\bL&;.DY3Q77d>"f@iifQ%Ng5':a1ZJB4;\Tk^.56^.SZdp)CtJfF"O=i.n?-'l@.RHWX&3YIZE^@/hNKeWpL#eTt0O<OEYDX]@8t_fp.%H,FO&>nMm266iK+"%4k^j`p1W:VSGmd4$2bJ4-h1!pT>Ef;s4$bKgO:EgH#I&>%eSp\Iu`T&li3AD6&5R&!.p##&4R;EN?f!g6RI_J0NLbTDl]WB:ko:(%.!^dG&;XC#R>>BtR7t&`rtS.GGd<ISW5Q!.p-CCsLe22&RLHLT@_*/o;;,ID=f*47*i0r&+!VoK";I)NLkN2t)A4Ngkib3&.ZKlH%dtL[6&X8I.<hh+qd?RPZ6sDu`6=2m0m<3TK5?gg#rQi=NchaHAVke:apd<@NQ?^>Ka!>st!#`G=&;1J[+b]'gmND]X"0Z7>9F)bn%M%G=KN"Fi5$:YHD8rT/T3?0W5KCG)3`@Ri>-D;fC_^0nRN@6-Za@[5k6ufH]W+'3n6R.N$KTS=dQq4"tPc]sLQ75:;Asj?^V`u9.%6.c'[r<`<6S$2u\06+J'H^NQfe0B!7Sd%Lc58,4F#n$cdHpuC&CkY6AEZeJG/%F.BF0%o#3mpKK4HG:P!t2J.FGO0UZE&iI$IQb?%3@#LN6s4*&>=;&<6pH7dV#[>k%r(C%2EoSRma3aQ,5rO;q\:<H4n/@I@GgNDU?t;FAX>g$rr0b5+n9Pr&.[\8SW,t[WY,Ed44jf5%jl#?A3:qt_oL"eN9F=9[7u'S>8,FPcG)68jUAK>&NoEnqnji+]3'95a4?PUY-c*)]<&tYebk,kM7f8rA*"J"-f`Pu<O1M:qith<U%WTQf>n2-58s(MFoL:,?Q_KC@(_<1\a_[\MJ[m,tQ3i'mae!,#i@O"T#dj-/4e^K2,/HAsfpA;3$]<i1qOa<ll&F!RFrHY&gF%D("%T2*lgXkQCIQY?mRXe_kY37,c0UbfSXB6BP9mC5TcSS?=nXh:S'4j[>%KPd@,r\!T\8:-P7LEc,LVqi8ICE1dJmF2(%dOpQeQ^N"R%d_:%]h-g\j]<p,c`0#6-\<"R.13'<bUu7(PL3Q+6N0EF]9I^WI+d,F8lN.AW(Pcrt9^mS"i?"Q`)TFAgOdV"W'$5DC]tkd&&KVK4%mL`#kO%;Q+RQL%E:BWbh,N?WH7)F:A>pGLb7,!Jg4:nJR8&pHEP"l"Z2B<$+&iq##%LR>Q`s5GE%4Q*a@7(A@;HP6!c7FJ&[1)&*%^#(7<%F75b,^99A8a_%c8cBP&hu'Q7a]D-Fm>X]O1!)@$q8O];R,f3MHt/=X9_+07^/;U'G1_N`2PdQ#Kn%f%L\1PTk4,?g"0?@&%^N_oVH6ZL(cMi.dl=+bNaU.\W;]jsWjsY&Iq2I8HZ0"!rr5P2_=S!JIIUgW@XSIk4^+nS)Up)"r%4V3uCL40W(V;VCO!U1HI.n#S%M7^X0D#8<mFo1=1f^1P4B+hhkfljjfJ'EFl#Spi8a!km0pAUQ1X81F+9RQfr/@t4*PWEl'Rj<L'ec.$'ZP'5;[ho'`X+0N%$,c+J%Du&FCd!u'+(&g=RZ`e$ArP+-@$((\Z0D'%fiUa3GgR^RKnum/F>\Hnt^SaMb?#YSVn:Kg;>fB#7?g1PFl`'DcN;ObqJVQ!i1OP2-%ci,i#2Z1'j`o(KT]*;/rGg'2h1A1(9%Z`f4[&Nd8g=+C:Bb=o0RHSg.MgbrL0\a;#dDli6);aLQirJY[BCoc.%R<=ilo(PJUqsZ?%7dk`YV@trtH$c@)c_Is)?YRN6[b&.Y+k2o5gFc;CkJB.12XU+@:4s>$4B3;5EO#'k)dfg"<Y3]&.RVS'ZnV@D1#ji&=:dOSZUg!>%XH#B;SP-)8+2`nLbu627EfAb5=PR_8>0"4-_`$9/=>Jl45%;XT%'+coL4ORg[[34gmnbB?j&*kWZM:.ek3=jQ4jMK3F/j$,$9cX`%(jXod/kq"RJ0XE8ZCN2ZW!+r+\*\pQ<X&*2Rr,O#p0%:06WTKdm4#/2CS]=5")W&DapPX/)c3SH6Z2:m:2F+AJ"G":d7:#87QX*A%N7Z:2>i*b:1!_>oR>?AODju]M3ZIV/Q_Ce4(sY\83@3S*$?=roA7oc3BC,naZm,?P6C_0l_-qgt0D^eI=9kQhD<T]hb#I(EamgA*%nXTR>5sF5AmID.p&+Gq=cY,m?eh,RB[W-X;MK#7PKTAdEeiX3W0466`V)WjuD%[I#lZT*<acCsPdV%`W$[pfjAD(Jl,um2$+HO@n%.Z\*#1>6TFj0o7(/m>\.7`<X"9$h3ugrGl21!O45,"ST9dQiYG\Y=G-?>6$d,g6+;=,T$k*EX6M&>N!`.*#?UN@#TVA"\rS#JhBW%%Z0MXI*Q%VTT4*s!gf`MhpELm&ZO\sJ]q"S6coU_G%@/PremPX%DJU`Tmo*G1"3D*1,?2ZN9Xs%L1UqDG+\ru[n2"BWKOo6.1;9W%m6X/`18NBd:dphGPN3C;>V%Y*<:oBe0KRo4Scs,_9`%eV:M`CBS!CeX#9lK1L%lhB\56t'-:<i=;PG<4+uh.@:<_K[-AF[Y@n`ns%F@+"NN/P\ELG@'E8@".7-*c]h`3LeM[.tsgF)gaZp#9I0Qu4&/3\(b3ORbed@nHGhg7-,npt\`SPghkF*j#pC2dT)@DTpTEPsI'n%j[.ePdDLdVJnPTC<ZSPMA5e<Y:fUYa5\,d&\^4uP!gmLInpR@<+WPdGi*-6!@llK_ctTF'1Ci,CO3b+Lh1dBK'rZ!m!YP^Cq,I^.%Y[CpXiCP_2EJYGnN^=Rs"mPmb>Kb'@g*JTZm9j'oVr1!UKiTau0""9fMKY5^`'[;,=/8J']]P*+7TJY&k37`t.+:;c:g#M5@O!He%CD@CSZOmR5kEQf.%Ba0'e7ZadAifi'Kjt[e-P@&f0Zt_Us$tcJ>$M\m]O5^HbVCn8n-V4Yd:(I+H<39C&tLFI=XDM4k=?OXZ\$L;%-]I8s@a[,.<8dm1%]T:\qMbfLJjH2qTGpiK']+7,P9JX(RN%o/\VPl+"[j59-Z(VMH]0p@[,Y0L!ePDc0^u#M_[>6h7@Wb>)Lu$#%EfcaBV3N<<K3)Ju'-m7=97fW#h)bnVMA7Hj7A$?HU_ibS@&cWoo/['I@`M1"i<<n>)kPZ(47<P3DhoMkI("l*;WCVBG'#tRh[3&h%9$pA@Lb!dJRl+]JXfl5sb#1^L\[kpZK=6RQGLr#nLiT3LBslYO[$fHYRFDAm?t$"j!'YV`QN^8Pl/;&VWk@XCm9$J;Xtb>g(8bAX%R*+V8iOqmdNV6NP@IC(*+AiR$g'C*4Uq3p^lnaicNlB.WXObDVHp3p@!-9NKZ?`6"$c=8.\.*pA$3N)$._mPmE0+1H@f%?bo5m13%VhIs'[?,NkeaaGnSg-,J7@G:^4E61.gS%q9"?73rd&dl5e6)s%B1:=2/G;3T:52`/XI_[.mPCih6&`/q&/6DSW"rJcEM3C+%9>\Y%\\f>KjFLd_IF6/4KoM2X/!D_+8PC?04L[X,dDOHK$iG0[#A=L-`>+@sl$:FGo&;6RQ'`k^@p5^bD58%pSdHtk1aiJl3e$3[$W&;,%%&OH8<5kp`c*9U;0f_n,L[IY[BWX:'Kq6l7j!.lVBQDR1'V:]+#u9ZW/VjmOOqU<Ie5ju=Pqm>$PFX<m&##nIiV>fWK+W#C'SYgW%[gA=1h$-sd0EYth*Rrt4p+7UFQb//CVh>PN>@&<cKDk(GCYDgEj:^=i277)G,RGEIZhAL4i;>](RqII7!6iLG#rTrYnm2N\@%S5S%L2#__e*&Qd^0om8Oa[:+_'jb`<<c2'/4@f(_IYfp<p#)TZ/&'!%7kkse>cBq*;cfMf0dlk18l(uCSZBEN_C*P&RL5b9%qLXLsYCZ%(2Gl&\_5mXM\W\J=t?XPqHuFF/DFSYQ'2"nC*cd8M=c[U2iNn8?D0`MEX1&7#JIuH+T7%d.7Gfr@La7_?mL1hJf'e"ko"a^iPQge%'V@01I-:erdBONBOO[H=aSa3!l<'^1?.*@@)L2W[]r5E3ciJ[^'hKLFU'`K0IUh%bOp]ruehr[</SZPPK=7">6t">DKk([d=P+J/%qhTV_%t.EkK,o!ZltM6p8DJji1U8V?]EU*qEC60_`0.@*79,j?&uP`EAeg7!@*Q'H<5:?9?.[#Q'Z\W!&RO*ro'gCS363/,?DQh4%3pB%?1kHiF*7^omgioRnH&od`V"!YNF@t_cq:N5o(X$7H+g_CZMbU=n)4OX5NIOqc%h:.:0#K%?ZSg_uklb,\\"[YWSWq*3<V2[n%jmuiu:6;b(AYaWbO<Q8KJZs!`K;_rMd]Q)I6lZ%4lsjjNEonJ8dO8+//h.S+#\g'Eeer)B<e\GWJDI@\`_WI&rI02#@])Ts(i"#b%W9gmUC_e<FYcKN[d]0PR%`UbfPU+f\1)Z"=jAC:<$-M^qAs&c`,W[IN4i44p@nUT0.bA@h.i-RJ&o=_dFWA[FQH2W:35(H_N:p&-%+AQn7EKOAbAYrBu@gBEjD_s21MF--"\0k70@hUHunMuc773X"Mh.Fd)^tlS.<l7NP"+/%k36n6ii69f(b;)$`ohS)>5C;$t22[Yp%W[;d?CTHG(eo]39:F=\7.:\'l2F#!l;*eNB?(nZfZ9k06ZQ#jmZ$orW#&aKW9$jp"fZXu6Qe;0^K#0fQYuq8)'-q^CZ$dB>Km!`%%>9,c/YT)P,M9m9ZZ/E9J^XBQL/OhEhG-D*/I%dUFV^m*V%36RKb/=c2<]*HOUe]S+n5-D14/3Hn-"9Aq&]]IuDo&$g@oS7B:^EWD%_,l@7"km7L:HC0--jJ&.NV&fC"]6O@qEOU6eu0Sl#mlmts%Y2H$PQ[[r=9M/@/iQ;o9C>Bcn=c<qu-gV-_NGo#FGLQp#aeb,M[H]%0mT<M/#&,Bn5ag7S97D6Z_5<L??KDb6$-<j!s^+cZA7+P?k_I#f7MNm3%mGln>T?V%JY*Lj7XTSko=Gom1g^P%k"fP?q"[C_Pp9?%V4:hB=^3K*);I/I4m>X%%Nl>Y@=j,o,uI9r$ER/IX*P_@1Vj>G:7$T97Xt\>G`sY&2*K4=egoAbB,Kb[keiEVL:RK%<!81;,E7.R%p4R'UA5Qj90t))LX8/ljYPTLZ$p1Vf93UugpSjLqOl@W9NOc3r3n4Iqb'9[[E,\^srQ%h;X=)fbUh@Z:-@7HZ1!rofe:hZQpoe)n%/,;hFSjQ$FVROH@L)ZIHEjW#(>U-WJ0QJChW!d@/1FFog@V6_r0C/r13V[fkm*O='5n5kg6#=*RG_"t/FpUYO]$.^j+-3P!q$ga.%4:9^\OkC5g)X(cXCLGB9N_P([JK1].k+FlB=#?;d2h68r06]:WoZ-";E;n8M^r7.];1o_I;>(sk\/tq+IgWN6!Q-&.YQBe:72Y\u%7RD;9abI9*m'ChW/1QOAd:'uhYVnuDVmVPd^d<c<S5u]86CYMA/MfNY"`;N**oH,WYel'45nUH"&t]2cM[<-;#re`a6tbl&W`pW@%a&f"M`2B06)rfMHol_m<5Hr#-&OpO=ge7Prg6EBi)=`MdXYu<Cr+L4bD9<j@**G!:TfATY+iHcHR0(R#(t4:#-qEdB120LT9pB8Z%&JKc*PKI!UAQ,4)+h^3iM8TJZS@"lH4!Q>"Q3S-q*%W'UH5P;lb-('a$A;nMG5nsBYi696Oi[+YUcr$7X[ntM=:b_0=l8eSreUTi%lUP+[I?)A\J=6^9$!q#"5JgYRik5D-:^\7p)>Gn].V]8'C5'0@lteumL[_u#1s:f2"0F;J5g8@ZL^qe(W.8DmE6=S!$jYL?B*j;f%@I&Ws:)6\J65()3iRj0Cg[*ShM?A5">Z%(r$B#"3$7)!H=sORs"EU`"J\HNojc%)o+PoJj'qo2+ijq)]-+[PU,(#r=3C"$0`tAdu%;ULWE+MF_V*]&`Z@M[06U=dXcH_H[(Y[e7DEX]bCiuV&jLqLsP$>_/($'VV7jeSdd;IIVE75G&[.^el/+qFg;'t@t3_g!_IJI=9W%q5[U)K]>B@a)E`S7U_lBcqTtuZ-@j_^lCI)H;s-c4bqfG1`.;q2^6LVKES-8l60`W9gm#%Q;*V1"mct5J5N)!TTb6ZVZJ1uCQ0Tj%/llPI1<VsI2iBj.>UXp7J0UK8grYsI""Qk(,e<nA<H!2ti/BuRSu[Ud3Z=D_E$;H3:-&GM<"8t>g5+q=p[!;>[BP7W8(_9GoXQN]%+,mT50.H5?oUh@:ar[T#*tT]nreZ"PX(o;&n:i44#\lQtk/@;9ViKglF$=mY-^>FcJ-]3g`F$iN,X+n1EPr-QfSUY?EpTJHrJD:'%;>9"'`CPa*cf1T6_8heEkj!;%`=p'D<[aVrJE[a!X$pkj-:Gd>Op,eI&titENDN!qA1`l9M0#3^Z,eZ<K\kX-_MET=SE[jh#r6(s%SY;B3S!g:,Qn:%0d1%*X,M5`6edAoJ/SVMsBAR\7:D5l/]S:&Y2ul=2o0c\]_'_`R$Z2\uI=MGJ]f;!<\Me";DadmC?)X%@B@A1,%Y\of`'Z1'eAgl:'R&?dD;o&W'r"F$;O,-ca>11-=Am3"VTb6cSG/DGT5r=TU;Q1OpkY@/4paO[oPnk]^&0<2S@XF3/,M!""C[uik%32'#X`kJi1X2O<A+[Zmk!:(Y-.JTo8l&lQbi.G7^?LbJ&]9=6@n41=p#=];eknK,NCB0@fN[NX=.#uNuC3!)!\W2XE-N"IG)ZVZ.%7THT@&"FJ8"i']*^/3RPQ[hKud,L./Lc@YYa;MXcTKflWWOY;Z,P"bQU+r4NK=V<&NK=fFo[BgS*"clm[-;PrB#gfb6kg+t$%7?'%\;>9m/GYTN!/q]##JYrb;1p/:E/1)L0pn%WS-"`0nU6V),<5?=JND@:MZiP^H\$i?S$_UNi+PE'-W1H**U"5HoH;_)8RtsjDafUh%lr<W[7e%(;S-060=VA(RA-MMV5n6C"Z[p1S>$Ni#H0X)Z%\*mC7Ru$W#2%W3#PkkOp%Q$CnP)h"nnK070J]IoC]k21J^nKL??8J+%OcaVpSuP3Rn14bS[@@p*V@\,D<"\9\+Qj`d&NJ072fW.a!sQBRW)V(\*A@+/@tIO#E82!AAL@LMJW'jZ4l\VFbOQE.1G25T'(9n'%3.23%L0,9(0DtYtlJX-Z2Bg/FAkQdq>U?^3Oa`._$p)cB"sDWQ$Ss.*b[X,F6fE<1RNY^mA)N'oAqA\WTn3UY(<)A9Mn)E$6G9bP%&OU)3+W3R+a9`-)/gn.2im/1\XBH1!)2MO+s#S1o4[]4DgTas$hH[uGQ!8$9=;m!SBkc311*V/YfZD6$<U/HHEU(!B_@*'Fd>>2n%@rgb<AH@Ao9*QC?g,js6p#k"uoTbBK!#%Rk*!>h"ClC;;W4iEg0<Y^>gYugm)@#?RTW&QW(>.=.-a@a5=T7L4F?<tMiG(@3]L2qI%dDc%*WE/7Hf.g"b-WPiLD"99LcF?PBVa8#mS8ZDR^be30\/II.ZMF,oa)JK[HTUcd=FR-VH/2VGh^,_W^_YkV`q\4C(Gs`\&dP5Z%_p8R_Z0A=Y^;;fCSLCb'U[chD>V<+XJYKh'=8G*WllkrXG4Jp>:]O/L^(Y%67iX*O:5K+e=_HlKi]?`KSgBQaI-teAIZ38fL0o^!%HgJhRlqS(bMJOBn<Jf'\Ea"n^lsFGb;bf14o!$$'8X5:F"Q^1q9fC$02o!i\o!&8d9ObK$S9?MrXSa=#$8Y&l*Fp(:AreARrBfXZ%RallU\bJ<DO!)<UKaKC/;-#D=\KqQG7ra_:oJ)/>bNe4c_So%bA+%<0(nhKl4;^:FMJn2g"*fV.YtGRcgQP[X2?iKe?Y*)LP_]k`%aG?Pc&OAA%V[!O(8BcV[je>l.,CJiKS^\?1Un0Rb3RgmHC%0ndi/D<o_`PSFQG<IA.idLt4TD*W^)\R:AY`HsaF)]RG.Y"P'q`1$%8/s1Q.Bp":D'Kl,SC?[^2k0X;3/CLa8;;QXqaPJM'h3!@=6&.O)3E,P<^0'qB18*r_P0$'X;b-ICkn>&l9m^+;%j7f12cuJBLZTF%1EddF;7dX"#cj<7-F!Cf,:ddin6Hs"QoO7F=e`=0a-!d;j(TtoAuX*;.^B-(*83[K![8I)6=HBN6nsf`eu)`f?+%uZLB9sW<k?;3%""2Jd1$^>LpqU=g&XatZ.ZDg,d)fVBcP,Ohd*F5*CpYdTi#aKa;#Ej@2L+q\H0BsP*t"bP/p,>m7ts^e^a/**&IYXR&qqR2Tn,op%Mp>Q,a=*dkfcJN>eS6Sl('r3+fGb]iP0HQ:Li=/'VrFT3hi]f9B$TRfRDgsR?%<@.)W?>K.nQ,!A"Zc_:D-mgoG_5-Lfb.\.6&kb%(sJZlNak(j=2SH^h8QasQEWp^l!erF9@aeW07g=S'9?>I90R1'-<+E:(!IfFjat;b+f3Qh52q+0W`ifFPpK9/<nmKL,Q$\E5[&US%-L,03/QL(<:ZBV22]`V:?tbp(jVTmk_bG:'Ztj3]>@SOO@q,2c^k)[BG*+Tj1mKpC0Ls5nR]P*b;&?$E\Pepib-;Y",L.cm'S]nQ%N,9'g6>pAh#L)aNN`XKB8(pk(A5r9:+hnG;TR!lC[kLtT8o'r^cCmWZ)=FjTRAlJEN6&R*"1XDG[EQt<=ns&/K11dd[Octh55%Et%W907O)3kep@[GarSt)l1#O#o5OUHsrG2[n&/.a=Bf%WP-W/TbV#$HKITrZ=tKi7>((.qke/<"HQZ@K=Q<QG5^A9u;uUjE>LJ?O#/%Z2b==r'MV8,e8X%.qHKe"k>5:b^uZ!)J0$'K%MTk/G.&9L0;<9!`@n6>_0+Q'4_,u;f[()$Y-aU=[7:]%p?](HcUeM,bca*/6G65%@2:C9d4brV3hg$uY\%XSF-mWVJ0)&43u76E.$_n"/0>S[rff^$G#1Xl-Xf%a(AM2s-pU_I9@+.UFQK?O;Yci9jb"1*mFP&;7E41)%'_HS3THO'=5:B?uQOZW!iX!^4"^,<a<h)pBB<PI+:'q%[Z*t)l"Fq'*(fis'#\NigK`J'A?1h,%J3A[96pX0?n?mS?.WUFJ^emMl%)I!aqE=<s`5lb;<qB/&@Otb$N'<MsA132G%1b=J^Dm3\Bgi*diKG,Os_if9<%_.6>M7dV4)+t%'54g6lPJFed#_SgB3%N$ner6=p%OEM?qNb2sf^s7;Ycm6pW$h^d@8V.G&ocJgM0UcO(PINn`W!4V8Skp5XJSTkBZ(4r/Ql.8_X@fah3I(-edRQNZ'5,E7q*!5ufcU2Q%qqHU<]d(SEZ!N+i!rG`J+JC,m9R;mQE!@P-g1Ncn*]3FLbn4RQ$Yq9/D!rQ.+m'(5h9`[L?!!E66F,*QJ"J4`\6t$`=0QJ'h#W!$%;%,"6GJ`+3b@fd/GbLfH>.>4q4$\61mY&5U%<mE=G2Z3g#&.l3:&q9]KKGl^%d[WTE$s$>B@!r(-^92?Rcg5E#O0=rQaUQTnOI1,%(@?db\eFHN2,g\I4(1u<76@2A_%#-h3t[O)['43k9J2#33#1@qURaj%r`d=I=IOVqGZO(.O*F"g)1;m;Z9ae>"[#Gh-f@S.YT3.C%+km5a+le4>/d%,.@^DB6$tss+XE-)Y6TXg0b=eI30M)=.84[4F,\LSS1m+.[!c4rLN=pA#lAhM^k`ikV#XQfF^"s5Z"I6:3+HY[g%]*"<Y#ln+[SFdfGFV4fl)ORj+kK%NQGZPC"n!R\p[DTV^KS6fi6c-_X-Q_#-mYNa_Q]^cnd(quR1,<]EP"^@;IeL=-_-<>$i6_`E%`o-6@JVnFR"&C:mJ?ZC9)ll9_=6J%1.t.a##JmC0ne)#<Ppp`:%<=?9fcHpL[.Wq_!.ADq>8b))@/e_HqqM5#XisW-eqV#pXe-[3%DI]q,)lpBO3hL,grcni<*'/i,UU[GI5jKC,O(/:"_p@R^>QVXWSN0A48C9_\Ou6[?4%srN;V8RhTV-JoUP$870XRbf>b>Aka9PAg%Z&s/:#)@$e\\[-rn1ct'@IN,.UcgBihVibb`kucaoQ`]^K&PSF>ojQ4l>Z3^QPs,H]fTb2kM1%Fr/CA5mQD\o>T+<JSbuu8\9CW$%&^Mu;GDAW3E=)B"-M!NCmbPc5%h86XdCr_L@.21O9FuRY?O)M^TetC`r;G<840Wpbo30TullA]%#8S&L2`95LdWBM%9.4P0Z^%fS%hQ+&X\9HAb3%_#F]a(tdj+MaaP(7JUY`Ls:=ud#9MSq32!bK/kjN%*P:<7W_>Y_)cORLMgN^j))%$[)<%6/Kt4??)T2,&Y`+ecUG%fWafq(/&JrG7:/$"+:FMQ":M6icKh&0RW@?67Xo!+-b_Dp&Mg>&\^3W!ESWfMBp>$r#SSef-U25<^+^7!A+"34L(]:IE0dfQ-0Na%M\#p[k[<'L#]k1\'G0DcW\,DV^aNI(A0YrgVB1oF8aHnJ%9d03Xobmpa*`/##KTAp;&'IqF(UN7m=k6n23`=s4lSX/+<0j+ig/NT%>%B$r,W-!A\h=-L6F"*J-oN'8[=`*:5iuKpf>_(kEt==LAHJR6-4F@#h=N[C)iBp6i2)-mW>Gl\B,K2_"M9pJHl=H/i0FSN`YCaV%)1YEb:?[5O"QerQ$gi!?N4-"r^t(CP>V3Y]n7rtuQ.\.!L"3_]0I_^K@?:q6fnJeC(3.93<d[Xp2XE;qY0#iQkV^5`UPL(R*?\7?%30+*Dd>"!G<#Y0c+BpAWL:`0I<01f@Yj2R->&[-5CW6dBZ%9%ifZq2sXuY6DNda?##JOEC1rM8Pn&3]bEQs:?8T8!&>dFLslOr+o%aLNMYCrnK6i^GZ523Rh[qGu"pn.-"L@=a!3U":JsTtAa+O_OcZ-:&8NQ]TefoeCYp\Y$h9rd#4:d:qik&g,!Uod&lHl`MUDN(S:W%#p*5<=@7^R?pk7)N^,`<Yp$3"CC<[P;h-_Lf:66<m]8p>YI4W!r2%%KL9@rg=Tqm]m!<KU9s=;%Ejf*5ai$!-!a&0-%I3@heQ/Dh%kQ&@n8e!E_R(:urclgj[NkdcBYtK+P_*1UJB.Yh`Zor>(C$hXM;qi_%9F#8`/C3=.Yp[QI(h-^e.6oNq.5rM0Gbu;00I*R]Z\tt;%+fQ'GMm,;Y8W<]kU'-4Hk&`Di,,6<\iVnMmUI],V+!pT=OjjCliBpm;;H$^h6T-2I`-hgG=cq3MK"sUt+fRV3c7q4*2()]>Yp$(I%n6n.bQgfZ5>uD@UNZ,2PPFA1)C,k3lBR:`,7rU)>%7_Fin-Z>7W0)+PJ6%`*#"T$TbWsYhnh;!k6k'="%drA/W563qC%'sgHnZLo%)Fb)gmQH:CBga\2L7q)":6h@"L8!b:m2R%!g?CCVL)MBQQY?F6q*YCh%`M8RcQ.`YZB[5r'giF7bIc+Te?mNVAe1RF<Q<W8W$0])%OUOOh\e;c-S<_R\OeLPRW-o:O:_D2nSlX_[e4<k6`2#n"#:F,d+K1EL>:"]h&_'A-$8*nRW1dpMamrpE[>004F$ibK1-MLG#W6G>%,$F:AU#lI<Ee@20)e!!':cj=I;F=9%MS>mdF!;)(dbs^;"?"\TA<Z`nC(L)GSMC]53[@G4+fK)e,''_c&_&e93+P1(3b2+1$pbmn%o:\&F2-<]gp#DelW.E?JC=<9`iTK4tE\tB0?iU3E$OSa7)!ND522=\A)$'gDU^YB**48lGFI%=E*^.c&?*+PuN=[n?`!2f&hC3>s%m'5$$pdsoIiCH&Bb+`gqB`q^2`CLqe)J+k#<SV\>P!Ua^BU_\NRSHEUUK.I7agj=R1u*8%WDj+jVE-8P'JN6'"4EtZ0>4s<q]AGE%,"r#+[RWt(qhn8i%4mJFZT>'fku?DSG6X<:d(tRl_MNaKToos+;AshdYU"OfFFn1e\`'?8E+!=D_PAuD9"HmE1ai)/Y(<A\--Eqf%UiD@HCXaN'ku\B'j\UJLf#/[588!\Vq^$VH&jh\qAanmdQaa/QNWrr9NV*c@3q5W9&iMdj\o_c8k_,1I\Nbp&7YXUPh9c>"'+CI;%QZ1?W$Hg.ldG1.eUGF/"Z*mVu5g`0ll7bmg#0uaV`C'eSKA^DRM+4f75SRjek\0^o#Tt%]c.u'<BV&*Q%1g^2HjD<$4YdJe,r@Fq%.b$0V6c7DGeMSn"7.@_A5shKt0EqslNVkNP?,Jt'G;nXgK;P4qf!7e36[+6dC*73h:)-<%*YFST_C'n"6OXBdcJK2[<bB_?M#;jn%)RML=M-flEB.1m+XfW"j#0mis_`mgVjAr.fAS]26c.5[OI^ZL`=W>,aYrWu5'I"A)%Ru5$[P@qK_Z:<rR/kJO?]'+Hp'c=O@98g3%Eh5<W>7,`NSA:ATTZB[?o)a/JQ-1(#5dU.5URl<^<n=.@R-3!Kfi/QE"aTcskCSMn7,D#k+>kZBe;GP1S3j8X17:RsZ:*pcmi5JI%SFFgG]E`+!4U;r$V)A&QGNK0nhRSR^-MkP@Ha#;cV6D;AAXqJ,>[0]ZYKl=K78T_3'76r>42_t`.q!#9&=:n^c7lf!kRB-?&'PZJ%*X[(F!ZD<q^s7LbD-[3)'=0IcLp>5S$<GKGc4T<_5Zr5#B22&Ec*&:]iF.UXCe/1M)9e]okmUtK=A&`W,7H'K4*_$8FCYg["EP&D%j<1%+0P?G7,_j6p/I1.';d=o7a$G)r6=U`hKUH``k!q`F7YbsnXBN/hECMJgQE4Mb"-dI'k"d^]fZm%i&fgJ'aIc%t6(I1dmUm9n%%!)VhV?])uZ4/Vo`AcgjEW1^0Rt2m)$ETtkTm.cqd=[oEa@nAW3GTO6,)dGX2KP1,nTUYNfGR5s*n^rnJJ<#+2Fj8i\\F(dPS(\@%TAP38L9Hrg]FNL4W^&!BeI7!GPAd,V<ASS,7K4M<Z,[2qOCm^VI)2'jR\;J]NS+lfR5)`j$.+Y''s,%+R:-_hC,eZ([h\sRLM!FP%"s7U_1Zq'tbHT3R1E;^RbXf\U:K&Mp$mDP`#%]]FTS#!I-NHJ#1+/0Uo*rd"Udca]4cm4iq]imT`\GA#K3Q`2bR#F0g_J82QuV>I%CD^[I)'%AYBHuq=Af[U50TR49$O1!.EY`W5L0m]sATMu#^5Pq+NGdrkn:%;;L0dV?\CYs1]F=F=%WMfe%'^0Jd@e\0R(PaT0P&7\%,-#D\/gI=3k[qdc7j+kFCTqBW#q`5K/H_H.CM]YT:cs5.bVEfnUq?h5L<f*1LPl[U/-;D!`%oiG5uPE8?o]?;2T,f%#(V^%=AZYN%)C,ilLF]8N2o6M;3?b(e!UGaX?E=I9U6T.lkN%rUb/'"@DJ3U#942*8Xdh5j\-c838a[,SZ-)PO3C,rO\m65mXtc_m<%.Sm;Agp7%m&OGf$&f/hG:A)ZX`c.E6.2Qq;?EO7o7_6+9K?e=h-eCpRLWeA1=24K#DOf^_iu/QE7lhZP``VpaT)ZHAs6NuD@CnY+tT/F4\FBB%;9o]J%!r5O%Ah::]*^0,0P-%hnUiVk)+ehCgq(cbAUs^k4mGkdLiC-a@OPeI,lF#K8f;5B*7>Hl):U,P4>TMGg)H4O%&D+h@l5li%PW^5sMLh"S"Mk(#"Y!r\!;bnEb0Tj3!tKiq<#UUoZ+DJ*^*h40R\J67CZR`g\W'ur(#)R-,ViUs9.4BHbJ8%"E[K1YQLGq7eWCNc%o:=B)aDoL5l;5XE?pO58:s+0D;+_:olp13R/>8;jBYZ60]*g,3=f40BZK#Sa6-@tmC*;W#UIG]gN)2N>#X(]r)'uFOPT@ij`s,Cq%kE4e$*CMo$K[p\s\9/I)eHSn5bt`H`4@Qo(4[^/r2PbI77%)N'?#:-aW%k)th16taLOgQ5J]2SW\cs\Y]TU6A`CQ$_H2P1V@K>qm%=@<U!9PcH"Z7oB8,RE]-Y[YV+U9&t^-aliDK,$`hHc[1>a<3HMC+`/`imfd]rntdrqasj9%T=4C(ebt*eNh*hNq$+`/!sei')o*V%;@G,ZXqa;<"%!5QVLW.>VbdOtn\eRKj6GR@H&t[%'ht3<#GLl$9FSlJ\^mf`@Q<ao!Fl?\L6n&Vb#K]A]73Fi5[p62(ZHGTEN3JL%p,HNs#4\--K+Z!b@f8Ph`(@-Q?UYQZ+,hBt)iC$?N(!%PMO;Yqll(a`&o^#eL`#lU!OLU7LnRqV5-,l9GbIO1C`)0I!8Z-Y`'KJu%4bOZl+;@=u&;)3n(mZ;_=:nSf"[\/1$NM=a6B(9E>3Z`R(bu]`2$bq"P-Sc5:+io*q_9ZgLf`d7+i*ur!/s'of^[4(L*1(Y=72Vg%%j\=/J_Jg&Lgeh[R>Sf5MM-0_5n(u!'+k!QJsZ^e?A9"m@+\+e&E6PCeI4c,Eptk:6&;4%iAO2Y%.aXt[Ig)*PM@/a0pWe<=Y)jp%l*N,p0aKL(UF-=%%?$I4F9b,@8MCF41^GfY9l0_VKU?Zm!#D+K`#o\GPuf]Y`(!jMlla54Tdg6i-G=8H9ACZ.BPK*t%YP[=nPkhd%`)'H+_[h+,6H/bT+81)-93B%A_s^pN`04.LKXAWBo5G3Sm#;bT0_ZUd&ptPdHD"@K57HFD'Po_gLHWC`d+uMK_e%mTdA5`V>F@tP%371(\+-K>?,o"(N*sN!^PY?r=+3k5hn#f1>fCedfUVJ!SeNI:_B=[i4^X@es8:RHB?VJkM1]_uC'fqlXh(fDB*/btF`=50!$LDVq%c&ptAUdQo*QX>Dg#;+,"93O[*_K#s7]OeHdi:or_BN[pfb'24</2\,h@URlb2p!">(7k_s>_C0c(T@HqCe.^]qIp3E-jpuk+S/NO%ZK;>X@C!,GMsN.('j-U2UC*/YS3rj50X=5";GS%jmikTg,b9aRJ$;gdED$R?Pel*d!84FiC`5JQ=pJlO<HtUI9ok@B[4up%Xc9#!%D/FT<UofVb,Ah9+)JO!9,9q&B$lE\oA%5'6RiW>ZCLa;6>8opug=l1l86_R<M6t5V8>Ii_.O*;GL-6[->_\,k1maoP+e-Yo"V#/u%_^."4q$\2XdS>^/+jF`2$AHu_JfY4)Xp81OOH?"/ak+=A$7a\\?q_LR&m<O7+Ue^77:jqLTob@%cr<(P,Z9[*BO6g_^p99[J<7jE%G.u`46=LX]b=b)k+A3;M<#d0&DZb!8L4b.d)^]QcK7rVVKX'JYiKG%(O(A](q)+/40M!%j(i8[4@/RIg[E9*_HI4^\X4[Uf2nfM$%H!cjKGdq(*a,V%M>m:4@K0eKB^rNg>K&gH2kE\ApXO6gKF;l(\Tt:ab+>IHXcE7R@91oge]Rt_TdfP(gg*E!A+HR?Bkoc''">L1X%"[NOuBgIh%!bjq3Kg8fQ`#t-W"R.(k('H>pU]j$m!,4`\*rfn>&Ap_9%)hXr('EgkNtqgPpnPen%/jioO<4=50b=FO=q&?bNtqi^%_2f?6;=('s5n*VBiZK94dGc:+I'bS`+Wi9EdR,*.$t@:J$\K;cdD@"hmP,h=0W#&$7(Z#sdE)4pO_LW@Y/25?rOLK*fH^#dNZ]e9%&O&g3mL8_)q=_RJ#P3bQ(WJdbR)dF\(uHHs&3sBgLLTBT#a;h]JB-chq#/d;]TW*[i^@.pr0uR-4N]U0=1?ebXdq\(IrR2-?^q[#%r8SRG/bJdU5B#B+cdF>5mseb%^TRAMR=o["AoP,7huB4hb+Q6>9Z>>EM]H/\'tDn"\?B^pr*g&2.]9:Z%Vt6j]_j/8L#e=]J_22"%$#lTr@OYj4]>W;*&8r]aJF(dgBuU1"*cQ7L8e?C0G8VMe(b4qj*BE88A:Eh'=W$\O)<dsHd#RAdETFbm*ALWKKu*#SXl<P96.5OO%X&tH6]NjtS<+P/-XqmKf07]e5RFmS+?Yc4[rmjtQ+Dn+6fi"S?ABjZFC^5ue8'8)C1.ddDATcl_:VWql/X=l*`4As>`mCjf1tpK>%g>@4ep&12IN:2J!knG\2o_U&-94q5:7.=uUHQd`npap.&f.=Ar3Jn'/L:Ga/'gH%Sp7U&8MRu@7;;<)c^$)%l-bU>*QII=^e3%d4%T:gjYjeNeWn5;e,9UIDmN,^G*(hdoNl(LZ]*E#FE:KuqRoY$f*40_,^\"dVRc.YH<$usTF_b).3M*cVnK[b\gLI13MK=5#n(%BS)%;-pXS`<b".?)Y:h\&$Cd+rf$:QJjrmkFo<pUC;[ZF/]^'(0l=+F[o^kW3NM-ilFk@.?6sHP8S"^6+msK!</<cLYk3RlLLh3K,0X&%dWS1sakAA)K.RpW^".lPTS9n?9af!XCC[OLCB0JEh;IA%0)NVpJ^Fh*)mp5r@!Oq.L6kknO&-4^76iW$'KS2_A,pj]W&5.!X^Zqj%n6Cl3o2A\;+<;>RJ.W8L0"c<2L!Z6(@Kj+lm:Nni:3I8a1MM@AnPTX[Zkc[]fJKjlG@'ONOFAKs)!-20ZK5(VKrCs_L\T,ieE[8$%q5A)-k,sXXKWi]PET(/]mJ-`0P`i,Sk;eAb](/%!+Zj>5:_9p3m.nG4"8qF!.?%8M-HU$LUi8_`5h:8R\MZVdBj1R)Jp53Z3@\]d%*1E$W;F6#\<`U0Mk<m\FZFaLO)^)*kFhH`g[7`QbNe64b;HSQK')Q*7kQODQ'@'3AN!YP+2b/X)g\#TJN%bcICF4`IHQl1[:pc=H%*R]HKXkCABRku&a(lI.D8RZ9`OEn8MHG8[1YOYF\@(>^5fN&E:F%^.gYRP3><bepM8TurDI)-h>,Fjsm$W&q"!DnSLB3W:cdb/6e%#kab2B]0el_LfB:A];L@[;[[?`cBZ2UDfqGO9(<'>9RQ;fhrY!H'"VtSUD44l9m'BQ"nAuJR`)qJaA@jYutNFn.=^FN5GQR/f^D/%JM;F]W=OXM<a-K@p*NLm5_TINUE//F%+]srG;P\M'Sk$<%MF#^0]Qmd?.`1[A$NApQ2h\oD[/ck*-^h>d&bLs2+A7jUj=I)_,$TU%]W+d?!#pnn1/!kK>Xr"7#U=,81U"0g&3!a)6Yt2j$_N#bK%(95=%!^uVSi:BFB1\o"V"R8;8ac<i&$N%PZB^4mO"0MhWgas$&\hi%DE9GnqiFo!`nHDD)?9iEf\pqH[d^o?m(BQ(n%Z4^#Cf_$BY-Q.k*9=E/L-!dk7*qNq?i0Y[V":cEbe]/I0*&<43-$>ej(7-SU%a1%;$[\`Di0LP4NK'&7CroC80H(:8]kDI0><c\FU=0]0SYT&8cqXo,SQr>6<;`M]3m*]@2tToQSjkQ;[pNaSng%cm6hCK?q`Y7Kq]KO%C[IFbYrFfbJJ4)<2c+cAEmpa1onWr8UI3S,[^92-q_DKjY"K,F&0$,GV:Ee<=djNH3Q#5]U<>Q3?(XiZj++0gi(Xk8\0tAr.#;T+%<5\N\Y/S>gX>hSC_K9?CJ'm#$E,9QL[:!d:OkrD3aOEL!;UUQk3@dr6M&VI%=1ta'-l5uZ"-^S7D/#/NfSDpM'47o$m<O_;:1@'-%-dg3UZtQ5.$.*C)peG'U2mi?9/S%)Y1b`%*+%n-.WAQAlpjb3[k?8j`/!E"@AW.:m(/YFF[k3XPf%+XU>[#gL.VV],5Z!2k7&P#]%A]g"7!==>J,-#MmO=KJ$OC(LKKlPJkRS'8&13RG`2BY,Q@K.t7YXG?Vgad%f&*rc:5`A^0^slWa#(rmr7Ag^m3]A&[#<ema>j<hT%O<r^V$MbkI)-.;,J\p?IX'k+FMQ&<^%_-<cKt``cVG\WL1)`q5o3QVAT#tNZL;Wgj=3\8)Zp>Be3shZ<rB5I(<+NSM3)0ii"&#[#%&kSc72OHf[XT;2.>gc-)g$,W#*LB[Fmm#0a2<=rY@&"`)?@"13G!`JaG\FM=$-CR/E*W8$ZSoU_6"0,I2;9]\32o$1UF?YjVHi&^%)d.+?l,[9734BWWiiUS^$D^F)No8g@[5\BN*%]+*OStJ#/7FB4_lcnb[q9\;)/Vhg[#Ad[_Y.H%!2r$7e0Vo$7T0AU(8NY7WhUZA%P'aM/;ceD_<G`1=4LP\?fiQiF:fTV%ldRb*7^Uk4h.U'2XF<!fD"^_k)fD;\>>pLm]QU_4N<TE-cUIrT*cf`UPA%GV_!$b$Eut-u%.h6SZ@/>c/(\R?kBbdF_ckDTj9baG^2:FRK_A#=6_GD0rnf+lO!!m@D"0j;bZ$F$EJ3Pm1<KrB!D!LRLP`ACt?lIV!]]36l]rk(l%lO0WHdD?ONCe[m&(q)J$Jf-0J3Ps[0F!t4*-Vc*^)Anr<"QEH_5iO.lj,n(j!D1d9*%0c>"1>HYX#a3hPmdPuZbd*A1m`LIOk]p=%)3+*hbpA'2;s3esU!+B#o)$AZo@659?S<sa^)]=2#+*2'NFMZ')V.0pk2bHj>Ua3^n&2i7O?ID0W9iFg]e;^n*_0EB?*mlG6F.*_%\!e$4(MeQ+WHrH6<]-3g^u%^qi8s*X8P7(qI#!W^N%217HR=q)]L>_#F#$#t?$i01FRr%[StE[2la8Ad'hK9c[@pIh#UM.&Z\cjf%f4%L5<^A#`+N>4V@Y;0gED]&DrpV/\/-?0:[T$!FK=:#&XGoh\;I^O356uQtO<?C"]K?1m:0re3X.p#9O3S7&,UbYlZ;%eDCS3L)%-EFD=p^M%/>L(/d@_@e^$bf>P2&eKrV3Ek>dn^jT23#C/U)-<&>3/E"G[8f)8"m8oEkp'@0L'Ag:6-Y\ABT?*;^eNNVJI.eE^N;p%Y!UXc!mEKg<5jR#;J;Y\/2sk:"*k1>fHk<`8BODpNX1/jW[UX>p)@_=+=C@1"jAKgCN3=e1Q,=%$N4WjZ(dh9#-aS-AC5,Y`b&m0%'s9fu=5+_/n5p%@3/!=SU]L8IRm-3k]TGf"=5Ct;43q52UB7+Y?trMU2ZDODc`O]S1]*B40N;PSk2f'9!+*gA1X!&24)(95(bg\\%7R^0U(V4>k7i'4tJ.K(J*)bB#1jN*O1uf1T!u\$"q&[I#bnZ(%KB_'dq>qJ_,js:nOAq(;RR<d-U8THQb>Y6smQ!&hK.0!`8XnGe%L/mVY7[$9AX.^Y*%)m7B(kMQ+qfAd><c\LI<<Q4MXI7'n>6AcA.hmjF`[1_$)jWEp4o+1P0'G0b[d@.5$@.qZ=t)!ie,<\)f^lW[%&Pd]$_Bst>2JQ%('_8,IVo`3lYFU&YV+o3E51>B:RG.p-2EefZ_T?Z1A8%P(&=45IjrBB;[$*iJ$taMPE!(KS6W>[HFup>tRkp^h%,,LB>&l@RGSJ9%g,4A]H@X7Mh:6^R9;65ri9TDVdEda>!^meg_]2$!oa]PkbA4q:rXH[igRbC3`2((iLDW69:_\d3!_J55)S4kUj%F-MR=2f#1fK?1#Mm6LVGa9)'.C7>p+$)5SK4^OV1U9/3E0)@+/F=H;&!Np*&-s$9L=4ldDo_MCTl6qQ'RnfS%^*jH[mC9UY<Le\E%Q$+d=lEj"FQq"ot,j%W"TQJq)?#%(^aNgJ2TItsSq9`4cbBmT]1e%")@5]&_C;:5(5A-RHG.@;N@r]Hlm]'_oU(262<O6%i.AKi^%rM]AV8)\%#9N$"ZWGjVZ-_1RI5mtZcKfuAW^"5TSqcY99-2ZD*@/L?5PEf,W7\i`pf*"UO7S@U$R)Yk?Q_4"\lKc!HG*E#A0?'\s%Y,Z@^@7r40X#]Gocn!57e_EnY!8^c,(hXoOIM8PqOk!U<fpSXp23;jdG#bF1>J:;I)@IQ1M7P8i#DT(+.`e&*.A(Bie8T;L&GX5(%VRf5CNnSjr/'XON9lj.+U(!#BF7[G=U%s(95N;t;g8&KKPo9RkZts3BS^C?fbn_Zq)XmgOeUdN=1Fmk;VsTlJRIGrd`Zl=B-T,1O%eo%b>*#cn1>R#=7+`Ydr@n=RCTaTO17.UW@QBBs_W%,0!1MVe:i#5ZH^dk3Uc+k5O2)U;E:)d$5NW:uEOL7,\4D$CE=>fJ`'k<0R%8Qr3[9bV41H_`d81>7%UH^o;*Glk7]>Las1%88.9"kI`H[d`@"828f[/'=mVA$!s\s-)Ueh,Oj&E[$7G91lA+b`o"?^@$12UWIaC%>HEPI0&(mMj%/Dg2(V@uKe!YX\;et931_?N&8d&tgA%'SObMh(G.a>j[I>(ODmk[Ph#SF-UtNfu8X3#Z7)[XPYKa&6NA=DT`gIfn%J0kC<kp-sg!2URB_Z!DV#^3f/W[b"."gP$\G\Ko2rAG(d!@'mg'_2'fS/oj^'&d,WPBp\DBnX0q(4XL*%OAUJLPnmk/s'G8lc(E.%hV#-cFXdj](A,g&E.M'1`^nU1LBb=9FAi9hK9u#8Sh@<7bKq)_4Wd0MfZQYb\LBgIJCRg_SSkiiOA6fil1RiSj"9*3mGZQe<([N)%!UaGdUCiu6Q=_Rd@>-86jaU++NQI1\/6rq](-=$k\bP52XK>(;Z,eNgX?apC0,bHk;)H;P/;M9uO#eBPd]mP?kL9gY0.Jbmi*E[L%CGidMC](X,fUQ6Df)m@lbgPMp=AQjHFXPD.Jh_PGjsb>dmmf0/%sIGI9.)=IU*!s22n)CfC9u'bY:1lP@V7]\7K$Ef7Q=Tf@m+<0%b%J9ad[hNcZW"k8=ort\He3MJhJB/Q07GY6NP)SafM'k6c.V/E28,tg8Mndo<,kb]d9oQ76+]kF\`Tp4Mmou4SiDN6#ql?5D8*Oi%N70;"Au;5c.P;!p)=/h%b\e&<8^#=BOLo1[JJ+4!F;(,p'D'=e?XZCH/(NKoB+g]g*J[BaZ^_-3ai-/D6X*eMkXO_6H(Sq[7:#I/%E'#CMbd'R1c,CXHK#&DF)UV],%ZOLf&ijtVKrHe\M88q(H:B[PTB');ReghLV0Hp)C:)sk1kO"bcPG02g-]btD2q5^A"R4CWZ/^8%h5a<(`p4m;CD9R=M&4Ynjsg&i'H1t\D"B]&3[,<YcnZ(LM5/nS>Ru3"T+m=2e0td7NrTrnES<m-hD_''[q!-NES0"qL#uH@,+6PQ%Sja*R_OQQ.n80XQBYcB-G%"uElF&9ST;6Xrm$(QdHFOB30WT>:PAgV`;ebM'?aj\&CM/#oFNE)C$Yt:/,HCXJl/p+2X,2?D<c!eO%(=>S,**:nuW9_[RD#SKte\(``-k1jTR;*$[,Ok<ea=LeEU<K$0XA2`F>8*J!(7_LN%Cs#J`:E&7H^Np]LXMcTY!$,<GWGJcN#!HR%q=7/,)d9TMY9)3cT.JB$/W;$p2!ot>N6P,&4>c@td'?UL\JFdZ!Qo$&<,AP==ZfsCKZ9*brF:bfBqi<5'O+aYk,Zt&CFSKoAtQ)/%Kbg`BTq\9?61-IjKk`W;GY>L0(b3AL]s"!XU4&(Lrn(l:L?)&JZkRqI80)&?EY5_,g'jOW:36!NRF'SE3\/HH,OtL_9)):Z5g)).%@rpkpQCg3QT'#SMLtu4%;H*&tpLZ"G<$"tZc`=F>_H^nSF7YusfM.N!,#b6\`0MYZpoj(WDd"o&mHV\k*hU%%8Q:`dk,QH'd2gDr%j1=CDcKb6DUL8TE]MF55^b>p[7^_!HfT3!`Qc4GRbspAg[:711o]cK,f)26s23iDYC'+kufZs=/?sn*7f]T&E"&fPZ])V-!]W5:.%hfU*]@Bf^!o#*(`A^$\L`CUBa!/ROAmmgql=].+W*"KD52)W"MV+C+a7&pbj'7\%RhT07pei,CALhbA>FCL[j+=ZZ)p-iOal(lVc%!?Fgk6tT"SP="`,L`;mB0Y,,"F,?TAdHJqD;Q-WV>*HXW_V/6T?qJqb'[9@@["?\cFd85Yc3qok]8[r$n&f3ghRnhH8cT3hL&#5d%I#i93./):T4iYpu7]0cre8,B+\#]kJEct!5%TW!mQ:";2*,EaDd9*))&#Z!26-om-*TX:S.92Y:CTs@H<'\E$4PD9^@&Le7:R>bj%/q]#/$J/Y.7okBIT$MQgbm(BJDKQh0e'2[35r+'*gm@>KWo/QHiB=5Ob6V2D%Me-[@aX>K6e,'c9tS5":q:-=%AU<lV(Pu&)MQl,%`I8#,G"S8CPXee&5sH6QWar%G/c0mrVYa?RDd/6?ec8/#(E]''.qf%!Kq(#K>T3)@l_L;(Y/O?%).0"j_B<QN;HI\W$5e4jTc5pY%EA/@MqidUenO/0!3,->`-.rhp'pkZ&*.#kAWjqXDg!l`./`)R.Cro":WiJFicD+q*Mdf21W?K*BULLaY5T=28R%`3!4([ZdeTXbG%9<kV/P/>QkS@r_J(oN,P04AE0-S,IVW`]X*cmmUsji9c7_jl`PUI*&qf&]6<Mh16I.^o;`KZe&3)@Sk7:_`)u(1u/J)TWH82`(gG%09eLqd/ia==&N^OpXo;&(k-2PmB!TC0fhrNBCCUQW8SF<1`hO<'mH3CQna5gi%PSJh;&?eJ[3QPYG/U_08fmu:nFCcd#^ltG3U&/%dZQrN5oinTjF6S(B3:*A@hj,*7Z_Ij/^/BU3K$h(PfD7Jgj.UuU(=]g.Y5G!@Y4^"M,>V;%Jo3AA,[Eq\$aPifP<6\S9SLMB[i"\%(,R$Sp,Z,h69$ku2i]IKJ#SMuU_HQR%jGM,'\UubDDG%0=i4d!(:aoU2n,4siYpk8d$uO?h)[s]<***"K.pCV9\%^[ZPZCUj>V$R%m623L_mK^6A8@Mog/op."\UWhs786a:'-obFrFSs?Dp<$a->a9K0)].\$\;g4H$>$^0=m.6LZP)'NQK<3@rBK*a9J!F=gOGqj1=#%)Oeq`6uQin*mFfpnieRF`@s9>M`$=oY-0#X+]ndM>^DhWW,$&f2;^I$`";\H#D8poGikDR'pJ10$+<[M"sjO,c^"q&Zn!/"<cR*M%Nn_3Mifi/[<4cTg1`RG-^6l[&F"+KH(:6b0nH`T:5*NKM9\C2d[Xb!]^Omf?[c!hDY!FmenLFC$E=sOMMF++k7P.<"CJYVbe0tOl%cP0Vn<-/E4gor31RA-D:=<\kM`aF__X]aG(UWk^S).Lb1er`>'cT(b`&WLLNHnU?tOk9^[H#/mALk(@*7\RC9K7tK]Q-WUbCLZV"%7,YI4<)'PF:!Z`Hp+oE:n2aXr6*P_?_pnmH><^YJT"<3KA,(F3R^R!T6.Q=R'XjABE[Fbb$fX$k`^q,u\]K/:Oia:>[4hbDZ3"4k%H*no;]oK[DrKP<P2p)g\K?sZ$=\knOWt>M?a67@?:*&CULp*<Vor]hpG(VY[+[Sr:WPQYK'81`h%"]`j8-?TZ-L_-F#O`:TQ5^ZM%UFtSJS7?)/cU!)*[Yem4gI9D6P6QaG9)">"j5-ja=H#:#/'cG2DlI?FKl09,&!H'nkSd'r?'JE486JRpT0OTHDnpEGNf(LC/HGk?%_/[IBZfOFWH0Ldihm+(d1M&oU+K"C<",9Te)=N=Phi'oJ;+E\hK-EI?_d/4Y3.g[Ze$Y$')\![W7<,`QiAB>DHginp08O`%_GZ8^%g:"._*dWptW+VXVDB@Si2YfhNe;gi.W"S!`C3s'@jiip;U4j?qjpRMm$WB]J6bCIoja6ir0l4WZ9L853V(`,fpal^PYDsRA<[t7<%'ZPug'`_3;kVgL&iR5No!2j8BWYC"GaDu!H%<+2RW1'fFYrhZa_1E)ON1;bf1k7&e,GN[?0o3*niGnicYbKKkRt9k8*<[j6:'t7r%Xkm&O9UH\4)FQ:%>6UgAg4RhXXh\.T0Hs3SUt@GP_Z\TM><bj+KJLBZ/?::'GSA0$A.mP#]jk`BP_AFYYt(c_&l`-J<6Z+6#SM9,%`i(u*J3q`XE@G*MeY8U\+>o(J%SfB@-CA-LN2uOCN:G:2!V@BF$c$i&6$[a"hD;]U5][3ZMr=C;b3T;m_%$/^mrHlU-TXBt#?sQE%-*e4'\2O]1g)BHJ@rYtETPPgifPY9iRc58Ic.Rm72"m5jMT['@Od;C<.+F22hZ5BLO$sXhmosTDDpVE1VJdp\G\*=I9>4%5kPGX^%/W9`>*5<Q=KV'_kBOGZ#[)jrU&Yc/8(MC[-.un'mHAR,RYodd(m#DQ**0Q;jB[S-^];EsXh^R&M;r"n8e/6uFm%_[6eYhg.@Hjf.%/GRNe`i027SJZ*_9_mh.*Cbl_lIq\')00d1KU0/'!01Pu[Fjk3dp5Vh,G]n;Eb$L)rU-dTJ!K>U:oA@Un6>jeQrOm#YP7@5QUO97%1]Pjk_(L>,&nT]dE+\7qG#OPG]c)]MU@4+-Db:q1$IU])_*lVO3&SX1AuN'9[j<Efcqp)\0kQf)X@6<V@WP1<rnAla$\d8s$&=h@%0huudg`009Vk[AFGVq!sAHk'#grp%_N,NXdiaUl62Mg/M7sI`^+*7$?a=@jkWP-aJF6tZ)99J=iK2PrX3c@S*Ot"LNLD[l"9ER^I%>G4WK0fH]t2[gJBF=_fNH#@g2Yhqo^7[`D8fZ6aEBj$Pe"13/VIf6hl`g3\b@IYTsARPcN@`ET394l].^&?^$E.b,9oG5!#>`5-^%X:1D)i1i_7>B%or/4PYeR`.K[10[M.'<&r"\NS><'NVfsE@n#f,T.<=E20@r%F*n96Ru-4)+cZ!b"+E2!oAKoXHG,%W=#Rj#&>Rc%K^qWbPe"M07\sY9fKo*_1QOWLi`$k]!Xa_!"K/:8fL,0+r^O8;^7s*EJm]Va>`4TL:H2,)6dTl#1jKaGmN*eC+Bk#$H;uD@d&Mfk%mLDMV#VVrh\2m[7c`O^c]-Di+G](KqH1(HWcgPf53St,;Y'U-jHpsnOjJs)HrV*)91MUN;Vu:i5jjq`7^4-(EbEE,/HZ4:YF*`*d%^O#cm?[Oa.__:1c(\H66)V3I'O1.'+lT`\oD/3eYl>"%2j7r<3fu_e(!oNn.cCZ_,VXO$#c.b/bI.rEP5Q.g5p?)&G#PZ9lcM&-Q%a7SI$CAm/BncM,$cYhj$dhAa,?PV@QL`/)YeG6S74V]ma?`Z>Gf8J*ZYA\m'FuLMDri##PoBFBAla<Xd[6OMHet::C[HI,S;:"9h%[HI)'-^_s9O8ij4I'\$BHZ;A>gUhjZBW#RXA6)0"Dm%]`i6jF][`47I$_+f>^%ua)Kt1Alhk$sr>HIZkhg*H1p2"_g]NBAio&uP6%Z@5".X=c,4gmm4@^P<CrF1UMfhjp>jegKLSB0Q/#rOPq>\39lSph'NS"(p+Ko'olJp5mjrgQ1sl`R35qIr:*lf,#,O:T_NchD#W:%.hfI#4mG#iik,3RrVDn2AJZCB%m7OM&!ck2,3jW!@XE*?HZd!rpT++Zf;H[T:[8%fq?3".htX(:>eX?Gc#55<et14[^aD3$qj6Ja%0!A&hei>Q/@K<LB]XR@#K>l$e=-).jM]6GMA*lE/.qrM\D61Fk_BqK;C[^B8S.tk,5@:!gDsY.bAac`QX.Pus\$jb2A*uKp-Fbf)%2Wil9gj>"BhVR7i`S$1$o97@i5DKeWr!\S!#L)FH(k'a.k@4-JA0qgDr18p+o]+WlHfW2qZ\Cjg?shRLU(",?-=#Gu*%ZP"SRXnq%0S0(U5+,18n+5<"ldP[KT$ZOsdA8L'^:[e-m!XTnBl0k3=eF08HjWohr^>=MoI$9J`V0perEu5jM2qNnI"%[6J\QZ?3<&(64m2S(%Sb=l'a@LbB^-'$?qXWh$@\'VMG2AgmmnM<cT@`?'aE(KGRH"):lK.qgn`"fmO<%MNki8.,CJTtNipGFsCB*kaqIY2]r[GJVi$Sd9%5'3*G^V%+i=T!nV:(KN7gOotlqQoT6rF>4pq8]Be2Vga_o#M:'oRNq=m[!GLd6YL[4MA7MY!/[XiK%6Vd%gGBV=6qrqUGAgDfR'b%p/&j5pZf#!6(9"=@q,^UV`3MY:Z&(F4?[Sd[_Ve;H^*-"18t%oFmHetod:@noo?]*rR4Of4p@PUfS.O^)38/)goS7RJ,^4p1VYua%H%!E:=at5dAS(&RZ'?CPKQo!7iNF&!Y816^cWCMM*;AI1%:GAToGbnmpJ4$??XB>k>qHil=PL6uaVXf@F)mmY^<ct*l*7i`f:L%f%-h?nL,3q>h:=^6<T7TkA4cuZ%MK.BdUZAW@-`=H>'<>,_)SY@SD(hNOT$>k_+F&bjk1>r$DdHeB?+tX^KM7U&@3:Q#XaP@8^<_nC%D4'"2R=.mQn1`A8A*.B=cfD(0ZY,n)p@&0GP#&uTpZ+)IIp?2555K?7^5ROckPP?CplPs[bq09#s68@6Y]_eoe%8%WD18b#7H*9b%V>"NA4<^u:p.V'8=B^&<f+.sQHm1ts"#QZ@T-!Y#BFKAn4!:p1H@Bk=3.%ni>9#lG1N<*)O$:\A[DR4'Fcpqjr+'j3i:Qljg&-)7%^::]KHN*%U$)<8]qtQP4dFpC%.`,kdg!B$1J)/P&f:=r%Dg`q_W]st3ij&+Oo/S\9G,Y<tfnH&SkNrB?qmB/eamcpMNP7p/n(+)P%;rMp2O@>6.e?=p$r\t^t4I4I*p:@oL\ia=a=bnSXI.u$8"DJ[PG[GoB+02pM'\`E;]]A3qIJJ!\#pqDlqg&0am>W8iG;I![&8RO,%+(#ghHVQfb'k?QVntbt,n<uQeS+u+0g"A`5#L>TMN33q4!j4V]q8pbCc08$iX*`:tT-+heZ2VCrO)N?_hk0Yic`DKSj2:*3QGD;r%Xnt?S,hAOKnl$WYVIueCMtu'lTB#b#n^j*TlVDGFi"MM(o8D)hq'Wcmp8Qn9GPp,>_lQ(dVd^3#)`PkmRq.oDl#_;2aY<&,jJe[@%#OpYAmeGE[_jFL#e<47k^K9jfA]&?@+o.K/dq=jSZi3XiMI9Uls*PaL0FuN]*dp)nkG'hLdU>&u0TS[?I5^=Dld+Xk#c%.T^jO/d%0Fq!B*]^F]Ur,;MIeVNk_lQ(dVo%mD+H%<:WIJaK0TS9oo5q9`*l'n0LfaU*hAZ0>N5j*pI'?oOE-G>FJPGoY"8G9TIhnA/*q8PA%5<R0'\s@+*F@=XT*n_o]2pQ&]8bV;<S..u8!(Y64arG9ca_s/mL8/TFg*>coLK@HZ;:.91mBJIS"UK7gcSk];*IbFoco1f<_p:7=%m-4,J5,e(j_fA+.1UaacjSspCGai3LcEShub/\,]a`!3ak1G'.qTImbgU$_1+!(X/I#Rk\TCR+j+8bVf@@#Ki3L$6:jT0(Nh%NS@%o=::daq$:pkhff<J%q`Xe*jL(MqR9ZU$:.CTB#HK#.(j-j_<MDEj[mAI,>)O:[8LUdu0F/bL;Buog:*.M`6Ric+sM-<;4<YfWi[A%1&pt>mYG"EAj>qr@]nVHMO8PLpc2[mo2p+5+!:&cmRNkAs,acRPna2Cn-+aiLW/:b#KN1oD_A4b48S)_m?baUXeYOH.+;[]Bg7E+%5B>?E^@=ARJD%XWXs_@'5.fRqeon%krB4*J-A/=Z(]O.&pZ+[6'+'_G8)=n2lmEF<MVe'Z7Eobu%N`7'=o[]e^H6rF'Upnn3k]fe%^:7<Q\+uAUThd&SnXIJc"p"F[!GoWp^IL9Z@<[2b7dn_OSG[0Oq\KMco;Wq+m"_bcZpL5nnu#<.2Bh-U#^I(MrZF;2#pF4RaR>YZ%jrG\9&G"80CdQ4(gWR8:+`B]g+)u3o:1(`J?2r^hO.@LXE&pdK.==lfj0c(g]=tt)8Xf%)LKu4@o[)WX:C&C4Ci2nl4Pm(%);N!>%+KPELrR5oP\W8qn[u7T!bFdCWkLo+#f/N@#ZX[85]Cn'_++$UT2d)fW?<o,u(LIbQ>'rd$p$&O#YC8OG4BpTgFgX4)lLJ\=nS2nN%r+*H[T@;PC2r;'(2f@Z8gN_a"1ptZ_)tsn@^2_83>]RTcDDA:7]U]#^o_eFF4g,mmM9Y=8F>D$TcY7Ag+!0M6l(7Z\rgna@[Si]L%F*t!HQijU\Sh'P]66q'ZAoUMgrou9B/ppF.)Y\M=CY!)p7]m9qC#".+1%1eGp@+D-V!Iu6=\]KV!lb%"T':`=^Q!PR`,DDG*-U4U%r&,M/c,O\nq_P",he(oXg%]DBI[c>Sjtl_cS>koU=_(9DS5:.Pe8H8C$T7oA?Dr3nR\uB>pt-2'^L=ku]8(6ELW3h6$>67qhp,$T%kP]^Q*+=9Zr$/s?A,TUZ2V2S(b,j@<05*Pm=.H?fDO\6o2R;qHP+A)SV]Mo.gtY'cfS&F+127lB!.CdYrRb]Ek2*(e4k]XQ_YXiZ%]:1m[*\r7AeG3`skL>FAo97@i2t&Errh$`?lKN8^%3kgDW&&5Hs0b5SJ+Ot-q=<Y?iWb%L>+@^2lCQ.L>5QjD-Z@U4aF!f_-h8<m%d8/hi:G@nAR^<!MNrM%cNrCmEJD\X.T#tq7`"I;G]CKs9#Z"hq2Q#.P2U.im?,/'$?`Z>Gf8KANm</$*l5tLNEW%orI!Y@6Ccniu%d:`*qV6ssC^>AT5e@p^^A:;Gc;s8WKVoH`Un_#lZo#@[!BN=$;hl/>Z/l%E!-aI`,I.ZI6EGBkr]=Dor4Q-b&3&MbR;r_KhJD?G\%ldFE&B'ZPHn\]`UNu3;Ur_/o@5(*:eP*%s%X#dEGa#EUr5@:"b%rm\df:8-!o[,;rG]@eNF8R**@;e'!p33EI&%M@Fl'[V$6sVlG%pu;#F)qsAF*\b#$OcQ.5]Y4$@:-[%-(IqPbs1)E?*3X:,XuuBAUr!5bk2k.Tq>+Q`.t@2nrgYSp)Re7H(Wak_qY]sU'27M/]o-TG%GL>R@U?/q&mOn>im`G.`o&f53?_-$e]"7*X3/tYa^&%:!BC@u">1o$ldJEuo#9.VWS_WV&1BreT^dR2c(e5S>Spc'8c[I0_DKg-R%ZWM!&F(UEr<gTU3<E,6jR=Jl@qo'0IYQIL@#Y9>aVt]@ZP(/[,s+jLP.!@WU[DK[E^_Ooh^`9X#k4F#]OI;`epWam;5EDH7Z/:&#%@LWJ%T,-9j95VtHOSE`-&iZB;oD:tpZ0rJAs)If4BQnA2_>`KarA]1SNl,L5eG_FThfMUX%c@#Na,e.4j7%IeL[QSul?@CH9V55Q%qmh*OVtT0@rHN]S*oE%!pZ(f2jRM'NkC`M?fDJ8:^@#=k%s7PhR+(N_meQB;`SoQ_-9j-?n*fi7<,DKWMin"oo.L$H)a-m,5<gN%%r1`KL5=Hjqq<)u"*(m4iOe;5,^<?<ms6Yd->qT1WmS[l!ao!cClYQ]nFS5e&BQ)>dO(25ad<s@/O4O>!G6jD8f)JFf8*me;^PnS<%E14NR0<NTPS%1b?U],YQi/gln^3_\`2rXb\SY;Zpp32^E]3YmAc"5^ke+m8PgqRT9s0p<H0Q$#iQ>bUYYhAL5@dhB%qX94:G?]@)%bt[oVpRN5CK=Ueo[I+r=0.:sNQ/DPlVtg#,%L3P=i/SFpml-r6-*pR"p,`H)dFeJdo=T%jZmb5=he9US@;enSs'MB4D>H5gi<9(`%;m9Eq`@nR&nfoD"C>A7GYK.U^@mGXG`c:QfAF8c(O6r!boOB*D)EWOXX?.@6gE6EH/H9!g=np<P4r`oE9C]nAHg*WG90_ReO1FmI%D([\+61n_@I4'C+O%fN/K3mHk(AnK,IlF&T)6N5\OccL6qagq>LABJpV.;?cl$pJ1aRhk/cGYl@K`'C70utDt:5&HI'A7Mpl.[_W%5;H6hr,OShT(0"W:3S^%InYVZ>VblF4+DA8Itr0\\aD:m"T7K/DsYr#GQ#(Q*;Js%dlcC_W6RUrFoFREkau&trrcQi:SbtE2h9e!%+gcDVVtG6gMuUR3b^[o?iloj.mYmu,pSPKn@s,PmGV=VD=2l+=^RoVgXVgdS[9pcaZdVCYb]=c]r4bG_h:;1Bf4i\d!+l#NOM/$S%06?b4oAp-?^#)7fr5l?mJ"TC.F2Z,nAYlFl^A-5sg@kF3VdfH$Qt%lMjA=TLG<?'<p-OA<rkK2>pD7c*Iue8U^ZiAb#sYD:hcVe'%Y&!r@AA^TOn%5n;*\^q?oj_h<MA=`l)_R&DjW><*qY.DFn$AY!me4lbiHNrP+KVI7#12.DG7.En^A2nAEG]=d`c!+srjYrD@'#ag%Iq,%7Ib*1*>\Ej3ME&fYWY?--m(fXef!7AA]pZB!iqog$3-I1es!QN7HWFa+pL)'+VY,.Wk'l;5hb>r#bdkr.nuiFThoF@%:Km`M%_>N1;=7b>5I&H;&m$S3@FUGI+E"*M/'S9+AQh+?#J3_/>pt<^@iVR:8I:9Zk+;bgiWqjuJ2kQb6U7i<`GlG2,ZE[fg.gm*udfbMi%<\2%J@@En*%h/@XM+`;JT6N=hO<H,lD0IR@hG*khn4+5kp]QZW[SkZalf0d5*It'TL4p`O@>\ZuIL$7@KLkFY!e(fF#`7$]8:Y,>%MR(eaGT]\5#V-WtBG*/*=o@JV7eMlc4q#c6pmpK&#i..ch]>83nn,.N^fk*g=PDVOq:S>LR"S;hCo6+I9H3T2&?)pZ!/Wb&)g*Pk%LBII<FhhA%jU<3"ZWsuL[:8T4emNYbT?,d2TVYlHN!:gdg,o'fTEZP%C;!"[&](0g7'&#M[='E*4"SqV=ZBj`9ms;Js'DDrIOqYG%@,;i+ZcgVY_g9_$Fl.sIld^"U<jhog/,M*RSP2NAXJs.GC]PLYXWd">*O'-fmuu]Qa>F0(]paL4IfL;9%i2=DH1%H>m*E;-mAA<4%XY*Gm_grP!EK3;CLI&C,^ePAI6T2=sUI\ml!#<q]\m\?<#lKIoi;\SZs)\59DiI^*G@4Z<MVTsg'suiATR[r"D*[]cQ2aVcap+"P%6KeZ*LZf$?&Y^K-/PA2G#R<IWM"u@CZeKo4;G*"*MBNY#3*+Zr(_[gJ\\[Wkl3R7kN3inP_I$GtkHk!A1\:p6%Bdn`D%Bm'Yp!rl%jMkOorbW2aELYWH\G-RI@PkEs%>pY[JYN]q9or,]*N_drE^500&=Vp&J%Pl:Cj.c%90\2&2?,gj?;.MfgkS)(f`\09?T3`<3=lW%%pl]L6@/tgp!0'B:(n+jJ18:0J_>YRp+XVka<$W08kcD=<`jC&DXkEjbX)Y6WX%P2`?5\Bh")Vi`f"9,5$?gI]fjHU>RmDuC'Srt6%.&;bs#YW+53CI7I6jQ%#)?a&_ZPjVY)U>Ji!tFV\9T`iC_18pW5).kocuHSh/AW,)e25Mm/HEhqS-dmZ3Sna)JH]8Q[5!8P%!:/>%G/8Q,r/lXLVe.*F:)@&'i$lW.?$AdPnYq@6OdunnK4E:B!S`m4+sk4S2/-Y/(B-,VDr;2R$h"#AD7O5s6c>&PdZIg^End36G+`&*%6p_Rk"Z/O)@3#6]_aK0DqA0PU$"M?B@%]K7Y8C;rS+eXF]DmcT,4jC&gDd@)N5QKJ>a\8Da@`'X"5S[Br/q%:.D#!K)5[[GHnFOI%#B#RgK5#Pc_9q3H'GcKY=BO"W^"&96ECDED7ED_*3J#$0Ie\L;Ub=FiK.obaA6n3]o+6O/ZKD>q#cMB.ecWWD(kOoW6#ZI!J0aqd%cq0T"dILTJ#X,<9=6`T9gh=PJ,nu#$5Hap77;bA\/Dn1dK`WMqJYF",<hhNZXb7a)/-%`LaRD`>Gf1J)L3RMR/L6*T*;\bpe7.0,%[i]%SCnR^AH:1.&'QE^kbN#0=D+MT"Jq.hP==.3nQegmu,Z823>*$7YdJjX\;DgL'X*U6?(X(cP\-+9k0k]rqjZcjfSol&3=J$-(%OnIEIr\^2[rW<]?cn([IEqn76ns>F^.f"gGPNsi3O,*a<0/j"4Z-YYg3:icil2nr%,\%n?raL/b1n5deU@l<nCL!=P=(j?7#E:t:%=>G<uK0J5jA[aj._BUt3lBH_id2`YkhN;JZLMCs6ZZ,o,E(#/^>"lO-Y^[j;$7i^.CAZt!`>LAb@gJbZge#c:Ha]=D5NSW_[LOa!%QC7G9gd/]&5_I;\"bt@B5]@;D3bsqu!j/7.no\M'?%'rs/rp3hiN1/p`/[mOrrigUT\`,$N?_h[\7!X$Q,&(Jj/+$L7QAgc(`!S`%#;d!K&0qInKa:%S6j+q`*(N4;8G)spj-:6PiAa1HUl<[)EoKs5^XRF[rm\,/+3Etg4runBDr<_k&L,)bE,LIA+m0_F>?!#PC3Pe^%R.I[6&t!),AafHPG*IgCY4Q4nj%!HoInC^>:K](FRkY!08'(]J;23tnm=*"FO*LX9cW]<g,SAAId<%)T`%rLE42cU'h,cpuP%fug%M/Gl`hC@W:73VU)Js6]Z.'d3gI^&kJ"[QnraE2kk?W_S;d>L`:L28rr9f3e>F(&c;b_4-ZA6Wl&mW'k<(%in0=fAR>>5#K\Zk10-%Qdhe7:B7<gB7CAWCZVm`q==QoU-1%6R1MjG.,GQ0_^,)0&Hn!k?oUmN1cltee"80+Z-e\7N9>[ljZJ-mh9BL/CnPim@_%5=!q-cH%:tJ/bV5#^`L^>)V=X!J+A@PqVOhe*n9Fo_I-r')TFsF<#s3IEeDQ3AS_jKa"h4)E5B::Wl)?<B+fio^g7`&T7X;h.k7O`+i^oSmV%',lq)Lo^;&*Q"e[I":4CpVY)UAgO14JPAF/&QpJj/u&!=dW.=;E?BmR-:0K9*cWAl7O%DAET,[-5@+9;E1!G8P[6[HE*=!Y/3149%@2^Hd.7$HJ(n>4UTF[krDA,A5ksb>p3*UU;YAlT)n:\[+@Fj_$&.F,u9ei)FpJ6>\(8g%@4@DRc1bXA"L'*jZ,G_`3+=#HRJdMhV%!h[ns?8tAM#X1hAgtlh"6E_Lc69X07^_-X4V$%A7?qFP4$lJI;M&$O@Ap?Z$lnY;%!$3s+L!e&YJk)Y*"B0gSkQ`\,(e2tfZsd?h%b'&Xe]V-3Pk759O/-oYBBQ<MpJ;]8'#om*I<1""[E+&quZ&fB3(`9E[%1UlQg70L_+\VBF6ZBPSpt8%`_S`3:3%5piM20!5*%jjM%Ks0G7TuDiWc,1hMG"I?nP$\XV0UO0pKo@\k$:2h#<1$$jR"=;SJr1eA!J3t;L+kl#Fuc:R_*rp;@2Yhn.!?%U4E:HdYu$*\@2&p.%&:oJ1H*@]Giuo;<6m<&ZiueDs&Hl>@;Km\"Oj&Cd+d.P!!0s7&7YHV)BG6+,JLRm`:BE(8+9qu-F*f_H(`nc+/0Hc1$Bg5-8HboC%fSUq'-A7[rQpE6\TJ7@^NId]9#*F`4&g2s$JRK+B+eG/?^nN!O(]fg*r$ip"cBDCu/'A/K:m)HgMW4cj0L[,c)8X1'N)YT>KfHXT%$p-uuXEl,qkcI/!OQH!D_op70K=Df#FW#&8+jt>HXN61<K49mrrNIt)G,<)2&d6OL@4"Ad]S-W[$>Bdc!6%!K0KTdkj[fZ5PAlWB%0Me#@?pIb3KIE-r81Hs2W!)IJ')H!f!LcU`:kfS(cAe"lE%*VfMB+%E*s`c=.q2m96m.:FS0l*,cRgCMOlI4q/5Qr[K2l%(+T`)S%80FG_`<a)S#pKf0!%#cpR+["c'#u=9jCpk13&7)H<$W1;2BHilG6eMJMUN5h0dAH9`f&%P9.HP3(gb#<'[M4nUd8s5;@J,M-%]W8%*(`l/?>1sL8->g2@/R=HJJVZc^_oWFR=g,la<H_'&?KOR1B^l%,UY65oWdH:KaklY07n&o#n0c=O;Jh2i#P\`YQ>edbeU&$<BDJ#%$A%e0Q3a6b:V[;?;A;Bs;_m*ZiR\JY60TiVLS,\5BO-B*ZO#asEh>['$:'gA!XFoV0^19GPQf;q7Il1b.nLjS#\mV7U_#UDJt-Ch%N=\>oZ6]JW=I')!0S4CtTGi+;5Y>$$O:4rC699l*TM10LU1fKP3E.gX8Jo8FH669gU`^:1.M8a=B7Yfr:_?XT+T\&h_[=F<)55^L%>+.;Q0cUNLM&r>KpeZ0fKLeoS!!Isg`&kWU-1MPJXagcc-@-hT!#-Y];iu#%mCLad"t3OC^sSqD>n/IrGoK9M.noG?BnBl`K&<gD%;cj=UWIUDpLtKB>,'e%NW?/&<6L%4*Q6`^+&@lH]8:..J8\bT?>3-o\"HMV@CN4+sQ]hf[<+HjPQ40DuM7s.t=k!LB@*L]^PY_W'%,D(s;\.nG!LtW-Q!/jr#Y8"mY&s<:<N+P)6_%Em!JDh(Y$%As8cWunLO98;k?:cE"=e<e0/;2PR)pO,n,qu(*"#eV\5?*uYGM.JP%n%b:3Ah@6S3CnPF6M:K_D1Itg4Z<gLfj5Y)Yr`e+>B;=\^DOeL[oOMQo:rp&=HR*']cFf4L2.HA<Bl)n?-U?%fq#5"ZL?KH4A(,e%>8LaQ<aW,P]>.fKrI$&kN7Fq)3XQd`#dG@Adkm5t^rqVnX@rc"%''WL9#FYXE$?)N%K\7C61*,5MNp6<Y(clXQk](1#l$u)Fc$.[%CcQ/kKV4\=nNr]TOUP,0+lFppeHrT/K-V3L.N0/GO%9"u"j.qlK-i`+a?q(IOkC;_+c!rW(rIJ("Al0jDc+B$V0X$Y$`+Rk<e,Lo%OE?3i,8-1=^mG\2hYCS/IrKoE,R0Bl"TIN9PlTeX9p9&'XGd62+iLB]?retOC8%IrMUa*u;QcgG$](T)!IQkq2/N>qAUXj$O%fA%%"3e"'%iGld02[8bT[=<jBQ>ik7u3E,c=,\Hga^,gV!apm#646$5>6d`P[6UP[-E0ec-ULoL``&U#I!YPj9i^l9o-M&0ToPYOpJ>X%=Ss<Bk+o`hIsHe\=XOn/3r#')]B3SN?%!!;#B1\MSfFtB$"OPHmit0'V?QV(Og#!Y,I.IUjT=!d/Qe,pZL*c?8r(Bn&)D9)hBIo5%3A0N2J3XP577?Fa0ut=FU%+?Encrop+BThCE?_1c(M><`W/it9MK9Ono,6O6bZag)'e(7S&/p(n_._@+ciCs&dfaFm!3fk<357S+%d1.Hf(r9e2:sTKR1-Qtl9BfDmZs$*ILr*3><_O"2goEIOP?,^j0`RcX6rm/VagTRaM46e[hVV"X.a*%f?!&5ls,Cb\j[J7gDm@$(%qk[nm2C^e"$ap"_&4_8S;,8d0b,SH@gH.%.Ct8?^]3N<3lDB:+C=!_[?Q%?p$R8frrq]?o1Rl^tMV4h^REYP<R%\AU)8;s9f?UEU%RLR%tE>*BqMk`:;?_U+/cVN9k8E;uH'7)#5fK5tm5CunqAer*(<IZAcO8`^ZeR?p6]V=BWqO?#]55hmPm,)$&d8_"NlTq'H=Np,P%r7Cb=Bm=grIrd#f!gg(Hrr0pkp_U9QC,5)Sm]m\^pAkW=KX;5k\UJK$7E-VP&5&"4jh+,>&ti[We6lU4Ns;huaEUln_d>JUS;oj1%c]D?1R$l>d^Nqd@5mBk0`#-b=k^"Ou!5Eh<6?81=1j\aN0F;L3\+S9loSu]:17Zng2r?n!,Itjd>F'uBI_T.f""j2HLG0aO])uFN%*BK5%J`A^1E:F/hX%UmnVl#_iCT0=aPe68Z]O.0&]+aC/XjDF&FXOPMV:*OZ?J8<R\ckeSfW4iKKNuXeAAkTgrg]#JS5%,3G8Qo'%#E)H0'E1>Pi1`:M.+iUKQuh'ii2>D]=;Y;?@a/`?F).P_!b3>Nht@po&aKK>6=aA]VONG'PV=6m1-6?`#EWY<7EUFaHUY$ljgmD>%/dKrk?S%'u7dkEAq'*-bFu)J8YRJ&pESCNW%PP.$(k7R6Q(i!"h+<@'TeHrM$US8\r/A)D+WL]a6T?YM%;s<TT-BP>RLGCsOSPPM%XulN]]4q[D&^iX3PBj>nBabfIa\'>R*<P&2:>:Y1HNJAd-`#^%IT]jpZ[%$_hlNsKbP>bDgN9fk"'Q,8W%+7:Pm5\K$_?5^/r$D;%JZsrNf#A8K\.OQ7+t+Y:4_Om*AN2O$G0.d+85(q%X3GqkAu.^)63;EANriX0Qgg#70S7[P/3\Uj7\^OBCe,/[j:'cMPJ^rGWH3dn%f%0=TCMR?4>'G=g$$TR)\B[rU+]o*,V9Qk\ld"?Gh=mVN5%!g?G!0.?#G]OCJt?V3Cf:F7SA8V));n?bMufsr"-O-/Zb?_T_&Af%%AjbkkV9,q5)tQQ==Qb/CQO=WE2Y`q0)(bjBTZd6TJ@9YULXl*-<ZB@'i/eUn+t[=WQY6j(ru1U_J1?'U]BJf^WN:d&j)>'>G.m-,%E`d,D;$.*G3#)EK7"X$1VGc2C-9PmYfolEO>;]:0RP,qL:B%Bs]`HBe=_-D\?H:u>+gkIH&sSg1Z83/6CSBUl?KmQ)YQEL,`F62(%V)5("W[6T\?m,BQ%Z1Hnn8mFo!+pdk8Zi/[NR33fPDN2ZDmb3&/HQtJ!4Nl-(-Sl3`bsV+/VihCLZ'5DgLt>L]EmH"k1W"S<r"'A%Kk/[f5u,5Vlfu,aRD$kIU(JLk.8(!O7HO(^d<pjS;Ium?%ZBb6?hLp.V9e9J4'P32`3.l-bN?_S)QZNXKA,I\<60&WTco[.;I2jf%=[`q8AXPY2ATF2n@pAQX("Veh^o9GMC6>J?p*5sm!RG"=+!K%6r5agBL?(%F"1GHm'"6PpZE=mCCbsP]@[lhD/bU])F;Y>mFY3oh%Z3mh@@r7Ou:BT)AJ7"[&JS)]D2s^Pr!^SWH5.R,+=7mrMoe2SOk7qA?bPBn+_Rnjn>lfBkNd)@+<ofqZ)i20NR_FaU>OY_[8RT>#%7%D:j+p63o5NCIU%ZQlp('BB'aisCM('E%$=gA?@M!$om)_MoL^h=)9G[LUN"*6'GF3YO.M+;?\[p4fa2jaoRgQi:#.$V#rL9U(&%F5abX]k/@DAu]TV0O0UoBAID4=&n/M\BogK7+>&=KQZ$l=2!"-g0No$A_SaNbcKC,5?S'\5(hC#/,kV\m?W?El(LuoG5dG8lfB6C%?UBn)2&H=,p]fe,?Q4du1"B;qPAU2r>J5VC::cA!LWO^hBod-$4rjl_k_s:u*/$L`=\,?dR;W)Qf!'1W)bWFY+D\#,?tuW*,b\Jf%TgMao":PrrAkP_'Q9eI12YFZ)Pn%h3_]CXn!C'.$KSd^#O>,'_+sp!jQ3mt&Zh^u?*3\Fu2UPVD[>D>T;4D5N*OV>tQd9ZX)?Mu4%\Kj4`r&.aa#*[$sD*HEYpB=CP5S3u6ZI3(qWrS6Ld$:(0="B-0Z.8D0Mni4>P)q8jf(.XUn,hu:fsT\BRap/tY-BlQA@fiA*`o*L%C<!lhX-IkSa?3lOmJc`"*FD:aE5);g/p.^81mO2C"l""=T3H*@VBV92&gj@+9"H2.!p1/X5Qbfj+)?<cqJ3$Mm>UU_d9+dndk[&_%V5/l%^>DC*CkO!,VYrU0fMqO8BW5aIPNBE]aoQ?=FX*kF=11GN4S,ccgZbXi[aAR4s$p^QU,Mu'8e7bkc$D2YifT\`@E$i*la/t+%b"0],H&8OZA6+6&8>=gM[H[4f,1QkK6jt-9EmY42;UG*aQ%$'uHWQ/HCPl"tim%,M9Q2D!]DRc@#nP!,4J?aDM=7FPP"T=Tc):\Q%;&3oq&tP5KNk#H7bSP[J'*C*oktE*T(i4<mEub_pTBe9e/$(\9^+"V`>'FU8IXad-l,iE(-*a%IK>E`':UBrMn,`m[d:+lTaQ$0F%K^)%5nRT$3CMbk+%)+J9>@B"c<F_Lj,poUkQm&\[^=Ya7KBD?Hce&r3Xe7nP[bN]'Y!>K0e!oqK6lUQC'?u^3d;5JhG.#'D@`Nd1%#lc?THJ*M6no'fBe/L+>;KKK3hd+H=oDZdN4roOZMC;B3b4NDJcBltu'ni5C?cl@*WjGb`Pkf7NUQg\pA&(?Zc^3[\^?Mfr?.R(a%d/:1X@+/n?fUD-p&*\m!*i?Fn_T"%D8<no20thWU#r='G2mEIaWc62NqIlsNF8Jf]51\F;dp/XFL0t5<-GAiYf)96keGkJ85=:!m%b,dh\^dVP$:I]Zm)#kU(Z=_nNeRh$U#n->>Ao"Pb\0.T>)lPt'8:/.&7rY039k=<4NS[,kGk=jRkC@^TOK=mj-]3@d;2s*!DUh4(%ZPk#Nhi_*R\q1hQVXAc_qUeJgZgMM$j%p+'$Wd5^Y]i/IrbYPUW<mViA>gll,_fcoK9<lFlU7oaKoRoM1AI:5JajakQ9+F?hmg'6%9eTo8`40MkphmA`_IQ[cnBr'a5iG^bUMZ_Z5uE+k"NgUg)F6ULo^7G<JM7!)+b@[MgVtjr>IpLh=jsH<'MCXJ&\mG.d?K5Wq)F_Z%8_+%!"F_Ii]>+Ma5[@q`%Ul]p">dA&V'X6"dJZU#4[MrO2qQm=!4W9R/b?m1HGo5Jlll-M?QUceGP[Ue1@1W+?!iV1%1p6U#XS:;%#>i]HJ:?h\@qas*?WKF6=Qm9#rr"RA=]aFo@,Ke.oVNQXe8*Y'$9i&t-3V,<FKC!-kQ;)'r$r$Gc[95.!-?*d/>")U/:\/@B#20u%UEW46NdOmSRIKGLXBb(;%RK`Bee-W9moh*pIpeQZQl$qaCK7Jpr=:m#at/U^SO>/JD_o1Q)_el!S(R[QA_kSMn5-`IBo;YOUP6YW%1LUM[k#Pk%OR"OO*2sNg:BBntI)=U63C.Y+1_\9]2Lo!SF#8]<1*rVTmocjH=-@Fq@!9IMYF0"*;@/-L6TA*@P"K"?*kh*UKJV1r%ql6IPb+DB]9@Jscqoi(mg3bMcDU],scKLa<JNf'jDbA+Z.M]'K3A8h(9qNjMLl8JXVl3N&>NJ*@mlp(h*IA*;dW+/RQ!U!p6&RlH%X4`edUZso;?G<S=j4(<$)^U[GHm%?phs.4"\-Mseq4^$p4I"FmcfZkPi:gf[o@bZmBs'\58c!O-bYr.ug!>NHc=5,7@F^r!YVRWs%`nXlb5%Rp.^o_dXdWX%$FF7>@:.JB:WAj:PDi1^Gi6>_$a==n*(='ZXh_EeUHI@hfAO"bV&*<nZU#X[cn)LgZF?JZtA)Vq]YAu;b%06?X+nWg9d.^lECr-=TBqG1bj(u!f^`aY!V]"Iu.5BQ;8I8HJ:4C]`ZhX%*-eXOiEDi2*a`fn';SpnWSrU(O%)L2^/[1B]Y*"-qX%jll%g3dRb8Z4hT-l!Jb/2ORatnHHu%:<0@VUr?*LDP,CG=l274-8&anB)7`/0hcQZ7V7tb$LSp)E<0N5?X;IhZn]iLF%9\lkU786%!rCmm$('O.bYFQ%Pb#X=c(<3\ihpu(?R2u[FK%CNVb&3oJ+:Ns#EM`VGP[96->.KUTd9"cKd:r>n*''T`)AEQG11nXC#0>7)#eo/%OUlWqNhXeqY_9^:nAPceJsog.=RW%PU#4^;1!]`Th\FGijuHf-Pm'Y4',@`ngR'pf/GP$Kl92u"\P'kNK?q^W6qLh&!8^^6`:X0M%AZNZJT#C`gY!`@M)H,d%aHk(p&?:<.85]!]rRoN(nt4e:>O_Qkd-Wm?Z?5Qt3aU*UP*slkJ"<R2oe/'PJcsTL0[KKki1%PMU&CG6%#Uj.`X_aE>N(%.58RP]`$$JPZ^GQB$KMMTVlh2Z$@s9JX+CpDDd)!E)=fPaZVO,Je)_-/RQU2AnLIOoT&C9D.B'59m,qA!iQf=RV%'2)F5b$pEW',t"-5Ja[.2&$5oPct`--V='pku__LP%dqJRr)+S-n2to:\aY3#+r;R*;^)%1.jZG)NeIUj]K$6+*?P:d)4k7r,B4=%@DdC8-4GPrLOb=e.FY9UBXPhXY=6O3kCJ$BPNfBccOr(ir0j3iY$SCM`S=ZTN8`s55qt<chBV!Y6A&0Z67;1hf^ub@GfZ1TV[:<Z%/9W_)iDmTK[LYZ*f5W3I8F.pS2r>[YZ<\RMnuYQCP?oNoNDZ#LN5R3Hq-.aD)UVAbqB,$Vqm96:B,)@T*E0bq%6%Nu(Z%RQTuqTU%rWM:!$/XBOT$k2+QtDejeU2>#E"uLUDpC,/BjJs?e$lGO[o`oC[k7<`(FqTSkZAOHo1PhATVH?ho1c%-++H<G%M47d\u]:_4?@7C%4=6Sd`an%j[_(snJbX:a9]O#(aIM-HB,8*IK_+Xokn`<hb1440\4gIY*;R(&o0oMY)T?1+D>QTI!&AaV"=t;Q.Gf*pL[W8=9dBJf%"-dJ5?LYB!$%U"\42BM91N,$7PNZk\ktB?CUXA`7:<a!4[.<DCAUcF@#eA>e31"j8N,@F_8DCJ7.MdQAH5-1=$)^66.Xg%Z1A13,%"7NqYA4VLCX?a;A??19>=%gG<8[-/'"?,U8;n1/=9*rq-(;'J`[O$5(s3*g'QpVsi5Nud>\;"o8k\HlE*.4&`6"T'T+qsP1)arjt%;1MC#5UOD2n3LCE.LR2$MK%3S@"32.BjpL&iJSOf!_60Z6UG8_Erg58lqlUsfa5P^60tu:ZPW`jp4>OX;$;ZUeg^HZ_\e'ZPTpii%'8(5N1f>MIfu@uM//DmeZ"j@D9nZ<9QagQY,4Ui-UbtjP"W8k7"X2N:+L4DfBGq.PEc`SRXMd=8.&#ge3!P:H:<THeP1(]`4(RtV%QkeATpa<\n<#::GAH<b%KNX.)7Cd$`\S*0;_9Na7%ZcX'3+pn=8e%a,::8^X'IFOC'Q=\MK1O*SP7t]"D\\g`F:n=DZ=7?D9o>te%227L>W3Alf(h$\]*pb(^k>F]m6t"96=u$<<on$!MW"8DH^eUm95Vt?L20W8ZL`e7gi^*l`N"%h,]<BR7(B)*D)>Z8\"pF]Kam$K0%AsR/D]q5D5npI--(n&tBq5ft'nZg&>ZBmTP-Qs9XYt[..p3<jKDL'YbXD[VFDVJ`/Q2/`Ok(LZ&:jP^]G$lU`a+-$SJ-u!B>VeJD%*1$1Im0';Yqbbh3@U]kU@YPkp<KS@GT9'jL#Sqc3?H&:`htKV%cVn28[$PTAQtad52jrg>1+d`d6'qN:UmR1p(VE\oE/W!XgHjr+%op*)1Aa@]tiN0)Z$o,O"KiXRgV@mBkM=kd*)<RpPaB+_"=#BuG;#.Yb3PW01Ftu"^)uI.P\f*1]e#u5RJ_GP[#eiYkhfmHA*2%Gj%q[O/S_q[?bcgu),X(H<MIfsA)i@Dt&gE^e0W:(./\j@1Ee/8m#.%D4A@CJ$o`Ven)-TCmtK<_nbr>jP"*ZX)`q8tCN_&Ns10A8pd%);CZDMkIjXk(*D%Sd"KniW71!]AK/g41HW$YJ<uHEooQupUT31R>>mjP2f-rMi>KX%hqH&(s"E\%I.MXIaBNh$A/R@G0P)d;_en9%Vo"R,f=As&p$r61(8Ca\\,IZUNJrYU3A@.X\+nZK7e3C&jpei\"Tfo@e:eP%[E\ZGE)P=G<oCT<^!=CKGY::s(\<<,:gc9pH)a[G%6s.:u&pK;BpkgN74F9h]L"YURYXbR!Nr!bQ=n"/ioP<"DFZg2rE^.7u*;n'p4`c&)]Ii:%"9+"af]Na')/jhDXENH)Ld&+"k!2%f%!F9^f:U[2\=mC,(Q1Z*s'F^LE`tr&ig=P4MSrLTXb=d"P,])HJ+V9/m#L`t`Q,k8ip4F4L!$7b)hoG/Q[?N;?XLeaCHW.E00><&S%PE)3kT)eWU_^:.eQ"cNgT7APN-'>pH71]n>"VRsI0n`3f%D;a^/G6:%+<j=YJPZN`]Q=11euI)"i4X7!`Yjj@ab\=),ke[GIqDkC%h0[L7FFk7"dNfZ(fe5m/AH9VWO%bH&2m!gI$S>RFpI^")jBb_&;:Oc9N1_teI#f1(%CoOq&BMQR?mQWFogu6P%m:K\jScDt)kmWl%?NRY_iSJCQo7?B;k`VaBRs^k`n>E%JT4:/U[HNh6/B<GK_;b&>^?22<YT6C.piI!u+2aFHLsHep\5GN,8^P(;#c`.o42"5f/LE89%/ue3fL3s!"DQF1O&,dj&=Q6oE98Phor<fHtG@.,t>IjL"NjajD:oqTIIJ6:Y@Rh=um^oC?#e!-FF"K*_nC-!;5ei(VI^lnf+`i6!%X\l"c)3I.%?(?`,1UiQO$RiU9=eUJmT(?m&r0tZ3nBEUER8>s9=Qn?aDM>X>74-pZ@j"Sm-d4&bH(/NudZ=n_rp@PB?0S1MZH:T8%_<:%G-2[rqIcg`ROdJ)/3_BOkMQ(lOJb!n]m)2)>b"dfSf+\elh3S%4onVN78?5H3gfqDrnFE]BHNm"Lm'5-pQbVaQ8)/u'Gct-k%6kFs!KgWTHB.$XE%BPod".bBWh5=b@#eiGZXrX;GBZYq2k8ql;W(D(bk^@;,H1:"%aFggd)q*b?/)S=PPON9',CEjnFS+jEJd<]c%0O(R`m8##(m74rKq27qAQ2]KD)lKal-ulLa7uR'nSYFl8gh#n3-!5pZVdGhdW;i6goGdHSF[rOB#lep["3L_X0"S'^>,;'q>]W@g%8&PC0B]jL(r%.H*Im8@YR-5`U"6RtO,D&6_*sD9qSARei(jDV*4)f>_$bbK96>h(T,7Ct#B?aoKeBnEjo0*mq51b2sKA=IZBjKq6%4YDXUHJp.l1Tct\-<i%#M?(*)7B*e.;.G;6s6#Tc!\'`WF.$ZK,,Ql-+NO&e<_/#aZD3D<1PJkaM)='6e8'47-CMh0Rm9EhKs$Tn%5P)8co*fkPXkV>b*D\<UJ?GEd0S^!k@<V!B=0pETa\=ec6odudPV_oA:gAQ!fZUdF$/CTY>fq84H4I>k'ui;NF@5+<E"O-8,)@Wg%[Ts[)p[r[kr#QqN3_c,O%e>6d`$aBI!$cOc.=X4((Zd;#K]fN\+UP%R],.Qaoj5p.o5BcV,iA3Pm#g#f11&0uAg\uHW`Up)qJ[r<%HC5.)jj2956.T![Y+,E"!Io/*URB+.:XD0>OSl4'SLA*5=k^RqjX]/DI7sQ5l>D-Ak6@0IJc'fT,R:-AS:T\6:&Ven`mu.qo3&81%oD!:__VW(H+p?gDneJB;.P(TnH<b@=\R\mf$bpnN[``mP3$cG"Y0&R7q09J5/`u@8c(]VP!TA&XHr#sZ#>4&Gc3sch6j!haiFSD=%BeBMe>>E6;!OlesY`Y[`K>gWZ;1[NbZ.!]IEb0.rY#Xp.$5-U#/8XEp5SO3WlbD'<V-1tSm^JK3#i&Q'5aV:/1]OuU83J=`:.<?t%p\8hH^(>[A7(WG\<^a[V/3T9bV<9O70B8%fn[_bK#1QG@+]AO2;*m@4:1*&a=!)G(W_LpUH-t[GdD-0bm(elW:XE]`C`)EoEa*L)%ogUu@Ba>nO'P"ijd=L1Y@oB_J(q^ShkG=!!aCq\^5FoY-P>&<lG[nEUJj+J+:/Aa!&kaZZ?@;9J.I%`!b8hJh19p/GHD\6`+gr+X%BUQ%t7k:7@Z;WHo$!hqlYXc&PJ?*@r!AJ[OW1BrPS$si`Oa40<kfq;"K6Aieh/f:e=uj]"]afmNk1?!=qFFo#!Mr;LI<u,O$/]UE%'Io?V%No66o*%hUasF6ROneiZ3nm*DAhhM-Rk4&NJ>Y!ha\e8$.h!\:TJ4K:Ib*!Db2@T:YI[t-\.)VMpPgqlmM)'YKsd[bj*RqH%J2P&X][kR`=O)k2Sds\io4>'f*M=SQ;d:f4X.(tIGq?oLr4pP\(b#>`o^\if.DEM-;n0h<@5IjJ\s*iFX@2tR5%jCna2X0*3OE)f%2ojpB?D"D7`Qf_?Pk?eXn\#$>X?92K`S6(C6!bjC8GA&G"p*9!:ep19K&<+(1Z?bs%FYN36!*<ZdjoY>,_'-KrlPc30..s[ONmet%!>YRA!93#f84S#.%^TN[D^3'..[Q'aos;E#Fq.aIbr?Ur$7fP0a.NoAF5$X+#6"?iV2'$UWR,Elmdffia%.Ae"Mr(#/3uq8Ef))5%!R\bn7pD(cO2q#s0iLk$U)0lT>TOfZkq>0IaS0c3ES`JYp6dmC(`"1L.KptXM4-7%a#AoQ2g$obJ)CIL6:sdb+cOqnR+?%5=Nk\=%BNt$G=<((c^,X;@!<(SkB?.9eT/0:X&Dr%hCMm;X0l_i2L)eS+PAJ<G$j&FIM!!S@dZSt73p!TiiU/&AR+G[/jHk3EFdXD5Zd*ft%i-W`NJ"J'b@W3)+$g?HF&\qN>b>Z[[g;=-Q[Ucpjhc[T9)(DeN#3H*KE,i_t&E*QI.D<AHVh"#q![@L=.uT/#7n8DOf,Cfi3.4^I%"9GFWpkj7M"oRNKL+coA]j]>,Y`0GYIJ`]'5q8RAY;&lXCnWRc@n"GUq^hb*J+fV`O_Xf_'D:$4N"3<hS&"#0F8k)-Mq!M2!7!o\%F7KsX.[-t?l)Vg]*T(^50c'jcX"[VRD)n-<h"sUh$$X)#Z69SU(3Cu]s&oS7G/mV^H$"Nch5qFr5d]7Y]b'?[F/,pirHhC`QL)T]%<,dbGK62;QaB-'Q+_f8doi\!Go*o(C_&\ZtSk`'$ORO9(YJk(8mUmjeHgu#0XW5dj?KV<5fKk!G1X?Jfio!oeUam*Oa.@4TbcK70%o?ZmO"Ru/TPB;lk#384$!;LIH#8<DkU4o>:<*P1C8-,2)E_Fm3d6$1Th`hYURm.kiQjpW>OnZI6(i(!1(mW'],MSt,n;GoIs2nha%rY\W&+^<6E".rtI!mLV4?3s(rm5XqAP!U=Y4;BK0:2329(/.+oKI1U`-<eHuX1ZC*@c]O6^hc7/AdEW2%0+V)Z2g^s<0Qd`aj;O?%I+Va:$[OJ=5b+uKpktg)f25FjE@q)T04JIl[E\jF^GIR82A0:\eGH'2QLH4>oS:]Qn%*AMgQr;+h<)C7nH1d+0&$535@\bqiu_AW%EUQBq!F34>W>2\L!2IYs!IeC>A2[,9J`rReTF;[Ebp0sAb+2sY\P.0ZV9/+;0Dg'8SH4NHVOk89QTJmdbF+.W9USZ;MQITC:']D@%(&5@$`QGCWSC$L84'FHub^C7]q'!r:>Ns7q\U%uG!:tg=j<n8</XODU$g7*=WnP+^YGBE#^]HED1Na(<L"UhqT.R:'mO:+QQZQu,%Y5s,aEDP^GK;OciPg;N.'3a(\SU&)?4NShZ8/h_aX)NndSX*WuT;;iPE89WQ,E&[AQVWh73>SEZCsN`uiKClKVQX8Xn/4D'-OtHR%KN^S&4QuiK$ZE]"P0G-_!d.,[)pOdOV_?6Vc::g.e&6%cbHl^b?[9+sV_@[0?)uHFl(f,C;"$5YHX*,uhU`L5JmR)IY7o2l2"t*P%ldQm>;fRdl6Q_o+'Qp,+.<XOfMO4XMAC\5^'F47Jdr8ZoFc$o<GBo0Cku2rBRE6j<KtVH]^1*qfLE#n]9E)<)dL3E^dJNRhV7B@e%:8`]@A8FCHTJ]c=J0il!aJjL#HmYk[YZ(9S<<J:]iZdOhSPjN?Vp@$dU7tS(-)5?FPH0nT<i=d8Mo1"Ed:oj]c^Zhkg?C*Y9Npdd%F"L>^a8<DnVstGPb/lW/C7Qt9YINEU8j,@rSQbBCV%etJP]IS=HMY$p@+797mN8^nH+^:@e!&c*\<qI)14QDa=0+A'<Acj\>[._2%>+H/.de2jWfI9G)((bk=LY9_agEu-K=XZ=:3D1BUlh''&;KNiR)E/UOVhM$g;:at6jN:XP6GdV'>B;BW^DJGiU=;6CC=BYcAuFUG%_Fm\k'Y;K9DI9WKa]29QdrX]iGp"eJWcm+/+;rF!/bWA)3i=gsqFG%s9%0oil"8bQPo^gn:2dE18F.&;7G_lsGT$G+lEl0!^,V>A%S^o"1>F4_4V:I)gbFS[aTfL`:N%9(Oe`d?dn0MDj42%^(5Abh0$[$3h/*Hca41W`)F<$i2Wu@NmV6H;Q%&MOS`P+CDnt%Bp5eO-A%pm#[-1cmk2J+3Zl4,r!2b@RqBL7NWf84G4sY)'IZ,TQ9*:8;/gWO0KS[p5ikLe#kW=,31r;5Z\6]?4T\(-@na]C([(f*0g/Dl_@1%<mZ:Q\nHUhdjsNR$^V6[lZA]g.KlFc46s+EA$H]nlY'9N+Kht9iMHlB%;^qh]?N?X1&%?ii^TnG'1)X=gM%!ZpPYRDR1-\jBiSB=%J07cL[@5=0>0h"QDV^)=@TtY%-(dBUq7$ZO>.#g,]3H,aW)KX%9(f1C]o@hIhKYU'rKceOr0hPT"$3&&hT@*nZL1h0IZ5*%"!@QO%\Rc/udcF!umB':!6YY4eFYquc[D?WcqsB)SnuhSM3X^`\gO=X[)1QCNh7S_8FP_H\ZAQ+hN+&j.r(?SHjk<5o9!*3M/KSht0E1@&%P0F!HDVoLSc1flH=oD%W/cFbYH!C9hM\t2trt'MKC4H1EG$SgsI;r,$`EO5"?J]%DRU60iSkNn6V/H6;*K8s6^tXkBf@^EuBtq>T%P&p$"='s@B%`Y6'`OquA[E[[TL%r-JV=O$,7<6VemB*fNAg=PX<;q??nA(]aBaB0h"2.D]h!kQ0:)>]]oQ2$Tmal53--EJh3RQ!1%nQ[tS^!!#XX3H%7gMDTB2TH%".b0**l-'ms:W3A*hp@,Y`2Q\SK0Ba)&j8/ri^j0lo2J(cO"F-5B;4g,D(k,;82-/g-(W,<7A:On%3VT8`%:4^#:>gH,2c,@Hjn0BjF:+rW]*/g1MTZ.*Zr?&MBQQk=69jX9UXT)fe>[,Bal[nI>`d[169duH;s<DWo:;0oW)Mn+Tl/mK%[recPo1Y&"HAIZ)3cI&R-0U'6^X+DYlSS57XoF5kO)`t_#_(@moVC+KBQf97Imp9V9B,(@XoDI^:@C8*SX.Q7m7sAJ0<rPg`DV:G%79?P=L(8M_cYjPh!p`2>(>9ICWh.&952hj#1RC4\TW**F%[6Fs<_Mf0'?unpLeKBt>/82g,t<TM-SAh5-c1l\Q:XP<m2Y(Y@24S8%;Ah8`q?fF.5<6J+-TLEW-BVrmn6&+no)l@SgtqCFFifXFr5upe5lpY[&5AhpRl^>n!J;I5&)RD'!co@fUOd3^mTAt<RV?L.$&CaG%)RA,:J!(2kTZ('X#`d!9TJ79qqMT27$Ojn>&f>XIpbC"IiBO4AG!'NE4tqW04Pi5BQ3@C(;?S<SG4$I0`EXAq`0fh_MCZ)##t$bm%I5eYHrpqOt\]D[>#j!KO9N<u;3r5c/cAR.ZgAK$ufQg24IMTP+R^s2d:B-.WqEb+nPPR+,^F3_#NE9CrRAM&ar#FR6SqTaHklG"J%n+?-f0sfZo@\;\7k>c5oPpNR`@4pohM?W^lr&3Cn9+gWoK\7=9Dn3ZY$-?RP?Wg5#84684.HutQSq9l4#d[SG4XeaZ7?)ZO;MIGF%aE#ZaX9T`H;7;Ir!q`<>19OT:VmC@Efm_lnE9GZbh+N<DhIOs_`O5tPZLKo>WVK?`S/STMd,\*PlO+q:^UbGALU;$5&3*?=.pe-*%epQ`;_,4Q.N#&#UrnSrtPV<:%c:K=@^kT.;mXY<o1s(Eai@"BZ(sj2U#;LO.3pYc@:#[?FY%0GhUCJjP&?2*%V?A2a*>][8]-eo.%SF;=snXU0Aon\UKqs(NsN_Z?5oFE;Qd3aRiZKRm%:,L(,YmU]BZNQNrU:3+mW/uUO?tjGe^'S\:X%0`YoR?PqK$^#un71l\Cg1?5%,iLjLel%`pUh""iR2.r<'(3kj(>6BsD8g%%1J/RH_eX\.A2-ec0_h!ZT%9*gpIe%TlQXLs<P7$Q)P1X.b-WiD'.-ukR<0?7\nVL5%l\!\GUnGFnB7bSa9HH^jq@q_9I^ab0.&dZ^1GAo`7g*D.)ZpHh4@s5ZEPSg=@15@I`e\,6N'(X681dKo0YVDEot?:nSDD&Rf!.1Q%^b=C75[SP&$sId6[SGM7jI!m$<p.X"Z<YEl_NjH:foD(Jg5f7-A@B1[.rZ`<qTNEh@G:MgE$L>lYiHjK4#\M(#c`V&QqKrka'8IN%JkRLr4N0SH]5QJ$PcVL;5dkLP]l7GrW=$tu@L)VL\tl'pas_AFMbib@8MUp!HW%$E'!V.@:,:PdebaZZ%^^g+T,$EjCY:CVi^8Vi%Sl]8HqEqQU*n2>75U%e`Trh^qQ;%a;kI&L<S%l-i5;IB9\hJ\UMrC=0*sNWd):)-ajOmXB"`<NFB2N)UcEFZC1'kF0WfE-p:CbtT%HDdtkMN2ErM`M\X#ZYPFCc<,RCU1H/Ki_=_"t._@MiG\nlua7;Q_mc.oLq&-U)-HFc_@Quh9d'mA0ngmWjL^7!s'`8ZI>i/IOA^>%D_aufVFJ+>$?*.TP&_sC[Cgj2"0@+aE[fBQ=H"].ASOPo02g8Y<lBFE)H2^F<RKssJT2c^QFEgY5r[Am'EoEF)MfE)G`?ekMor%i%\eW5ln4dlVP[9m'9kdVg>Kdr5AEq0]H3ip=?/TsLU0Zn4@1IM/CT#mDi-_f#'HriIoPf7^SBH'553k=RA!bi.nm*=.dHL0R]r*e4%c@T&cOAb?1+TS7g2Pf^cp=PsmThPdmMcA5@fWs[EMU"a'.;`3j9F5T;an%Hofk8<PVpBM`8d7W7Hg(Gs%ZlNFQ$ea#;6sJg&6REb%![Z5pPhi$JGX,Ynomnm/h*bH]`\L[](([BVXR[q)i5cq\SO^S/%j'#I//4L2.J8gIKEF'gmWqZbN@TP$G6iCjU@PNJgu`aqSIq:/%$(hFo3QGqA%>)I8r>.UT1fcOHQq(KmWpT=jD>KKc1K16:R\*os(6]^+:jHkM2"5<GM7+-BJ\88./tPCI-rMO*rr11U%03GG9Lq!u%M&diIXDU,P;JP)/@G;Mp9hV5J`;:+k?4p!#^HabKOD#3J&b]NC*4\J$D7s24]/YUPfeqpB;F3=R*jfbL:u+V"GH:P5\@pW$IJ`^t%)mDlJgb8:?BbQdM,U]J2bX-.$UmM>$['r[cKrk.-.g0J<C"*nSKr:hI4q=p6JTAAfe>*,!QS:I>ba\<p:cR_^$qK3KQL)7'_i\lK%mgrf+lm<i_a,3llq&s%BOCR55U%UXY8F_o%i>u>9#a2X1!gDh7XqtqlW1-Rk2Of<k/0M1R6#cutdlU90\<@[1<80(%[8$Tem<]V+%>Slh-`?6-0qd'_h@.gM8fg-SBlG>W8Gd;%#.-O"4MCr_??B12/"QYW@/k#4a8b/+&q6se*Y,j?1.4RdH<."?k#<M8:>El!:?'IYI%@=fZI=LnL^=>bi9SSP?[0f.spbTG>>ado7W51eOPKrbh^AjbsQ:8\ql%[14M2.jd59#]:aD*)IFQ+gF"M'm'gVHa,Q[%?nGf@9`s%hFbNHV27eXb]SERCg-m5GONO\=)jk?G&JKWr4I3C#YArG.\<`H1E`T+OH]U>J8(Af0V:VbdMGu<`UofsXpA%i@WP$Y!a@oVe/3>S%K%FJ1>)mlTHt2^X`S4uc\B`Y4bEkUeZ\$J35>DY.2\:rU3_@<;5rEc\'m/6!.L4SPWQnJATMr$0gqAG;^OhKH(-K*]:;;BUipe$g%6g*"%TG+=/&$2JRk`i-@e#X>?Z%c#gJr\/Q5.$&>^E(,B;/5=e/*PV6gu1,4qA",,(9BegZ?Fo*@\N&YC?30G<s%4T9=k^K/(+e0%Q.'sC:LsT6]3]6Kn<*IjXPJd+WWrc&7=+PtD8.mk\33%&5uU"sbUf@JngYT(Xf.oQbnYjgB.!*ngZ-``ArqdZH@E(7rQ7.Lo6X@e%':&'Fks616pSeZpXn'j^EhtQ;Xcb\I-'s1lCf8guSgqkq):cr>K*&(/;aIcQ^3dV3pTUpBeF$,VA>pG?c%P>!0i@:\nA]s/4&b5H%`GU"V2PQOK<:$Jlo,DR,nBqpl`f)-O_@;'hP[:LLDqkILGm]jM4%e$TWqk_&aQ0)$FNN2"e]dFF(A3SZc'OgkLbD>*d\4B<5aKu-%2R:BQ6YC^r6gAG;9JR+$$\"ql`/Zo[?rh.3+K&fdR"R)tdPN2TbBt>&,3N^%MA)Zjbcq'M/mXg#6-40gG:P808)VFM;p@UbUbbM*%B`q?l#Ms95[A8ahC=1@,*M62'N8\4WZdU'OrZ$TD=-d=Y6_uPL(LS^qp%r5m&R[a1@ldg;4&8a$d<<Ns,4N3>IOT&FZL&I)&5q4l%k%r^nEar)'a0W?XgsWE5:'!ZbJFXrtQ-.-n)b9oFE-JbhF_93]Oe4\H`SG+scCVTr<o2,!g`;(,d3pQ:L$5JG;Rp'^P[*J(M9AU3%FgcfHDFV;-&LrOBd@oU=ad9\,NLY+Z<>-C!Q4'4ErfJSpBd`'08<r#Vc\bS"/<=h(Q!Dus]VFF8_6Z1^$KU8G8$aD>TWQI_[E"lj%G%FOOM9SapH`XM_GXoBicKg^-&FGCRr)t\bUK@R51Z_rT7V&r^,b.('bLq&raQO%HMja7GQk#^2MTBIDVcS&$aN0+34M-5.Mi<;Z%pi#gb&K1-jH?+%FQJ/]\2BjB;gnIf?K:b48NlZ2=5+!>X4Lf-!1En'e[5KR'dgeL-5#8/(N/.ln6edXBW)TQ2fB;N@OkGW`6c=XO%+NCoNV^aHl_+HVN^6a`.f?-/(e;`92p\;2'C!7F;^m[>B],7nlR.K-d3Z9MXE=Oks;1^i:C+c9O?8H/+#:-M]qB^H)_c0A@gUV]*%2&1AJ>0s4NDP*_-7><:nX4ne):Q%OtKs9..'K-AO6L6C<\X0cWohtHfgW"$@\W`b?]kA]=*NpO0+O5J4HFVeV+5=7G:72:A4@]"b%<^#60)6,dL_eJ9+*OQsV(tF5Xol(\sI'7&3_[6=VX<R)bol.2rN)1+1m!:YI;Z_t[%qeb8o]`5VmT0psoYiYqF`L\6(@PH\Ft?8f%QC_sV7&nq+Ao])69]\Y\o)A%Si:;1BKY/Wf+V!Cda'.iC_oonWZiUWZ"i33,@oXM.V?<d@JN(l!L;e;h!AX7f!r7;AOq$jrgM@.e%)7-#g$!!``3OPrC?+i!qI)Ifa0.lp2_cmepascA=-6(h0`.f2]35kRMC^>-m:X,conMFVV`rm>"H*8ch@h_9+6mg^dX;_;_-k<S+%R[.QS2$Beim:ti2-r4W#WZ2<R9>#$9$I"Grc/$Ta"@D#og6E%-=/=h'VM[ph<M\V%eA89q_"R9an;>`-,?:Pr*MjtQmRS(lG=SZ(%]eb-HoQEbuRFde[4pG2VYcqo+OV=QPZSbbr2?ZfooG*b(9jh*QS;J<`(J<X3ePBot4\$uUgS2m+;@9m?giD"E34"(q@ARpjHqYrC%qc?DK'N#%o9%1IGiDefHVUFmQ>DELMSHs/8O`Q)k:5"tgA%gET%TGfgjPaUNLn]a-5Zk]H5KN<o)^Z@T*M1ap*aCQ`h!d7YJJb!(%$gS<\<$'ePM;i,9?(K(P+c25ZW!AH7iN7+"bF,++HXli_bs/i.^jFE92LgI/Z2(G_!k\k'#CkQ6m-M.=i1IC$gCI8#^3h.1s+-MO%7a;-g3YXsDI`Vr4Q7L`C]f8fd:u^p&UeZ_Z7(r">IcA^)Fpn)AlUBC(2bq"mbBDe(eQA_.Moh_pZ.jn;Z.l1*L#(Kp;f/](?-%8u%e(<l,TN@&:D9ASlMIO'DO.ds9PpKh[YHt2^;e<5g]hX8%5]B'%_@A(cYY0sNl-luYP^(TU3]!_=>>a+FQ@,mFR[q=M?pD$eisY'V%NE:19G.Lr7,]0!@g="=HQ8AXR\fF98!MEd>+l'V`_:2/jQd'WLedbfdd['Oif1VfcAI($__6#doFi'<:Vi8J(jeFZ8.2s@m.Fd?H%qj&K@.CX=*f#>m&[R]tW2k/a$X0;-A""VOgq"DJpbA;&(^FuHI.(Kr&?^2_mb+mf=V`#g>R4:_:8^;Dl/oR7ID6b'8-Frrq9O=?Z%9B=TXU_8C9rt7?*q'kc\;r4LZn,*U_)DI4oe![&6K\?D)\/k>jAoJcCC:^HH24^sL-+.jKOktMel#r-*lr-WV'nn_e24^0,@1KK<%;i:t)puNpSFD?R15*_2@De#hYg)jEkVcHI"FoL%0eT>Q!9P6Y\Y,9r@,O\K(Vn)PJe7q$%4r4(pUK,dBe^Bl,mFeb5:+b&BSp54u%C-!*pQ<6.jb\B0rj$l.,kucJXC:/.uVp-;a9d_%2WK*fs82Zs,EOlnL4h-qUNIHb$W$>9j8O46M.D1-fSJinuVTMc:l-*T&ctYTj%-pCAj(`5%c%.u?`=#HQ&2N#N!`=gJM[@0jmQHira#NMu;FB\b1D;8SbFu>glA[b':.35CV:=jhU=uDkrcH$Tul1FYlZ)['<OMP,\%a/l/eXlMNH24^0NWHoXnk[4XWG[C%EU&uh#0=K'O:"m($c"q->QeotqZB3@nfqlc6CK_O0h,bsGP2.MrZfcaZlILY\4?7W+PDCM>%'CrJ=Cfm'0!ZrcWHds("A4WRdJ]mP+3Q%n(bmatUhlr^//=s5:=]N?&iMf:0m4:"/EXD?+==ZNY=B&jrAo/BQ6X%^tU:Z&]\`:uG%122p?Hd/,Xm;f)tLNg8j::68.<$C'MB7ap[-d+0SgNu9b20XeabihKp9ODk=+&V)O\hc[3@1iq.(W21!%_h'8h>X`j*j?">cBV7Z%IEoA)QDr\2!19mp+B(4XM;hSM.8&b1PC'K:*\]JG:/P!@?(Q,D\VGLsF)`fncWUp*P8D`:'XBctC;:`K1DR-KonAsuDKhmk):5V/%:p1-o=NP/nf]mXM>P1D?Nko1$SdhO(hZM%(p%ZgKG'\R_Ztq,jl?LuYor2)2VmFAc^9tlE4&eDT>o!P<A.jpCM#&IW*4.H<ATg@!%^8&nEokq(;8mrC$>nED!A2@8Hkn_j][l%O)Fi72Z!O-'>ADCeWr7X0\lFKV%Plh7'1dr4[,H7"sX`>77XMg%^jRqo'6[_&Rh/l`3%.8P*;Ah=<L.,:>0Br5?\2)_tBb7sD`SU8"njl>=^"G3A7e[Z'X,FfBsi#I,K21d#`6KJN/]B-'0C^Nkbs5%7@f;Xp9!A!\\q?Sns%JNq-`G;+36GK8NZDReHahWip8\C7O,Hoh%[0$+QH#N(bYWh.;M9mK7=iJss23sKkMDRbn[-(1\Bg%U4_c21h>[WhC=gi-os<-)1?%e1blJZsc7dbfirS?Hj;;hO-6B/1(dr]0cp@V3R*3.'1B`r+^qno"?;iE;#6&aeI>lc8"TErJEuj/RQ^5Nm>)QFqGBkA"$t&n@H8<%leBrJU4q;(=;\HbL>^`>i`b]^Di^=lb:(Q$N(S,b/lb]3dpcq4R)DSajL-;EBKGP]fMRg:3<-s6)3Zepk[XFRJ<IBR0$kAXN7B-A%YV9!Ge*^>V"GVTq6l#EoEQtr\rQ5IKR$qH*C6L[XXLHUi9L'9t3@&3TUtbRR7taKWHONShXR?pm5+2i?Cm^&-R]:AP[b'6+G-bWF%GJEQC.h<D]H6.Ok,J9(4:jE7Fcc.iF?q@l\4\DcHFk)-.2oG:Ag.J2+cLca#8iG"@$qDUiYcP$Bo6$]`DY(4j2#LYBWr(('+Y;7e%1S!GrbfA/jn^/ZY4_ub<HFRoWLrj-Cnr)q+BCgi,hNZj6k3AKp``h!L.;t_dj2jX(er+_=+'-V6<uRXXVe7e@f$PtaHa24GCB$o7%OEROuddg`.<*=luqF,=o`6pJAaX'7BZVKoFF]s*PTY*,+)k5Vr(#aj1/9XhccEkkI_c*]9j3daaBm,@KT?EC<6`;Ns(Yt('[lpig%]6`)a@8Y9E/b\;k]m?\5=8LG?F@tG(h';.4Rq]hbcg1^4KrjN/"$jWr,0\:s6%/EL=/SFaG5Mf(-W^VD$&Hc!B5Ep58N>lbUQ]=q%n?(#j<2V#%/uKL5^1sT[42&#C\mm5X#)TgVaePb\ht"0O$Sgm88@2$QdUlG3fHFt"5?;tFB"=D3[ZXTS*I'A5h-lCOC,'(oj2oeN%;p\4":@=%jSNE[@knV>i:S-@V.a>"Y,k2t7nTp)g%\=c">/Lu^*V-RZLD2H%(\=JR4(W,W+fV)UU`Uu@EC_tP8b:MlWuL`e=G=8r%pWXDAf4m&&rU*@ipLtF5RuY<#Nco[-9*)T<`[;apfXJThTBK(qbUu]Mi0.hO/WXhD);3`?fM1+=2LV`NiK2-dQobYU!"V3s)PY2m%]pPMF!eG&uBpjg=.B7!hc\a7@Ic#^2K^#)82%Sg%a[[tX@'GL:J5,BV_h'u;S@P\98bJ:(_lel$EIMsP4"821;&/PC!l:O?Gj9ml%4egqmO2EJBTtb@d)&K@'\MM3H+dq<:$Tlj?m<#Uh@Rq.1;M(/o<@t%ZBT:2j,R\f/EdMWC;SY)pV4<.6UeS[nr^Aq]kf<,(QV8+Y%QsU9VpDRu7r>gD+h4h5U?)n4s?Marqh(`M@bHo)3[rsA7_3iVu3]gbd\CL_i<A(@a*Pu.VY6$Ob")-s>&e,E7Dq*8,?HlINR]QUt%luBq/$N1BJ!;R9<pT"?P>6B\)H1nBB1g:&q3N*;3C^hMVWNpFWT\15K8WD7A<Ie[s!0N>TG86dnOAsDXq#*g.4PR2'cD>n8De(s!%;Ehf=p#!HI:EEO2[k?dk]92K*Qgu$8Yp3PsBA)"6s#2RlP?E>6g802^pELdW;Ej.<.hB.S:E!4uK9BHb1>A3;O$RKariLX)SIHn%%lZYlPSG@O1%*sYhb.W9%eC8F0gF:lXk?^CEGtNkIlR/J'&^H,/^Xl7G.^\T"mrttm(56;.qJDc4[HG5P\h!SUEmsbKp\O,eL*1:0%#l"2[hs.*Y;qg2:5Q,sVMtqn+m_+)G;j4<DKC8CGX7"KS\NAXJU3Wr7re-LRWr(Z=Vgkc)^@dc6Hi<RmcF2#MQ=K*>K<lA7g[Z3U%qWZo&GFYZib2=`^djIs0h!:m,l>C0!ms2+/riLVSgrFV`c25f\qIr<J.dne[nJQ5C=H7L,T75b2Zm,1)Hi:CQE+QNTn\3YLp\IJ7%E;N\NX`I&,][or//(/I6Hi<SToojCW!VcHT-X:^-W<_>HQdi_!:NFb26216?Dff^FMXGYkT*A$#>Q'S$+.nDG@<;25*I<SJIimRa%FUpjQ>Q&`Djqr!llXs&gTV$)5cb4cgW>WMB;E8TCYC$5tFLZS,ntB&tk41;Rrl[V%qW[H-Mcg1<h<QFt>Kr/ak<?W9P;G,aj#`J7%'t=#[Fs!>Z?WupjL@'?dG.WW--=MpTYFk<<lE,O!/:o,%lfZg3eShps1kXgA1sI#*27D,MITkd+%R7?mEj+@DYs.dRqWU@5](-.$%qWYWC45IrdG878K>&N6`G<dmqr)Q%b(J2WiIeW[fCS'UrqPg',[`?(1]'3KaXXMu-p\O,%3_?[,&%U:f5o7MBIbNu%m<5\jIW<P:%n+AL&<uuOgT2:`MHE5qPfn8&RqJ!)<8Ik[Wp\O+nL-UY;j^(/]NI6\3rPV:mAp#/>YFh[*/o%X9h!8SW@u&t-a&>n7<^2T/=q1J\%^=Q.f3G;H5mWbq-^2a2d7XbUtgWT3R?+[,+AR(Kf9Vp6`F^nlg=/%2eog67pM>-SH`M+QPL";X$Hh2!EaOhOPD*e^e/!r=B\0Zr&%L?`glT*e@.f"RD$p9<H:fG*bZG;ert\_nBKL:QD$6"H0<chB&]IE#)AB+ulM4S.^CNJKJG]Wk$blV/^lC%'=BLD)1C/kE&\.AX6.%o5bd"q)/\``ag0rg>bOBbiQ^J$=M,G1P@VIW@W5afc+>.cIiGG>Jn4[gI:cD]1_hff^mYg*.(usg/t94T4+ppL)kW#^UTWR9>>PY%aun.re_F#)DPHI;e`e:T(*IDO%9NF=o=WE88_Rmj\B3G2`mo2Al_h3&XlS/O)([fSWcREPD+;DjX_Qb^D&)B^jE5i@H\G?_B6j8O%n1urB-Qn8T#g;*&[cQ^5BYPHk1m"uG)X3O<Qb#\NLs8#TY%:["_YYT-pUrL,pIA5GKoc>4lbHg[>h?3?:N*Dm=J#Y%A#U_SCu#i2%dcnEY>_VVNW01+.%W-J)5sMr=nq=,://1:#bLP'(#+qH(SSZMjM9%m&`'SM*&o16]n^^l3\gO8)#L@I2")l1q_cnnT"e*/`]=,uG%n".<-gFE+K"u"N.g\a@X$Ue23hR<4_0@GfpiCU1OB<@T\3ZU\sb"V!+<Ta5Im_t[iff)?$\Pe!mf\,nrfPs-I".m4;6(?mC8f6K*%^Rk:)cRB`X>/<FUS.H0qS\d#r]YSLf@mTT^S[+$Qq??`L#QOFi5?XBoJ.D^uLI#k;[U"XJGp61rMem:\%H:JD8\']^iW9Vcgas!M%pI3ZhFKB(Y_A?PCMjh,9?6BPqm[(Y6@>;WX60X:rmTk'g94!jg?Z6pM*pL!M=-%9I#u@4W]R$I[_Q*[R"C=8b@gJ!;fj?#`$QL;j%0;f`XcYFurhRaSujdO.%hEPME6LH7`JukL.q\(r*'L_&FGX#2ZfX^.[p9/BG=BMpK5D<Y=_J2k.91cUbK%X]e$!IUY.NO/T`%6'e%eQOo;PJFdX;t%KOo&g`l;\XCA]k:)Xg+")]/E&2tis;@t4DBM?H&1([KE*_G>1_)TV<<X'H`">6)\jCuFf8JI\?L]oTbcCqUq'KI%s$H:WW's:TSkh(hSmZbkKKp`2SV&<ih?E_oIKs9TT&H)nG<!?BmuZCqUG[3bU>PGV`I]MVVGJ<tE"G*Z7/."<?QLo[QXmK9YJeV?%+3am:j\"Mi5<^Uia'TE03;s>kF-16*\HV;\.BqP[I0Gq4mCA4qSpr-ug\K=7VN?-W2;6I@X18Td[>SeN4^$@b_)5ND(9g%Sp/%5)%99\-(;l37CH;^"5<%K#FP?m^M9\9YQTUVQkIEknY"l!N?03hh6q)pnJ"@jh^#C.)QXte-8=E2e!"kY%\OKf)jUtk0%7A*i4nB\$L%E7efd'eY(@!>s"gD_Y;05Q_2PQip61&hgp$*a!ugm\H+&@6lq"Y!.pU/sO/2qlnbS7)H/P%eo)OJlk"qp_W]J!ERbsRG2cMFds<\%fnZ%20AC4Y(@%Hg<2:!5(AmtD&j<0CD&treA8bD#Ur@q^S<&*L4fJEm<N<h]opitoP4,-ODgB;8="#,$`a'>;kqbb?,OPaeg849o%@k//q)dP^`'n<?$FUB_1CM>17Kn)6X052MQ!/F9dJjA%6'83t`SjNg*gUba4rhsJe(U.JO,s2WX[pk$fX;s1OWJAfO^&UW?E-2,/%#m\gS1W1U8$P$Q7"@o:lL3UD<V=8p[>6`Err1WnBHO:7C;TL;F(^N/'Jts?<!nW)!C>B5b=h_mT")nmK'*JU[[r\A*ni6aI99k+(%?FPmjcRKs=:j3F+<3q3>$L&u`I)1`MBH$XPG`m#a"pFIB=fC8,-5&'"fgjuW0`u%a=H8Q)Ge=+@nqMc%FRE;u>I.t8A8h%3.ln(M%*Jf8$,]Y;*XA;rspM5Bap(hMCaja$AMO/(c,Zl&p$JJ04gc()e-7=-$!S_.ajTFq0.g<$[*0)?Q(1``Ya<6X@fZes/Xr(4,]oW6E%O[=#O9P:lN[K_-`l8esOC*eD33";dT%?B]U@.TSMO%%B.AJGP`fN"B]5?,K"D(fnqX`IMug%,Ng=GI*]nZksp'!:C%VTQ9)QgLB-%HFQDL6T0@DN=38bK<,(f3#Fol8qtPp]Q=i5[b0,s=*#A_UePKa=[M3JT6\j>HB&mrYAfZKGg>4V>+Yr5FquXqA>KPck(l/Mqc<02%:;KAa:-iY"_qm".7Bj@-kJhQIOrlc0?)=gk\9e]u9b<kQXbqjBDN3J_J>gXt"7,]<KVS_9o-X=8*pJs3OE^dWc9R>1\?EbW@CK`W%-;G>d*?CHo5bcFb@q=A2PqRqP9IUJ_7R"Xki?\VkCh(.`'!#g$&Mh^!,$'0?`N_H"iH#<ncnjG1[1WJh'rTD$+3RRi;!#n8)q\eK%i53c&;LB^u2XY2[N6$Gj>`jA2A,u=b'RTO)cNEAm'^,0T&D<]Z"C>o2E:MY$J<Rb_U(-7:?-E9lD@4I6#`a;[,dKE)B=D7GZhl&M%J@M%nag66i'fe!6h-?PpC_JdDp:qd.?m76X*h*5sWS"Jl(N&6^W>p.MY`90_&F_3tFnL@,$]i$d,%h_)5UsN47k`Z#eDiq4A,t[Y%1a&3e1$;sX)dIJ;JPUT7JH`63JG524.mG6!/RkeuRg0>fTe4ISr?K1CE73,IYR7<A3uTQKi!TPh0*h`3/h@WkpM0d9%oO['nOScr%%PLqaDI1ef"9nM/m?L0B'bjMqc<ZU)3QrPSVN6C0F?Do]J88#%8s3OH!S8cID@I]oi^skT5Zd3Ce\AAGlbGul*ZZTY!F3_p/Jp),%XSZ6f6MWW\np/+t+lLsW#LGVWo2pt2C't?M0g-(dc7]\=@\:%6I<%!"O6MY@BFIb)cNF6+>mEbMi'2#r2piboQ2=D\`Y(CGf//ST%.]8+hlee`M_B^VAZ^CM6KeTAZNGeYl"@54Hn?<VF,)7%r6&J9m>r`7"Hf>=LlD.D)HA*$94HE/+9@=;p-uQ1nnIl_nfr<0mX5Z$u%"4nBZMKmblX&4Gcf(hrW4*6HB5?ruH0l6"/?1^_ie@[sWJ7OY]0d-_*22rDa2cO[u1#I=%GR-0WD0;R`<t8^q9^%)<EHuaMK2dcF%0S8a9C6[R(^R>e?fM+$!dNZ9k_WECO(nM-W1l\fULhZ-@Zn#lNNA=eW%iGK5V4;93"r_cT%,q>E1:7VI`$JpW^"<d9!7Jr7QiLHU%pTQA'i)uTU;58W\p^`RS0YAAZ12_4,:nQ#>)L5*on#%Wal(@(<[.M]1Rg^,)%,p[Yh<[;Mk"LZ[/ubTHbVbma_3MM*K?d,Zp\Nt!%js,ab2IEB^!&mto[^1>um[uNY2W$t#b3!tV?:.]s]YNT"hTKOt.q!GQM9o<1H-O?5`Gr"rcd"Xl1E0\'Yko.Niqt3DkksZ6_8KB)%2174R=VrA19ma\mEPJ;Zf^5)C1p/8H!bVC5?e.qnVK<+3s$d9<^Q$-JjW'Tj/WJ4MgebsHb"fe:p)kR%j3Cfl7dX6@0ul_cd.#+m%QjcIi&#jna_KV/Gi>#u6g'TIsKTK7U:K<"AhP-$1gH?N0F_j(4?n5;T2@19(3[LH4;F2X8k:jtDQGr9%fuEC_g+lO<Lm7?e0Zbg)%`i:1E%\CoY?tCX3GR;.,!OdHtprm/):iI<XDIt;&+>]Qa$H?db_,:.XcY'*0IduWH%==<2I09T2alHr/M)Jt!Qu<puA><s)s.usG%;<6:bS+sV&985Cl,o@gjaBjC:2grWF-WT.M%IN[;WaUFi%Q$:>3U0>Lm2MekOJZH;Hjoj)K[0k_'I<NDF>aR81ced'Nf3WK4F/4Q%rerk2S&1b,7\7R+eLbOk/@)c=g+C0J+tsFta86Si#+L3$TY>W?Mdt:`,le$#:T?]lhdW%jI2uN,L-oC".[hP%b@MT6Pq<(X8#(GA%GhFB4pVF=)-UNR,c;TYkLt"c'L=1%M/6RL/h't(dUKK"8ZF4!([ZatY6unNs(m.\K[$>N3ZU&mk&@a:0pq2u0/W'sNrQ@r&@jdB^%O'M&p1c.T)S%uAgAebY4`B$1"CIm5Vcoqp]3ids62S?`?[eYoQ!NtYPiE;?"7$I3nF4j86:bU=b,0Hu#@qJTo>ei<m5i1&a2WNYK%+iRSiWHa[Ud+2.bUA74ZKfRDOl\/`jd*M5+Qfj>$QVIOm;Gk)s0%W)iEdnl.T.Nk\5RpMJUHU3-Su8-ZW-[B8fhEg1RAqR\jq53U%Wkc`SZ^b"^1kfj%guk[`/6dNa;k=Va0.1]fT7\#3,s]GB=VV#ihM>Y(pp:#S`b+-e6^d.#@NcRZYJAe?Jp;FI@:6RNL,%=N+Hnkt%T*`A_p0NIdL4iF["Hfn__)ItP3VXqfJb"WuIe+ZcS;R%b-bY$ok;R/!DRlPh@E9Z986R[JYB56'om'a&`HJ&K2%ft'$C*9h;c;:+%rUL<mT$SAEF"G]:o'%ia^pA%f,27MZAI,p;n%Am2[@RH)em1f@?1"\CAC1fmgi'_6\p0L2KMTJuG\l0`q3^4%r%LghSlu<-]94M4%<ujO#F/fYP96casE"R].5ZL`&llIn%4h8T<(i=]ZF5Z./BKY^M-,2#<2t/*J<51r%K_+fW\['"S+m@]4=e'tWNDX(uM)^XT4MGj7%#-=lNdjgZ8WX7WEcbTJqr5?jc;X^Fi6R"4@7Go=`"V!CH7#_=\gV%uL%2P1!I@$g:@+HfX40IakkmImBHZ#TWbi%@DN>Ell5H5&_%+.`iRYOQE<D3t?3=;cpU6;3The[QUG7De5aWraITiHfETJIHfoRkQF1i+h&BpcLAfS5Sm5;MHI\Kq%KYInI`3n3e:&N`XmT6;C4O%IskJDPj-A3`]%6n1VQ:?TAR:,Q<m,q"2AGZR4=^BLDa(I%P9GgaIh2s_NqQ:QaiEY!TtiT+;/a8A9ff@:QD@-j&<I#dmY'*r;Y;Q%l$Ch$Z@)ehK@pg?8`KB8DFp8Z!CD<i*!g?n17/Wo!#a'Bqu4+OIb1TcCtWjkjN$)()k;f8Wp6at9'$W!4HGfPPNSR_X'QD\jSe#m%dMu$^=o(LR3VriNgVE\0fYu+/p1?U[I+"k*&s<-HG=T>_HnPj\)3URLrl#mpI-.2GeWDM#&]f:`H8t`mr`@5h^S`a#TQdZUdT<_=%__ouQ5@K2@ff-DAI=purpKuI%nkcIPP'?/UK8W/NQ*ql#^:^#%]%2=CD0_c'e$A[fK9q98.1d@<f=R5"9Fof`P!$t'iXcEDqtPh-%[St$*2r@*u7U'daId,C6!RZ9LDe:Ah/C:eKH=qMEg=03%L[F]Df<<r6O(eNc)udj\r"PH!VJ\*E:;'V"lIG^-Ae_L*F>,mCbLE]G%]CCfYiauK^!O0S1T>?/+!98DRdK)4t5!<8Ro_%bZmcb*QSosi1Kf;r5M^RrO$ZpV0?+Su)^;0P4IkP.o-A7VrJP1BAabr7W!dXI@%_]/@TWkU1'k);'W*+6*C1g]BGGQaX'#l?sg,Ph6gOuDaio8df0%)@#c1+2Nn,kY&q@(6-Z4u_dVh`Mg..N!K#ofJ_r2Te`6'D#Us%^'Wq:LX!:UIN%Y$^:^l7c0X;n.JCZ\HrphT"H2^Aq8_<P\7]WpbjN2>_,T0a5];(:.V5.;ACKi@RqH[#^n=T^cK`50p+BY4+3;"J%a@!J<Ik^A="nlND>qH$S#RXu+[-5D4)@em&!iY`s)@kP*!W5PsFt%smG7380!V@Jk?3+$r??:QG9P<)j9Ztj0G5dHuA;9?]/jLL\%H[>oml+83aGYeRZXECFnd\Qs)gPG9o!8\_SfQ/qEEOD\G#RN`%5)cT`=8>tF^X%5mB8ZY8!r_uclR7C:"^#;klh4[I0n+L1b?4+E%E2b8_>of2oUC31YM0I/d,U3,/lJ&eW>^Jm5s-fR2VV8X/2L'>sT:Rj:/![iZO42A(7J#^*\(QW;SW1abo9Zf^WLrs4k3LIS/7@nr%]er0=rD)0VeAKcIg?HCFhrE5ug?HDi>A67A\4[8S]L`u%Ie*nuA9r/l6g-2R&EZI8J@N8-0%huC[_4CLhoFgo):S!B5G-bOcPcl%%s'MgdXr9X]Fmk>ADI#W.&)A@0&DlQZ,$XR7?tJ"Ts7UoHB27rcfc4F`hEt/-B6NQIHh&BiPSnaak03h'U_?'rB8Y$_3.=l>0O'=U%[[9bTgA^3Y;1r^T92[UN;]epr&mHiK#pp'=B3E.MdL%6XZ'@+)I8`@6>c"X^R-6iSGP%?_a2\]a<)0e"-Gn10ShbA^XiBa4,SMJc%W:W5P-o(869RhE\FUfn]@\H#/qetU\cLcTPG]E`U;'HCs?%DkQ=\US5$]lN\\[hQuf69=,`sn7<Z_Q8Z""!VKmHi2\n*uX53dlT9%=Po`IYA;m6X^Sol[jjYcgOaVu6/JUAfreBM<$.Hn+E*]`1pcY36n4W&l_QeR/liWd'"q6WRHt/k?'mgA(e5lgkar^V^ZYq`\mA%&%T<YUW*U8mr6\KGXT6qOHNJ6JfK8m?]<%0orS:eK/-k6dZ'R[OPb>a9o^3tAl7k]POksH&r_`<#0U?ur"qX0Q.]W&qKbUA@p+`CRZ%f+6=bp_b/STenCYb^Z!^r\cnuo]g(mUuW82*#+:CPF0%)M?=<[E^uYl,nH3P$u\A\*]\Kpfq,%N]-f93e[%NoQ+Up_DfsCejl"sY%Qc!HQdR&B^'b&k03-k"0&WY.+"R057JK\9'I[COUYkoT!q03cN<^uX"AiAW;IMp?AW4M))]t6<D(],gg3QtPi.`()n#QA1t-ah9T%UQOK(oNa#eP#WoC0oTai0kT]X][SHEq;!:%G&$_L8hX_l:(MbYk.@@H96LR7kOi:Oq*Mtcf3']LbYLJ1q'E-0*0[OHHp_P6mshQ#%@WO7CW)<7O.bAne&*&#@6^@UFK?<%`f$Q=d]$RLQl)K30=&5t7)FR0K<qRDU(E,3qGCKG8/%tQ;fo2>)[;U=%#-n-5"[1N4nuc!k%p+JgpPlc?CSa-qE#X\Z@lFn(*@CBh-J%cZPf@kM`?9s#%.1n"W\$/&GhT#;=4*C%@(!%C+ARk3TSf`DgP?DW^$*Dui/CpXS_,7-b%KP<?4=?+k=k?o)jK6<g5dVeEd@N#MJR=%!upNgD1<C*'Ps!lde>U]*+cI7;hs%S-Wpfas,Ao$pM&M_i\7.//F]_\0P9A068*\R8L%n,6b][I,+F66Rul5Hm*G1RT4DgE,d'`'ka"5B[]s0_P<r[FsfR98DI8[":nupXb/4'4#3P1E[;Y^%C,`YKg5*R"oCjlul10\5Xl^%q(N=((9MG!!ArhHiinug>Fe8F*KL!]i+SJ1asH^V67-#L(Tkhefj=R#n':_5cZA$DRB(6fq8A)3=;Y+ebOHAhZ8&$JWoG?UdGbH,%pZ3S4=jm21^r,t.M7EBY#OXOBm,FGaX+ctX(oXRC-N8(K(+If:qtm_d:N#r\+n!M"_:/CNJ[EuiRr9Z@bsI0Z1k.EEnorrcHC#6G%[]fP6S8ZE4h,7([ask#?c3e3t9[B-Gaf0jKC3"_#l_i!fM(>F-,R*)REP1MN:"queaTL/\^!&n6@BMO'om/W']Abut8'1JsV)ZSh%-4e]TCL%uVV6/_q+]cdRoBI;+*QMB/<3>t^7?skj:CSOfr=B?K/S>FeU0`<^r2>JF3%eEk!BN0I<"JnP!b4=WiAb[j^'aSQ+fp/K%J\NPg8>'O/qaWGg?tNUXj^@o-M#(F^SV&Cs!%2^'E1DsN-j=[RJt8[gI!l$?/T6[dhisCdm[Mpd]3'k_qmL8U&oTlkrRoDP)*O.J%<9CYn3KSG43D*,HOQgaFM"'u@bc]m;Xk=FVntU:`LFE8MA4Ci6O:9'QnY\VCd,i=,)HH7c@.rW$PV)ERIJ>p+$;7BVZKJ8lgfaJ!%&Z^kcBP2Wu(WXX>c(lcc@U6GIe\#c6J$D63^%Db5pr20tV'#*&X9:<R.SaadcUr0acba:h2-=Fd3.hHKcES?>X][&&.ZCW8oZMX\%Dl(td^U)VF>5N_t\-T[:qt,?AV3RXgN79g-npM`%LZ<$Wc?mNK>rq)J"7frff@p3$7;$TdK#W))[9n=-i^9*c@Hr;dms[k"*n07Q%Es;>Ikh[h5Y,Cjg=>5b&:X;N-f1/U7pj0;&'n>&?A^b]aY<C";B]G"bERD8hHd^-6r+\sC)(:Nd=WHHPK-)&c\T!^_%[1+/GMd!7%U1Oqf:%mi2b@WI(0Xk9>-aW9OKZhBoI%KDVT,V5dQnJpOP*e&RRCpmlrR%'f@u<Wo7eV;>IM&uV_KT1jI&:b<4.<5d%^Vib:oL\4%oYXAMQ9K_b1ZI-Wm%Wl3jKX\Cn4?TS5&<cIWMPfaIRH_KIjWRE7i!@2S(8e@p,i*2CIg")T4n_Tgf<t=Jt_2%o1#,=E%j!$06ntf%QhMC)/2ai.CKc4E_3CfhEq4H[DsN/%P8YP/0>PGdR.2&6fkU..ISCp`FZePA'MGh=eJ*dX/I^5u55C3)/^'!%"o'9IdMc,L9ta]^%O18[>J<f;hrcc!fa/Q*d;&WMk<\FrPVf,?Ap(*1a"-o"kd+"60lc4?"o;BjqLZX*4B2<\(Nge#Oe`#f?eCr-p;W;;X]-hsMl9L0V%g;hs?\VZ`(@P;e-6;D:hHb/]^n`f>kp?["21#D:,eHWMK*4,@9d`9sm#!$",StU9(V#G0%#Pk:\2fcAj"97$rI3'F,2Lc?hZtccY%MN!V`8;k=Flh##+d[)MFIVd6#I#e1`GP_&HKs5+J_u/0:fWLb'A^aUr6qc>gN_';&[#G#'IF?`sYPGWURSXaUHZ(8:Mo!XQ3QLj'%W30Q+Ps2r<ZhN)4d.ulU"C$3toBF_2n)cf/g<K2uW)dd,>Q:s%Yc",aK%mo*Zf7J7(@uDYVg:p;4(KPAnQ[9:1rHksAn&uO.JooV%12&3P$l?Ymn]YMF5*u2';#/9`I[k,ZAlQ>:TpF1ENFB(QEm(G(rN2K0n8]Re.UC(_^IObcf:GQhV``[4](QQC9&JZ'V(5;HH+^+u%m?r(UIlu.Y])L8S\hKcEEMh0lB@;p.a-oWP<\p#Ta.#]QSk5:G+-/.AY!%t$<!"+R.U@O>-6;uZ+)<?3HR>:W.=.ehFQM5uI:pH'%0c@.e]hMc]D:@1*pS*QIiRRq4[CO!E[%m3%Ut9%8F7t@'RJF'#FUUraMbjBJM`:GEhb)pl/p?+M.F*)4CgNCh3fRtr[H9NPpR:ET%nZKBT4.5PD_Cg7N0<l9.a:BZ.n!OcYhg0imIQF@m^MVQ;^FW63qGe=[S`lCXm+5VCF>mJu%e_qqj!*9lhfKB+eqHCbg!nl^`L0>R%lRVcjU$db0[GnaPBr4egjAt;o5YLiZ.>1"]H0[\BSO;%]fs<QhJhT@Qn)>[!I!OK#KMS/.0[P=J==H?-^/iFc@!gmMf#Lfb=5@Ap%eqAKpG/#I=1r8ISZaG,K_2E]p>%&CO035Z!$$cpNC0o+Zs7.J3M=_iK#W$Qtot'f/XU/97Mc>f:SkF_iX1nIFeCnO9>$>0Z)kO2I%:SYEbc[G";D6;BTXLl_,X0q[fE8Zc4<^3u0>:n.'mGnXk*-Y,3$alA+@qu"\FR.jD^31MlqoUuUM!3W@nsFgF_"A(?`FJY,pf_[X%m`8m,lZ;FpJ]CB!>*/MPfsHQ&M+J*7MQOOMa0+-QS"<)rJM-Bmm!"Ya\,qG30C9^%m&"=C09c0HNjI/8=JBpVG@RY!d27(DV<ljZ%Q7*a:D7MFo9%M`%H:Ka%'NZ(\\a3ZL)tb/kkE?^gJ%s;F0P?lG$bV^A\X',(MgW6TF605X<;Nc;U<&[F_Ek^&?J=u39t6@0W3%Y`%/^_a7q=5FDo%N_4CN.C16!fEda8WtiT&2W7aC.`Z@H,_NT9H+P$d+0DEp&q3O846h?QU5YR9G)(Em0tQ.)2k^(6?obmd**'6u7>k%oq.\N-a1"^.*`6K(pMIVK3g5)fbL%L842i0q`3,.VU=&$&H/hdgX5M<YI9V>#l7sV0%n3&6U.%&N`8a<?%4chqEiM)3Y1EELr5P$%p$B<*-umL.KhqlcY1L5`m*h1?=?`1e@AgHlO"U&O4s0U[ZL==/hM:=Ki4d#f;u\Vo)&0hp]s,73_tP!-K>DYhEVR.I#,M38[e-j6%3PK2jDmoA2WNN_:q_&n_FK6!Gf6(Z4hs.g`MEcH+m?(?Fg%PV3Ef**-^cu^o?P<9jgAL!,pa*a0H'lWGnOl3_deCg3r]GXTg_@LK%ptNJ5O-JXj"FjaIJ$]p),kuFaJg2tajbc(2k<mS7k2m2!F.A*LgZH\p!\_RE?=mXUre-('A!"EiOp13ja16&dP_]!P)F7Y#Bt\fc%9>3QhrFJkoAp3Z:^Bf!UH3].*7Cr<.EM)fQribY`lX9<OmB<UmFF<\f>>fb#R*"@c>HC7$b,b;PY>uUf'BI%t7SV3G%ZfbVaam8j%&&rd?Bh3:.i>mbEVo5Xh=/..mY]"[]41G?5Ai]LgQ[/C7V-iS*O?e*k9DW?hSc/<P:r]J5s#XO)WV!HU^,:,I=0/)sqYC1pCS"o2%jooX<]"*<0]Y+2=o<b6miK(htrZ.n:D3Co=%R2p>QZjo:\[JO(eR`tu>=2>ekHbE*k6EBTgSb'NLC*hLApJf=[Q7Y&f5BR$O_P?X%W%D86?e&;hhZAO:'iggAs.B:C^K)kbiR?GK\;Cg%1Z<s\>RU`RYt^c^nNko3:hj[=SJR*%;-Nq:PlgY]nK7\u$6O]uoUfktI8g)R%X1%k)<VQ:(eVa$66[A!tejU%5f]l<[;QetpU8p2\%2IR]@:cQ"NAWgtBrbOQ3ja'ZH>pN(X\DSem:)8\:X6FpBn=>54Rk#%Mk)V,%LeBlPa:HE1K+Fs050?a[Y'^g<X\Tk@*S/nu[9<[O(/1W?_tc7nNmmaY\8BoX3/MYOC"tDbaeN=q0Sq/.Bd><fWeA<Q5gi,:XTq6Q%9Ush:;>B(tUq2JlI)FSbC;UMb(3r0L5iPJfH9B2l?W\6YT]b&HljC#;.h_.dOTk0+Gf,GU,N4[(IQ3r"@N'6Thj#I,>eDHg+snnE%dnT:Kja1Q%@j%<u&H:@`phHp;rU_g+6\YOk&+S'Yi=@j>iE=l;"%J*HObt(&\X99/`F*3Cg9AJP0bH&@RFYds;P,\cc2"Oh.V-62%V,7d1D]H_!RhmN-"-1H]8Q\1GD#&:b*kNJk+NG>LYRe^Y&ND.4_2Lj9EtU&+%%)T.".!C$9Js]W-BUp]d?2sc+P)'?N6sm%/@^Vm%/=p]uPtpDK6\$@Cb%LeVMmuA/daX!6);r;qU;V]Y[0Kj]Q<YjR>lng];2!geE-r?;@YEbBrrE2#LgmN>Xc7^egN]!m;'K(M?Yku8%,ml$?`Bh/>QK]^=?=\O"(0=\J.Pb0R#sY@V3UWrbej]Mp\=[(k`'-H?)Se8<[WjQHEF8u#!-"E'Y`$Y3eJMa76]aD5R2<irVH'*6%a;E20-\ea!8W?H;Y(/W`l)D.^.#oR4Z4DrskR9:=8kB0M52kYWa>]?7iip]qcU8=LMdo^o,3ih^'*E"RH-qI@CW$%bm_B1EFLn.j%.MHV1<0NWgi.r"2+:6t55]FZ(jmH7kJB='R"?E^+"oW$H-ki?UM/4E6crd65<*OC$Fhh*pXI4C]/f'+&AYH&BC,QfDf!Uu'R<n,E%."<`%;!:C*))lO&+tbT0%e=!?fVR(qI1d6li%W'NKjLfL4:.-!TSe@[!cb4"IC`i9Z87aO^XSAI(Z?be#<F9*hSHQbe`)/,[h1OC%Vl>6c@b28a#4@BnI#J?kro*Fh-4p31EXf(2651[.+qoT/EU&Vs*&m<'8L02'gK=)i"R/M!63d0S5V<+"/"0QR62[C(E>MCY.q(dc%lu+B=ar4Gc:s9T+V88H9g_gtWVsIg%Hgh*f.W\:OX%L#`;sD,lAM,V*3pm*o5mIcRR"PtS6n%,Y_GJ8&nfc=YIT/L3Na%MEPb$57%75g08;0.l+Sr-\:<(&]tQn$ST!Ql)N;KQj&7+eUe^b"-.&4;p[[Rt&.?@g&!0ETWf/BM#JL?7GP&UP!ijBWr`..'ui`8S:XK_@R-%hQ>!0XbpkTPb_@054kUB8A/%8ALk-5hT>^m0'G'pUX_B4S`g2k44+Q!_P+:;',Q32GQ@j)Ou,FOKYo,>fOr\\TLb@RUIQ304;NMk%5iG+Z'PR0j#='Y7)6r+)nI6U<0PXTB67O9M@+*]M5pe9g6?Rl)Q(:JklBdI^:2C!:*Csi>JK%#h/?]VNGj%$e<#cd,Utu<0OheVe%U4t3L8d(Lta3STI9IhK`e4&=9dkhVsE$20HEQVsKN/+aFW<t2V?)!#'fGNq.Z:'C`a?MZN#2BC1>/DW5g5.\D9nOf[=KI]S<1e?b%$H*+nL3g3j5[[]B7P1FZ#>m@8bG_hJ%F=*A$:)uS!!(n65W[<8aG"pV+!lLg#VrD;cBdO;r$`1Y1q^YcaiNj;kGV9J4-47:.gSh\%1h_3?1=YsKs0)On,SG[H1sgg/=N+%BQ&hZ0>Za?<YU#sbV#Kq93#maWQI3jrV0AC3.WHY4mMd-Z3Shb(g9mFWrX/oW"1[:'A^km4%'<(<:3`%>Y7$tGEd,pkm!eJ[oHW[jb\^,%0)Sccp,D"K(gh1<<"i:]o6lVV4;NfJA"^5<f>QU'JLF"9Gr">e*U:o-E\31ssi]n>D%7KGIf/ok-.OH*TPRgYiWLWri'-/:g(&>DTlidqASf_F*CI#rd%GINcpYe(q*L<UHa0ta)tJO"VL"l^P=&0Z"W!X)V^K7t%Za<Un[%<nJW^'MUJ.c=WlK/o^rDZHRKo"0%73Ql:i-3Y;[7Q&`s<$Do4'&B55E&RL(t'uQ"C;EJk)KQ^fE-r$Em^bh=Q5\SFP5L?%#?B[p6%)hhp;KYh)j3*>J-S5a?i(RWhe5p6iW+sNRY]915A75,sD!Np*0EaT<-3n+G9Ki"Cp&BMi$kYNk"SBt#9!i__M#?"L=3s%2eYR(m1%UnRKU9U%h:.M2%nS^U1QNNOjXbiQ3XTo=FBQmTEp@%h'HW:.YTUDEho,XfNF'5AceFMbn66t@ApiqNO:/UB/EjJ&1"%WjIH44)9o%eW:'R+F-9"'0*.F^_^Ft,7pWO5bLkhcGNrs)riRjkN$A-4i"_oH6!D#OeA;HQI3jR[@1uf:ao'Ha]/sh+neNMRl#p9s&\i">5[-+%8&i@cph$gH'G&SYZWWbH6H6;cPdg>ETWsPQ+=bNUOE5M6'-'0Z<i42PdHm+sfEP3LJV'GI7^]*s7Ok/GS)NEZ&JY\K,",&*'fqo4%n#;89HltB>"5FdC13&l;"Bp^C#NmCml)Vf0Lf<ES=,Cnc'"3$gRtsS(0GtbG#_7fV;q&UX:q)C#1.Md;V"j:/p-C8JD(),tb[M=:%;C>B:4je.087XZjLB9i]8]&#t$13ic-I-l40/5%?bq^ji6IO?gZ\&'ROsq9rBnlbBnb!Nj^m1ga#2e"R;*kA98P3)JN0KWi+gKio%*ssP1$Q,W?"?&4WHKa3!T)_017u.OJ)ejGH:``=:WK,@n0Y'Zu(>B$kj%Sc.N'4bWH4U88N=8DG`gNXV9ItT+;Dp4J%I.@''IAe?%VNm+L@7=(/q+N<K_p&fdYrI+\!V(U?6u].(&mEe&N#op1G%3io]C7,3E7#ju(duf/85a`QKXABgM;/_p82s("EM)e&GA*1*.$f's%,VXJ:U^&uIKTcl#gkF2Z\Oe)X88C04LQ]T?`3Jh^,U<ZC]ZAJE0p_H.;(sm00i"GE8LdBa#j?'Dmt['-ORrriih[1m'l,>?)oZj!%h.Ss1b?[GiWS;<t8M*;1nuIBQ8JR)W4F'9/M2'<=81ip@&4>oHjMhW`#/jjnAsGK.!o51(0dKUN2o@BY-&#ujc&Si9]H/Jo.cEa@%]C@5]/diC6/M!-F.(P9]YTo5lVZd-eVZgO$#O/'[A#b1*OMicPCFCro'p`j`r:tN@6rGmR]H/J-0&]0D]C@5]((h.BGqMG1Ocj%7%"^]Iu[c`4Zs"SVh=D;dgdc4`n!`JtN4_e7Nj"MLB#UkNUcO'>QP&!8)Xd$):TM.l_*E(XO2Q9]8dWq-*Ui%E]H6V<'+Gu:,+l%(t%1pc:0G%"Z)6%V<7!2LCnAZ:al9.^;]81<tsS?emmQI1#O/6<-"OP>aQW.i;B@:`>2WsV$$).1GL$+2Ou*9R@o*&4g$@XW2qUskF'%[WK&F/JI0-mj&EXApt^U&(JIHG\<1S)69:]HfZnRfT=[%X@]K$*6$W0ij!qX8R<0M+pJ.NRt).Rr=Lj4U8MsmV9JEk*?58,f&;`B%@!WKf(ph,R`W8UY!gM'SLkWC!D8ra<+bCCU*YUZ-,`RFI)f[PUS>Qf85\:gI]?qe0?!*:m'1*alCrA^I+<#^D5brF+:>PA>#_U$`%$;;pFG]L#EKP1N<J^4JhAT95@Gpu="-fQi>e@j11,0S@IQI9c7CqO2PjAj2=]a?bB#>.,J9,cJS1A!"Gl6P)fk#gJpCj-Ph`M,jO%*<;gO(&uh0,u1n5I%rbe0]33tYs\aR[mVfkQdn[&@tA?31UIci<XKL:BaH\!p5f#Z!6!.;Q"$di>c@FnoX_7uA4B:!#Q]No_6`[I%eE]Ye!7>MgN)iDaWY$S6<]<;\7L@QJWJ'^Qk`536/'7rF0Vqj%QV.%7ghsbrY2c[K>b$b.l<o<9C"WJ"@dJoI*\A*J<r3NW'>2Jm%Q3$6S.[:j/CUkQA;X7bB"VMB#1)N$ZN)h(QB/-/KYbQeMK**KQP=j,_*_mJ\#n++MX:c^&Zl<EdWjA-F4s[5O7Ze%'$UPCW,uVlX%=J9+O/*0Ng:^SjQ#?rMd0HjD:c^g;si!QfT`3LM63'a\pO1H:6N)C+b:$.e!Z65'`b6kqE9(Ca"iDoaWPQnLkd+aNjkUka&H>OYm%`.Wu1@)Y@)7^QPi7\1/U4<]Obib=!00!5i).?^,F>fp52I6ggG#)j>DK3='7#K,h:)68^"A!HJ_Z]$ErKG1e>crqhF`m3_/QH^X+%b7\nNFsV6$D)^1Eei%p"Hk9Zt1L)ItVEP=I)M\"JZK1GEb*'@I=I/$&92t<^VB+2.+K79X.a,'$]F3NNp"g-KVE2)+HnJ])\iOt]%IP>nhY^L\6]`4jSro7OmUVhuV.&LWMbPR&t>kMA";),hs<TfN8f0kHFD/Rk2V3pA$Mu@0,cfj*bqS2P23=ZXFkdI`g;[EP@@L@9T%L@Cbd$4r!:(E3XMOh(VD@mm@'Y"QZhpMGa;c&s(b#p)k26k"]d$T@\E8thFmSRDk'&rLtn7O>GUAhPH-SVTghWIgU-'P'YM18RV(%[Kmi]@E.TT1\kZO6R!4Q6UY6D/CDO#051F!nM]Fae*ZLnWMSn0`VE)JFo1O<H$\sEc1]D&,%-eOPF^jee5EmNG3>rPqX<S'f'DH_%>N)<_CrPgK`3,_TF_LX4jKMhb]m[J?FOpHYddb0L_=f%DRrRAZe92]L%BVOtEQ?qPdG+-Ic^O$hnd@9i%+#16(Mna4<;ruJk&0c-%7+H?N>]4-TKiL3=SbrE"\U.Z85$.4.Kr*h9oBkSok18nmq=`Cfm+.Znht?P0c2G,^Hbi3ohG@U#NQ[AYNiUkOiG*N]J?)%A!j%;S%>d_r<#,;Fl[g6u:#d(D^PD?11G\s,T:)QVi[G'XJG@tbur+KJRY]P*4)`S/:aMJXe5ns2n"uE[sULj"j<[IZuD#I9Uo6U*lL`;gS%82jhJVO'+`/Z%OY\K9`L`eDd];V=NQJ=%Yi&1L*nkQuNF650OX>sSRQ%+.mn&B"SM9YsTB@YS67?;+fW6;k+G?rt!u>Z`J!7[?Z6%Mp/C<d_K/`QOo2p*S;TcbYa/u4hM:K)AA]q8Sl>q;s=P(I;gT^[7p+.AHs\?c2/FJh2/&Xcq-_jQ+0Z%;5'26:3"-=Yc&Vdd\k8,%<tXo*S7!U7LqIthCgp).$6GLo,RRs]DV!%n=MW#-R)J%1KiV!D+DuRW"KS`6,dd_*p2Yo9q\7gE<m#C,5)I0D%LPsKK;u7/'YpPD%MRbo%AB!#ob=df;'XJVE11b,5]S2j.*1;5pIVmjJrP8eRS:lV)jJVC?k0id+o=t(RE4HW3Y42$RV;"8kHnBd6=r3SX[fdKe_eOhl%P3\4E:m>GROidG*@ToOg5*sjD`.b?(p/an48ob8TkHNtDft:hE8jU[S:2Hm\Z[>IjpF7H`GS3\t876-XICghBK]e(J6Vf*!843WT%YRuL=X=IAXj-'lOP:(Bp,[R@$'3;Juc^&,-/PhhkL-?*XA#pB-]/gBBZ<W5'9>YMG.9]KtKG\CKLQe.Z^rIt[13iDsMQ]1D>PBSa%fnV7SMiSAM`dMF,Q95\S&M`=j[UPO)>R*sX?ci165'2((,d@%Ugf,R+AXl97U*,YodRO$#*`"qP%,H:Ur!bRD!W'!jeI?-T,%X-b%7,U'?Z^2@U2Id<,>UtQu"k]:1N\n1`G7lCcd)"$ZSnnm`#.QDr&<]BB'E3tQDnZbM`km)KSZpZE8D_RroLr[f5\F+`On9Is0eNsK%*OtU1Q:9hrOd)Zpdfk)\qG9TR2YbHne$^F?_7"h4R[*!*"/\`MXE`.`bY(Q4GP>R%fCo1#r$\:G8"hSq+S'S.Ct>iM>sSXJOu*#g%Ur2`F$QlK1g5!m]b?rEOUrYf?D%[c^QqcR`R4.Cc@Oit@29!BDZ"99&'nKW%1i+)++[rUSh_8rZS7G).Ac)hI$&3k4.h@5?gZc,,%G7_\slA@(7]cB\QL:Y=%,dapMH&>%1Auft"?b^1XHS!A`o_PDpI:^ibm&dI%DcLE<Zk/7ATikW%Jt^'(g!>A[5uuV&V6c%i@GMDh%DY5Ih&%1mNNM.!9=YFP'B6hr9cuL)DhB-nR/@TQa!G^M:)`sA@:2/L2i?$$>;F%@'mih$"p;'?FS;iu=4<-r7L(R0rD][+ZLdu#C%HZ#""bVr0S0i\Sn@'q/@162bO:5BQ-W>LIb63@u@WRhGM<"6Oc6jMb'^e_N!JU59OLU_ZKXFAAP80YPH6p[g!I$5E3RZ_,ietF7A%Ou:B1EM77'-O^,@=N<+/Q,Z87_M"u<!)&`pQ%c_XdZI5,\O>u\YH2$18pVHpF@l;T$EE-P>aR]cS8pbchdWkVURpT3n;ckjnXdD8%3]L7+l[-+Shu%H)I;mh$XmDZss1;Fi5!Gj'C&Z+jWr&^=1T]<3T)CYE%jAG/^V$agmd5D`rr<09qa:~>%AI9_PrivateDataEnd