%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: orcon_3.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Lisa Tauxe
%%CreationDate: 8/9/10
%%BoundingBox: 0 0 367 274
%%HiResBoundingBox: 0 0 366.6152 273.4966
%%CropBox: 0 0 366.6152 273.4966
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 8490 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD4AFFA8A8FFFFA8A8FD05FFA8A87DFD05FF7DFFA8A8FFA87DA8FF%FFA8A8A8FD05FFA8A8FD05FFA8FD53FF52527D7DF8522752527D527D2727%52FF527D277DA8522752525227FF7D5227525252277D7D5227527D5227A8%7DFD52FFA87DFD04522752527DFD04527D527D7D5252A87D5252527D2752%A87D5252277D275252FF525227A8F87D7DA8A8FD52FF527D7D7D52A87DA8%A8A852A852A8A8FF7DA8A8FFA87D7DA87DA87DFFFD047DA8A87D7D7DA87D%A87DA8A8A87DFDFCFFFDE3FFA8FD07FFCAFD09FFA8FD59FFA8A8FFFFFFCA%CBA8FFA2FFA8CBFFFFFFCBCACBA8CBA8CBA8FFCBFFA2CAA1FD06FF7DA8A8%A8FFFFFFA8A87DA8FD50FFA852FD04FFA877A2A1A29BA2A2FFFFCB9BA8A2%A8A2A29BA2A2CAA8CAA8A2A2FD05FF527D527D527D527D527D277DFD4EFF%A87DFFFFCBA8FFFFFFA8FFA8CBA2A2A8CAA8CBA8CAA8FFCBFFA8524CA2A8%FD08FFA8A852527D7DA8FFA8A87D7DFD4DFF7D7DFD05FFA2FD06FFCAA8FF%A8FD09FF7DF8F82727527DA8A8FFFFFFA8FFFFFFA8FD48FFA8FFA8FFA8FF%A8FFA8FFFF7D7DFFA8FFA8FFAEFFA2FFA8FFA8FFAEFFAEFFA8FFA8FFA8FF%A8FFFFFF5227F827F827F82727A8FFFFA8FFA8FFCAFFA8FFA8FD40FFA87D%7DA87DA87DA87DA87DA87D527DA87DA87DA87DA87DA27DA87DA87DA87DA8%7DA87DA87DA8A8A87D7D5252F827F827F8F8277D7DA87DA87DA87DA87DA8%7DA8A17D52FD3CFF7D7DA8FD07FFA8FFA87DA8FD17FF7D7D525227525252%F827F82776FD0EFFA87DFD3BFFA87DA8FD04FFA8A87D7D7DA852527DCAFD%10FFA8A2525227272752527D7DFFFFFF27F8F84BA8FD0DFF7D7DA8FD3AFF%A8A1A8FD05FF7DA87DA87DA87D527DA89ACAFD0AFFA87D5252274B27777D%A8A8FD07FFA820277DFD0DFFA87DA8FD3BFF7D7DA8FFFFFFA8A87D7D7DA8%7DA852527DA87DA89AA78AFFA8A87D7D524B275252777DA8A8FD0CFF5227%FD0DFFA87D7DFD3BFFA27DFD05FFA8847DA87DA87DA8527D7DA87DA87D7D%4B342E4C2752527DA8FD13FF7DFD0CFFA87DA8FD3BFF7D7DA8FD05FFFD05%7DA87D8452527D52274C272727524B3484FD23FFA87D7DFD3BFFA87DA8FD%05FFA87DA87DA87DA87DA8FD052752527D7DCAA8CA9A8AFD22FF7DA8A8FD%3AFFA87D7DFD06FFA85277527D5277527D27272752527D527D527D6F7652%704B5F7DA87DA87DA87DA87DA87DA87DA87DFD04A87D277DA8FD08FFA87D%A8FD3BFF7DA8A8FD06FFA87DA87DA87DA87D7D277D7DA87DA87D7E7DA87D%A87D5F5899518ACBFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF52527DFD07%FFA87DA2FD3AFFA87D7DFD08FFA87D7D7DA8FD047D4B7D7DA87D7D7DA87D%A87DA87DA87D845F58348BFD19FFA87DA8FD3BFFA87DA8FD09FF7DA87DA8%7DA87D7D52A87D7D7DA87DA87DA87DA884A87DFD04A8A158AFFD16FFA87D%7DFD3BFFA87DA8FD0AFF7D847D7D7DA87D5252A8FD057DA87DA87DA87DA8%7DA87DA87E847D765FAFFD14FF7D7DA8FD3AFFA87D7DFD0BFFA8847DA87D%A87D7D52A87DA87DA87D7D7DA87DA87DA87DA8A8A87DA89A7DA8FF65FD12%FFA87DA8FD3BFF7D7DA8FD0CFFA87D7D7DA87D5252A87D7D7DA8FD077DA8%7DA87D7D7DA85276A8AFAEFF5FFD0FFF7D7D7DFD3BFFA87DFD0FFFA8A87D%A87D5252A87DA87DA87DA87DA87D7D7DA87DA87DA87D7E52A8FFFFFD048A%65FD0CFFA87DA8FD3CFFA8A8FD10FFA87DA87D527DA87DA8FD077D7EFD08%7D52A8FD06FF8A655FFD09FFA87D7DFD50FFA8A87D527DA87DA87DA8FD07%7DA8FD047D537D7DFD0AFF8A8AFD07FF7DA8A8FD2CFF52FD05FFA8A8A8FF%A8FFFFFFA8A8A8FF7DA8FFFFA87DA8FFA8FFFFFFA8FD07FF7D52FD067D52%FD097D525252A8FD0DFF8A84FFFFFFA8A87DA8FD2EFF527DA8527D527DA8%FD057D527D52A8527DA8FF52A17D7D527D527D27A8FD06FF7D7DA8FD0D7D%527D7DA8A8FD0CFFAFAEFFFF8AAFFF7D7DA8FD30FF7D7D527D52A87DA852%7D52FD047DA87D5252A8A8527D7D525252A852527DFD05FF7D7DFFFFA87D%527D527D527D527D527D7DA8A8FD0FFFAE8A8AAEA85F7DA8FD35FFA8FD05%FFA8FFA8FD05FFA8FFFFFF7DFFFFFFA8FFFFFFA8FD05FF7DA8FD06FFA8FF%A8FFA8FD19FF8358518AFD3BFFA8FD19FF76A8FD23FFA8527D7DA1758AFD%04FF7DA8A8FFFFA8FFFFA8FD11FFA8FFFFA8FD15FFA87DA8FFFFFFA8FFA8%FFA8FFA8FFA8FFCBFFA8FFA8FFA8FFA8FFFFFF76A8FFFFA8FFA8FFA8FFA8%FD19FFA87D52A8A1C3A1C37C8BFFFFA852A2FF7DA87DA852A8FFA87DA87D%A87DA87DA8A8A8FFFF7DFFA87DA8A852A8FFFF7DA87DA87DA87DFD04A8FD%07FFA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A87D27%7D7DA87DA87DA87DA87DA8527D527D527D527D527D5252527D527D527D52%7D527D527D527D7DA87DA8A17C7CBC76AFFFA852A85252527D52527DFF27%52527D527D5276522752FF7D52A8FF5252527D52A8A85252527D527D5252%52F87DFD21FF7DFD0DFFFD097DA8527D7DA87D847DA87D7D7DA87DA87DA8%7DA87DA88483587C3AAFCBFFFFA87DA8A8A87DFFFFA87DA8FFA8FFA8A8FF%7DFFFFFFA8FFFFA87DA87DA1FFFF7DA1A8FFA8FF7DFD04A8FD16FFA8FFA8%FD06FFA852FD0EFFA8527D7D7D52FD057D59FD077D527D7D847D7E7DA87D%A87DA8A1A87D7C3AFD15FFA8FD2CFFA87D52FD06FFA87DFD11FFFD077DA8%527D7DA87D7D7DA87D7E52A87DA87DA87DA87DA8A8A8A1A8A29A5FFD06FF%A8A8FF7DA8A8FD06FFA8A8FD07FFA8FF7D7DFFFF7DA8FFFFA87D7DA8A8FD%18FF7DFD05FF524B7DFD12FFA8527D59FD0F7D52FD047DA87DA87DA87DA8%9AA19A9A5FFD05FF7DA8527D7D76527D527D52A84BFD057D27FFA8527D52%A8FF7DFD04527D7D7DA87DFD17FF7D527DFFFFFFA827F8A8FD13FFA8FD06%7D52FD087DA87D7D7DA87DA87DA87DA87DA8A8A8A183757684FD04FF7DA8%7D7DA852FFFD047DA8A8A87D527D7D7DA8A852A87DFFFF7D527DA8FF7DA8%7DFF7DFD18FFA8A8FFFFFF5227A8A8FD14FF7D527D527D7D5252FD0B7D52%FD047DA87DA87DA87DA87D84583465FFFFFF7DA8A8FFA8FFFFFFA8FFA8FF%A8FFFFFFA8FD0AFFA8A8FFFFFFA8FF7DA8FD1DFFA8FD18FFFD057D52FD04%7D7E7D7D7DA87DA87DA87DA87DA87DA87DA8A8A87DA8A8A89A588AFD5CFF%A87D527D7D5252FD0D7D537D7DA87DA87DA87DA87DA8A1A89A5FAEFD5CFF%A87D7D7D52FD0A7DA8FD057DA87DA87DA87DA87EA8A1C39AA19383AFFD5C%FFA87D527D527D52FD0D7D527D7DA87DA27DA87DA87DA158766F5FFD5DFF%A87D52FD0A7DA87D7E7DA87D7D7DA87DA87DA87DA87DA8A8A883835866FD%5DFF7D52527D59FD107DA87D7E7DA87DA87DA87DA87EA1518AFD5DFFFD0D%7D7E7D7D7DA87D7D7DA87DA87DA87DA87DA8A8A884C3768BFD5CFFA8527D%7D7D52FD107DA87D7D7DA87DA87DA87DA87DBC588BFD5BFF7DFFFD0B7DA8%7D7D7DA87DA87D7D7DA87DA87DA87DA8A8A8A2A8A8BC58AFFD5AFF7DA8FF%7D7D59FD127D847DA87DA87DA87DA87DA8A19A58FD5AFF7DFFFFFFFD0F7D%A87DA87D7D7DA87DA87DA87DA8A8A87DA8A19A5FFD59FFA8A8FFFFA8527D%527D7D7D52FD107DA87DA87DA87DA87DA87D7D5FFD58FF7DFD04FFA8FD0D%7DA87DA87DA87D7D7DA87DA87DA884A87DA8A8A87DAFFD58FFA8A8FD04FF%A8527D7D7D59FD0C7DA87D7D7DA87DA87DA87DA87DA87DA8A8FD58FF7DFD%06FFA852FD0C7D847D7D7DA87D7D7DA87DA87DA87EA87DA87EFD59FF7DA8%FD05FFA87D527D7D7D52FD107DA87D7E7DA87DA87DA8FD59FF7DFD07FFA8%FD0C7DA87D7E7DA87DA87D7D7DA87DA87DA87DA8A8FD59FF7DA8FD07FFA8%7D7D7D59FD127D7E7DA87DA87DFD5AFF7DFD09FFA8FD107DA87DA87D7D7D%A87DA87DFD5BFFA8A8FD09FFFD047D527D7D7D53FD0B7D52FD047DFD5CFF%7DFD0BFFA8FD0A7D7E7D7D7DA87DA87DA87D7D7DFD5DFFA8A8FD0BFF7D7D%59FD127DA8FD5DFF7DFD0DFFFD0F7DA87D7DA8FF7DFD08FFA8A8A8FD52FF%7DA8FD0DFF7D7D527D7D7D52FD077D537DA8FFFFFF7DA8FD06FFA8527DFD%52FF7DFD0FFFFD0D7DA8FD06FF52FD06FFA852A8FD52FF7DA8FD0EFFA852%7D7D7D527D7D7D527DA8FD09FF52FD05FFA8FF7DFD52FF7DFD10FFA8FD07%7DA8FD08FFA2FFFFFF52FD59FFA8A8FD11FFA8A8A8FFA8FD09FFA2CBFFFF%FFA852FD58FF7DFD1FFFA2FD07FF52FD57FFA8A8FD1CFFCBA2FD08FFA852%FD56FF7DFD1CFFCBA2FD0AFFA87DFD55FF7DA8FD19FFA8A8A8FD0CFFA852%FD54FF7DFD19FFA8CBCBFD0EFFA87DFD53FF7DA8FD16FFCAA2FD12FF7D27%FD52FF7DFD15FFA8CBCAFD13FFA8277DFD51FFA8A8FD11FFA8CAA2CBFD16%FFA87DA8FD50FF7DFD0FFFCACBA8FD6DFFA8A8FD09FFA8CBA2CAA2CBCBFD%04FFA8A2FFFFFFA8CBFFA8CBFFFFFFA2CBCBFD5AFF7DFD05FFCACBA8CBA8%CBA8FD09FFA1CBA8C4A2CBA2CAA2FFFFFFA2CAA2C4A2FD59FF7DA8FFFFFF%CBFFA8FFA8FD0CFFCACAA8A1A2A2A8A1A2A8FFA8A2A2CA9BA2A8FD58FF27%7DFD1CFFCBCBA2FD04FFCBCBFD59FF277DFD7EFF7DFD9AFFA8A87DFFA8FF%FFA8A8FFA8FD75FFA852277DA8527D277D527D7DFD74FF7D7D525252F827%7D27277D7DFD74FFA87DA8A8A87DA87DA87DA8A8FD54FFA87DA8FFFFFFA8%FFA8FD21FFA8FD54FFA87D527D527D527D527DFD76FFA8527D527D77527D%A87DFDFCFFFD46FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2010-08-09T17:37:40-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-08-09T17:37:40-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-08-09T17:37:40-07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>192</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAwAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXnP5sa55i0y/0dNIN6DNBeNEun0aR7tZbSONWQw3fNEtprmUj0&#xA;JCAnIIWUYqwO+8z/AJv6nd+Xiv6dsLiOHRJ9Y01NLkS0mupriE3YW4S1Bjjhh5NOkk9CW48QEaqq&#xA;6HXv+chF0MTq19cajJbemsM2nW8fGaXQBqPqkCBPji1Em1UH4f2GBffFW/MWo/m3q1zYXVrPr1hb&#xA;3V5ew2sdrZPDSFfMNp9VNzGYC0Q/RnqNyl48lWhJDOrqsh1bzB+bkPlLTHtorw6sH1iGaWOxSSae&#xA;4tLlotKW4i9LhFBdxpylmVUUbEFQcVXWbfmHp3l69vZ7rV2vNQ8zXcd/OIfrlxZ6TFLNDbvYWhhd&#xA;Cj+lDusJqHZ/kqwOW4/PaXyXCHbXRe28HoRRJFMlxv5ZaZpHdFE8jnUX48nY0kAUUbFWU+ZL780o&#xA;Py8+r2p1iG8uT5mElzaW8lzf+st3P+iYQDHNJFDLGfhlQLxUJxZajFUNY6t+d9rb+YHgiv5Ba8ns&#xA;YbqEtz9fW7uGWSN5ILmVjDp8cbxxxqwpxYRvXiyrcus/m1eeWNRGp32r22sQzWD6eukaZMIpdOF1&#xA;atcXJkmsI5jdrGZleApHy47QlTiqCfX/AM87Hy7rqWaaq2uWtzqI0C0ksfrENxZCedvrE1xJBIRP&#xA;GKC3i9QB1CURw2yrNPL+q+dU8xaVY6zdXMtwusXlqDPGsH1nSv0Ql205jiSKJ/Rv2SFXC7VK9eWK&#xA;vUMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVWvNEjojuqvKSI1JAL&#xA;EDkQo77CuKaXYoWSzQxBTK6xhmVFLECrMaKor3J2GKQCV+KHYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FVC/v7LT7Oa9vp0trS3UvNPKwREUd2Y7Yqx/T5Ne1u+i1eUTabo&#xA;ltyfT9MNYrm7YqVEt2DQxx71jh69GkofgVSjr/ULma0uLAxS6dfXUUkVlPIw9MzMhCUliL8WB33o&#xA;fCuTA6826EACD9QHNKB5X8zwJKkOpyXEcjfEk13cKzKsnJQJQrtESpPIoOwHynxx7m7x8Z5ivgPw&#xA;UPpaeaLPW4hci61AWtvxuPSeYRuwjijCr9a+r27HlzfmGLHetKUJlwkdzLJ4cobULPl591lM7638&#xA;yalfWl1bxSWEFu8Zkt7i4ERbjKru3G1NwkoeMFOMjCnWmRBiA1RMIgg735frqvgg08teaDaSIL02&#xA;00kkjArf3c4VGThGqtKnIcevep38ADxx/AZ+Pjvlf+aAxL8wPM+vflzZw6ldx32p6VPKVluIrh5R&#xA;C9bhIlkMhDKrxSxnYU5p4kEvHE9F8bHLmK+A8v2/NKNJ/NX8sNbJLeY2sbu4awMwvZLuEj6uwaYh&#xA;2BhVjx+Bg1R/k4PE/So1AHT+d0HXk9d8qalY3mj262+qW+rNEgV7q2nW5VqfZJcEkmlKk5XIgnZx&#xA;chBkSOSVec/LusarrWhXemSG2m0w3cqX3IcI5XjVY1li5KZI5N1cDt4GhwMGIadp35yWS+naW31C&#xA;GWbULsWsUljPAst1eXc7LM8v70jjJCbf0gBUn1QBtilNbvyr+Yky2L3ev3l7ytL36/aRrY28PqSw&#xA;L6UEiqn7z95yUOG2FNwasyqefl1p3m3TNKl07zDM1yLb6uun3DiAN6X1OH1Y6QBRSK4EiqWHIrTd&#xA;uuKGV4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUp1bzNp+nTrZKsl9qsi8otMtFElwwPRmBKpEm&#xA;325WVO1a4qhY7DzZqBNxfakdGQj91Y6esEzKK9Zp7qKUO1OyRqF8W64qlt9cwWRKy+cdReQdY4ot&#xA;NkNfD4bKg+k4qkmoec7DT4DPc+ZNbWIEItINKZndjRURBa8mZj0A3xVU0Hy7qnmsQ6xrHmG94Wsw&#xA;m0zSgunsbYgDi92PqvpSTgjkvw0j/ZLH4yqy3/D2r/8AUz6n/wAi9N/7I8VUbzypqV1bvBL5k1F1&#xA;ahAaPTqclIZT8NojbMAdmB8DhBos4S4Taqvl7WeI5eZ9S5U+KkWm0r3p/oeBipXel3VnCZrzzdfW&#xA;0I6yzDS41H+yazAxQxHVvzG8haUSLv8AM2VmWvJbYabdMCOoIt7KU1xSkw/Nb68KeXH846+WB4TW&#xA;um6ekFR/NLLaJx+fHFUJq0X55+aNMudNXRprPTLyIxynW7vSpFdGG/KG3slkSnzqOuKvlOSxlOot&#xA;Y2xF5L6phhNsGkErcuK+kKBmDfs7VxS97/Kz/nGDXLsR6v5su59EiI5QWFo4S933Bkchli/1aFvH&#xA;jii30La+VdStraK2h8zaoIoUWOMMunu3FRQVZ7RmY+5NcUKn+HtX/wCpn1P/AJF6b/2R4qgNXjbS&#xA;Io5L/wA3alG0zcLaBYtOkmmeleEMSWTSSN/kqCcVW+XbPzlNqkd9e6jdw6Oitx06+Sxa5nLLRWk+&#xA;qwRCAKdwodidq8d1xVluKuxV2KuxV2KuxV2KuxV2KuxV2KuxVA6vrulaRCkl/OIjK3CCJQ0ksr/y&#xA;RRIGkkb2VScVSnj5o10fEX8vaW3RVKPqUq+5/eQ2wPtzeneNsVXT3XlvylaNBawKk0p9RokJaaVz&#xA;t6k0rlnYn+dySffFWF6x5o1bVCVkk9K3PS3jqFp/ld2+nChjeqarb6fEhkDSzzEpa2sYrLK4FeKD&#xA;btuSdgNyQMUpCNU0Gzu/0n5h1azGoqCILb1lKWyHqsSV5M5/bk41PQUXbFW7P839E0/Ufr3l6S51&#xA;G/VfRnt7S2lkWaIk1RiyqOSk8kbsfYsMqnA3cebl4s48OWKf0ncHrGVfUPukOo8wGf6f+b3nnXYU&#xA;/wAM+Rpr5+AM093eQWSoalW5RScn2ZWHGv0nJRlbrMOSdnHlHDljVjyP0yF/wyG4+XRF+j/zkNqn&#xA;27ny/wCXoSTT0knvLgA+PP8AdGmScl3/ACqfzjqFD5h/MXWLiv249LWLS1IPakQfbFVa0/5x9/LG&#xA;OUXF9YT6xdDrc6jdTzsfmOaof+BxW2X6T5M8o6OVOlaJY2LKah7e2ijavjyVQ1cUJxiqUebtP1fU&#xA;vLOpadpEyW2oXsDW8NzKWCxCX4Hk+EE8kRiyjuadOuKsZ/Lb8mPJ3kOFZbGH65rDLxm1a5AMpr1E&#xA;a/ZiX2XfxJxW2e4qh9Q1Gw060kvL+4jtbWIVknmYIgrsNz4npiqSfpTzDrXw6PAdK09uuq30Z9Zx&#xA;Xrb2jcWFR0ebjQ/7rYYqj9I8t6bpkj3KB7rUZVC3GpXTercyKDXiZD9lATUIgCDsoxVNMVdirsVd&#xA;irsVdirsVdirsVdirsVUL6+srC1ku72eO2tYRylnmYIijxLNQDFUj/S+v618OiW506wJodXv42Du&#xA;vjbWjcXNezy8R3CuMVR2keWtN0yZ7pfUu9TmXjcandN6tzIOvHlQBErv6caqg7KMVQXm/wAzfou2&#xA;NtaOBqMyng1A3pA7ByDsT4A4q8lntdbnlaabWJZJXNXdooSSf+Bwqlmp3Or2ckdpa331zUZwWgtG&#xA;hStAaGSR1KiOJe7EewqaDFUlvvyuGrXr3+tak17dygCReDxwqB0RESVaKP7TvgW0fYfl1ptkR9Vh&#xA;sQ4+y8lksrD/AGTyM344VtkK6Z5lVYlttUtLZIq/u47FuDA9mDXB/wCFpkJRJ5Gm7FljEEGIlffd&#xA;j3UR9thDWt9580DWF1OM2skLMPrIt4JSpBFGkKGevRVDD9oAftKpGPLijLir8d7i58sM2KIyXiz4&#xA;r4JcJnA3/kzOB4uCXO544iJ9VvV9EvvNWsWEd7aazpbRts6fo6clHHVSRf0/r1zJjK2nR6yGohxx&#xA;9x8j1G23xGx5jZH/AFPzv/1dtM/7htx/2X4XKd9T87/9XbTP+4bcf9l+KuEfncChuNMY/wA3oXAr&#xA;9HrGn34qgtbj/Mg6LfjTLjTf0l9Wm+o8YpAfX9M+lQySNH9un2hTx2xVU8kr+Yi2Cjzk2mNdcRvp&#xA;wmB/2fqfDy8eIp4YqySSRI0aSRgkaAs7saAAbkknFWO/4mvdW/d+V7dbqE7HWrnktiBv8UNKPdEf&#xA;8V0Q/wC/AcVRGn+VbaK6TUdTnfVtWj3ju7mnCEkUP1aEfu4fCqjmR9pmxVO8VdirsVdirsVdirsV&#xA;dirsVdirsVcSACSaAbknFWOP5puNSZoPK9suoUJV9VlJj0+M7g8ZAC1wQf2YaiuzOpxVXsfKsIu4&#xA;9R1i4fV9UiPOGacBYYG/5drcVjiIrTn8UlNi5xVPMVUL+8js7Ke6k3WFGcjxoNh9OKvH7y7nvLqW&#xA;5nblLKxZz/AewwoSTUNWm+tHTdMRZ9SIDSlq+lbo3SSYinX9lB8TewqwUq+laTDp6SNzae8uCHu7&#xA;ySnqSuBQE02Cj9lRsvbFXSOLB2kJ/wBEcs8xZiTGx3qK/sE9fD5YoRsUgO46HFKJWZUUszBVUVLH&#xA;YADFUPqWtpaWZmSNpQ/AQMnFvUaQ0VY15K0jHsq7ntgka6W2YoCRoyEfM3+gFkvkLy55i0z69rBP&#xA;o/WGTh5f5hmSJQzPz+IxxSuX5qg+z0LfEeNUYCNkOFrskpyGXHRyQHDKucwOXF/TiPpJ9x2NjoVn&#xA;d295bJcW784pBUHoQRsQQdwQdiD0OWgtmDPHLATibifx8x1HQq2La7FXYqkF35rWS4ksdBtjrF/E&#xA;xjmMbenaQOOq3F1RlVh3RA7/AOTTfFVsflR7+VbnzLcjVJFYPFp6r6enxEGqkQEt6rr/ADylt91C&#xA;dMVZCAAKDpirsVdirsVdirsVdirsVQsuqWMWp22mSS8b67hmuLeGjfFFbNGsrcgOI4m4TYmprt0O&#xA;KorFVOG4jm9TgHHpuY25o8dSvUrzC8l8GGxxVUxVDJqNrLJNFbSLczW7+lOkbBvTk4huMhH2G4uD&#xA;Q70PTFUobTdI8ySySXlxJfWlpM9tLpp5JaCaI8XEsfFPXof9+ck7gYqm1tf2El5cadA4+sWKxGeE&#xA;KVCLKCY6GgU1CnpiqKxV2KoPWbA6hpdzZqwVpUojHpyBqK/SMVeDapqN0+oXGjWDrBdWzmLUL1+J&#xA;S2YVBRAfhkm9vsr1bsrFVewh0vTLb6vbtUEl5HJLySSN9p5H3LM3cnFV76gW2jFB4nriqwPyry3r&#xA;1riqDbUotNmMMsgW2IDCV+KpByB4qxqPhJQ08PlTFU/0XQPM2tlXsrRkiK8W1G9WS3taE7tHAT6s&#xA;p8NuJ/nGKvRvLXkPS9GmW+ndtS1ihH1+cD92D9pbeMfDCp9viI+0zYFTq60qwupPVliAnAoLiMmO&#xA;UDwEiFXH34CA42bR4sh4pD1fzhtL/TCj9qXCzutGmlvUnlu7GU8ryB1DSJ/xcnBRyoPtLSpG9SRv&#xA;GqcDwJ6WRyCUp4z9QPMf0hQ38xVkb2SNztHSRFdGDIwDKymoIO4IIybt4yBFjcFKNU8z2FldfUIE&#xA;k1HVyoYabaAPKFb7LyklUhQ/zysoPapxShP0FrGsjn5iuRBaN/0pbB2WIg/s3NxRJZ/dVCJ2Kt1x&#xA;VPrW1tbS3jtrWFLe2hUJFBEoREUdFVVAAHyxVVxV2KuxV2KuxV2KuxV2KuxVh/nr8urXzbeWN1Pc&#xA;LDJp1vdRWZaH1fTuLiS3kS4FXTeP6qQB/lVqKYqkj/knp1zqc9zqV4l5aXN6bu4tTblGuI2+t/Bd&#xA;SCU+rIv13isnFaIgXj3xTapqP5U2j3umus1hLb2Goy6itrd6cbqZhIylIkn+sRvGqcRv0ZgCwIHE&#xA;qpTH+QUMtg1vd6mnIJN6LJa8f37wCGK7nAmPqXKsokkeo5sARxoDitpl5i/JHS9St9Ui0+Sz086r&#xA;eSXcytYLLFxks/qoV0SWDm8UheeJy1FkYniTuVbRfmXyBqM/k2fRbZoNRuL3WLS/m+sQj6uI/r0M&#xA;0/qQtKvqRpGjFkEgLD4RucVSrVfyNkvdKSwTWYgBbx25W4sjPCpjgkhEscIuIwrx+rWE1Pp+/XFb&#xA;XX35F2tzbXaLqMQl1C5e71FZLV2gunN7NdIlxGlxE7IiXHpqBIN1DV6gq29F0PTTpejWOmmX1zZQ&#xA;RweqEWMN6ahdkXZRtsOw7nFCQzanfea5JLLQrh7TQkYx32vRGkkxH2odPb8HuOi9Eq1WRV2tflvo&#xA;N7pcFlYINLa0j9K0khQMFXlyIZCRzqSxqTWpJrirFz+TWsrUrr1s9OiGxdK/7L6y9P8AgcVXJ+Tu&#xA;tbE69bJ4oLGRqf7L60tf+BxVMrT8n7EcWvdYvJyPtRwiGCNvn8Ekg+iTFWRaP5E8o6ROtzZabF9c&#xA;T7F5OWuLhf8AVmnMkij2DYqn2KuxV2KsT8y+ZNN8tbnVXN3NU2+kshvJJSNyI0Uif6S/FfDI0ejh&#xA;S02SJvHM+6XqH6Jf7IgdzFdH8z6lqWqjR795fLml3ZaaGCB1NweRHKIXA5CFOVeQj+JeQ4sq5WJ1&#xA;KiwwYMungZyAGAyrY8XBI8ugqEzdbVE7XVV0vS9I0zSrX6rp1sltByLsqDdnbdndj8Tux3ZmJJ75&#xA;c7BZYa7omotw0/ULa8b958ME0cp/dMEk2Qn7DMFbwOxxVEfXbP1J4/Xj9S2UPcpzXlGrAlS4r8II&#xA;BpXFVSGaKaJJoXWWGVQ8ciEMrKwqGUjYgjFV2KuxV2KqbXVslxHbPKi3MyvJFAWAd0jKh2VepCl1&#xA;qR0qPHFXR3VtJNLBHKjzwcfXiVgXTmKrzUbryG4riqpirsVdirsVQ+oWsl3ZzW0V1LZPKvFbq39P&#xA;1Ur3T1UlSvzU4qkOneS7vT4fStvMuq0Jq0kv1CaVj4vLLaPI30tiqK/w9q//AFM+p/8AIvTf+yPF&#xA;Xf4e1f8A6mfU/wDkXpv/AGR4q7/D2r/9TPqf/IvTf+yPFXf4e1f/AKmfU/8AkXpv/ZHiqyfRdQt4&#xA;JJ5/NeoRQRKXlldNMVERRVmZjZ0AA3JOKsZtdH8x+bObDzFqtt5TdaRSMlnBdXxDAiRClrG0Vsab&#xA;ct5R2CfbVZNB5X1C3gjgg8x6hFBEoSKJIdMVERRRVVRZUAA2AGKr/wDD2r/9TPqf/IvTf+yPFUp8&#xA;y6R50tNOa50fzFe3E0XxSwSw6ezMnf0+FqvxDw7/AK1Xnn+OfPX/AFfp/wDkRZf9k+Krl87+eD/0&#xA;vp/+RFj/ANk+KrYvPPnl7yWA69PwSONwfQsa1dnB/wCPf/IGKotfN3nQ/wDS/uP+RFj/ANk+KrV8&#xA;4+dVufSm164WN6ejKIbCjMeqEG2+14eOFUTJrvm64iMbeY7xFYUJjisVP/BC2qPoxVB2ejadCko4&#xA;NLNcU+s3UrM88hBqC0pPPY9BWg7UwSiCKLPHllCQlHmFHUdDvpouFtdlkVg8KT1do2X9pJftk9vi&#xA;JFNjtmPkwyI2Pzbv5QnGZJxY5wkOGUR6OIHmD9UCPIQhvvxA7s08meaJtTsJfLWtO0GqegY0ljke&#xA;JmV1KjhLGVdW/ldTy9+QqTimfplzdRDKMWTgrIMUv7szG/8AUlKNxMo+R3jRNHmBH5becrLynpmj&#xA;aPrL2slppdtaXai+u1Elyk0L3BhmKyvArxxuiOqVQGioBl7noa9/LXz7Lp0sa6jHLLcQxQ3MR1G+&#xA;t2lEcE8SGa9jjaeT0mlRjVQJaHkFHw4qnXmbyl52uNP8vW2h30dsNMt1jvIRe3VkhmQwcJA9vE7T&#xA;IqRyp6bhVPOp3GKFG0/LbzGfqH13zNqe/qvq3o6jcCsg/uPq/JdlG3NW2NOhq1VUtm/Lv80ZbG4j&#xA;j80PaXc1yCZkvLuYNAY51lkUOgEDyNJEViQFI+FVJJxSym68p+Yb3yhYaZNq/paxE4uL2+El/wAW&#xA;kfm0iI1pd6dP6YaSiBpOIUD4dhRQpedvKnmPVZbC40a7SCeztZraVjPNavIJrmzkdFnjSeSISQ2s&#xA;qGQVdSwIr1xVIPLH5fefdO1+y1G81CPYwHUp01K9uDKkEMkRha3lijinL8oz60rc1psMUojXfJf5&#xA;jX3mS9urXWPQ0y5dREU1C8hZIBNaSemtrHF6MbIlvOvqB+T+pRqDFV9z+XHmiOPUzZeZNRkflAml&#xA;RXGpXQV7ZUgFxHcOqs0cknpSBZowWXly+1XFUKv5f/mZ9f0xh5pdNPhW3GoW/wBZuZHcAsLhUkYc&#xA;mKxrGI3JBZuTPvir1DFDsVdirsVdirzr8w/LMOueY7H695MOu6Zbwq89/Aumm4ldXYx2vqXdxbTR&#xA;woSZG4H4yadOQZSzPXNe0vy/oF1rOpuLXT7CH1Zq8agAUEagGhZmoqgHc0AxQ8o/LC8/MPz3eXVz&#xA;560q4g8q+tJe6TbTCOGJ2ZwYoJ4iFlnijU8oyV4E1Lcjx4qXtOKHYq7FXYq8y/MXyUYWk1rTY/3L&#xA;HlewKPsH/figfsn9rw69K0VefA0xQowP/uUuP+MEH/E5cKUyR8VVGSKaMxyKHQ0qD7GoP34qvtLi&#xA;WOQW87F5CCY5aUDqD0NNuQ7+PUd6KpnHJiqJR6jrT3xVJtVsdbHpXFsy3FzbHlBcKPRmToSGK1Vw&#xA;1Oihex6jMTLCfTevh+Psc6er0pgceTHk8LJ9QiRKq+mUbMZRMeYIM5dKIL03yH5zTXbEQXim31e3&#xA;HG4t5KB2p+1QbfOmW4snFz5ulxaiIyHCZichuJUY8cekuGQjKJ/nRI2PkQt8+NIL3y4rlBatfsQZ&#xA;qiD64ttK1iJqfs/WApX/AIsCU+KmWuYweLQ/zcEV7qcdtO+vMRJDPf8A6IdxNFpF1ChgEJMUaC8m&#xA;VUOzlGo/wl8UsguLP83rLzJaQ2+oNqukRoWadorCCKV3lmJW76Tp6URiVPq6fGQeRWuyq/TtJ/MC&#xA;8by3c3+o6taTW17I+uQSHSkieM2j/ZS2WXnAZ+KIrMZAGLH4grqoSe0svzstrE21sBavFpsaW0aJ&#xA;pi2iz/V4q8UTi4mW59Wo/ufTpT4sUsh1CP8AMmDyeILeWe61uK/ljku4RYLdy2Ank9GSNZglmJDH&#xA;6fIOo25bcqYod5V8qeYY/OV15j8wzme7bTLGzhIW1MSycWe7WErELhEE24HMBuW/LivFVj66R+bU&#xA;/mSW8aS5tpWKWhvz+jGt4rZ74vKbOMcpCotgh/0hS/IfRilvVPJXne5vpXuY01CRS6fpBEtbU3FU&#xA;0ces6Iynk72U5+KpUKFrx4YqzDyLQSeYUtSDo6atKNL4/Y4mCFrkJ24i9M/TvXFDKMVdirsVdirs&#xA;VdiqnPb29wgSeJJUVlkVXUMA6MGRgD3VgCD2OKqmKuxV2KuxV2KtMqspVgCpFCDuCDiryHz75MbR&#xA;7g39ktdMnb7I/wB0uf2T/kn9k/R4VVYNEaapcf8AGCD/AInLiqPR8KohHxVfLFHPEYpK8TQgg0II&#xA;NQQR0IOKqlpduJPq9yVE25iI6SIKfEPcV+IfwxVM45MVRKyNxPEAtT4QTQE+5ocSmNXvySLUb24s&#xA;7uDUxbtaalbFCrCksMvE8goYCtVO6l1Xw6HMPLKjZFH7C5efBpcsRgnlhRPFjlL0yxz6EcXpN7CU&#xA;IykZDpYD2Dyh5r0/zJpMd7aupkAAnjX9lvkd6Gnf5dRl+PIJCw4HDkxzlizR4M0PqH3Sj3xlziU7&#xA;yxm7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVO5toLq3kt7hBJBKpSRD0&#xA;KnY4q8G81+XG0LzXeWqMZbZra2lhehqEkkuAquenKsbfOlcVS5TTFVZHwqiEfFV8sYmj48ijdUkW&#xA;nJW/mFcVV7O7dmaKUcZo+p6Bx/Ovt+rFUwjkxVEqwYUIqD1BxYkAijyQay3fl/Uo9a0sERJte2qD&#xA;Z49uTBR7D4gBXuNxQ484cJ4h8WGLsvFkoY/3eaP0b1A/7XKPKIl0kAKlz25db0XWbHWNPivrNw8U&#xA;g3FQSrd1NMtjIEWFxZeMHYxlE1KJ5xkOYPmjsk2uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxVitzpVnqvm3XbK8TnDLpWmbj7Sn6xqFGU9iMVeX+Y/L17oWovaXA5IfignAos&#xA;idiPfxHbFUsVqYqrI+FUQj4q3LCswVhRZo6mGWleLEU9qg9xiqJsrsyVilotxGB6qCtN+jLXqpxV&#xA;MY5MVRKNUb4oWeX7u+8t6w09ovqaRcitzaA04NWtUHTuSPA7dD8NAgYnbknXS44jOP7+NCQ/1WHT&#xA;/kpDof4hseVvWbS6t7u2jubdxJBMoeNx3By0G2vFljOIlHcFVwtjsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdiqQ2X/Keax/2y9L/AOojUMVRPmTy7Z67pz2lx8Mgq1vOBVo38fke&#xA;474q8Q1XS7zS76WyvE4TxGhp0YdmU9we2KEOrYUqyPiqIR8VXSRmTgysUljNUYHb3VvFT3H8cVRN&#xA;jeestHX050p6sNQxUnpuOx7HFUwjkxVEKwIocUPUtLgeDTbWFxxeOJFdfAhRUYEonFXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUhsv+U81j/tl6X/1EahiqfYqx7zl5Sg1+xql&#xA;I9RgBNtMeh7+m/8Akn8Pvqq8Wubee2uJLedDHNExSRG6hhsRiharYUq6PiqIR8VdJEzMs0LCO4Wg&#xA;5kV5JWpRu9D+GKo2zu1nj5gMhBKsjCjKw6g4qzPyboUl3MuoXCkWsJrDXb1HB7f5Kn8fpxVnuBXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkNl/ynmsf9svS/wDqI1DFU+xV&#xA;2KsO8/eTF1e3OoWS01OBfiQf7uQfs/6w/ZP0eFFXkRDKxBBDA0IPUEYoXo2FKuj4qiI2JIA3J6DF&#xA;WUWHkHW5IG1X0EF1GF9LT53aL6zGGDNG7LX0iV5BGIqG6inVV6NouqabqVl6unsPShd7eSGnBoZY&#xA;TweF0/ZZCKU+7bAqOxVj+n+ddMv9bbQ4YLldUgaUXtu6KDbRxU4SynkV4T8h6JUnl4fC/FVkGKux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIbL/lPNY/7Zel/9RGoYqn2KuxV2KsC&#xA;89fl/JfzHUtHjX605/0q2qFEh/nWtBy/m8evXqqwlfJXmsvxGmzV6bgAfeTTFU80r8r9fuCGvXjs&#xA;Y+4JEsn/AAKHj/w2FWd6H5O0TR+MkMXrXS/8fM3xOD/kj7K/QK4FTDUdSW0EccaGe8nJW2tlNC5H&#xA;Uk78UX9pu3uaAyAtnCF+5Jtc0i+sNRfzJoMRlvmVV1XTAwVb+GMUUivwrcxL/duaBh8DGnFkiwTr&#xA;SdVsNW0+HULGX1bacEq1CrAqSrI6mjI6MCrK26kEHfFUq07yVpWn6ydagmuDqkvqi/undS12spBV&#xA;JxxoVh4gQhQvAbDYsCqyDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkNl/yn&#xA;msf9svS/+ojUMVT7FXYq7FXYq7FXYql11qx9drPT0F1fLtIK0ihr3mcV4+yj4j4U3yQj1LbHHtct&#xA;h+OSpp+mi2Z55pDcX0wAnuWFKgEkIi78EWuy/fU74k2xnO9hsEbkWDFdX06/0HUZvMWhwG4trgh/&#xA;MGjxglpwoA+t2y9PrMaj4lH96op9oLirItO1Gx1Kxgv7CdbmzuUEkE8ZqrK24IxVEYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUhsv8AlPNY/wC2Xpf/AFEahiqfYq7FXYq7FUvl&#xA;12xEjQ2vK+uFNDDaj1OJ8Heojj/2bDJcJbBiPM7DzWG11S+H+mS/Urc/8e1sx9QjwefYj5Rgf6xx&#xA;sDknijHlufP9X60dbWttawrBbxrFCv2UQADfc9PHATbXKRJsquBDsVdirzfzFJ5q8pecrPUdHsOf&#xA;kfUJfU8yrCRI0E8nJWulhC840qVkmKFg1CxCnkWUvSAQQCDUHcEYodirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdiqQ2X/Keax/2y9L/6iNQxVOriYwwtIInmK0pHGAWNTTapUfjhCYiy&#xA;gjqGquaQ6W6HxuZoUX74mnP4YaHe2cEesvlf7GvT8wzD45razB6rEj3D/RI5iX74zjstwHefs/Hz&#xA;d+gbaTe+mmvz3W4f92fnDGI4T9KY8Xcvikctvx381uv3M2leXL650+KNZLS3d4Y/sIvEVqAFbp1A&#xA;pv0264YC5C1wxE5gS6lI77zXqGit9Xu4hdXKiFHkluI4oeTI7sfUEEXxHjQDj8XYDvMYxJyI6cT3&#xA;Gw937VLUvOV9bLcQoY0kknZbeedxFxSsShI0KH1ZB6hPFqbYRjBTDTA0fL9fyZLrmq/ouw+tcFes&#xA;iR1lk9KJObBecsnF+CDueJyqMbLi4sfGaYrF58u7a1gnnSK4aeONuclwkMAL/Wn+FlhYk8bcIK/a&#xA;NKAGtbfCv8e5zDpASQNvhv8Aw+fmzeCX1YY5eJT1FDcG2IqK0PvlBcAiivxQ7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwjTfI01t+ber+bTLIbO7022hihLkx/WObrLRK0HCOJ&#xA;D/z0b3xVm+KuxV2KuxV2KuxVCJqukT3r6dHeW8t6gf1bNZEaUCPh6nKMHlRfWj5bbcl8RiqHXTPL&#xA;WjRzaitpZabHbxO9xeCOKBY4lHJ2eSi8UAWpJNMkZE8y2SyzkKJJV7s6W01hNcyRiQTH9Hs0nHnM&#xA;8TiiCo5kxF9t9qntgBYiRAI70ZgYuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2Koa31KyuLy7s4ZedzYlFuo6EcDKgdBUihqprtiqJxV2KuxV2KuxV2KuxV45qH5SeZNS1uHUgbe2&#xA;uNM1C+uLS7lc+q4utetNTSaIxCQrSxiltfiINdqcGqFWN3v/ADj/AOf7t9be4m0We31S0mgi0rk8&#xA;NlFeTxzR/pFI4rNeMsfJCgb1H3blKSFJVT/Tvyh81abr82oTXJv2u9UtLhbqO5iVY7aHUo74+rbt&#xA;axSkxQQm1jJupTxcgIiEgKvaMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqH1&#xA;G0+u6fc2fqvB9ZieH1ozR09RSvJD2Za1GKvLk/If/RDbvqdnGj3IneK1030IVpbR2/qxR/WX4XQ9&#xA;Lms9TxdmPE1xTasv5EWvrai0utTSwXyMkds8Z4Qg3AkThSQGq26+jtSu7ddsVtnvlby/D5f0ZNJg&#xA;cNbwzXL26qnprHFPcSTRwqoLCkSSCMU8Og6BQm2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</stRef:instanceID>
            <stRef:documentID>xmp.did:FB7F1174072068118DBBC16639B0EF74</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:24:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:37:40-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:FC7F1174072068118DBBC16639B0EF74</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:FC7F1174072068118DBBC16639B0EF74</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>386.725586</stDim:w>
            <stDim:h>315.044922</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -273.497 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 273.497 li
366.615 273.497 li
366.615 0 li
cp
clp
[1 0 0 1 0 0 ]ct
166.109 89.1746 mo
168.77 87.7909 li
168.309 86.9037 li
165.647 88.2873 li
166.109 89.1746 li
171.432 86.4072 mo
174.094 85.0236 li
173.633 84.1363 li
170.971 85.52 li
171.432 86.4072 li
176.756 83.6399 mo
179.418 82.2562 li
178.957 81.369 li
176.295 82.7527 li
176.756 83.6399 li
182.08 80.8726 mo
184.741 79.4889 li
184.28 78.6016 li
181.618 79.9853 li
182.08 80.8726 li
187.403 78.1053 mo
190.065 76.7216 li
189.604 75.8343 li
186.942 77.2179 li
187.403 78.1053 li
192.727 75.338 mo
195.389 73.9543 li
194.928 73.067 li
192.266 74.4506 li
192.727 75.338 li
198.051 72.5706 mo
200.713 71.187 li
200.251 70.2997 li
197.59 71.6833 li
198.051 72.5706 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.697627 .675227 .638575 .739559 cmyk
f
165.577 89.4829 mo
165.577 243.247 li
165.577 89.4829 li
.75021 .679683 .670222 .90164 cmyk
f
165.077 89.4829 mo
165.077 243.247 li
166.077 243.247 li
166.077 89.4829 li
165.077 89.4829 li
.697627 .675227 .638575 .739559 cmyk
f
166.602 245.609 mo
167.101 243.956 167.561 242.88 168.094 241.554 cv
163.049 241.554 li
163.274 242.029 164.041 243.956 164.54 245.609 cv
165.075 247.378 165.44 248.983 165.571 250.023 cv
165.702 248.983 166.067 247.378 166.602 245.609 cv
cp
f
329.148 38.2583 mo
143.876 38.2583 li
21.1489 106.924 li
329.148 38.2583 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
329.148 37.7583 mo
143.746 37.7583 li
20.9048 106.488 li
21.393 107.361 li
144.006 38.7583 li
329.148 38.7583 li
329.148 37.7583 li
.697627 .675227 .638575 .739559 cmyk
f
150.674 69.7514 mo
266.215 194.045 li
150.674 69.7514 li
.75021 .679683 .670222 .90164 cmyk
f
150.308 70.0919 mo
152.35 72.2891 li
153.083 71.6083 li
151.04 69.4111 li
150.308 70.0919 li
154.393 74.4865 mo
156.435 76.6837 li
157.168 76.0029 li
155.125 73.8055 li
154.393 74.4865 li
158.478 78.881 mo
160.52 81.0783 li
161.253 80.3974 li
159.21 78.2001 li
158.478 78.881 li
162.563 83.2755 mo
164.605 85.4728 li
165.338 84.792 li
163.295 82.5947 li
162.563 83.2755 li
166.648 87.6701 mo
168.69 89.8673 li
169.423 89.1865 li
167.38 86.9892 li
166.648 87.6701 li
170.733 92.0647 mo
172.775 94.2619 li
173.508 93.581 li
171.465 91.3838 li
170.733 92.0647 li
174.818 96.4592 mo
176.861 98.6565 li
177.593 97.9756 li
175.551 95.7784 li
174.818 96.4592 li
178.903 100.854 mo
180.946 103.051 li
181.678 102.37 li
179.636 100.173 li
178.903 100.854 li
182.988 105.248 mo
185.031 107.446 li
185.763 106.765 li
183.721 104.567 li
182.988 105.248 li
187.073 109.643 mo
189.116 111.84 li
189.848 111.159 li
187.806 108.962 li
187.073 109.643 li
191.158 114.037 mo
193.201 116.235 li
193.933 115.554 li
191.891 113.357 li
191.158 114.037 li
195.243 118.432 mo
197.286 120.629 li
198.018 119.948 li
195.976 117.751 li
195.243 118.432 li
199.329 122.826 mo
201.371 125.024 li
202.104 124.343 li
200.061 122.146 li
199.329 122.826 li
203.414 127.221 mo
205.456 129.418 li
206.189 128.737 li
204.146 126.54 li
203.414 127.221 li
207.499 131.616 mo
209.541 133.813 li
210.274 133.132 li
208.231 130.935 li
207.499 131.616 li
211.584 136.01 mo
213.626 138.207 li
214.359 137.527 li
212.316 135.329 li
211.584 136.01 li
215.669 140.405 mo
217.711 142.602 li
218.444 141.921 li
216.401 139.724 li
215.669 140.405 li
219.754 144.799 mo
221.797 146.996 li
222.529 146.316 li
220.486 144.118 li
219.754 144.799 li
223.839 149.194 mo
225.882 151.391 li
226.614 150.71 li
224.571 148.513 li
223.839 149.194 li
227.924 153.588 mo
229.967 155.786 li
230.699 155.105 li
228.657 152.907 li
227.924 153.588 li
232.009 157.983 mo
234.052 160.18 li
234.784 159.499 li
232.742 157.302 li
232.009 157.983 li
236.094 162.377 mo
238.137 164.575 li
238.869 163.894 li
236.827 161.697 li
236.094 162.377 li
240.179 166.772 mo
242.222 168.969 li
242.954 168.288 li
240.912 166.091 li
240.179 166.772 li
244.264 171.166 mo
246.307 173.364 li
247.039 172.683 li
244.997 170.486 li
244.264 171.166 li
248.349 175.561 mo
250.392 177.758 li
251.124 177.077 li
249.082 174.88 li
248.349 175.561 li
252.434 179.956 mo
254.477 182.153 li
255.21 181.472 li
253.167 179.275 li
252.434 179.956 li
256.52 184.35 mo
258.562 186.547 li
259.295 185.867 li
257.252 183.669 li
256.52 184.35 li
260.605 188.745 mo
262.647 190.942 li
263.38 190.261 li
261.337 188.064 li
260.605 188.745 li
264.69 193.139 mo
265.849 194.386 li
266.581 193.705 li
265.422 192.458 li
264.69 193.139 li
.697627 .675227 .638575 .739559 cmyk
f
266.215 194.045 mo
292.609 222.44 li
.75021 .679683 .670222 .90164 cmyk
f
265.849 194.386 mo
292.243 222.78 li
292.976 222.1 li
266.581 193.705 li
.697627 .675227 .638575 .739559 cmyk
f
295.811 225.033 mo
295.05 223.482 294.655 222.382 294.144 221.047 cv
290.448 224.482 li
290.937 224.676 292.81 225.565 294.301 226.436 cv
295.897 227.368 297.257 228.294 298.062 228.967 cv
297.449 228.117 296.624 226.693 295.811 225.033 cv
cp
f
123.679 90.5268 mo
122.088 90.5268 120.626 90.3774 119.318 90.0768 cv
126.922 83.3429 li
157.062 76.6236 li
157.556 77.1553 li
155.105 78.9138 152.494 80.5907 149.754 82.145 cv
142.839 86.0698 136.123 88.6367 130.332 89.8028 cv
127.94 90.2844 125.705 90.5268 123.679 90.5268 cv
118.167 89.7603 mo
117.881 89.6677 117.605 89.5669 117.337 89.4573 cv
117.337 89.457 117.336 89.4567 117.335 89.4564 cv
117.319 89.45 117.304 89.4437 117.289 89.4372 cv
117.288 89.4369 117.287 89.4365 117.286 89.4362 cv
117.279 89.4333 117.272 89.4304 117.265 89.4275 cv
117.264 89.4272 117.263 89.4266 117.262 89.4263 cv
117.247 89.4199 117.232 89.4137 117.217 89.4072 cv
117.216 89.4066 117.214 89.406 117.213 89.4054 cv
117.207 89.4028 117.2 89.4002 117.194 89.3976 cv
117.193 89.3969 117.191 89.3963 117.19 89.3956 cv
117.182 89.3925 117.175 89.3893 117.167 89.3862 cv
117.167 89.386 117.167 89.3861 117.167 89.386 cv
117.16 89.383 117.153 89.38 117.146 89.377 cv
117.144 89.3761 117.142 89.3751 117.14 89.3742 cv
117.135 89.372 117.129 89.3695 117.124 89.3673 cv
117.122 89.3665 117.12 89.3655 117.118 89.3647 cv
117.111 89.3616 117.104 89.3586 117.097 89.3556 cv
117.095 89.3549 117.093 89.3541 117.092 89.3534 cv
117.087 89.351 117.081 89.3486 117.076 89.3462 cv
117.073 89.3452 117.07 89.3439 117.068 89.3428 cv
117.063 89.3407 117.059 89.3387 117.054 89.3367 cv
117.051 89.3355 117.049 89.3344 117.046 89.3332 cv
117.04 89.3303 117.033 89.3275 117.027 89.3245 cv
117.024 89.3233 117.021 89.3221 117.019 89.3209 cv
117.015 89.3192 117.01 89.3171 117.006 89.3153 cv
117.003 89.3138 117 89.3124 116.996 89.311 cv
116.992 89.3092 116.988 89.3074 116.985 89.3056 cv
116.982 89.3043 116.978 89.3029 116.975 89.3015 cv
116.969 89.2987 116.963 89.296 116.957 89.2931 cv
116.953 89.2915 116.95 89.2902 116.947 89.2886 cv
116.943 89.2869 116.94 89.2854 116.936 89.2837 cv
116.933 89.2821 116.929 89.2805 116.926 89.279 cv
116.922 89.2773 116.919 89.2757 116.915 89.274 cv
116.911 89.2721 116.906 89.2699 116.902 89.2679 cv
116.897 89.2658 116.892 89.2634 116.888 89.2612 cv
116.884 89.2594 116.88 89.2579 116.876 89.256 cv
116.873 89.2547 116.87 89.2532 116.867 89.2519 cv
116.863 89.25 116.86 89.2483 116.856 89.2465 cv
116.853 89.2452 116.85 89.2437 116.847 89.2425 cv
116.84 89.239 116.832 89.2355 116.825 89.232 cv
116.823 89.2309 116.821 89.2301 116.819 89.229 cv
116.815 89.2271 116.81 89.225 116.806 89.2231 cv
116.804 89.222 116.801 89.2207 116.799 89.2196 cv
116.795 89.2176 116.791 89.2156 116.786 89.2136 cv
116.784 89.2127 116.782 89.2117 116.78 89.2107 cv
116.772 89.2066 116.763 89.2027 116.755 89.1985 cv
116.753 89.1977 116.752 89.1971 116.75 89.1963 cv
116.746 89.1942 116.741 89.1921 116.737 89.1899 cv
116.735 89.189 116.733 89.1879 116.731 89.187 cv
116.726 89.1847 116.722 89.1827 116.717 89.1804 cv
116.716 89.1799 116.716 89.1796 116.715 89.1791 cv
116.705 89.1743 116.695 89.1696 116.685 89.1648 cv
116.684 89.1643 116.684 89.1638 116.683 89.1634 cv
116.678 89.1609 116.673 89.1587 116.668 89.1563 cv
116.667 89.1555 116.665 89.1549 116.664 89.1541 cv
116.648 89.1465 116.633 89.1387 116.617 89.1311 cv
116.617 89.1307 116.616 89.1302 116.615 89.1299 cv
116.61 89.1273 116.605 89.1249 116.6 89.1223 cv
116.599 89.1219 116.598 89.1214 116.597 89.1209 cv
116.582 89.113 116.566 89.1049 116.55 89.097 cv
116.549 89.0966 116.549 89.0964 116.548 89.0961 cv
116.543 89.0933 116.538 89.0908 116.533 89.0881 cv
116.532 89.0878 116.532 89.0876 116.531 89.0873 cv
116.515 89.079 116.499 89.0708 116.483 89.0624 cv
116.483 89.0623 116.482 89.062 116.482 89.0619 cv
116.46 89.0504 116.438 89.0391 116.416 89.0274 cv
116.416 89.0274 li
116.394 89.0159 116.372 89.0041 116.351 88.9924 cv
116.35 88.9922 li
116.329 88.9804 116.307 88.9687 116.286 88.9568 cv
116.285 88.9568 li
115.993 88.7961 115.716 88.6232 115.453 88.4377 cv
115.453 88.4375 115.453 88.4379 115.453 88.4377 cv
115.414 88.4102 115.375 88.3824 115.337 88.3544 cv
115.337 88.3544 li
115.318 88.3404 115.299 88.3264 115.28 88.3122 cv
115.28 88.312 115.28 88.3122 115.28 88.312 cv
115.266 88.3015 115.252 88.2911 115.238 88.2804 cv
115.237 88.2801 li
115.232 88.2765 115.228 88.2732 115.223 88.2696 cv
115.223 88.2694 li
115.209 88.2589 115.196 88.2485 115.182 88.2379 cv
115.181 88.2375 115.181 88.2372 115.18 88.2368 cv
115.162 88.2228 115.144 88.2086 115.126 88.1944 cv
115.126 88.1942 115.125 88.1937 115.125 88.1935 cv
115.107 88.1795 115.089 88.1651 115.071 88.151 cv
115.07 88.1505 115.069 88.1497 115.069 88.1493 cv
115.051 88.1351 115.033 88.1209 115.016 88.1066 cv
115.015 88.106 115.015 88.1057 115.014 88.1051 cv
115.001 88.0945 114.988 88.0839 114.975 88.0733 cv
114.975 88.0729 114.974 88.0727 114.974 88.0722 cv
114.97 88.0688 114.966 88.0656 114.962 88.0621 cv
114.961 88.0613 114.96 88.061 114.959 88.0601 cv
114.947 88.0497 114.934 88.0392 114.922 88.0287 cv
114.921 88.0283 114.92 88.0276 114.92 88.0271 cv
114.916 88.0237 114.912 88.0204 114.908 88.017 cv
114.907 88.0163 114.906 88.0157 114.905 88.0151 cv
114.893 88.0047 114.881 87.9943 114.869 87.9838 cv
114.868 87.983 114.867 87.9823 114.866 87.9815 cv
114.862 87.9781 114.858 87.9747 114.854 87.9714 cv
114.854 87.9709 114.853 87.9702 114.852 87.9698 cv
114.84 87.9593 114.828 87.9487 114.816 87.9381 cv
114.815 87.9372 114.814 87.9364 114.813 87.9355 cv
114.809 87.9322 114.805 87.9289 114.801 87.9256 cv
114.801 87.9249 114.8 87.9241 114.799 87.9234 cv
114.787 87.913 114.776 87.9029 114.764 87.8924 cv
114.762 87.8911 114.761 87.8901 114.76 87.8888 cv
114.756 87.8854 114.753 87.8826 114.749 87.8792 cv
114.748 87.8785 114.748 87.8781 114.747 87.8774 cv
114.739 87.8703 114.731 87.8629 114.723 87.8557 cv
114.722 87.8555 li
114.719 87.8523 114.715 87.8487 114.711 87.8455 cv
114.71 87.8444 114.709 87.8433 114.708 87.8422 cv
114.704 87.839 114.7 87.8355 114.697 87.8323 cv
114.697 87.8321 114.696 87.8318 114.696 87.8315 cv
114.688 87.8243 114.68 87.8172 114.672 87.81 cv
114.672 87.8094 114.671 87.809 114.671 87.8084 cv
114.667 87.8049 114.664 87.8019 114.66 87.7985 cv
114.659 87.7974 114.657 87.7961 114.656 87.795 cv
114.644 87.7843 114.633 87.7735 114.621 87.7628 cv
114.621 87.7623 114.62 87.7615 114.619 87.761 cv
114.616 87.7576 114.612 87.754 114.608 87.7505 cv
114.608 87.7499 114.606 87.7487 114.606 87.748 cv
114.594 87.7371 114.583 87.7264 114.571 87.7154 cv
114.57 87.7147 114.569 87.7137 114.569 87.7131 cv
114.565 87.7096 114.562 87.7063 114.558 87.7028 cv
114.557 87.7019 114.556 87.7007 114.555 87.6998 cv
114.543 87.689 114.532 87.6783 114.521 87.6674 cv
114.52 87.6665 114.519 87.6657 114.518 87.6647 cv
114.515 87.6612 114.511 87.6578 114.508 87.6543 cv
114.507 87.6536 114.506 87.6526 114.505 87.6519 cv
114.494 87.641 114.482 87.6297 114.471 87.6187 cv
114.47 87.6178 114.47 87.6171 114.469 87.6161 cv
114.465 87.6126 114.461 87.6089 114.458 87.6053 cv
114.457 87.6049 114.457 87.6043 114.456 87.6038 cv
114.445 87.5926 114.433 87.5809 114.422 87.5696 cv
114.421 87.5689 114.42 87.5679 114.42 87.5672 cv
114.416 87.5636 114.412 87.5596 114.409 87.5561 cv
114.408 87.5558 114.408 87.5558 114.408 87.5556 cv
114.397 87.5437 114.385 87.5318 114.373 87.5199 cv
114.373 87.5192 114.372 87.5187 114.371 87.518 cv
114.356 87.502 114.34 87.4859 114.325 87.4698 cv
114.325 87.4696 114.324 87.4687 114.324 87.4685 cv
114.308 87.452 114.293 87.4358 114.277 87.4193 cv
114.277 87.419 114.277 87.419 114.277 87.4187 cv
114.214 87.3516 114.152 87.2837 114.092 87.2143 cv
114.099 87.2217 li
113.86 86.9474 113.643 86.6555 113.45 86.3466 cv
124.907 83.7924 li
118.167 89.7603 li
157.556 77.1553 mo
157.062 76.6236 li
158.819 76.232 li
158.403 76.5419 157.982 76.85 157.556 77.1553 cv
.338048 .269108 .266484 3.0518e-05 cmyk
f
113.45 86.3466 mo
113.094 85.7796 112.816 85.1546 112.621 84.4707 cv
110.066 75.5718 122.561 60.0938 140.517 49.9004 cv
147.426 45.9804 154.138 43.4155 159.928 42.25 cv
162.322 41.7679 164.559 41.5252 166.587 41.5252 cv
168.557 41.5252 170.33 41.7544 171.858 42.2156 cv
171.534 42.5013 li
124.907 83.7924 li
113.45 86.3466 li
126.922 83.3429 mo
172.202 43.2459 li
172.937 42.597 li
174.28 43.1469 175.389 43.9096 176.222 44.8875 cv
176.181 44.8404 li
176.228 44.895 176.275 44.9502 176.321 45.0062 cv
176.328 45.0151 li
176.329 45.0163 176.329 45.0163 176.329 45.0163 cv
176.328 45.0151 li
176.46 45.1773 176.583 45.3442 176.7 45.5175 cv
176.7 45.5175 li
176.7 45.5177 176.7 45.5177 176.7 45.5177 cv
176.7 45.5175 li
176.813 45.6855 176.919 45.8594 177.019 46.0381 cv
177.019 46.0381 li
177.019 46.0382 177.019 46.0382 177.019 46.0382 cv
177.019 46.0381 li
177.085 46.1572 177.147 46.2787 177.206 46.4025 cv
177.235 46.463 177.264 46.5241 177.291 46.5857 cv
177.291 46.5854 li
177.291 46.5859 177.291 46.5859 177.291 46.5859 cv
177.291 46.5854 li
177.376 46.775 177.453 46.9696 177.522 47.1696 cv
177.522 47.1695 li
177.522 47.1697 177.522 47.1697 177.522 47.1697 cv
177.522 47.1695 li
177.568 47.3021 177.611 47.437 177.65 47.5742 cv
177.673 47.653 177.694 47.7317 177.714 47.8115 cv
177.714 47.8111 li
177.714 47.8115 177.714 47.8115 177.714 47.8115 cv
177.714 47.8111 li
177.751 47.9558 177.784 48.1031 177.812 48.2507 cv
177.812 48.2507 li
177.813 48.2529 177.813 48.2552 177.814 48.2575 cv
177.814 48.2575 li
177.815 48.262 177.815 48.2655 177.816 48.27 cv
177.816 48.27 li
177.833 48.3573 177.849 48.4458 177.863 48.5343 cv
177.863 48.5343 li
177.864 48.5382 177.864 48.5418 177.865 48.5458 cv
177.865 48.5458 li
177.865 48.547 177.865 48.549 177.865 48.5501 cv
177.865 48.5501 li
177.906 48.8061 177.936 49.0661 177.955 49.331 cv
177.955 49.331 li
177.955 49.331 li
177.971 49.5634 177.979 49.7991 177.98 50.038 cv
177.983 57.349 170.335 67.6435 158.819 76.232 cv
157.062 76.6236 li
156.801 76.3433 li
157.168 76.0029 li
155.125 73.8055 li
154.759 74.146 li
152.716 71.9487 li
153.083 71.6083 li
151.04 69.4111 li
150.674 69.7515 li
150.674 69.7514 li
150.308 70.0919 li
152.35 72.2891 li
152.716 71.9487 li
154.759 74.146 li
154.393 74.4865 li
156.435 76.6837 li
156.801 76.3433 li
157.062 76.6236 li
126.922 83.3429 li
.337285 .266545 .267094 3.0518e-05 cmyk
f
157.556 77.1553 mo
157.062 76.6236 li
156.801 76.3433 li
157.062 76.6236 li
157.556 77.1553 li
157.556 77.1553 li
154.759 74.146 mo
152.716 71.9487 li
154.759 74.146 li
150.674 69.7514 mo
150.674 69.7514 li
150.674 69.7515 li
.636469 .551324 .533165 .279393 cmyk
f
156.435 76.6837 mo
154.393 74.4865 li
154.759 74.146 li
155.125 73.8055 li
157.168 76.0029 li
156.801 76.3433 li
156.435 76.6837 li
152.35 72.2891 mo
150.308 70.0919 li
150.674 69.7515 li
151.04 69.4111 li
153.083 71.6083 li
152.716 71.9487 li
152.35 72.2891 li
.608026 .524132 .508965 .21445 cmyk
f
gsave
176.181 44.8404 mo
274.941 158.72 li
275.612 159.495 276.109 160.406 276.41 161.455 cv
278.955 170.362 266.469 185.838 248.514 196.025 cv
241.599 199.95 234.883 202.517 229.092 203.683 cv
221.617 205.188 215.683 204.357 212.852 201.094 cv
114.092 87.2143 li
116.922 90.4776 122.857 91.3076 130.332 89.8028 cv
136.123 88.6367 142.839 86.0698 149.754 82.145 cv
167.709 71.9585 180.195 56.4825 177.65 47.5742 cv
177.349 46.5254 176.853 45.6143 176.181 44.8404 cv
clp
275.088 158.895 mo
220.788 96.2814 li
220.791 96.2796 li
274.941 158.72 li
275.088 158.895 li
200.888 73.3353 mo
199.549 71.7916 li
199.553 71.7899 li
200.891 73.333 li
200.889 73.3349 200.89 73.3334 200.888 73.3353 cv
198.876 71.0148 mo
196.177 67.9031 li
196.181 67.9023 li
198.879 71.0131 li
198.876 71.0148 li
.389654 .317082 .311955 .0028687 cmyk
f
199.549 71.7916 mo
198.876 71.0148 li
198.879 71.0131 li
199.553 71.7899 li
199.549 71.7916 li
.631556 .561395 .528222 .280247 cmyk
f
196.177 67.9031 mo
176.328 45.0151 li
176.321 45.0062 li
176.275 44.9502 176.228 44.895 176.181 44.8404 cv
176.222 44.8875 li
196.181 67.9023 li
196.177 67.9031 li
.388586 .315953 .313451 .00277714 cmyk
f
275.46 159.398 mo
220.744 96.3041 li
220.788 96.2814 li
275.088 158.895 li
275.097 158.907 275.107 158.918 275.116 158.93 cv
275.217 159.056 275.313 159.185 275.405 159.318 cv
275.424 159.344 275.442 159.371 275.46 159.398 cv
200.852 73.3667 mo
199.505 71.8144 li
199.549 71.7916 li
200.888 73.3353 li
200.877 73.3449 200.863 73.3571 200.852 73.3667 cv
198.832 71.0376 mo
196.124 67.915 li
196.177 67.9031 li
198.876 71.0148 li
198.832 71.0376 li
.380713 .305791 .302739 .00173953 cmyk
f
199.505 71.8144 mo
198.832 71.0376 li
198.876 71.0148 li
199.549 71.7916 li
199.505 71.8144 li
.626978 .548089 .52752 .26511 cmyk
f
196.124 67.915 mo
176.7 45.5175 li
176.583 45.3442 176.46 45.1773 176.328 45.0151 cv
176.328 45.0151 li
196.177 67.9031 li
196.124 67.915 li
.380102 .308721 .299565 .00183108 cmyk
f
275.778 159.918 mo
220.652 96.3516 li
220.744 96.3041 li
275.46 159.398 li
275.573 159.566 275.68 159.74 275.778 159.918 cv
200.775 73.4322 mo
199.414 71.8621 li
199.505 71.8144 li
200.852 73.3667 li
200.827 73.3878 200.8 73.4111 200.775 73.4322 cv
198.74 71.0853 mo
196.012 67.9399 li
196.124 67.915 li
198.832 71.0376 li
198.74 71.0853 li
.3664 .293095 .290227 .000366217 cmyk
f
199.414 71.8621 mo
198.74 71.0853 li
198.832 71.0376 li
199.505 71.8144 li
199.414 71.8621 li
.619593 .547356 .515679 .247501 cmyk
f
196.012 67.9399 mo
177.019 46.0381 li
176.919 45.8594 176.813 45.6855 176.7 45.5175 cv
176.7 45.5175 li
196.124 67.915 li
196.012 67.9399 li
.368933 .293309 .293736 .000488289 cmyk
f
276.051 160.465 mo
220.512 96.4237 li
220.652 96.3516 li
275.778 159.918 li
275.785 159.931 275.793 159.944 275.8 159.957 cv
275.881 160.107 275.958 160.261 276.03 160.419 cv
276.037 160.434 276.044 160.45 276.051 160.465 cv
200.659 73.5315 mo
199.274 71.9345 li
199.414 71.8621 li
200.775 73.4322 li
200.735 73.4666 200.7 73.4971 200.659 73.5315 cv
198.601 71.1577 mo
195.843 67.9777 li
196.012 67.9399 li
198.74 71.0853 li
198.601 71.1577 li
.351781 .283726 .274815 3.0518e-05 cmyk
f
199.274 71.9345 mo
198.601 71.1577 li
198.74 71.0853 li
199.414 71.8621 li
199.274 71.9345 li
.612299 .546471 .503777 .230045 cmyk
f
195.843 67.9777 mo
177.291 46.5854 li
177.264 46.5241 177.235 46.463 177.206 46.4025 cv
177.147 46.2787 177.085 46.1572 177.019 46.0381 cv
177.019 46.0381 li
196.012 67.9399 li
195.843 67.9777 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
276.282 161.049 mo
220.322 96.5219 li
220.512 96.4237 li
276.051 160.465 li
276.059 160.483 276.066 160.5 276.074 160.517 cv
276.149 160.69 276.218 160.867 276.282 161.048 cv
200.501 73.6666 mo
199.085 72.0332 li
199.274 71.9345 li
200.659 73.5315 li
200.608 73.5754 200.553 73.6228 200.501 73.6666 cv
198.411 71.2564 mo
195.612 68.0291 li
195.843 67.9777 li
198.601 71.1577 li
198.411 71.2564 li
.341375 .27158 .269108 3.0518e-05 cmyk
f
199.085 72.0332 mo
198.411 71.2564 li
198.601 71.1577 li
199.274 71.9345 li
199.085 72.0332 li
.607477 .531609 .504021 .216007 cmyk
f
195.612 68.0291 mo
177.522 47.1695 li
177.453 46.9696 177.376 46.775 177.291 46.5857 cv
177.291 46.5854 li
195.843 67.9777 li
195.612 68.0291 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
276.474 161.691 mo
220.07 96.652 li
220.322 96.5219 li
276.282 161.049 li
276.328 161.181 276.371 161.317 276.41 161.455 cv
276.41 161.455 li
276.474 161.691 li
200.291 73.8449 mo
198.833 72.1638 li
199.085 72.0332 li
200.501 73.6666 li
200.43 73.7275 200.363 73.7843 200.291 73.8449 cv
198.16 71.387 mo
195.307 68.0972 li
195.612 68.0291 li
198.411 71.2564 li
198.16 71.387 li
.328618 .260868 .258091 3.0518e-05 cmyk
f
198.833 72.1638 mo
198.16 71.387 li
198.411 71.2564 li
199.085 72.0332 li
198.833 72.1638 li
.602045 .518151 .503777 .203189 cmyk
f
195.307 68.0972 mo
177.714 47.8111 li
177.694 47.7317 177.673 47.653 177.65 47.5742 cv
177.611 47.437 177.568 47.3021 177.522 47.1696 cv
177.522 47.1695 li
195.612 68.0291 li
195.307 68.0972 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
276.621 162.404 mo
219.745 96.8199 li
220.07 96.652 li
276.474 161.691 li
276.479 161.713 276.485 161.735 276.49 161.757 cv
276.542 161.969 276.585 162.185 276.621 162.404 cv
200.019 74.0744 mo
198.509 72.3325 li
198.833 72.1638 li
200.291 73.8449 li
200.202 73.9207 200.109 73.9991 200.019 74.0744 cv
197.835 71.5557 mo
194.912 68.1852 li
195.307 68.0972 li
198.16 71.387 li
197.835 71.5557 li
.316472 .254215 .244816 3.0518e-05 cmyk
f
198.509 72.3325 mo
197.835 71.5557 li
198.16 71.387 li
198.833 72.1638 li
198.509 72.3325 li
.592645 .51693 .489876 .187655 cmyk
f
194.912 68.1852 mo
177.861 48.5239 li
177.848 48.4388 177.832 48.3541 177.816 48.27 cv
177.816 48.27 li
177.815 48.2655 177.815 48.262 177.814 48.2575 cv
177.814 48.2575 li
177.813 48.2552 177.813 48.2529 177.812 48.2507 cv
177.812 48.2507 li
177.784 48.1031 177.751 47.9558 177.714 47.8115 cv
177.714 47.8111 li
195.307 68.0972 li
194.912 68.1852 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
276.715 163.211 mo
219.326 97.0363 li
219.745 96.8199 li
276.621 162.404 li
276.664 162.668 276.695 162.937 276.714 163.211 cv
199.668 74.3686 mo
198.091 72.5499 li
198.509 72.3325 li
200.019 74.0744 li
199.903 74.1722 199.784 74.2715 199.668 74.3686 cv
197.964 72.4042 mo
194.404 68.2985 li
194.912 68.1852 li
197.835 71.5557 li
197.59 71.6833 li
197.964 72.4042 li
.307622 .24152 .239048 3.0518e-05 cmyk
f
198.091 72.5499 mo
197.964 72.4042 li
197.59 71.6833 li
197.835 71.5557 li
198.509 72.3325 li
198.091 72.5499 li
.586633 .510796 .484047 .176638 cmyk
f
194.404 68.2985 mo
177.955 49.331 li
177.936 49.0661 177.906 48.8061 177.865 48.5501 cv
177.865 48.5501 li
177.865 48.5487 177.865 48.5473 177.865 48.5458 cv
177.865 48.5458 li
177.864 48.5418 177.864 48.5382 177.863 48.5343 cv
177.863 48.5343 li
177.862 48.5308 177.862 48.5274 177.861 48.5239 cv
194.912 68.1852 li
194.404 68.2985 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
276.737 164.15 mo
218.779 97.3189 li
219.326 97.0363 li
276.715 163.211 li
276.736 163.518 276.744 163.831 276.737 164.149 cv
199.207 74.7505 mo
193.74 68.4465 li
194.404 68.2985 li
197.964 72.4042 li
198.051 72.5706 li
198.091 72.5499 li
199.668 74.3686 li
199.513 74.4974 199.362 74.6231 199.207 74.7505 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
198.051 72.5706 mo
197.964 72.4042 li
198.091 72.5499 li
198.051 72.5706 li
.578485 .502251 .475471 .16025 cmyk
f
193.74 68.4465 mo
177.977 50.2705 li
177.979 50.1928 177.98 50.1152 177.98 50.038 cv
177.979 49.7991 177.971 49.5634 177.955 49.331 cv
177.955 49.331 li
194.404 68.2985 li
193.74 68.4465 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
276.635 165.451 mo
217.93 97.7576 li
218.779 97.3189 li
276.737 164.15 li
276.735 164.245 276.732 164.341 276.727 164.437 cv
276.711 164.77 276.68 165.108 276.635 165.451 cv
198.487 75.3379 mo
192.71 68.6762 li
193.74 68.4465 li
199.207 74.7505 li
198.967 74.948 198.727 75.1437 198.487 75.3379 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
192.71 68.6762 mo
177.875 51.5704 li
177.934 51.1283 177.968 50.6944 177.977 50.2707 cv
193.74 68.4465 li
192.71 68.6762 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
276.129 167.774 mo
216.189 98.6568 li
217.93 97.7576 li
276.635 165.451 li
276.545 166.126 276.399 166.822 276.198 167.535 cv
276.176 167.614 276.152 167.694 276.129 167.774 cv
196.993 76.5217 mo
194.96 74.1774 li
195.389 73.9543 li
194.928 73.067 li
194.286 73.4005 li
190.597 69.1471 li
192.71 68.6762 li
198.487 75.3379 li
197.99 75.7388 197.49 76.1349 196.993 76.5217 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
194.96 74.1774 mo
194.286 73.4005 li
194.928 73.067 li
195.389 73.9543 li
194.96 74.1774 li
.566369 .482063 .469001 .137972 cmyk
f
190.597 69.1471 mo
177.369 53.8936 li
177.373 53.8791 177.378 53.8646 177.382 53.8501 cv
177.612 53.0682 177.777 52.3076 177.875 51.5705 cv
192.71 68.6762 li
190.597 69.1471 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
274.697 171.342 mo
213.063 100.271 li
216.189 98.6568 li
276.129 167.774 li
276.089 167.909 276.047 168.044 276.003 168.18 cv
276 168.188 275.998 168.196 275.995 168.204 cv
275.995 168.205 275.994 168.207 275.994 168.208 cv
275.878 168.566 275.749 168.928 275.607 169.294 cv
275.604 169.3 275.602 169.307 275.599 169.312 cv
275.598 169.315 275.597 169.318 275.596 169.321 cv
275.338 169.983 275.038 170.658 274.697 171.342 cv
194.25 78.5778 mo
186.805 69.9927 li
190.597 69.1471 li
194.286 73.4005 li
192.266 74.4506 li
192.727 75.338 li
194.96 74.1774 li
196.993 76.5217 li
196.081 77.2304 195.166 77.9157 194.25 78.5778 cv
.262028 .204318 .201663 3.0518e-05 cmyk
f
192.727 75.338 mo
192.266 74.4506 li
194.286 73.4005 li
194.96 74.1774 li
192.727 75.338 li
.557519 .479713 .456031 .123964 cmyk
f
186.805 69.9927 mo
175.937 57.4619 li
176.077 57.1824 176.209 56.9045 176.334 56.6284 cv
176.336 56.6241 176.337 56.6217 176.339 56.6174 cv
176.342 56.6115 176.345 56.6054 176.348 56.5994 cv
176.35 56.5937 176.353 56.5868 176.356 56.5811 cv
176.357 56.5784 176.358 56.5756 176.36 56.5729 cv
176.76 55.6867 177.09 54.8184 177.345 53.9738 cv
177.353 53.947 177.361 53.9203 177.369 53.8936 cv
190.597 69.1471 li
186.805 69.9927 li
.260136 .206882 .197757 3.0518e-05 cmyk
f
272.66 174.844 mo
209.558 102.082 li
213.063 100.271 li
274.697 171.342 li
274.128 172.486 273.446 173.657 272.66 174.844 cv
191.08 80.7746 mo
188.342 77.6172 li
190.065 76.7216 li
189.604 75.8343 li
187.668 76.8404 li
182.552 70.9407 li
186.805 69.9927 li
194.25 78.5778 li
193.193 79.3412 192.14 80.0711 191.08 80.7746 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
188.342 77.6172 mo
187.668 76.8404 li
189.604 75.8343 li
190.065 76.7216 li
188.342 77.6172 li
.566369 .482063 .469001 .137972 cmyk
f
182.552 70.9407 mo
173.9 60.9643 li
174.631 59.8606 175.271 58.7713 175.816 57.7038 cv
175.816 57.7037 175.816 57.7036 175.816 57.7035 cv
175.818 57.6992 175.821 57.694 175.823 57.6896 cv
175.861 57.6136 175.9 57.5376 175.937 57.4619 cv
186.805 69.9927 li
182.552 70.9407 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
270.922 177.278 mo
206.9 103.455 li
209.558 102.082 li
272.66 174.844 li
272.131 175.644 271.554 176.452 270.933 177.264 cv
270.929 177.268 270.926 177.273 270.922 177.278 cv
188.609 82.3628 mo
179.327 71.6598 li
182.552 70.9407 li
187.668 76.8404 li
186.942 77.2179 li
187.403 78.1053 li
188.342 77.6172 li
191.08 80.7746 li
190.257 81.3215 189.433 81.8508 188.609 82.3628 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
187.403 78.1053 mo
186.942 77.2179 li
187.668 76.8404 li
188.342 77.6172 li
187.403 78.1053 li
.572229 .495827 .470314 .149874 cmyk
f
179.327 71.6598 mo
172.162 63.398 li
172.279 63.2458 172.392 63.0958 172.506 62.9439 cv
172.509 62.9397 172.512 62.9354 172.515 62.9312 cv
172.521 62.9236 172.526 62.9169 172.531 62.9093 cv
172.537 62.9019 172.542 62.8946 172.548 62.8872 cv
172.551 62.8834 172.553 62.8811 172.555 62.8773 cv
172.563 62.8665 172.571 62.8557 172.579 62.845 cv
172.58 62.8446 li
172.874 62.4477 173.158 62.052 173.431 61.6579 cv
173.591 61.4264 173.748 61.1948 173.9 60.9644 cv
182.552 70.9407 li
179.327 71.6598 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
269.147 179.466 mo
204.364 104.765 li
206.9 103.455 li
270.922 177.278 li
270.881 177.331 270.841 177.383 270.8 177.436 cv
270.796 177.442 270.792 177.447 270.788 177.452 cv
270.786 177.455 270.784 177.458 270.781 177.46 cv
270.266 178.127 269.72 178.796 269.146 179.466 cv
186.195 83.8142 mo
183.158 80.3122 li
184.741 79.4889 li
184.28 78.6016 li
182.484 79.5354 li
176.249 72.3459 li
179.327 71.6598 li
188.609 82.3628 li
187.805 82.862 186.998 83.3472 186.195 83.8142 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
183.158 80.3122 mo
182.484 79.5354 li
184.28 78.6016 li
184.741 79.4889 li
183.158 80.3122 li
.578485 .502251 .475471 .16025 cmyk
f
176.249 72.3459 mo
170.387 65.5859 li
170.412 65.5561 170.437 65.5275 170.462 65.4977 cv
170.715 65.201 170.963 64.9044 171.205 64.6081 cv
171.208 64.6043 171.212 64.5995 171.215 64.5957 cv
171.217 64.5926 171.22 64.5895 171.222 64.5864 cv
171.546 64.1899 171.86 63.793 172.162 63.398 cv
179.327 71.6598 li
176.249 72.3459 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
267.281 181.541 mo
201.833 106.072 li
204.364 104.765 li
269.147 179.466 li
268.554 180.157 267.932 180.849 267.281 181.54 cv
183.731 85.1986 mo
173.178 73.0305 li
176.249 72.3459 li
182.484 79.5354 li
181.618 79.9853 li
182.08 80.8726 li
183.158 80.3122 li
186.195 83.8142 li
185.371 84.2931 184.553 84.7526 183.731 85.1986 cv
.307622 .24152 .239048 3.0518e-05 cmyk
f
182.08 80.8726 mo
181.618 79.9853 li
182.484 79.5354 li
183.158 80.3122 li
182.08 80.8726 li
.586633 .510796 .484047 .176638 cmyk
f
173.178 73.0305 mo
168.521 67.6601 li
169.172 66.9694 169.795 66.2771 170.387 65.5859 cv
176.249 72.3459 li
173.178 73.0305 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
265.295 183.558 mo
199.237 107.387 li
199.287 107.387 li
201.833 106.072 li
267.281 181.541 li
266.646 182.214 265.982 182.888 265.294 183.557 cv
181.161 86.5432 mo
178.057 82.9638 li
179.418 82.2562 li
178.957 81.369 li
177.383 82.187 li
170.048 73.7285 li
173.178 73.0305 li
183.731 85.1986 li
182.873 85.6644 182.016 86.112 181.161 86.5432 cv
.316472 .254215 .244816 3.0518e-05 cmyk
f
178.057 82.9638 mo
177.383 82.187 li
178.957 81.369 li
179.418 82.2562 li
178.057 82.9638 li
.592645 .51693 .489876 .187655 cmyk
f
170.048 73.7285 mo
166.535 69.6777 li
166.579 69.6341 166.624 69.5905 166.669 69.5469 cv
167.309 68.9201 167.927 68.2905 168.521 67.6602 cv
173.178 73.0305 li
170.048 73.7285 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
263.168 185.544 mo
195.388 107.387 li
199.237 107.387 li
265.295 183.558 li
264.61 184.223 263.901 184.886 263.168 185.544 cv
178.45 87.8563 mo
166.821 74.4478 li
170.048 73.7285 li
177.383 82.187 li
176.295 82.7527 li
176.756 83.6399 li
178.057 82.9638 li
181.161 86.5432 li
180.256 86.9994 179.351 87.4374 178.45 87.8563 cv
.328618 .260868 .258091 3.0518e-05 cmyk
f
176.756 83.6399 mo
176.295 82.7527 li
177.383 82.187 li
178.057 82.9638 li
176.756 83.6399 li
.602045 .518151 .503777 .203189 cmyk
f
166.821 74.4478 mo
164.408 71.6645 li
164.448 71.6284 164.488 71.5923 164.528 71.5562 cv
164.531 71.5532 164.534 71.551 164.537 71.548 cv
164.544 71.5419 164.551 71.5358 164.557 71.5297 cv
165.142 71.0024 165.711 70.472 166.264 69.9397 cv
166.355 69.8524 166.445 69.7651 166.535 69.6777 cv
170.048 73.7285 li
166.821 74.4478 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
260.893 187.506 mo
191.411 107.387 li
195.388 107.387 li
263.168 185.544 li
262.433 186.203 261.673 186.858 260.892 187.506 cv
175.581 89.1337 mo
172.662 85.7681 li
174.094 85.0236 li
173.633 84.1363 li
171.988 84.9912 li
163.489 75.1907 li
166.821 74.4478 li
178.45 87.8563 li
177.49 88.3024 176.533 88.7282 175.581 89.1337 cv
.341375 .27158 .269108 3.0518e-05 cmyk
f
172.662 85.7681 mo
171.988 84.9912 li
173.633 84.1363 li
174.094 85.0236 li
172.662 85.7681 li
.607477 .531609 .504021 .216007 cmyk
f
163.489 75.1907 mo
162.132 73.6264 li
162.888 73.0003 163.623 72.3667 164.335 71.7298 cv
164.359 71.708 164.383 71.6863 164.408 71.6645 cv
166.821 74.4478 li
163.489 75.1907 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
258.443 189.458 mo
217.765 142.552 li
218.078 142.262 li
220.12 144.459 li
219.754 144.799 li
221.797 146.996 li
222.163 146.656 li
224.205 148.853 li
223.839 149.194 li
225.882 151.391 li
226.248 151.051 li
228.29 153.248 li
227.924 153.588 li
229.967 155.786 li
230.333 155.445 li
232.375 157.642 li
232.009 157.983 li
234.052 160.18 li
234.418 159.84 li
236.46 162.037 li
236.094 162.377 li
238.137 164.575 li
238.503 164.234 li
240.546 166.431 li
240.179 166.772 li
242.222 168.969 li
242.588 168.629 li
244.631 170.826 li
244.264 171.166 li
246.307 173.364 li
246.673 173.023 li
248.716 175.221 li
248.349 175.561 li
250.392 177.758 li
250.758 177.418 li
252.801 179.615 li
252.434 179.956 li
254.477 182.153 li
254.843 181.812 li
256.886 184.01 li
256.52 184.35 li
258.562 186.547 li
258.928 186.207 li
260.464 187.859 li
259.914 188.308 259.352 188.756 258.781 189.198 cv
258.669 189.284 258.556 189.371 258.443 189.458 cv
260.464 187.859 mo
258.928 186.207 li
259.295 185.867 li
257.252 183.669 li
256.886 184.01 li
254.843 181.812 li
255.21 181.472 li
253.167 179.275 li
252.801 179.615 li
250.758 177.418 li
251.124 177.077 li
249.082 174.88 li
248.716 175.221 li
246.673 173.023 li
247.039 172.683 li
244.997 170.486 li
244.631 170.826 li
242.588 168.629 li
242.954 168.288 li
240.912 166.091 li
240.546 166.431 li
238.503 164.234 li
238.869 163.894 li
236.827 161.697 li
236.46 162.037 li
234.418 159.84 li
234.784 159.499 li
232.742 157.302 li
232.375 157.642 li
230.333 155.445 li
230.699 155.105 li
228.657 152.907 li
228.29 153.248 li
226.248 151.051 li
226.614 150.71 li
224.571 148.513 li
224.205 148.853 li
222.163 146.656 li
222.529 146.316 li
220.486 144.118 li
220.12 144.459 li
218.078 142.262 li
218.444 141.921 li
216.401 139.724 li
216.035 140.064 li
213.993 137.867 li
214.359 137.527 li
212.316 135.329 li
211.95 135.67 li
209.907 133.472 li
210.274 133.132 li
208.231 130.935 li
207.932 131.213 li
205.965 128.945 li
206.189 128.737 li
204.146 126.54 li
203.998 126.677 li
202.032 124.41 li
202.104 124.343 li
200.171 122.264 li
187.269 107.387 li
191.411 107.387 li
260.893 187.506 li
260.75 187.624 260.608 187.741 260.464 187.859 cv
215.799 140.284 mo
213.832 138.016 li
213.993 137.867 li
216.035 140.064 li
215.799 140.284 li
211.865 135.749 mo
209.899 133.481 li
209.907 133.472 li
211.95 135.67 li
211.865 135.749 li
172.517 90.3761 mo
160.019 75.9644 li
163.489 75.1907 li
171.988 84.9912 li
170.971 85.52 li
171.432 86.4072 li
172.662 85.7681 li
175.581 89.1337 li
174.554 89.5706 173.533 89.9842 172.517 90.3761 cv
.351781 .283726 .274815 3.0518e-05 cmyk
f
171.432 86.4072 mo
170.971 85.52 li
171.988 84.9912 li
172.662 85.7681 li
171.432 86.4072 li
.612299 .546471 .503777 .230045 cmyk
f
160.019 75.9644 mo
159.684 75.5781 li
160.28 75.121 160.866 74.6597 161.439 74.1946 cv
161.441 74.1931 161.442 74.1928 161.443 74.1913 cv
161.453 74.1838 161.462 74.1763 161.471 74.1688 cv
161.694 73.9882 161.913 73.8082 162.132 73.6265 cv
163.489 75.1907 li
160.019 75.9644 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
260.464 187.859 mo
258.928 186.207 li
260.464 187.859 li
260.464 187.859 li
256.886 184.01 mo
254.843 181.812 li
256.886 184.01 li
252.801 179.615 mo
250.758 177.418 li
252.801 179.615 li
248.716 175.221 mo
246.673 173.023 li
248.716 175.221 li
244.631 170.826 mo
242.588 168.629 li
244.631 170.826 li
240.546 166.431 mo
238.503 164.234 li
240.546 166.431 li
236.46 162.037 mo
234.418 159.84 li
236.46 162.037 li
232.375 157.642 mo
230.333 155.445 li
232.375 157.642 li
228.29 153.248 mo
226.248 151.051 li
228.29 153.248 li
224.205 148.853 mo
222.163 146.656 li
224.205 148.853 li
220.12 144.459 mo
218.078 142.262 li
220.12 144.459 li
216.035 140.064 mo
213.993 137.867 li
216.035 140.064 li
211.95 135.67 mo
209.907 133.472 li
211.95 135.67 li
.642725 .56643 .536248 .301579 cmyk
f
258.562 186.547 mo
256.52 184.35 li
256.886 184.01 li
257.252 183.669 li
259.295 185.867 li
258.928 186.207 li
258.562 186.547 li
254.477 182.153 mo
252.434 179.956 li
252.801 179.615 li
253.167 179.275 li
255.21 181.472 li
254.843 181.812 li
254.477 182.153 li
250.392 177.758 mo
248.349 175.561 li
248.716 175.221 li
249.082 174.88 li
251.124 177.077 li
250.758 177.418 li
250.392 177.758 li
246.307 173.364 mo
244.264 171.166 li
244.631 170.826 li
244.997 170.486 li
247.039 172.683 li
246.673 173.023 li
246.307 173.364 li
242.222 168.969 mo
240.179 166.772 li
240.546 166.431 li
240.912 166.091 li
242.954 168.288 li
242.588 168.629 li
242.222 168.969 li
238.137 164.575 mo
236.094 162.377 li
236.46 162.037 li
236.827 161.697 li
238.869 163.894 li
238.503 164.234 li
238.137 164.575 li
234.052 160.18 mo
232.009 157.983 li
232.375 157.642 li
232.742 157.302 li
234.784 159.499 li
234.418 159.84 li
234.052 160.18 li
229.967 155.786 mo
227.924 153.588 li
228.29 153.248 li
228.657 152.907 li
230.699 155.105 li
230.333 155.445 li
229.967 155.786 li
225.882 151.391 mo
223.839 149.194 li
224.205 148.853 li
224.571 148.513 li
226.614 150.71 li
226.248 151.051 li
225.882 151.391 li
221.797 146.996 mo
219.754 144.799 li
220.12 144.459 li
220.486 144.118 li
222.529 146.316 li
222.163 146.656 li
221.797 146.996 li
217.765 142.552 mo
215.799 140.284 li
216.035 140.064 li
216.401 139.724 li
218.444 141.921 li
218.078 142.262 li
217.765 142.552 li
213.832 138.016 mo
211.865 135.749 li
211.95 135.67 li
212.316 135.329 li
214.359 137.527 li
213.993 137.867 li
213.832 138.016 li
209.899 133.481 mo
207.932 131.213 li
208.231 130.935 li
210.274 133.132 li
209.907 133.472 li
209.899 133.481 li
205.965 128.945 mo
203.998 126.677 li
204.146 126.54 li
206.189 128.737 li
205.965 128.945 li
202.032 124.41 mo
200.171 122.264 li
202.104 124.343 li
202.032 124.41 li
.612299 .546471 .503777 .230045 cmyk
f
255.816 191.392 mo
182.965 107.387 li
184.976 107.387 li
185.031 107.446 li
185.094 107.387 li
185.659 107.387 li
187.44 109.302 li
187.073 109.643 li
189.116 111.84 li
189.482 111.5 li
191.525 113.697 li
191.158 114.037 li
193.201 116.235 li
193.567 115.894 li
195.61 118.091 li
195.243 118.432 li
197.286 120.629 li
197.652 120.289 li
199.695 122.486 li
199.329 122.826 li
201.371 125.024 li
201.737 124.683 li
203.78 126.881 li
203.414 127.221 li
205.456 129.418 li
205.822 129.078 li
207.865 131.275 li
207.499 131.616 li
209.541 133.813 li
209.899 133.481 li
211.865 135.749 li
211.584 136.01 li
213.626 138.207 li
213.832 138.016 li
215.799 140.284 li
215.669 140.405 li
217.711 142.602 li
217.765 142.552 li
258.443 189.458 li
258.1 189.721 257.753 189.983 257.402 190.243 cv
256.88 190.63 256.353 191.012 255.816 191.391 cv
207.865 131.275 mo
205.822 129.078 li
205.965 128.945 li
207.932 131.213 li
207.865 131.275 li
203.78 126.881 mo
201.737 124.683 li
202.032 124.41 li
203.998 126.677 li
203.78 126.881 li
199.695 122.486 mo
197.652 120.289 li
198.018 119.948 li
195.976 117.751 li
195.61 118.091 li
193.567 115.894 li
193.933 115.554 li
191.891 113.357 li
191.525 113.697 li
189.482 111.5 li
189.848 111.159 li
187.806 108.962 li
187.44 109.302 li
185.659 107.387 li
187.269 107.387 li
200.171 122.264 li
200.061 122.146 li
199.695 122.486 li
169.247 91.5696 mo
166.84 88.7942 li
167.415 88.4954 li
168.69 89.8673 li
169.057 89.5269 li
170.534 91.1159 li
170.104 91.2709 169.675 91.4222 169.247 91.5696 cv
170.534 91.1159 mo
169.057 89.5269 li
169.423 89.1865 li
168.336 88.0169 li
168.77 87.7909 li
168.309 86.9037 li
167.629 87.2571 li
167.38 86.9892 li
167.014 87.3296 li
164.972 85.1324 li
165.338 84.792 li
163.295 82.5947 li
162.929 82.9351 li
160.887 80.7378 li
161.253 80.3974 li
159.21 78.2001 li
158.844 78.5405 li
157.556 77.1553 li
157.982 76.8499 158.403 76.5419 158.819 76.2319 cv
160.019 75.9644 li
172.517 90.3761 li
171.854 90.6317 171.192 90.8786 170.534 91.1159 cv
166.167 88.0174 mo
157.056 77.5117 li
157.223 77.3933 157.39 77.2745 157.556 77.1553 cv
158.844 78.5405 li
158.478 78.881 li
160.52 81.0783 li
160.887 80.7378 li
162.929 82.9351 li
162.563 83.2755 li
164.605 85.4728 li
164.972 85.1324 li
167.014 87.3296 li
166.648 87.6701 li
166.709 87.7355 li
166.167 88.0174 li
.3664 .293095 .290227 .000366217 cmyk
f
166.84 88.7942 mo
166.167 88.0174 li
166.709 87.7355 li
167.415 88.4954 li
166.84 88.7942 li
168.336 88.0169 mo
167.629 87.2571 li
168.309 86.9037 li
168.77 87.7909 li
168.336 88.0169 li
.619593 .547356 .515679 .247501 cmyk
f
158.819 76.2319 mo
159.11 76.015 159.398 75.7971 159.684 75.5781 cv
160.019 75.9644 li
158.819 76.2319 li
.368933 .293309 .293736 .000488289 cmyk
f
207.865 131.275 mo
205.822 129.078 li
207.865 131.275 li
203.78 126.881 mo
201.737 124.683 li
203.78 126.881 li
199.695 122.486 mo
197.652 120.289 li
199.695 122.486 li
195.61 118.091 mo
193.567 115.894 li
195.61 118.091 li
191.525 113.697 mo
189.482 111.5 li
191.525 113.697 li
187.44 109.302 mo
185.659 107.387 li
187.44 109.302 li
170.534 91.1159 mo
169.057 89.5269 li
170.534 91.1159 li
170.534 91.1159 li
167.014 87.3296 mo
164.972 85.1324 li
167.014 87.3296 li
162.929 82.9351 mo
160.887 80.7378 li
162.929 82.9351 li
158.844 78.5405 mo
157.556 77.1553 li
157.556 77.1553 li
158.844 78.5405 li
.650233 .565515 .550591 .320226 cmyk
f
217.711 142.602 mo
215.669 140.405 li
215.799 140.284 li
217.765 142.552 li
217.711 142.602 li
213.626 138.207 mo
211.584 136.01 li
211.865 135.749 li
213.832 138.016 li
213.626 138.207 li
209.541 133.813 mo
207.499 131.616 li
207.865 131.275 li
207.932 131.213 li
209.899 133.481 li
209.541 133.813 li
205.456 129.418 mo
203.414 127.221 li
203.78 126.881 li
203.998 126.677 li
205.965 128.945 li
205.822 129.078 li
205.456 129.418 li
201.371 125.024 mo
199.329 122.826 li
199.695 122.486 li
200.061 122.146 li
200.171 122.264 li
202.032 124.41 li
201.737 124.683 li
201.371 125.024 li
197.286 120.629 mo
195.243 118.432 li
195.61 118.091 li
195.976 117.751 li
198.018 119.948 li
197.652 120.289 li
197.286 120.629 li
193.201 116.235 mo
191.158 114.037 li
191.525 113.697 li
191.891 113.357 li
193.933 115.554 li
193.567 115.894 li
193.201 116.235 li
189.116 111.84 mo
187.073 109.643 li
187.44 109.302 li
187.806 108.962 li
189.848 111.159 li
189.482 111.5 li
189.116 111.84 li
185.031 107.446 mo
184.976 107.387 li
185.094 107.387 li
185.031 107.446 li
168.69 89.8673 mo
167.415 88.4954 li
166.709 87.7355 li
166.648 87.6701 li
167.014 87.3296 li
167.38 86.9892 li
167.629 87.2571 li
168.336 88.0169 li
169.423 89.1865 li
169.057 89.5269 li
168.69 89.8673 li
164.605 85.4728 mo
162.563 83.2755 li
162.929 82.9351 li
163.295 82.5947 li
165.338 84.792 li
164.972 85.1324 li
164.605 85.4728 li
160.52 81.0783 mo
158.478 78.881 li
158.844 78.5405 li
159.21 78.2001 li
161.253 80.3974 li
160.887 80.7378 li
160.52 81.0783 li
.619593 .547356 .515679 .247501 cmyk
f
252.994 193.303 mo
178.485 107.387 li
182.965 107.387 li
255.816 191.392 li
254.897 192.041 253.955 192.679 252.994 193.303 cv
166.077 92.6017 mo
166.077 89.4829 li
165.577 89.4829 li
165.077 89.4829 li
165.077 91.9266 li
154.234 79.4233 li
155.195 78.7993 156.137 78.1611 157.056 77.5117 cv
166.167 88.0174 li
165.647 88.2873 li
166.109 89.1746 li
166.84 88.7942 li
169.247 91.5696 li
168.182 91.9366 167.126 92.28 166.077 92.6017 cv
.380713 .305791 .302739 .00173953 cmyk
f
166.109 89.1746 mo
165.647 88.2873 li
166.167 88.0174 li
166.84 88.7942 li
166.109 89.1746 li
.626978 .548089 .52752 .26511 cmyk
f
165.577 89.4829 mo
165.577 89.4829 li
.653803 .579431 .548302 .336461 cmyk
f
165.749 92.7016 mo
165.077 91.9266 li
165.077 89.4829 li
165.577 89.4829 li
166.077 89.4829 li
166.077 92.6017 li
165.968 92.6353 165.859 92.6685 165.749 92.7016 cv
.626978 .548089 .52752 .26511 cmyk
f
249.955 195.189 mo
173.81 107.387 li
178.485 107.387 li
252.994 193.303 li
252.002 193.947 250.988 194.576 249.955 195.189 cv
161.991 93.7585 mo
151.195 81.3095 li
152.228 80.6967 153.242 80.0679 154.234 79.4233 cv
165.077 91.9266 li
165.077 92.9026 li
164.041 93.2084 163.008 93.4941 161.991 93.7585 cv
.389654 .317082 .311955 .0028687 cmyk
f
165.077 92.9026 mo
165.077 91.9266 li
165.749 92.7016 li
165.524 92.7698 165.302 92.8364 165.077 92.9026 cv
.631556 .561395 .528222 .280247 cmyk
f
246.686 197.033 mo
168.943 107.387 li
173.81 107.387 li
249.955 195.189 li
249.479 195.471 248.998 195.75 248.514 196.025 cv
248.089 196.266 247.667 196.501 247.244 196.731 cv
247.058 196.833 246.872 196.933 246.686 197.033 cv
157.955 94.7173 mo
147.927 83.1533 li
148.41 82.894 148.895 82.6281 149.381 82.3555 cv
149.386 82.3529 149.39 82.3503 149.395 82.3477 cv
149.404 82.3426 149.413 82.3374 149.422 82.3323 cv
149.433 82.3261 149.445 82.3196 149.456 82.3135 cv
149.461 82.3107 149.465 82.308 149.47 82.3053 cv
149.487 82.296 149.503 82.287 149.519 82.2778 cv
149.524 82.275 149.529 82.2723 149.534 82.2696 cv
149.548 82.2612 149.563 82.2531 149.578 82.2448 cv
149.58 82.2436 149.582 82.2424 149.584 82.2412 cv
149.602 82.231 149.62 82.2208 149.638 82.2106 cv
149.64 82.2097 149.641 82.2089 149.643 82.208 cv
149.659 82.1987 149.676 82.1894 149.692 82.1801 cv
149.695 82.1785 149.698 82.1769 149.701 82.1753 cv
149.718 82.1652 149.736 82.155 149.754 82.145 cv
149.754 82.145 li
150.238 81.8706 150.719 81.5918 151.195 81.3095 cv
161.991 93.7585 li
160.625 94.1135 159.281 94.4315 157.955 94.7173 cv
.402258 .324285 .32047 .00387579 cmyk
f
243.26 198.769 mo
166.077 109.77 li
166.077 107.387 li
168.943 107.387 li
246.686 197.033 li
246.442 197.164 246.197 197.294 245.953 197.421 cv
245.05 197.894 244.152 198.343 243.26 198.769 cv
165.077 108.617 mo
164.011 107.387 li
165.077 107.387 li
165.077 108.617 li
153.731 95.5331 mo
144.5 84.8892 li
145.633 84.3486 146.776 83.77 147.927 83.1533 cv
157.955 94.7173 li
156.522 95.0264 155.111 95.2973 153.731 95.5331 cv
.410773 .334051 .329168 .00582895 cmyk
f
166.077 109.77 mo
165.077 108.617 li
165.077 107.387 li
166.077 107.387 li
166.077 109.77 li
.637018 .575433 .541161 .313207 cmyk
f
239.633 200.385 mo
166.077 115.568 li
166.077 109.77 li
243.26 198.769 li
242.037 199.352 240.826 199.891 239.633 200.385 cv
165.077 114.415 mo
158.982 107.387 li
164.011 107.387 li
165.077 108.617 li
165.077 114.415 li
149.274 96.1925 mo
140.873 86.5049 li
141.675 86.1732 142.484 85.8212 143.3 85.4489 cv
143.3 85.4489 143.3 85.4488 143.3 85.4487 cv
143.318 85.4407 143.336 85.4327 143.353 85.4246 cv
143.362 85.4205 143.371 85.4164 143.38 85.4123 cv
143.385 85.4102 143.389 85.408 143.394 85.406 cv
143.761 85.2378 144.13 85.0655 144.5 84.8892 cv
153.731 95.5331 li
152.207 95.7935 150.722 96.0112 149.274 96.1925 cv
.420844 .339635 .341405 .00781262 cmyk
f
166.077 115.568 mo
165.077 114.415 li
165.077 108.617 li
166.077 109.77 li
166.077 115.568 li
.643549 .574548 .554528 .332494 cmyk
f
235.706 201.869 mo
166.077 121.58 li
166.077 115.568 li
239.633 200.385 li
239.074 200.616 238.518 200.838 237.967 201.049 cv
237.964 201.05 237.962 201.051 237.959 201.052 cv
237.959 201.052 237.959 201.052 237.958 201.052 cv
237.199 201.343 236.448 201.615 235.706 201.869 cv
165.077 120.427 mo
153.769 107.387 li
158.982 107.387 li
165.077 114.415 li
165.077 120.427 li
144.48 96.6769 mo
136.946 87.9893 li
137.699 87.7321 138.461 87.4555 139.232 87.1596 cv
139.235 87.1582 139.24 87.1565 139.243 87.1551 cv
139.253 87.1514 139.262 87.1477 139.272 87.144 cv
139.288 87.1379 139.304 87.1317 139.32 87.1256 cv
139.322 87.1248 139.324 87.124 139.326 87.1231 cv
139.838 86.9256 140.354 86.7195 140.873 86.5049 cv
149.274 96.1925 li
147.621 96.3994 146.021 96.5582 144.48 96.6769 cv
.432074 .349859 .346777 .00967422 cmyk
f
166.077 121.58 mo
165.077 120.427 li
165.077 114.415 li
166.077 115.568 li
166.077 121.58 li
.652949 .578241 .558312 .348028 cmyk
f
231.203 203.206 mo
166.077 128.109 li
166.077 121.58 li
235.706 201.869 li
234.163 202.396 232.658 202.842 231.203 203.206 cv
165.077 126.956 mo
148.107 107.387 li
153.769 107.387 li
165.077 120.427 li
165.077 126.956 li
139.053 96.9479 mo
132.443 89.3257 li
132.745 89.2503 133.049 89.1714 133.354 89.089 cv
133.358 89.0879 133.361 89.0871 133.365 89.0861 cv
133.37 89.0847 133.375 89.0834 133.38 89.082 cv
134.218 88.8555 135.072 88.6026 135.939 88.3234 cv
136.273 88.2159 136.609 88.1046 136.946 87.9893 cv
144.48 96.6769 li
142.575 96.8236 140.761 96.9091 139.053 96.9479 cv
.439155 .360479 .356176 .0127871 cmyk
f
166.077 128.109 mo
165.077 126.956 li
165.077 120.427 li
166.077 121.58 li
166.077 128.109 li
.656031 .591669 .556023 .364477 cmyk
f
222.44 204.407 mo
218.137 204.407 214.777 203.313 212.852 201.094 cv
166.077 147.158 li
166.077 128.109 li
231.203 203.206 li
230.487 203.384 229.783 203.543 229.092 203.683 cv
229.092 203.683 li
226.7 204.165 224.465 204.407 222.44 204.407 cv
165.077 146.005 mo
131.587 107.387 li
148.107 107.387 li
165.077 126.956 li
165.077 146.005 li
136.814 96.9734 mo
128.229 96.9732 122.844 95.8404 122.844 95.8404 cv
121.686 95.9706 li
117.767 91.451 li
119.318 90.0768 li
120.626 90.3774 122.088 90.5269 123.679 90.5269 cv
125.705 90.527 127.939 90.2845 130.332 89.8028 cv
130.332 89.8028 li
130.945 89.6793 131.569 89.5401 132.202 89.3852 cv
132.282 89.3656 132.363 89.3458 132.443 89.3257 cv
139.053 96.9479 li
138.286 96.9653 137.538 96.9734 136.814 96.9734 cv
117.111 90.6955 mo
114.099 87.2217 li
114.092 87.2143 li
114.152 87.2837 114.214 87.3516 114.277 87.4187 cv
114.277 87.4193 li
114.293 87.4358 114.308 87.452 114.324 87.4685 cv
114.324 87.4689 114.325 87.4694 114.325 87.4698 cv
114.34 87.4859 114.356 87.502 114.371 87.518 cv
114.372 87.5187 114.372 87.5191 114.373 87.5199 cv
114.385 87.5318 114.397 87.5437 114.408 87.5556 cv
114.408 87.5558 114.409 87.5559 114.409 87.5561 cv
114.412 87.5596 114.416 87.5636 114.42 87.5672 cv
114.421 87.5681 114.421 87.5686 114.422 87.5696 cv
114.433 87.5809 114.445 87.5926 114.456 87.6038 cv
114.457 87.6044 114.457 87.6048 114.458 87.6053 cv
114.461 87.6089 114.465 87.6126 114.469 87.6161 cv
114.47 87.6171 114.47 87.6178 114.471 87.6187 cv
114.482 87.6297 114.494 87.641 114.505 87.6519 cv
114.506 87.6528 114.507 87.6533 114.508 87.6543 cv
114.511 87.6578 114.515 87.6612 114.518 87.6647 cv
114.519 87.6655 114.52 87.6667 114.521 87.6674 cv
114.532 87.6783 114.543 87.689 114.555 87.6998 cv
114.556 87.7007 114.557 87.7019 114.558 87.7028 cv
114.562 87.7063 114.565 87.7096 114.569 87.7131 cv
114.569 87.7138 114.57 87.7147 114.571 87.7154 cv
114.583 87.7264 114.594 87.7371 114.606 87.748 cv
114.606 87.7488 114.607 87.7498 114.608 87.7505 cv
114.612 87.754 114.616 87.7576 114.619 87.761 cv
114.62 87.7617 114.621 87.762 114.621 87.7628 cv
114.633 87.7735 114.644 87.7843 114.656 87.795 cv
114.657 87.7961 114.659 87.7974 114.66 87.7985 cv
114.664 87.8019 114.667 87.8049 114.671 87.8084 cv
114.671 87.8089 114.672 87.8095 114.672 87.81 cv
114.68 87.8172 114.688 87.8243 114.696 87.8315 cv
114.696 87.8317 114.697 87.8321 114.697 87.8323 cv
114.7 87.8355 114.704 87.839 114.708 87.8422 cv
114.709 87.8435 114.71 87.8443 114.711 87.8455 cv
114.715 87.8487 114.719 87.8523 114.722 87.8555 cv
114.723 87.8557 114.722 87.8555 114.723 87.8557 cv
114.731 87.8629 114.739 87.8703 114.747 87.8774 cv
114.747 87.878 114.748 87.8787 114.749 87.8792 cv
114.753 87.8826 114.756 87.8854 114.76 87.8888 cv
114.761 87.8899 114.763 87.8914 114.764 87.8924 cv
114.776 87.9029 114.787 87.913 114.799 87.9234 cv
114.8 87.9241 114.801 87.9249 114.801 87.9256 cv
114.805 87.9289 114.809 87.9322 114.813 87.9355 cv
114.814 87.9364 114.815 87.9372 114.816 87.9381 cv
114.828 87.9487 114.84 87.9593 114.852 87.9698 cv
114.853 87.9703 114.854 87.9708 114.854 87.9714 cv
114.858 87.9747 114.862 87.9781 114.866 87.9815 cv
114.867 87.9823 114.868 87.983 114.869 87.9838 cv
114.881 87.9943 114.893 88.0047 114.905 88.0151 cv
114.906 88.0156 114.907 88.0164 114.908 88.017 cv
114.912 88.0204 114.916 88.0237 114.92 88.0271 cv
114.92 88.0276 114.921 88.0282 114.922 88.0287 cv
114.934 88.0392 114.947 88.0497 114.959 88.0601 cv
114.96 88.0606 114.961 88.0616 114.962 88.0621 cv
114.966 88.0656 114.97 88.0688 114.974 88.0722 cv
114.974 88.0726 114.975 88.073 114.975 88.0733 cv
114.988 88.0839 115.001 88.0945 115.014 88.1051 cv
115.015 88.1056 115.015 88.1061 115.016 88.1066 cv
115.033 88.1209 115.051 88.1351 115.069 88.1493 cv
115.07 88.1499 115.07 88.1503 115.071 88.151 cv
115.089 88.1651 115.107 88.1795 115.125 88.1935 cv
115.125 88.1938 115.125 88.194 115.126 88.1944 cv
115.144 88.2086 115.162 88.2228 115.18 88.2368 cv
115.181 88.2372 115.181 88.2376 115.182 88.2379 cv
115.196 88.2485 115.209 88.2589 115.223 88.2694 cv
115.223 88.2696 li
115.228 88.2732 115.232 88.2765 115.237 88.2801 cv
115.238 88.2804 li
115.252 88.2911 115.266 88.3015 115.28 88.312 cv
115.28 88.3122 li
115.299 88.3264 115.318 88.3404 115.337 88.3544 cv
115.337 88.3544 li
115.375 88.3824 115.414 88.4102 115.453 88.4377 cv
115.453 88.4377 li
115.716 88.6232 115.993 88.7961 116.285 88.9568 cv
116.286 88.9568 li
116.307 88.9687 116.329 88.9804 116.35 88.9922 cv
116.351 88.9923 116.351 88.9923 116.351 88.9924 cv
116.372 89.0041 116.394 89.0159 116.416 89.0274 cv
116.416 89.0274 li
116.438 89.0391 116.46 89.0504 116.482 89.0619 cv
116.482 89.062 116.483 89.0623 116.483 89.0624 cv
116.499 89.0708 116.515 89.079 116.531 89.0873 cv
116.532 89.0875 116.532 89.0878 116.533 89.0881 cv
116.538 89.0908 116.543 89.0933 116.548 89.0961 cv
116.549 89.0963 116.549 89.0967 116.55 89.097 cv
116.566 89.1049 116.582 89.113 116.597 89.1209 cv
116.598 89.1214 116.599 89.1218 116.6 89.1223 cv
116.605 89.1249 116.61 89.1273 116.615 89.1299 cv
116.616 89.1303 116.617 89.1307 116.617 89.1311 cv
116.633 89.1387 116.648 89.1465 116.664 89.1541 cv
116.665 89.1548 116.667 89.1555 116.668 89.1563 cv
116.673 89.1587 116.678 89.1609 116.683 89.1634 cv
116.683 89.1637 116.685 89.1644 116.685 89.1648 cv
116.695 89.1696 116.705 89.1743 116.715 89.1791 cv
116.716 89.1795 116.717 89.18 116.717 89.1804 cv
116.722 89.1827 116.726 89.1847 116.731 89.187 cv
116.733 89.1879 116.735 89.189 116.737 89.1899 cv
116.741 89.1921 116.746 89.1942 116.75 89.1963 cv
116.752 89.1971 116.753 89.1977 116.755 89.1985 cv
116.763 89.2027 116.772 89.2066 116.78 89.2107 cv
116.782 89.2116 116.785 89.2128 116.786 89.2136 cv
116.791 89.2156 116.795 89.2176 116.799 89.2196 cv
116.802 89.2209 116.804 89.2218 116.806 89.2231 cv
116.81 89.225 116.815 89.2271 116.819 89.229 cv
116.821 89.23 116.823 89.231 116.825 89.232 cv
116.832 89.2355 116.84 89.239 116.847 89.2425 cv
116.85 89.2437 116.853 89.2452 116.856 89.2465 cv
116.86 89.2483 116.863 89.25 116.867 89.2519 cv
116.87 89.2532 116.873 89.2547 116.876 89.256 cv
116.88 89.2579 116.884 89.2594 116.888 89.2612 cv
116.892 89.2634 116.897 89.2657 116.902 89.2679 cv
116.906 89.2699 116.911 89.2721 116.915 89.274 cv
116.919 89.2757 116.922 89.2773 116.926 89.279 cv
116.929 89.2805 116.933 89.2821 116.936 89.2837 cv
116.94 89.2853 116.944 89.287 116.947 89.2886 cv
116.95 89.2902 116.953 89.2915 116.957 89.2931 cv
116.963 89.2959 116.969 89.2988 116.975 89.3015 cv
116.978 89.3029 116.982 89.3043 116.985 89.3056 cv
116.989 89.3074 116.992 89.3092 116.996 89.311 cv
117 89.3124 117.003 89.3138 117.006 89.3153 cv
117.01 89.3172 117.014 89.319 117.019 89.3209 cv
117.021 89.3221 117.024 89.3233 117.027 89.3245 cv
117.033 89.3274 117.04 89.3304 117.046 89.3332 cv
117.049 89.3344 117.051 89.3355 117.054 89.3367 cv
117.059 89.3387 117.063 89.3408 117.068 89.3428 cv
117.07 89.3439 117.073 89.3452 117.076 89.3462 cv
117.081 89.3487 117.086 89.3509 117.092 89.3534 cv
117.093 89.3541 117.095 89.3549 117.097 89.3556 cv
117.104 89.3586 117.111 89.3616 117.118 89.3647 cv
117.12 89.3655 117.122 89.3665 117.124 89.3673 cv
117.129 89.3696 117.134 89.3718 117.14 89.3742 cv
117.142 89.3751 117.144 89.3761 117.146 89.377 cv
117.153 89.3799 117.16 89.3831 117.167 89.386 cv
117.167 89.3861 117.167 89.386 117.167 89.3862 cv
117.175 89.3893 117.182 89.3925 117.19 89.3956 cv
117.191 89.3963 117.193 89.3969 117.194 89.3976 cv
117.2 89.4002 117.207 89.4029 117.213 89.4054 cv
117.214 89.406 117.216 89.4066 117.217 89.4072 cv
117.232 89.4137 117.247 89.4199 117.262 89.4263 cv
117.263 89.4266 117.264 89.4272 117.265 89.4275 cv
117.272 89.4305 117.279 89.4332 117.286 89.4362 cv
117.287 89.4365 117.288 89.4369 117.289 89.4372 cv
117.304 89.4436 117.32 89.4501 117.335 89.4564 cv
117.336 89.4567 117.337 89.457 117.337 89.4573 cv
117.605 89.5668 117.882 89.6677 118.167 89.7603 cv
117.111 90.6955 li
.44889 .36527 .366888 .0170291 cmyk
f
166.077 147.158 mo
165.077 146.005 li
165.077 126.956 li
166.077 128.109 li
166.077 147.158 li
.65658 .593683 .566644 .383185 cmyk
f
grestore
206.581 84.9604 mo
205.146 84.0005 204.252 83.2466 203.14 82.3491 cv
201.665 87.1733 li
202.186 87.0962 204.251 86.9263 205.979 86.9331 cv
207.827 86.938 209.469 87.0581 210.502 87.2368 cv
209.545 86.8071 208.117 85.9888 206.581 84.9604 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 88 /X putdup 90 /Z putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/X <1C60D8A8C9B6092206CD5AEE2B9C72D9BBF62CA31CD05101AF9F5CF9EB857137F762E0A067EB05566405EA81D2FCB002166772CA238C3A4282B79454B501C810413B70FFB12751D9083EDF9F814E65F098F740C3CA1B0C614185B0025DF3146FE3B28A413D0F4BB2119BFC45EA1EF8E0238D5969E42C9043F42EC5FAED2EB768D79D7B6025CBD973FC6247CAC87211423314B74FBCBA2E901BBE09A4DC840F3D28B68467B20FED3A901127EE0EA1523FEA8C1E4CBEADC08A2ACE8B315116BA65C96DA2B7773F48BC53F67F61820EE186C1FB1E990E287A6A075E7D673D> |-/Z <1C60D8A8C9B6282379083F504FD1A7C73963E44A2CAF0F3E4C2114131A8EF94C7A5517B1792BA707F31A53751D29E33B5576AEF560095DC390CB6B16FB9062CD0B458C5D6727C283AF0AF77347DA2D14B67531B67AD4164E119E305277963D68566BDEF8D5BAB62C34FA95DB541993F5028635D5C51C0E8041318E5D892C58C42985C4D8AF0360ABACC82164210E32A0234FC351AE461FCE35CA9ABBF75A5B161F2DE9D82EB10A7E794DFC9DDEE0081F1CD73B395D00F36D4D26AAB36DD134A1401799442ADA736AD20CBFB62D99AC7BAF773C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTW+ComicSansMS /ComicSansMS findfont ct_VMDictPut/QXICTW+ComicSansMS*1 [88{/.notdef}rp /X /.notdef /Z 165{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf286.795 198.917 mo(X)sh61.1895 123.316 mo(Z)sh176.1 46.422 mo
270.725 157.175 li
271.486 156.525 li
176.861 45.7724 li
3.0518e-05 .976532 1 3.0518e-05 cmyk
f
177.387 60.5466 mo
192.441 65.9225 li
192.778 64.9808 li
177.724 59.6048 li
f
191.365 76.6755 mo
206.419 82.0514 li
206.755 81.1097 li
191.701 75.7337 li
f
201.043 90.654 mo
216.096 96.03 li
216.433 95.0882 li
201.379 89.7122 li
f
215.021 104.632 mo
230.075 110.008 li
230.411 109.067 li
215.358 103.691 li
f
229 118.611 mo
244.055 123.987 li
244.391 123.045 li
229.336 117.669 li
f
239.753 132.59 mo
254.806 137.965 li
255.143 137.024 li
240.089 131.648 li
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTW+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B84186EC> |-/equal <1C60D8A8C9B7BDE38931BBD04A1F1E63D492705533370D5C0D2D0CF20659152C1BA6FED65BD91B34F9CF906EF38449BA7BD5B5F84C54070F4B79BEB91907EBCD64BE6DF5EF21CA0A19BD15F70C852E58681E3F699CF9FF707531968969BCE6CD4042802F16C62A0CDA95AFAC40F46D1DC2D5D949D101DEC04ABCD7B6A9C42F97825775AA3EF07BD84B94742B22E3DAAA95EDDA11> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/f <1C60D8A8C9B7BF865DF0D20FCA4404E9859CDE906439E1B6481B2FEB75413186C365A9DBC3A750FC8CD5B7F7B8622936B45EA60095B3D37F9B468C68E03657C1298567EDFC2A59EB6AD01922F49B485CDC5C730EBEA4B7AC828B861131433F470ED067D8654035DAAD4DA6650191581F595073FA084732A337B92D51D4D5D1490EB14D559CFDA4011DD74E951F328BCA12BF2268B70EA48A2C4C52B1A0109B3EACFA7B6EF61D5055DE5A6ED1F24E05DB4ACEB6> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/w <1C60D8A8C9B6218487477493A6ED6FC49ADE7DB5A336FA1EBC5DDDBD48D99F5928C02BD528261F4B15A41301EAC0B328314A22E884D6FD1C59CA5497BCB2DD47D888224B9D6A58A779C950597CDE4E747B3963BC377CAE93AA58AA7115E69CE989D76E37B26207B544A0ED52C2A2EC01472B28F0E832B7D16EADBE6104D00877050F8D30EEE2CBA8A97FB7E3C2997DC2B38AE56987D1577B31463680DA7FF636A537A36637C58577517E9D0FA948B1552DF9E47467B7AAFAD757883931987E128011F634BAAAA9FF3D857B1ABD99308B07> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTW+ComicSansMS /Encoding getdup 32 /space putdup 61 /equal putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 111 /o putdup 114 /r putdup 119 /w putpop%ADOEndSubsetFont
/QXICTW+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 26{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf238.845 110.611 mo(field arrow = lab arrow)sh317.944 46.0961 mo
199.287 107.387 li
20.1602 107.387 li
122.844 95.8404 li
122.844 95.8404 165.058 104.723 201.567 72.7456 cv
317.944 46.0961 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
328.24 38.4865 mo
205.762 106.038 li
20.8242 106.038 li
20.8242 107.038 li
206.019 107.038 li
328.723 39.3621 li
328.24 38.4865 li
cp
.697627 .675227 .638575 .739559 cmyk
f
123.474 96.4103 mo
123.501 96.4159 128.794 97.5496 137.227 97.5497 cv
152.4 97.5511 177.769 93.8731 200.815 73.2973 cv
200.149 72.5513 li
177.34 92.9154 152.249 96.5484 137.227 96.5497 cv
133.056 96.5497 129.663 96.2691 127.317 95.9891 cv
126.144 95.8491 125.232 95.7092 124.616 95.6047 cv
124.307 95.5525 124.073 95.5091 123.916 95.4789 cv
123.759 95.4487 123.684 95.4325 123.684 95.4325 cv
123.474 96.4103 li
cp
f
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTW+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTW+ComicSansMS /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/QXICTW+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 26{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf147.448 269.752 mo(down)sh152.414 61.4632 mo
267.467 41.0335 li
266.943 38.0797 li
151.889 58.5094 li
f
288.061 35.8535 mo
260.803 53.0791 li
265.646 39.834 li
256.539 29.0664 li
288.061 35.8535 li
cp
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTW+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTW+ComicSansMS /Encoding getdup 78 /N putdup 104 /h putdup 116 /t putpop%ADOEndSubsetFont
/QXICTW+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf292.113 31.8887 mo(North)sh194.009 30.6785 mo
194.053 30.6743 li
194.15 30.6657 194.403 30.6471 194.773 30.6471 cv
195.958 30.6457 198.327 30.8428 200.569 32.134 cv
202.808 33.4299 204.959 35.7802 205.799 40.2767 cv
206.783 40.0944 li
205.911 35.3486 203.539 32.6797 201.067 31.267 cv
198.597 29.8496 196.063 29.6486 194.773 29.6471 cv
194.236 29.6472 193.913 29.6831 193.897 29.6848 cv
194.009 30.6785 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
180.513 238.09 mo
180.538 238.088 194.069 237.253 211.206 232.238 cv
228.34 227.22 249.094 218.028 263.527 201.25 cv
262.769 200.598 li
248.536 217.153 227.957 226.295 210.925 231.278 cv
202.41 233.77 194.786 235.224 189.293 236.055 cv
186.547 236.471 184.333 236.73 182.808 236.886 cv
182.045 236.963 181.455 237.015 181.056 237.047 cv
180.656 237.08 180.452 237.092 180.452 237.092 cv
180.513 238.09 li
cp
f
.292973 .756527 .000457771 3.0518e-05 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTW+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/underscore <1C60D8A8C9B66621B1FC614DC22A261CDC9633D73BEF2B15C91987C6C1966C96C3F6A28EA35CD5B3535A4BEF756AF36EF54196F4BBFAA0F653219B7114F89D716B2B90AF1CCD0C76C5A474E37EBFFFB08B3E> |-/g <1C60D8A8C9B7883C34847673539A3C47283D2869DE727C001A8ED17F310363C066266AC877F71DE696B52BA5756C41FA2C6742427FE25CABE743DC5A8409CA03A46FFE172EB266EBE72B596730C9547F1BA9130523A2B6925FB6C63D24A5FA2932E01CB40C0D974065C69BA7D95C92F84E75317230A20A5B57C1414477131B85EE5ACE9CF2CFFA8F81FDD0E1570B07F54AEF9E9559FF767E5E4A6770AB6167D2B403FC1CDDEF440629F36A00CE900D50814788B0FF5D0993B3F9BE201807168AC2FF35AD7144226A32EFAB4AE57534B933FE2F650AE3AB04CFB63638BA8BDA42DA1BFD76C61D93DA> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-/z <1C60D8A8C9B78181CF7403A347E4AD8687C7377BB84C2D8D37DDAB99BAE45345A0696395EADDCC8C80FC69A4904702F5EACB9BE2C6DB26AA55CBA722D1396922984300856064911BA64AF2B2CEBFA0F71035A73C2EFF18BEE1D055EB6A567A32C8BD76673673D4DE9BDE89B2B554DC0D70CC9E32918CA3396E71081EB3572E875B8503A44A9608DE9D423AA2263CF29FD4C750120816CDE0C7E33B7553CF2397CE2DB011E9F74D9013C00F732CCC4C8B31DFEC60AF92623FD9815754B7D460047E76CA19A3E3304BAF40> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTW+ComicSansMS /Encoding getdup 95 /underscore putdup 103 /g putdup 109 /m putdup 112 /p putdup 117 /u putdup 122 /z putpop%ADOEndSubsetFont
/QXICTW+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf225.815 240.924 mo(field_dip)sh204.39 29.752 mo(mag_azimuth)sh.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTW+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTW+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 99 /c putpop%ADOEndSubsetFont
/QXICTW+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 19{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTW+ComicSansMS nfQXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf258.147 122.926 mo(\(direction of drill\))sh125.127 61.8715 mo
252.56 63.4253 li
252.572 62.4253 li
125.139 60.8716 li
f
254.94 61.9292 mo
253.293 61.4097 252.225 60.9365 250.905 60.3882 cv
250.844 65.4321 li
251.32 65.2124 253.256 64.4692 254.915 63.9902 cv
256.691 63.4771 258.3 63.1309 259.342 63.0132 cv
258.304 62.8701 256.703 62.4849 254.94 61.9292 cv
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 117 /u putdup 122 /z putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings19 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/z <1C60D8A8C9B76F05D40D9AF06C62C52F8E7A83C69F6CDC031056F31E455ADB43C89D34E1A28A8E500535BCBC2826CEC41780F6E88D88BBC16CBA809407E19164AA6CDC22FB> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTX+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QXICTX+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]QXICTX+MyriadPro-Regular nfQXICTX+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf210.973 10.0439 mo(\(azimuth of drill direction\))[3.4082 5.78418 5.13574 2.80762 10.0078 6.6123 3.97168 6.66016 2.54395 6.58789 3.50391 2.54395 6.76758 3.97168 2.80859 2.83203 2.83105 2.54395 6.76855 2.80762 3.80371 6.0127 5.53125 3.97168 2.80859 6.58789 6.66016 0 ]xsh241.947 258.716 mo(\(hade\))[3.4082 6.66016 5.78418 6.76758 6.01172 0 ]xsh83.3589 121.253 mo
171.87 42.8715 li
192.036 25.0889 li
83.3589 121.253 li
.697627 .675227 .638575 .739559 cmyk
f
83.6904 121.627 mo
172.202 43.2459 li
192.366 25.4639 li
191.705 24.7138 li
171.534 42.5013 li
83.0274 120.879 li
83.6904 121.627 li
f
82.0747 124.009 mo
83.9355 123.151 85.2515 122.712 86.8501 122.14 cv
82.8613 117.697 li
82.6177 118.268 81.5156 120.457 80.4443 122.194 cv
79.2993 124.055 78.1646 125.636 77.3457 126.569 cv
78.3711 125.867 80.0835 124.929 82.0747 124.009 cv
cp
f
82.0747 124.009 mo
82.2841 124.463 li
84.1217 123.616 85.4123 123.185 87.0185 122.611 cv
87.7196 122.36 li
82.7092 116.779 li
82.4014 117.501 li
82.1787 118.026 81.0708 120.228 80.0187 121.932 cv
78.8858 123.774 77.7579 125.343 76.97 126.239 cv
77.6282 126.981 li
78.6133 126.306 80.3129 125.373 82.2843 124.463 cv
82.0747 124.009 li
81.8651 123.555 li
79.8541 124.485 78.1288 125.427 77.0632 126.156 cv
77.3457 126.569 li
77.7214 126.899 li
78.5712 125.93 79.7128 124.336 80.8702 122.456 cv
81.9604 120.685 83.0566 118.51 83.3212 117.893 cv
82.8613 117.697 li
82.4893 118.031 li
86.478 122.474 li
86.8501 122.14 li
86.6817 121.669 li
85.0906 122.238 83.7494 122.686 81.8653 123.555 cv
82.0747 124.009 li
cp
f
182.081 49.9088 mo
276.706 160.662 li
277.466 160.013 li
182.841 49.2592 li
.675502 3.0518e-05 .872801 3.0518e-05 cmyk
f
183.368 64.0334 mo
198.422 69.4093 li
198.758 68.4676 li
183.704 63.0916 li
f
197.346 80.1623 mo
212.399 85.5383 li
212.736 84.5965 li
197.682 79.2205 li
f
207.023 94.1408 mo
222.077 99.5168 li
222.413 98.575 li
207.36 93.199 li
f
221.002 108.119 mo
236.055 113.495 li
236.392 112.554 li
221.338 107.178 li
f
234.98 122.098 mo
250.035 127.474 li
250.371 126.532 li
235.317 121.156 li
f
245.733 136.076 mo
260.787 141.453 li
261.123 140.511 li
246.07 135.135 li
f
51.6191 103.85 mo
34.9403 103.85 li
102.655 88.7531 li
102.655 98.1106 li
51.6191 103.85 li
25.6204 103.85 mo
0 103.85 li
0 84.3808 li
60.417 84.3808 li
25.6204 103.85 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
34.9403 103.85 mo
27.6684 103.85 li
62.465 84.3808 li
102.655 84.3808 li
102.655 88.7531 li
34.9403 103.85 li
f
27.6684 103.85 mo
25.6204 103.85 li
60.417 84.3808 li
62.465 84.3808 li
27.6684 103.85 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
102.257 103.85 mo
51.6191 103.85 li
102.655 98.1106 li
102.655 103.497 li
102.257 103.85 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
102.655 103.85 mo
102.257 103.85 li
102.655 103.497 li
102.655 103.85 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
.697627 .675227 .638575 .739559 cmyk
QXICTW+ComicSansMS*1 [12 0 0 -12 0 0 ]msf5.0957 97.0903 mo(horizontal plane)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QXICTX+MyriadPro-Regular*1 uf/QXICTX+MyriadPro-Regular uf/MyriadPro-Regular uf/QXICTW+ComicSansMS*1 uf/QXICTW+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Lisa Tauxe) ()%%Title: (orcon_3.eps)%%CreationDate: 8/9/10 5:37 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l#Ib6Q7hq8G_c2AZRVFk&AEom@q18$DtQpQ=])3%T!iF?'TaS[$O[o3,hCGjq9J!YR=N5/8g4:8&k7K;l/CsuZ[X$gIC=?F%HZ=(PnRh7\VpB")#W%h5/<sWZA(^YEZi>1EQc8W4SS^<_KSnO#PrMG/T5b];HGj`_0%+57QcHSuMi4(.Y:bkPf@TndB9u]OT?m5g%cS&m;cJQu-o@\UFcH\%lSF)llO8n'"EccSHK;t:$VoQ"'(Y<$.U+cPMfpD02:?O"ShM]-"hV=^IYI[51h7e5[G.KY9s3]XeV=0F>%cPB$;=6K1ER2`R>'KZ9MhX0R\ae*Lt^L(5o4q"oo3./a[q"C.GNooU+;Z*GNj0RL(`Rcr#`Q=atl0E,4;82)j^KTFJd&PKL*0"J.%bQ%EgqrRU#2Je^:GXoMiWHepMT>>kMs/CXoEV>1fV@fG,hd"EE:+n:"pE+N3=-rC$k?!/J`b#W8QeZaT+jJH&[u4%-(3A=BFc95s%S&P38Zh_jtG;%IYSRu;$pilSLeta&>=tXZIlpkf>HRsGC,40I^@@$*`.ZiB5*\Vt%?2XIXD=$fW`QdN;>?S,4:QK(\GHYmjSc47B%cGbV0ia;ND0=PSPX)BXdZ"kCL<?D,0nmla[bGNT-S^"F""95mq?`EP>r9DPdL'[JClkU!%q/!DZBI@04h_2.8[C,ke=76n@hd$/G%8,Qg9Ai[AhgNH![+kBfdoUh7-(rr%c6gN4S^X=g)5pOrA&^"`ne#%V;Fo(7mic?,Eq<m.D:/<o;n?Z!lR9@u@D1_bP&^k3.DAF$L%@\V!C0;fS?@2ia:VS@CLA9osp`CeNieN=db&:6f"(C0Q$3NYWL_sDk)I[]Z;^B%mUoHse>Rkt&G('!^j>A4B<*<Nqa!T/VSh]<fs%BmD1@eB/Z$E^m1$;(Lh),AXVde>X1*.fI34[A$^(W.k91?e!fe8$2`<4Lr4fDt`p&kNE3/*Za@$ViQl-rR$`i,9rNEb'9^Pq%cc[%pOTgkr^AE_$3-_8k%$95mk?!aM`R4;rl)Ne-0/4Q$3/uuAqYZ]P,skSN#CS]bT";oME.A+=\\-&[4j93M`O?u.'rlgaCU?B'kN["%Y<46iQdO"/ASfdV7W*Q`2<59_@=Itf/]eLFXQ;Os1&OKmbg1H7<^iV!r9u@'@<SsVpfBqF')[YkQll<m>necNFd;sRUX9'2DY.Fc%-KC:i7kIk&>8N^<N#j41ECmpnZL+".YWo(=fbn@1G'I2&/`1#dp_U>k^+hiT'6tAnU(1eEopJ[cSK1inks;9&B\7";W!ssf8eG72%F('DFlRnrr<L8/Gh(Wm(&Y#8K*OVtmBjI<sn)]Uh>Y_.mZg>6(NO3ZCItW9Kdk8s_I:fC"3a&md'C?0M)r4<^LSlL<ZBIK>ZE<])%%iCG2,bCT._o?HO[=4rXH'6f@s1rX4MGF1r0AfI<jUX`pr_1)gcdl_X8]gU/rfeV!Vr.&X*9HcO>2Q+Sg"hp3VVgrWDbiPm^ZEem%B*SZ>1B!M'LPPGGqCR2Op.+m<p(%,F^<1*c,en&B546I5F:`YWNcrJ!&Z,F&?qBk'EZkC[hc^+npl1h18RL6OGBAp[B9H')*70mZ%o"N0mr:S#FoSjdaK_DJOI\XCO1YRr:np?]K+i]3OFG+Z!5s@k9pc!KJOg`V@JhEcDBNq'ldA$$'&^SR8ClHf*bT'Dg]^cjhTs].s%pqQa'V506pGL?PA9Ad$m)!_b^q;<sJWXUfZrE]8*FVX5L0DL:InK.GC1Z.*=o"G!-PhTQ0T[*Q)Y+rG2N=^N]'@Ju:0]3VhPK(a$%.(ar[mJ=Ca^V.!LruZH1ePIUM:tm5oE\6-j>P%hIesE?$&CdFiE[2lo;91<8L:"rVfPND]6(dq4B^K1EA_]aT];*W'q`)ABNEUU$%i#0-nWP#[)WL3AqoS5?%Q0j#B`6h%$Iq@0+#59g"HY>LgI6P=4C&DD^*iHbHCI_=JrS@2IK/a,oJ^07HqS+f^Q+qOcQCkUn@VTiA%^qW%_Y!0PbnAN^?fU(81Q$/\U^_QZ?:6:u&g+huiA:!7^:28FNSeI!N:5A0ek^VnSa"+Bp*'e[@\I&:uZ,]"Fk?o34fTe<A)BOlZ%h-IS&bGT/X`ZfiL4V&<W+QqKkkm*p@iF!Q_k$Sl_SL,eJ<Kj[[rOTUF`ndU0dIa$UVAPpCp4Y\tc4>ktk\Bo_e`.MDg"8<H^DM7O%$dg'9I9S;[S\T?nIG?U\DAiHm[>`Km26G!7XZ]i/j3`Dg/#1Q/8`D#meGht\e(tD_W&/4'aZ%L::P[c*?(>/kST9,Rh,An'bss(4%f#eQuda;gebC;frpau'Vpke@HXbcC7^,m!RY5<V!oCI'g``eQFGD0tkpX`r/a[K$naAAC4U"m'X9q'^+.0jk=qHoL6D;T"@ZqGbQ%kB2'RgKrCo4P5+PA@p"g`]1*TY"Kns".(C\[*nY#g'3779-S^K!PcF<%f(sONk"blI$361m.Jj]o:@5unuAd34IeYsX457Bo52`R%cbY(Fk*+p]EP:I6dhA*7bi&=(VatAe^G\t>A!o07q^?Q/#3Crummo9lOeb3RY]Pp":%*,?7'dQqO\qH4:_ZC%qa#QgmcMG4Y1"kY%/oXn+#c1:\R"FbK0&"-E*m/SN4S,jM-X;sh<asi_HWZHHK5,oR.=O'SXJWlQa/<P/W]&lJ71U!e.0&>*POT(W7SY+;>Hb*[g9_l5%Sn_N=d0T2!qVOI$W-'d3370$n-CIBjC!&EEc):)aA/^2nZ28XC2AXe'`,b8e;B&+e%b8>1cR4--[IPQi@IEDC-7=fIF]o=IOtiaE%gs)d$8jW>$&ThQdJ5&9I`(;Vj^A'^toI3KK0^1p[aH%ZRE;;05,VNq0mHMXjGdZ@V^u)F^mRcfaRdD@h-XC>PVqU?-PPnO/<N?ZP%an%.Z8\kr9'tFH^\aS;MW5.bfl*&If17`C=Y3Zr[&SSRgp>bd%;r3YhA)5U:1c[RO-F8Z>qradb[cVfT]MiZ7m%8%Q2]6`[VjjKu%(dVki2Ji,$IrF<WC+ZRW$f`h^']%Jc\kgW::]'3n:G&G^R%??AI*+ILn51WIH*npr7GFV9)Rn,$n3Nba8YZjnT4H'N1@=hpIBnER%*;&4$b?R-0Q926a/\QUN]VO_u<gtp^>7n="TNsfDgAH6A8'B\gh_EPo?/=&Y./2)2b7eFuMr'XToVJt^KssaA]$9%^$)'p.1%]kB%@V(jbVuEdQT2ob:-'\nPebG8t1!oW)T:='2ooVD![53)::WpgbUHc*P<";EFB&`@-?^_tHZ^.]'OkuCfn`NJBm($=R6d9f=lNmN6%#Kg1>dHYQRH/=<@[p#gN'7OV58+?)VDq=g6N"/Ml\>L(^:I@m#:U_"FX-2V*<`fic>;L,M&IKXDDu/0U<SI>gj*GQro[K$[CLcU:%)S,N&S_]p9Rk]F$;'V1<#I9tF-JYi\b0oLEaN,X>mpL:_J"anRngQqI:]#<1KMjPqf&o3Bn*SRViOM+:lqD1ak>T(k[GtQTk%KD!%HImCqp5SnEM/0<_1+:)4&ip_u1!.e7f?*jQULat&c+E/R2YYb:Ydru^`^fZ#h!pa_O$G7b2@=:e\RlOjBt]-$mf1_\))&BpOS#.j%ao8Rt[*lgbrK\1[*A]iqi^HMP^I3)8S8in)HN.m-qfZB4F*`/$1NpELU$Zgj9(mTUIYY)o?<b`j*4F*=(akPgisq9,-`?T#5,B%;%6#0aX2kh'.1XGAp8c(KQB:HQ%/91CN2QPtJdbYq8.`1-k]m5dHU9BIcgFPJG8lfSfqI6]Thc`hsUTM)!IbVG.p62k%rJ6`JA<3]K%=JSc;SlF0VZ:&l^McM,dQ0W2r:eTGV>-sjKg=^,2Xgcgo3L6s72gr;R3_jG@KWERJ&,Y23;4m">8NGTgl?n76[-,D`lU<TA*P#C6%UegHJINZA9jHeBt/YE?8HeUaoe)#r]r9,7Fo[GD*BmCWCMcBk^Bi8"`'D'+G]lm_F[>_lc]9eg(QUX(\4gZ!O>MSo-)*O-'l`;48%958a=AM&8Tq6s0ZHfs'TYImFX$em2fXXO49IUq8j)tCFRo2_=B@6>G[Q6c?@E?"G,WGhL'`5rfHIV/3]ce\6lZ6WQ39C5qf@C69l%Y39Z&g-aA14./3s,-jTb8tmjkb=[5,G]A<T$MiTYjZ*rZXt@9Fl`848b;\utq`fT%C2n=lDX5'H6J_I0gWQ)*p$'GbZc0$.SMsXA%*u;rHf\&DJ?!Pc9f/pTGo_$N/n`&X%ltjCW3'Y-j=mZ(^k4J"NZ1F5\gY2J34Y`9QF)Gi-IXHHaI!bkhD"6!"I&\F;caiRUCOEro%DXB"9d7*fnU-3fPc(@V!e#pu1X)l,%Ds^e%h+O_og"!cPFY@;S[o2m"WnpKN[ruXnh37Z(2iF`-',oe<Z#`V)]lSV.\2qMYXr#."%le2+5p?ZU8Zh&'`Kb\k,G))YKT3n+9In$J\`Mlbbg<%Y1jh(7gVf1GKm+bjj:DQKeg6"+sm^=c$Db_(OGBOL@^:HLt?bbE37ISN>%YKoutDPp,#qu,M`kPTM2GjA*fqgEa4np3SrSR*l:s7?'Zna.2X=G8c#C[_:E]=>j+:G..0fNJ,oHo=4Prt9IF*m`0rJbIUZZV0$-%]>Jl793](h^UuR2]Y9dta\",0c;*8*k1B(aa,?Kofo02_2Z7d.EsWbq32%M_/C+&-'/D-o2ejG1:&Zu79B""W&#UP3[V0O&s/Z+e%p!m;jo^MS>P"3YBV2^s/EH>>GY>8lL8flLRc9(=SncT*4HTdq+n)r;\2F.7,<H$`#hHgkPD!gS4,^S,AIoe&YYRU"sQKCt@rhl>m%s3rOs8Lf-7Q+lP;Z[%$H285=ohtG<B.pniTVlm4!GIj\`,L5Jm=.o;gKiFN`o7;uJ/LPj[kO%ZUS,(V%q:Y]>L<ec>`T$>Ja)cQE%l^L7:;G7&[h)ErpkDRZ!J#4kFCQI/uiPk=5&ir7LIFfc</gX9lpJ1b=:1$`Df"Ut[Ud=!kf%fV]X4tTPn)#_JmeomqjuphT1m0qS%4*Md2/A:pM[<lri]aX5A?$=A!B!-e-g8W'kgs4706f'i:GYKRYk'_IQYrc3Af_8hbHGbLi2`e/D@RE)Po<XY0f<9C3U?A&B\b#7S%o&TM3R+*RmGQW+^c&[#1X7O<"q/"7)ZpQq^7sa<4fpTUM#Cb)ue8aYZEHX.1Go-,ndJ<g_io83lk2V!7B6:GnHhIC9qoc>7G3&DG%L*Tp^mqBt\-?;E'i7=OXiLBALYKq+NX+.mq]RBOPMq=;"J)HTc>smW6S(Um#ru^7,J"6I'$`<s;\im`0CsPo7rUC[C3`s&/]K2\,%\+I%l*a\cK34jRIR*&V>S]f]9cEH)Q\EU3CjqkDH>i&Y5GtK:RlT*41C3qH-E2,ok2r1_5U]"M/8Fr=[Zb8/(QIftAno8q3;YK)C%?6(9Xo4k^XFaO(1p<D^\=_i3VX4FitF"-B=N]t2>#;3a%O9N5MP?(fQC%poTdIfi6J%c0anhIVf5:;<6C=;A:I3%,7IHsJ=HO+%7%-T\q)TBN7)q&5doph]Kc4Xk(-^XO0&K@oZ"&L'$%Bsa5imf5_B]m;bi\)9/_hB$[]=09:A^>H92(GC5g-cXir7JHJiK.W:OrL>hI%.?1]:Zi>E2+`+9.-=6"NHRGWO&)3V3m!e1`ne5Z.ICFFN4Ylngs2^8!^Nl,9WXT'%I^Sk%GJE_5^$>pr433W#Wn6qqoso:n2T6I+%rq1_33\b]".A7J`/Xb2fs5)0D7Q:)c$uni1PD:oP6`$F2@;jd?aCKKclLZ^=kRraN6:/;q?+9"jl0#i&\g'FakC\h"A;4^%5:`/@%H[aiopd9NFBMp",(fJGKKJCu\(\Ya43"/;sLb=E!@u<:436'da(\crU4H)ce)S_P(MCGBl8ucSamA5GWR"t%6cQU?!ElhgoGrP3R%rHs\;o221f'Lt'#-kQIdA;Z[VG0=4F-R6#=QD8F:h<=)NN7?sV`]TQ,*%V!SNdKgcGVC2!8)k2`Ju^_r)JZA'J'GBo;QZ4#Ieqa$%qci`d*n&A34kc_Y;\q`m+.CA*%=+9E[nGP`&RP9gF&D`<IY@n#3TQg-h4qYlCQI%pcfpMRT>3[RIhMclr[Ib$nkX*e]Br+o>PIja%k<OM,p#ekp[f2nU'SI;g%NpSK"CWR\gIU=33+T=^#\0,Vp9m$9!-NP5LQ]]&%tSsOOblVPQcWbgqHom0LF4%?N(PXJBcdJANgO?(%U<+OI/Z'J\*2O[QSn6V1l;@C$nhC2d9L(lMLe)3[UEQ>*M2q#!Usc3@10l:s&O@j;D)Ic&*F/t_9sc4r<A_cN;:obVBDSsR"P<Yn%/H;eI$@>APLQ+Oj*+FapCirFG-NoOIcP(nl_**G_rRO,b?tA2\%$h2#A2"UIOF\"\#=u[e_,uOK'-i:--#sQGP.$aS'[B2:$0#o\%+C$.KM(Grq`A1:1Cc/5[=O#46i\"Z8N]\X$km1k$UR#JK;4:W7L#;+?7r6Op5@/hkrkp/M5gW0ZD<i8*[OUs+S<^"'OMT7rLdAmE%^`ZtrF9c%/:o,-;(?>h*Fi57M&s83];'=10,0[h(XV)WugQLo<U:N\`Y[7ls`WB"<)=&&8dNR"6+F5KPVpn'P];LY7[#]QUN/rep%#3()cLh@7rIXg#EqiPR(&:`@Z;6[fbY^]2kg`;'#\4(&*&@8CT!;6or!IHdc3ZJY.+V"C3j=QS4dF$>b4*UEi9N<:rEeMMP4:4UX%a;k_F7u)kT#D`1%=E]Nn7q.^N*fea+5BM[u_%APO5gAap2t^S6U-:C+*,,\M"u>Nem2sc\p,U%)mZ03W]UrliJHkT:#81$l1mrc\%dOn71V!2HZA>H2NRddP8A20PO5-;XRkIhX7O[SLJ36coFK6'S=BV/&L0!3l!X-[N0,H[c>P;pq24JXdE:M4g::@5P[X.<tL,H\VV%o0(H'8$m*)cMfH`b"-lCBnmo"PGd4TLhe!YcL'*[mF!VI[$R2(1t'*ag>-0f*>&fCT^CU29s:qsKa8e5)$Jr'/e.?,pt,TZa<$I8%-"8;k15U6]+Q;MC&<;PQ*Y:-_UXNPe\4&M8'<stM3DZG0p`h!""!Y]IJ-S1lh_UC.,bF=Y?jCmDSG7V*G`PD+&kNl`m6i3@Lt%uj%j$XhX-\,6eNWUj>*KEeuKt=/A"-Ci`'K2bk+b^@SXHGn_Q@B0u02C*qNUgHHliTt&pJ71;mamieJ"cnec[(e&[=m;kR,f3MHt/=X%9_+07^+m_g-MbY,hjEIDja1KmD+J)&$6)n<VbM2&hiDOoIgS-Mg*ZWr\+?YEEaRhmYGZ:k(,qbRE,RK(&Un;O_T&&%=S!JIIUgW@%XSIi5^Tlo[f)3OVhrsGH'5g/E)cG=M_QUH2jh>f@Hdh[jJsjl-^EB#U.ica@:\Ro!Dgm]%?Ggq5Z2:S=GC0=Um.Z9C&LMUii`9IU%^H9,tT3]@QfDj*igJ1,81Zu2<o&lD[+pu2g6n5uHl/1=^?b7\8R/QD8J,BiRn,K)u+(oTejm9b^pFn\fo"Y-WI]YMUhN_g0Z^4en%Pn',gmHKu3["u!qmdM`5n=5*2=QnZnSVhbW285$3s$J:*:e#8UYL31!hr`FC+1KE1r%)d<5Y;ZMfucpahL3r5d>*iBp"i#^qW0jl%U?j`Nh(EQlG@;>#]2q,k3'o47.i`:D5T]ZY^'rKl-j\F8-BsHGGW3e/SPS!^,%i';O*(/BoN(*)c+)-oHFH%j3qHq;"fgTffI#@M%I6Q5=OM[B_8cpXt<h<p`$[0Jr6J>1G#l9o(igh)-Y<TgSclo#M=p/;Wg_oKaC'FMP7T=/pC?^gigigWqAujBAeg2<EfbVVk&Vooh%91EMqjWcYl`7qN0U`=`:3XHad3Zcn+(L8dt\*<3uQ:@BC?*dSqC&Z#kj/.!6+uBEB@5jG<'JW'/OSQM*2fuGWQk/%cU<U'kg(tg9%ZCGT(Bk:HmKgm%qMd'7`^g5WD=tL\6CM.d!e#NB<KN<pn.NL4s3>,`4Ale!`Fs`,m<b]iI"LNI/A>I`.Lt@"_V1$@&7QSjEq,UOP%qaMbkCVr>O2gD,5dI._-baJeIqqHGEO1`7h&1qWaf*59QdT/r"kLbgXln8n?!WR#'chN!?^W_-p900@rai:\^m&Hd.e=7Y/>U$W=%6.eQCk>E9`dP_DgNHMk]M<%1B.d=;2["U\]8$_J9s,sCSH'$))D3`-rEZ+7&ea_CH#8\uH&L6:JBI2ju542q*ka:M;=:lh-=D=GH%`*C^'7'Esn6]u#0`N)FtQOYR+G_f3E8X/6bpI:>UZSBhJUOus7.#5b6=[$IO)c0$c!eJNmU$lZUk_N4-YWueLSfqZt5<H/G>Q;[i%f`p?]kKlF6OI5:b;]2"VAO^etBgXZ]BfjZBo%Ts(d8W]o\<M]gic_#h&/io19W0.0cq3d77kPRF;(?na1Dh/"&^Q'=Br6;.bU9im%]?L]U(;YC_&`SRJj$Kk:RLD@=8Vr&kMr:hH4#(daR2GXVN\RMjdKpp-0J47[*QBqZ,KVS'Pf0F<'$I"'dcQa<bf.[[e;KB]@(LoV%l`<>k6-9l.N@!O>Bl>&Vi>;LG;H!6_HaGhUhKU?G].m5_<!L$TQ4%h27h6gK$_fMW=EVu&O\I"U6WI]#!g,(7j?fJ1$=K$naS1t6%L2c2cK5Uo!O6t-o6`6W<bW'9S4[.'#FW73r=.m-U#Y5fRk#W_U_LdWTKdX]e`?e^W3!s)i'r::'Cb6_FC7!E]["DpY*Kh\t0!/5B%?##RV(%!DFM2.U7Y=P!.Gde7oNN1?,bgR6q;5SVPTsA-J`(!pTeg_f0Ag8(Ic7:J;)I16,WR$GRc#i_.$HF8S:F%2V@?sL5rf=Ds%[(%@cH,8FoR:TiPi"^?;UVin6oWEQe,W\eqZ:^pFc]L,;Ad+eU:)MAo`M@:<W58^A*)cHBoG\H!"bT>l5rY`!.(o2.-:>./1cI\=%EY/P5$A^IQ:>07$p)%d_BZI1!"U*kQ@,Oo$L)!SiZ2#H@!P$)k#H<Pc>"N0]GR)YT0li>c,\T$a]n>7D=CL2eoJu2.H?Gh]VFoo6%Y>[\>G0KS!hKn:3!.X-R47<P3DhoMkI("l*;WCVBG'NnPD[!"DV<Fd[`"bG6c'ko`f%7/tALXD7>huKh6!Ha9]BdQG7(L\7Zs%;b%g<Aih9PT/qYV9$p!1u@Ab5s,cGbL?<&OjSaBuasGEK05SYqYR._c0)1$#eU5D7%XC%s(5m",UL6ej^df,h8aaA"T02F=^I)A$n3q%kOZ<"#;CAm.%<^6ZS5X>fA^AqBdsP8[&F&/#/EN6iJHr[XNf5i!1t#n+kB!23EF=)]Q/t\E#357V";MJ#&]3BnIXV`TL-+SBN&OY%m%"kg5I/r59KO+i4gKA8Z+/,U63f6nN^-F&Un_+$Xi,npfJcq2!9F]+8<O48.JH7Y58?(CU9@85A0`mh"Rt1RWC.7q="NjqR2qqP%6l&i\rhS^+MoprZb>i#;:l]7T,.<VGjEW5VK[?A'!9s9H(G.nKCbqG6Zr.XFN\nc`[Dq8YW?/VmSY3CQKGAZ>'9A3!e"+TTLJ`;*%qBe1mLUJ<dW(B`$78d>Y-WeI/I8"gq#X*j4l@nCO[1,U<E_[=KF580BP'%^O*P`*QGiKu&`Bj2LiXLk2mc)SBTgS"/=,4b&^H1&:%[acP3KJtV[mFa<f_M7'O4e3r[5EF1RRGeSTo<ER-%J-uTOF\Y/kJ`0a)S,;n\kK+W(jL"q+2Cf/MI0bVJ^XW-d5-PsfoDnoH/V5/%pQAhb&g&7(C(rPG5-)Wpcnhd4C.@S/BqM4HdmR"Ha[.@$D.ZL1k]BXZ[2]"uCiG?P$JT6rQ.7>^DENn0gL2@mP5?\C,uWWWoSS1N%8s0rrTgP#a#La_!]u!AarJ$mm74emV%N,U],^r.5(mZK4)0m"V_]aFBT/.pDkQa/rYo#0VeQ?+ur5utC=J14NdUt<RGmR$TW+,AF%!J'GM8KXk)$8%-aA(`Q!$JU<d23]C=C*[kQ[ZjNT@*_u0A.G87fGMR(LjV>rI8mq5*HKNnBns]!gk55TZ7ZKs"u3B&6^gE]P-CuU%<Lc/aVZ=JD'oVipc*Wm<^bj>Bf>NR]a3jes?J&TTn7mtCa<$XRV!34eksSo9Jfmf.eYZ[/GGP4`O25q6n@h\?9';]>fXYf7b@0BR%Zipbo9s)DQRoQhTIoS?:%P2oY_^>Vo2<$FV"Bb<jU2+_=Pf7Q@oU-ETo3]I3OKp!?Uj?[8+tZE<Y\g"bW*0#GY")he)uL-2@r-+)%jra3C-rjq5.MVFZBqr5i).q#lKu94,h6&BM&#MnrG('[*VaLY)C2frHm'N!n(*tB5X>!`(Wj)U8`^#6B,h;uO)2jsE;1'#`b3t:$%OeGSs3\0tg_Q'DA95@-Lf4`qi(=Kr1Cp(Qr*6oIga@R=1]ofa^p.p\k:2o03O]^^VVGi@r#NLJ=DIO_'Kt=C*:T+W@-<po;F!OtJ%6qBSTc&tYL]61fgL6Y".p5ImERmiOVRBH^ZAT/:IT8k%Dp9<(^'J#eT:$,d5<lJ:$l'tVC9WmPV`X3`'IXlpCK"MH&6>I`UKg&RM%2c-J`rO>`7h>l,kTP(g?R3cAsZ1grqKnH=5ZO6+J8F#JLq^bnXm1?;+3cnb<2o<0>Tf[j9_0H?:V/7)SN*r1B?jUfI6<@Sk=8$kW%3^=CEM&e^[C6GknSZpN#Tk$0,7OPW:`/XmDNW\n1Jj#I@W"<g=&3@"IY7*c*[(A#aFC+f@%%qSZkrl-UU.CmJJ*;*X;*,$r&hF(_%SQo,1-F/=%+!TRXre9e&.m*Br?/A`XrSPkiJDuM/?iiUERo_\3E8/4JjE9UdLdJPd>NJk)eg6I'Jf9u$eReO\d;@hN*0a.<*bN<@%9n6_Z$W_?,]_(R.VbV4ii7hh&gOn:WF/U7j=+#feSCh/"'q)01V`Hi&EcqUuENMcEE8NqRUbhBtJ3`1N#nBFj6n(DOYYKJFl>=>k%abd0Xe)au'&YK.=hW,#M9i(Ahoa5l\)2<DDqQT"DU$f]L'gX(h8>G(-4lKNX=k$PgN,;hlC47\slb8/Y_i?83P#a`]IHkB_Uc=3'%A$.>`:A'151>_4/*1TuK5B;tglNqbqkufa=a^.Y/9_9#2Fl?L-r[XB59)d8*kKqVjl0Y^>iPsu@*:56bf*ErkN8-rHl@PJebXmbr%fU2u`$i9sO%fRIs41'-8O986]&6j$-*oOT%?,D_W/p"2^a(+FKIKPs$Nrh40A@;TH#.iL/)Ak9<@oM;o+GVGO3G;4T'b+dG%3T#u%b?`@CrUIBRS:@n,E%sgp'VU5+Pl6=smY?AdT>I[;^bCR$X?`OR&OsI!OjG+<ZJho#qeTOYMi&]iF;T!]XGp*UBrrU1Y`L"=Vq#Og%ct;]>b7"o/6!H.Na1(k.X=tf&:rI1L`+QmG@Y3''_MtNFd2@;8l;gI)nWi;knS)Y'L,a?j]cE$h&$3!NK[C\=pC]]KG%ChH7QdDG%X%aii5?aU\RkfaS7oi;R-r/r/#VhH@VSKJiGRJkW'#=[nUcE]Y;4><k9F0KM.V&.:9mpc1oEt+7&dt@RdX!\:N3q);*`O8%Y],ij%@:4R8]<5p"&<?#-rRWO8MG%VN,0R$NqYal;7H2P0JiNPLqNcp08,NTu5LL2.F$u#ge3$i*n,d\/&`uClmhJBG>2Tt9^kX(5;+m9Q%/&\i*B+m$[K^TAD=^EX!BT:sR@Q#l+FFa?Y"XH`n;pJWV37':j82,,m>;)dqZAA&_R]);Ta*&HXB#iJ(*8%mdMXo7p=<,C\+Me30%,&u6XQuahfo]6H6B,kdknK*Ri#V?u.f>WRpd1n_Ug&"Ie!G[u^Q=.dqMN/Y\ks]afQshf_ZX>Bt`En;Q$`0qV-$/jJ@fR8dpP<!>%jCLMU?qWLQR#LD\-U!HN!_Y^/RN\%pWL\MQGp%@5^eH=!`a_jR>aS[>?c>nc*#JH2L4`&U$M/q%DUO3!D%8Z5G1?'2UIn>K3TPX_%_>)Bf&SW:2,Uf3_%k/`@,!#q4CnbGn@':+DN#G\!SQ%.#'ejo9CEs4.Ypu6-=Ut#5=nH.\6I?/F*6HFe:<r2D=>;iaan6aUHIMHh%B,"hF>W"XpdE$um$\?iLdLfl]EY'):7QcI?BCCJOKbY:b_A73ecXjB[@&ueA8QjB:s.h2Dp/o</J06$.:ZPGW<T?5q2^Dg$;"M4V%-iOW?FX2a1o?h&-WN7KP7(A+&raLU-nR2c_,=^V0<ocf7@h1H]=/;LF\d(/F7P[Yd('hMY5,O!%=0F,)Sd:pm6304P9V8h$/SYAC%+X.tj/:[hb!*)*oKGqu[CO*9_SE%PK7?/N<oELWq7c[5(9Fn!mO=?+T%)(HLbZ"baCl)kaDWo^j_/<Gb<l!7"8X#].o:A$gRcqlO%2*Adm!>qi,-c3.r4uooPBHq*T"!fkj`G$%/[40RL/)'"M6ES0iRkFMlFh@";(aeH(6b0)74=uhg$8)VDT7A/47&6:&P4gIadgAPM%NI]?['4/ZgU2bjK9$MTKGB+D::RQ+&ZnPX8n2QOBgOoDDYpO-iPNUE1$"YkJp8q=t-!nn')3U?k=RX$t_,jW/Q[Ac8+5E%QMRQ%1%Sa8Ul577BS0T(BSVe?KE"),&c4R&G'EFaf)PB3JDF_&]TiK)pP!19H6WcD*bi5D!4pn]A2Q.jNr"=1R6(5J\Q_uX=8cJT]HrNZ;p%bmjLeOe:VENTo4=e33SDKUbT-T2n\HLe(aC9o!4;4$HppU2UZ9kQ=Mt9q8P#agZp*@'lRipa*#&+rgW73s=r-_1[d+'Q=JAn!e\F%_5RYGe?P$:,`%N6$R@jgUij]\7gn$4O`I\o5d(Hg#I0:^,0LUF.q7:CVlCgmMN?EM,[b<,P+[dW.u;L]E]C(d%7I)@ifY2);pX$=%i)C7G3jRm(^t'PdaN+7X^XjcgDh?u1=6#*lOXW.s,A?9IXB)+cRN#.^N/WDY<$fD:B/+Y0jda+FL#=JUMD05Z3Tiqn^kmfWM=\k-%.-Lh(V0^GNGd.Jk'83ZDj+b>t3seFbA4.:!);gidQFFYtEC'/]Gb9W,l!k8[`57%LiR_^>%n@eK#sj"t><3/T.[cQYoLgH@d"tLO%!7<,uQnc]q*]%gW$I=XZ%'b*u"#%kV$f(.U'i\#6.#,*4bY=fFlD8oh(a@-1aU$$T:-]Y<3Pc^IIthWKeUj145i`:Lf/[I.)=em*%Nnr.Qjru^_gfcMOdQh>:9>c4?&b1Lh:/2;!;ZAq:;n'^\?4!`n:7RjpP<5*_$P7tn1?^.5hB=GL5L8JfY@Qu'R.tCT(n_[SA%_V'%odtE6Gu^Nj(,t:&0JKC/9pHj.^s7*fM4H`JnirbDgDS0?=2PX5,q<;_0'5r)[7]nuNbMBUW$8$LPD@h5`armG%I2L,Ho(HtVWg+Z%e_'DYc)8<;L9n#>g51="nh[u(lcuO-0!Tg/[K)XP`m:6eTXes(3$<nrIQeU.9j`VK'u$C*7#?%+NMgsXEa_rW'^[3WdeA<%&!7++%POGf/!a$Z@SKLQfib1Vu8gNWF3\qQdf;ZOS/<NWhF'kF2@hc[5r&X2t@n0R2GBsNpAGZY98qaX8e'_K0s$@*cEhYR\LE6(^WbfU"%.#5$AZ8p4?q5)Z(NtmI`'"d8dZu[[+jWF;!Ql/fi+OfO1HVBRc(G\5(XS."e`G_/i";)+r<++[GZAKOB/P2<lMOP<RO$Rkl<]>L>%/k4P3F"_.B#_c[F_>)tdHnUEt^dCeO?#j?.T!U8].;1C6.Z73"7"gXe7L[P&#eG:F4\-\a@Kt%0(WE[$iF>CCUo'e.outh)TnYm/%KBE^HB0:5VhXNb8r9[9di<WNDq%(I8m5V@!,L%E!k0l5pgPoL=q!<]&iaDRUJUMr_)o64GS4:i8g!%4O6(A9M1@.rs2faPR0Ob^*%)Y["MJ95D-qCtT+/$a7.(<,NLh4V&b41'B9-e_FTRRe!SESG+o1GUJM$0dh:g:]I6=M7ZlJ`Z&3=cno!n']"i`&YTR'!7E^Ni]?'%:K([V97>AgOVNu?cj#XL&A\Va$KDgEMM]9V52?;.WdP@:'KC]KdPZIn3/KhV=^T"]#7depa>?1]@?e3T:A0j"Sk(McIU8.IUMY8Z%s'VONi^]`J_6^>h6SINu:`+%gTkfZK11[*`-97-G=BJ:]-lcA!%;_bAFPcja7M3&Qp42k?<`9%.5]E%,hT153CeiDDKY(>I'fQ<r%QDEInF$B'9/=oGu!b>uq#TrtO8]'g6"._2sP1]?&h[%\!`,Z,X_-ulN?k1_+*6Xb^)@g!;/uBr&KM<(M(Xl#ZZDORH$%.`(Ggra"%o)#;"65:hM_$nas/f8sJ;Ar9f,7Z-'WWi*#=V<#g[B8=MZB$%3UudqOU0b:];W[iH,i0M\j"XsBL5$"7Na]7Pgf-d<]1-tU23qZ.%-?c!j/3';>(J3(@;ctmXF-IZAaa,NOF[=09/%&N`*(p;kiiH$K@G',Of]I]:oJX^;^asEdGh"?mUb*la7V2$-o#i-]RQ$^^$^2=/%[)Q85*(ojdiD(>TR9Eb>Ln'r!JGWGNbP[<hQ-\DL=ObE0b7]Wk@p_'KC+^Bi;&SmPG+"?LaiTE\J?D?W\U_b1([a6'!jP((]ffnW%auCGTO9I$S\uH0A.-1qLU"!Yp_W[:.$V2dTKe+?:VM?]f\p'5>pc;J"$d`k.58:CgP$;&'65D+Z;!h0#/6KKV@2=qVLqPRf6D#fB%Qj%jb&-WQh'aVu>5o*if-$KU"0W)ID"f0cEO9LTQLFcOs,+::2JgDZ\B#4$M%C=EZ,8t.pCSh:tLH,ADkV3IXA)X#3;OL4qnj/u:%:Dl!&#A)t;&uL:jJa]Ff!]1Y)"RVjI='dp9Q-W$(4t)!2Ibf*BAF/,<6#UrW$Bf?)K*'#;l(D!&Nj*n-O<mA5`Ta1Cp6q92U``JI%Hb7'[!!n^G@3l&,@"qHU#_:(N<Bl0;fQ5\8'Jopm?`SCN,.ABh*(<9!Ylt.@`rNsj"9=ac%g"R=$)=RYd7UYh,=c',_id"P"tQ"X%%JO7%3$C%6/;\$.J888MaL`4RYpAi'6]Y,%$+u1P0Gp73ZZ:G+bp]"`BidU\BSIi?m(@NO:%H0+:`gXH,j551s"QJ>UIcdlM&XBe%C2agH$$BYn\0`%3gNb)rR;l-EWYFceK/]DJIIs9oEL)!8ha6.erS`gD^]!?Hcf>p(euK?J@,L2[,h.L+8T/VQc<s%8qeSgKK1:<f%3PnI<@;R<Xm9Ltb`&qJ$)]Eq1lO*5c8=%urmo-&((Tak?$?f.L42=WVMLf@/:3bN8q(1;-0/V0F$[4pK#KY6.SWGe2iD/mo0&2<?%+Di^c#p@chE$s/^JN_3qmNajPm$SXWKJF*Do=QmF+<?mKdMD3qrlE=#U7DisGG:Y'B'Qd;-S29oBI@mO\7,8J-fQkB()H:jae_f8%VZQd6['N<WIuAOe99X9+cRM*N&Pm()UMg0/2TSe%J7hIJ"?^B7Q33^0AG^m)A:-)eA\bQBCt>nY!DO)bFUmP]87ruXH0KAX-:r^m%#t^)Fj@h+g-5&+(J;pt<;5-fVh%=`3SJ%:r+UECff@qI(TMi38"L>[JGG$]=!?b$sPFeP[:4f-*"*<&X*8)nF5F4b/>:(4TmI780%+lTQIOROsDM8qN9HfE9FAL'A^F>2(CN(f_*,h&BRT7--9n5a-LGdN$U0mJ%STOM0C^sbjs+=sY=`bH([ebQT%MVl5K6#\<O]S(fR%AVs_gK:GY'[`9dVD*@e[5[PDK<X*IbR(p&V5'MO!.l5\d[:-:_l_he;gK:Q$`bK@lc=^=]J"FLgLQ3PO-uLOjcoMEOj4HWan8l/Z%Q[nODB+@iP;KS"pA51_>%[5b,'Xk.r.&btuk[<j;$nZ2rfB63^o"1a`fZ:W-K0qQnggKSIp_Y$OY]k%'d[leEmr1Dlj'fHAqE,lj%_/Sl4/e<b*FguY@9+A&_hAnATF)JL3I`D7+pDslH/e&06:Aut,gcHk#M!#N.]>LB*\:f3!'7%e2p[2IVLB`+gBO@i6Y]o/8-3ueh%YCjgj:`A[@rr29-*S<HlH*(cup'rCN",i&aRi:W6Bf\8N,nr5Sfuhrdn($,ggcOalS/0T4h?2MmEPfBk8\hf;=NI%XXW3(-7:MWT%JMQ.Fnmd(c-fd?@/go(BaS-KIa!6+%#0KT/#+R_J*ZZQ;)Q#gkOO.<^CtNqIM^::J3sJOMJ\Hd7atec+EOnGN(d@^0Tp6OL&'Ai2%HN;r]#iD-<!%[eC71s/MIZLAnlOnRU/"bqW!#GJTSlen.^16Enb%1bA7>LqhFKfQaKK6Yi$4(]B<>Q2f?kfbOZB7%D;\."4,k_G`%"t_NT<rq!IA%k(""(WXsW/?;I3A\b,p-O+r)G3,J*c[eROH'$&ED(7e/M\"tOrB'1h%tWaTig+`'H7P-g;1*-+S2hICLaOF\VE\a%14`8+'*b_MDL*;2%E6J+nC#1r</cIi1CWRjK&+Q`5)ke(E(bgbisHp<%)A_A-Zm.8K(=&dL%`%Z7U'!t?u$\cY*NC?ppH+!b&!U!%_WkBT2^sHR@?:q6fnJeC(3.93<d[Xp2XE;qY0#iQkV^5`UPL(R*?\7?30+*Dd>"!G<#Y0c+BpAWL:`0I<01f@Yj2R->&[-5CW6dB%Z%9%ifZq2sXuY6DNda?##JOEC1rM8Pn&3]bEQs:?8T8!&>dFLslOr+oaLNMYCrnK6i^GZ523Rh[qGu"pn.-"L@=a!3U":JsTtAa+%O_OcZ-:&8NQ]TefoeCYp\Y$h9rd#4:d:qik&g,!Uod&lHl`MUDN(S:W#p*5<=@7^R?pk7)N^,`<Yp$3"CC<[P;h-_Lf:66<m]8p>%YI4W!r2%%KL9@rg=Tqm]m!<KU9s=;%Ejf*5ai$!-!a&0-%I3@heQ/DhkQ&@n8e!E_R(:urclgj[NkdcBYtK+P_*1UJB.Yh`Zor>(%C$hXM;qi_%9F#8`/C3="@o&&q0uUMT;h/0m;Jo$?n4YL>@7F/DB,=iV6;f$l(L_S=Or=?`6jX8nc08h\77KXB_u0nd8!2;75"b)X%,H1cc_M>^UUo(GZL29CqM#.OlZQcC%"G)&q6W/9FS7?A3C/2D[@RF#qi596N0&[,I\tg`4*&V8*-8e/1e8W@bd.TG6O5O7[)icr\%i>#UM;'Y0*!NdD3%?M.2R=V:[jC'q`L`-V"*Se[=;1j:le)%nYpg>ug22i;Ygj9GedYM?B%7?+#SLQY#%7ABSgGq)![F8c7$oL^,%0%0eKnqd]Y*K$P.T0!H=A1M;m.u"tNQ?T$2W+hg5boT1lWf4,O:d_81+rPuYFX;M63%LoA,=B"/;#;N(TH^>f4KZ=@W0+ZKLe3Z#%%Sk5Q5u8g#[S$BY,H-a9'jOp/:d`_$P3'^iC(L3Gk(]NuA9pqm&8KjZ7C(Vb6HobVjT_F@2Sus,Tlp\rUkYQ)'R`PQk<p:0Uqu4U%#\p=2a<p?fe/n+m3b9;HF\%sG6Vu5U7-%CP,,fKPEQEG/Fi^;A)1jngk!NtkC9XEXlGlCb:]mHreYWRJ_p?<rj_/f@^]4Ei()1LM%0[`aIC(?<a1'.Xg8/[T23GPbmkq)Yi4aNP+]36.u)Bi]\M%)S,]MmSofjgp'nWVbq_i]+cPssSldg3ODMNKgT1s-Z%Wjq<[,_]DE%d5IC&24]m57]ckMP&kK-Bt3R*;Q1-]9m'S+-t&K-#,Fg>?@$aVpO=jlMD,2JfcD_>ln:\B1pAe`bj)!5V,M6?h&0015R/ZK$Rbp"%KM"RI887/,_NO,6dKuX2k(]'(_L\7X$BraX.d>M\d[]A[\-A*cPUQD5OiB+fY>L(:VIMJ;PX>K"=VHDr+IsDHn!EOk8-hK_QbfF1%>i*153Z<g.1tFbHken/)9A&IHl-ch&UD$Pnjo-O6(`>(0G=N1&:,$p5?,B%N.OYCO7<<+1Nm<_'`7e*p!_"KMX2?X=(c]RJ'b_%@%%"b6;,T=e!"&YR3U8-PZ,(O?g2Kpt9Tm9881d!VdnKG8-ouJs0QdF)eW)1MK$k6,c<S+J%&]*LJ#76qn_\b3Q2"J[0G7=e:hVFP<%%%;Lb=N_`h%G_c-We$i=4&mD3Gsk>D#bM5$%5BP-3e'L^>F@dD,Ou4WC=)*>,^S"YT:mOJ[^IqF)E:Bk%K"pJP$=@6QE:Su2HrC/%qUrktASqA!`p.rq;M\^C3#E\,fua`u$jT&eAHF]0Hn"2hfJE#.KjA+jaEd%ND(4i)Ero9DJg)ECcO8Zr<A&(*!6s(nO*\7n=BV,F%@\-Z!A5boZ(?F!jSdQaV&p[uLJCLYO;(msbE!i^Ra^c/iaqCO,]Q7VkEPafdnK+@"oH7]*Qe(4:gmKBTHKR%mR-4eHm(pt(QGT)L%Q>pXMEcDi]]K2\B07jf_SCiIbfceAn>6-g4L:F#`G)"-#6uQbdIpeRmoMDbJ'[ShL#'LJ-D!M_dR@'8-7uVRc;6Y?NFcK!g#0Nr5%3ce1CBmpNU$kH91@m`;0aC,#>87qpl``a;-).??mhT7S3U*F1C-^\s?+p[WpK/n9(+u(?DCcV"QSDk1*3=b&T',mp]+j><q0L$1J%0KP/6@+ECWN&+pWY[e4'*2#\U0RnuU_fecfOPl4M7/fje%H:(=F$H]2B:(J_1HiMkQ>N9D.)$QhMt8kAh@(qa<aZZu%)inMN?6lF%6"Z:"cWS`$&n09,[[FJ'Mn]@2`m-g^p;gi:$D_nsYW:]bao,f;To8tpq"uqXB)$]*bj/Z]TaI%4:sBQ-1&2#g?8Vg4;=ks)&::Kt%#AJpqaqn:hU)>F:d[1KkS/HAfQ2o0#?bs;mSf&mFW.n68Htra:G%bLaDXanh0QS:G^C8::3Q#83b)B:nn2*Qh_[qDl@8LPl#WaAT%EWR@?,]a%_3T#A288<g@dK>mF]KZH[AK3LB1q480`gdTl_-J3)MA_2P\;"FHT#%*PNAfeAAC_nb"S9]C^0gqQ,\I-ZD#!+F>W,ZM%i6)r`gusK!#4I<s@-H\TKR8]&^ro"3jUdc_b7M:i&.Q2ZNQE\]"@Ip&.&+:2i%fm6N,D\OEWi\j]*;J/S']#ue2!\B\]+hW#0$1H%`@Q)M6cr&`Aa$d%Ek(m``Zj>$6S(V')C4FF!L<fhAj^BbAH:BXNWmBPVa9m(HFS!QE[/5jPnOdf'X7!BiPh8D.U!_0F\Zf\XW4tj%l\8FE[flEDd)nqTN2p@JPiVh:*if]fOV8ESVq\%6ll&5@7tm\@,*e9'aM-s$Pe`+5J!UehenUNa(aMh%.4#N411*#m_3BS,h$p4i%YN[1,-3HEqF(!YK1/-@%!LMUT9GtqkS.)&EAN&5\n&E-Z,f5^ihP6<@&bXpUb-6*Zfhfh]\Z=Z*##g8D&jJ@nP`ZY=b,st<;[1kr%dA%2JN!KY.,DK*N6c+npTp/u/`??h,PX2El_)$_.TtMVKcToXC4BCJT8D,eNTGU3;8Iu<G;iic#$D<FiV#5i52rF\'7\u6W)S<&e%iHsS^W[TD,]2n>5QJ2[7<O!"09HqBN["M>3^C:%;-"djMB*n%3;&qZ:4Pr`TKH0.`V@KG]$jHj<%Ah:X(o>_Yapph3b7[DbM$E;j%[_&aFP'(M,.6E!%)5PJ>V?Tp>3GR&/ap=9ML!YI:O\t*V7+m.XHu'@*GTJjTeNoFP7VE7IK3L8H=)AL[hX#>#^f/05f0bc7Aj]b2%6'OC#g=6C)L)NGUf,]Z&Fr:"Z*`rj6Ve`MGcRW-,<fH*QT?!!#.g?P<MFH$&`P`N*/.7(F6\:t+%kD6s.*=SQEFK<P1fuJCZ'VPC%L(&Y9VWP/e.pa76D\$_j[BEPPi\6(;MS[fY>n'aAlkj)p[XosJ/E%-*+iVe`i*%j'0d(S"@gXW=IL9(_'i1@m2QdNbS-QTh<RJ`&%G7])X^r0'^ODDOe-&0kY(GL#/@X'?tU0L,"ZhpZM"sh36EZs;U&Z7+%AWJ&?C_3dA1)Mb4,M!A>7@a#(nPp8Xpq\?[Z_<3Nbt-?u%TnqAqbH@Op,m!2hJr"E]))0f.L_u!qlba&RL)3GrbD%/M%+%]X6Q?5cejG7%$pnqj#Ve;JM.$]WN"oc$=<PQ'ZN(P'+iMIYX/.F7%L`mEd?@re6.4L1`lf:A_\0'04KQqX"^B]!*)1\uI&3IVZbn.g0jiY88m"*+*3`'%-">Qu]02iHB>ESEX+c([eEWSR764gIGccZmZ%$4M8Q%730lVOBf,7h1!F,mZ5I.,<ruOC>k2[$L\ID3DL5+i]]*-As/U0qB(l,mGOTB_2ENVI>T"P3tSk+UJ>rOp3'6Ukt'qKb3jX%!l1NdKG[+/Yjs8uR+M[[NZEd4-re/.`2'jOE/>Ne(ep"/hgl=`/tV>@Jf(L[C%u+t=/\+9nAChND[B)3@JJZZR!=cDKogJFA01/i%K"\Dj+6L;4?\/e5?4Ra.iJ6C(M1Y,,r35@n%(\Oq@CV9/,apRfE%BCN*[b.4rBmmTUP-Kcn\Y@#N06c[i58\@s5!>rr48L!H5%2!%X1ANEj=E5soN.Kc*9jX`iJT/=PpV"lY!RoM^0??NQ")P%X11Gd?%K]6Z8j[&Od$,@oC@gDm\".EC.V'3=]d:BOLL17%30l>%4s)e%>knk5QDK=f:CJeDoHnk$b/2WcP&!lskTX",LCG[?><`Rj!G,]W'P)YB:=d(N4\QXBG**eW[K7tBG>pl6M0#WE&k3XN7I$l3r*9G?%S>6fQndec9/T(k<M_]P3$m;&4Jka/'6L00([L/)'[H[4D[Pe>N['_W1Uod?%NjQ2KCo"1m5pL5`H=WhRN<(8@D%%4pCX^0FD/B[r%Bkq4W86_Q)'PV@30Tie'#)T_+=[b`IbHM4>R`eOtOQJ;T3+R(JY+Qr_A[hkt1nS3o6J?-./>P98=.t_E:s^F1_=_4%(_W!15PZ37%9gJr0&<(=U66b_5-A4Z.Z)DL8.MNLN#b#L`KLG*F!6m#,&m3^_)\<YXe'=:A5Y-iCE-V`q$"PJOMi*,imVO'Vd;Y3:CVqFcEKIF'%LG1V+,^e$Ln$-\[/&.s$'a=sH(PD+'*fT!B]2i&Y5VF%rFu>a3il2ME+RdJd!Y<m5n(9@I\#[:dD(nMN"Se?b;37<LkhHdVOu4.b%Q>Qd,4`n/a"XKtHg=__lBP@bSM0BN8@p1":8=RQg)[+T`+<:U5Jfk8KZlk/j+>!lI6QdrdU(Bj'Jf"X=Jfm2ZdXiTrJ@$GT!?`s"%dc2E$#\*R!Mh)`Ed:+4]rm>0t#(NusLnPnB#1A,G/I#\B7uMp8psEOn4o!E6+GtTS3/BjB>9'G+5$ApoOcL7^1$#*`6$haiKg?.C%BOMGS5$Af!a#sVP#0,/#O(^Jo.iOhj+Yo%Ag/ZcMVa&eE"FGf.aq5mf4i0\qc^fV.,N&J:mpI3!otjhP%eH&*(ZQIq&HXA=o2*ZD%!F\lM#Oo6N(r+lfPZKU^?C^3eR=EaKSO`Kfn*9WCXgRbUD_Ea*kDL!_M1=;)]7p7`mDl>5qH8,UoDL=Yk1;K*+Hqo4bm]V5nb\qW%=W-iiT;hVIEj=X4YlY_G$hoo\O'c_><97*Pb[KmDP*c1O]T=*g-kLaD,loV4>V(T1H'e<[!9+H`*furH29e*GcNC>1:C2VKr%8)i%#=HHNUEdgLON^L+]Ef`g3<S)Z)VQo/5E;6mV^(>]YV8%b[8hU8,tJs3DA<P"KpO=hJ;W^K_UW*ok64[=3"u0dp1pcdg>?)6$`#A^%4'QILM6'i$JF1/Bnjkdl9.%d/XK:jejlpu3Vkp]1Qrphtdho[hT16H(;>XS$\%^\(POYad24]=FP5Z#hF6SX@QO&%WE\Cs!&\mFd%q3o9G4\,#Bdh%k7[,RE&`?#^T8o`J(cP3iXIOi"mek,>LXX,hs.Q*8,q'RTL>WJbf&%iU>$57$p,@asd+pM3jA9qpP7#)HhgXB1`%."-$sfM8LZmd2E+>I/KL$q&fkbHTEN9qkHk(*Rgo`1[`ghOlH%=9Ugo@?aiq823GR=r1qVb\ci*WQ59$QXr/&ja!fl_^GWFls)#n%MZoI)E8=A-$u2kZX#RC`8W"`joOPt0?ViDp"b?WLe_rFtNk2m&pn3<d[^9=<7C'@[ia<-`>H`0X"_]&3A^eLNgR?%GeJ^^68N/VS%Xil/JD.'`fl:*?.**AenP2R]ei?QjhBb?F8."r.+!uV*q(MXB^DlX_K!kd#lcMWnA+%Smk+^ftUN=0Zq5p:=sRof^Y9=n?pUQ_7%%mn=YX5eId4-EW!P"u]1,j.08_0Vi't*(G2q\nlZB;'B[h`$'Rc.J5_&H9UU4WjsWi"l\e=8mF=l@s^DT$)Jp5m!2?8OKQ5l>0+ul%.27Fd'mi.6g&Sm671*OiSOrBU#q6i+,`oDTI;TK*7G8NmOPl]"8<+&2*J^MfOHe+"Z^''1meMrd[-TEtf*4bq6lk_U9^RuQXJ915%P8)SUPf/#Q'RE'ml%HB@&nAeRcHXbqeTSX],9tD7f:#9>`1BL5.24@EA;<#"6YeS5pEn,h!/=slBMoZc$Y5j2Kq>KZjf?%X&f<5`%/[cArinVsb*GgA]W0Nh<=ONb!2ICD.gBd!'kQ98ZDZCJ\eCbTlKQOZU2F;hi10QZWUp/c07Tj^bG:aemS[$s-^o.I:)e8rDjAneh%:::j+6lr/%C1eX-\2mKE8#7-0:#HjjD'418;f%b%"$At33hroDNXH))F<JdK=mEo_]@E2OWkCt;,>]P8_IuG`%"gEFq]--C,fLo`%JV+(H.Eo;j7MiKJel_;*[O$GmkhEr$%EG$O-8_d06&j9F/u`/L7IUuR2QnT0"MdLePKXZ90\=\f)oBZ7i63^R/&Y05fasX[n\V23%RNT"*eeQS#WTio$)4adSAO-FL<>9G0+ug$B!i;/V]XnKHTXQsq:VpRkXIILnnie>ML9Yo3Op6Ge/9X"DW%IqM/it`Qeb_#%bJ>9c%1tli/P^+S-;9Ob=gN`n!OhLm,Pc`X4]\Jt+9:s!4eBW&WV);))?tUO`H5+4`i0to8.M":-9$se.0G91^H'7_7m>LEZ=C"6=$]Lch%L!i5L(s0_[V2uF8fe/Z7;Ab08q.1"Ghc'\3SX3O(5s%pG&/`mA@%jNRj]]9mBe7O>8)V<1dg]:5LYT9#8Nie7cKJ*tW%Dj%kIulk%YNq@g1;q0SFD3UR?^@Q0DpC$RNTbDC>1[CcjuD;!%=$@?$8.4$"q"h.-Im(L?YV=c/M#,gRP8"bb[:!#+<6l@@4g-cAYces!]"mp%Lm3!+Hd56J6K3`pa]37p43@^Be%hc`6sH+U)`Am;bf#hu@saeWSs*9@_F_-+"YJGABEE;0)nm!;c4)B)9FKMa0+A=jkf;*YF(u.X%,X*>Fpn\bHil\'W8K$OkVaZieltsojKXE\,#+&B!VFoR+1_>lp,11*E9pp$3CHt4Z]SNRl"JcAc/`bLq;ILR;[AHi8MN$@0TFD0&%B@suB2Cst>&bcX$b/8P<2%X9J,qq1m^;44B>gXug^<TGC^d1b1!13Q))IuDuP=!!>5_^#,9qX1blRLPtTjhb1MZYTd6_WsZKrNSC%K8dh!aLp,1J>]]?Yi0Q8el=LY2/NnYc;)7?9Ri+0'G[#g/rnCIfYGobJj`LML(1"V8o&s@/sl3-A9N8LAB1M\o(rr>APG0N#2!So%O-a/\K:S+*$6EBQG!^4+"WWkXq5b%pA5F+)B$GLW'M^+gk@dHiYpgL!lUKGEGrfu5!7#G8Tm/*[[K<EAQm;D#9.c1?3!Y?r.:g2i%$qj]3e?GuQoW?g%9LbK`#qb1@UThG!,QK=?2K]=FVpU_/V?JDB[Hct2XQ5u>rR@*>79*Oo'9@!_8+ork##l=ua>u1QRLsBpH8cbo%0WQ9),b'3]jb=^f`7@m4"L"A58u"\fh6Tt/Z%q-,o-E%l2)'>daIGd"dY`Ys%[au)oL6IkB3GHf*;%218J=NAGg1>jUbIL!PVCV,%M#<!D)Z[aDej+$YDJWW4,iB2mE>>>0,+H0V%Ai+5,FF4n/+5Ha;m0t8jSH`-GI4Tm2Hphp.#+kLP@0-'6B:OoiZ*gkg5/a#Op8p<%'7mZY'p/3IeTdln>!N_.'?A5idQm29aJo`8=QMl!mB#f/-d?4oGU,5`5XscqCi`2,d*t'=F!u*!M>TQBp3\`[_Uf/gTl10sPJO(L%<21:ZLP@YtZ8jp)-W^Wml9"NR.:`sY$7\,^8ahQKZH(AD65OJTK?u0%q5n6t^r74"CoX(rTN07u#k3&$)0i];@ZhAp4Q#+,/#*G'%^n/Xn$?)%@esoF\7G"+Y-J^d^U?<mWn9XIp7n$<F?#=9)4@7-tl>5H80=@1rU/b#]$]+<VUY$]l<*Y[7S3Qq-1s5k#UFha0aImC]%%;V_:R+0d-q[\9"%jVF?0eX%;WfpNDp?JSCg7tuA3seO)L2>>@`>U.!LWO9^-@Q&dd?ZRCPo)/bj+;2J>Kt/^E[diE_":PpBMB^j%NTe=nJQDT010tbS_GTN5X;l2d#0[UIRaWKQ%bWVp_%_c@XXTaZL"qd;PcG@<ZiDlk-<5'EXV@3O,Kl&tej(9C4*J^a+Hj#BW$;B%%TkXoJ^\pV?.*.7rDuoQfQWbA/n''eAO?u1#9<>(iScS1))-M&b]<N4l8VJZkl.%\I00GQ;1(L"Q3GAK-pSL`5$ZDih`)V$P`m1oW%e>N@\4I@%ORuMp,mRo'JeBIo&.1FbZVg5h8(4_`lkfe'`m7s+J#mQ>3Ro*&4eV1/p_i[Bn2;j*=%YrPV"AN3&29g@Km6J\UH+jN'%8TR=pcsV1.WP6.O22OCQ"!gn+Wod,+UF>D!n+'FlUO/"0qd>:WC=8u&[UE1JS'bcol=q`'&OWhY+\(Dha8VTDX4?"A<>C'a2/B'D%d+3^dl3`6>J[%dsg4n^K=\jLWKF<+NVeu<2RmN\mSQ6*@cu_KS2>2E86A3gZ['3,1QAsTs0SR0=hJ%#^a_N82>%pq,R*W/!8`mIt%N_RjgQ>gj`0H"&,4N&NMRQ3m52smEf4G-dA4kp%pjUd\MR,*c*q;r*aTL^NmRfntc9d`ALT#eNER96'YL_D'YCD?(["-_c-SQm6`%1[sO/b,uD]9JY2#"kaMq#qKSXNi$tsG0NU@\!sncq_/5DR'9cT4=:dNbT*IRpW_E*l6(,I9fl2O'=*/eP1h7:AqHuPCld31TP3X0%RYs@f"'l90Fau!2&;jIP_%jC>!kgcsV`Mtp`2;!rM(_I'HonL5Fqs1J<i)>pUH37S3i5cY/;ZC8!%?Y]>F1d3"0uu]$`JuW9Ra>`%aR\1h,u)d7;4,U_N>h9foZrpQUE(t9_,ssIJ\.qLPc2Ki:t=p!@`g)67mAK:qb_SU16Y\.?7MJhj[j+%CX>DQG$tnr?152Jlb4-k%I*'+2(`:#>^gq"VK+VhH`APJ/XjL%9/#KRbgu[^IR/2-.V&a,4g.UraRB*>,8D'(5c"`8b$M6r2Bf3BK%=kof29)%S\_ffS>@_m-%CN_$R@h#5=X^.3kr0FNPQc;A48>9u0bCO)9TF/!%8]mB')E"&>*<^h2UT(CnM5)u$`CdJ6Hd`taW$k$.cJ8?fAS=87e^(`+]JcaX%H=_gq-S:fiB4nRcG-f.ZOTrJ6EckbRaNOuuqIr$gIO;_dU%&Bmh+:<WS[DZQ1ku:@)4*X[:Iq!sd25dO<p2k.%FMfh\7Hqp,H;)&%hMdnt&\,iG$LeWVG;HH-9MNdkT[O+pX!<-(/S(tY)3<Ip-rs'S>K,7SFcmLjA^^ccr#R;JY)KgGeK3mZ?CjDumT0":=Td-pAV'MP%M_.%O*E#S>q22ImqA?7hfDjpB7sEL8Z(-VYm?3WJ0f.p*Ks/*/qe.`+cPC<T]?Bntrc+`UQl6_deA;rUB&(C?<#j5H)2P`;;f2G+%NQB!,0KWUd]NTOhN&Os2^$Yk01t$4$L8;th>9`'ArR^12bXNJLA`HIE4[9[4NH>ej4Fkk=>@IQ13s7WNC/pPKnUfCm(q_[QRsl<2%eprmU7>gkg9[8Z10T#:?O-=m!?"nu*U_\I&r=1*`kD+sikq8')U[,oLL#1LefQAYQj;.C3/T?8Aa2U["JVOH@-$3&fI"RdR\"54X%6-IUlM*2qN1YBl="1]jH=b,%+31XrpL6,.N9^27FY2_+ic0aK>T2\Dj#m'I(7ACHaDjFuaEaaYQXQ=q.WK##[!%_ChoG0M=Ge*V1%,cn+>bH],?o;k4"C+gJ<6r>e\i[fl*fT/'8nC"RVK]ghka"JnuC>`C(Nb^Mc,A[4cle%_5V:PerT?PaD+]qOY&9TAEUOk4GUZO"G%_!acL:(MO;;G/Ahh4c!&PW-'D@;<-kXfj0%K48IRNCEeLr'iYM(1TL;$d*+mrmIA[#I@@K8Ql1@AUE$RZJKDs4"l%;i/PCU6J+u_%DU$kq68cHU<(Spn<E*s8-.-*lmm4Q[g:?@Ga,@F4*M,6H$OJHf05\G6%?/adF_7MDPU\9kR2P?@.ElZBGY-*&5ENKjKn0l$f5q[q%//.WsF'i?Eb:D-"DJ'TOgDu&E9s^>l^<+>P>shh$1$D*hrct,Q?:A/j,B,^k>0O9=UWpasc%<bN`>[-,E"7k.;\D*2,)*!NKo*V@%D0eZ,k+C^9kaM?a.A_9-H>9hGo/)'EB$V7FVqOLU`bg`.Tjs^(B;uocOkm'5fuE>'6YdB3U59]9/`nMVl4b.VRr%[WC-!OR`m?IN%)Mt6Fd9I30)4qV'cI=9N[uUM)VfCE[H/:KP:q'rK;fUIE.Y["d>9]KW<LuVgQ,9&M+n0=u;J<m#>]sOf46j7+A"TQ?QL'i;'md@u%I5%^EEg(GENDjQV$"(/SgM:GL<-646$k$j$_'>uW[-?_pbH$JM(fkI5LDJ9+h&KMO"K:Y1cYWT%FOe&#>UU&7cC&DR/L0cVk/])_%GG<<L>HCS!J6N\Up(j1#G7D*n;oJ7hGC,_=m"a#\O01WQ-$VHDR>_n&)u9%sdi2Jt!j<ZpoUd\^AM&if`&-k7bDa\@Yrjl/9[L(D%rhUD%FTKWsdSt%^Yus1og4[J-Ac6+sX_FNCoFtM5DW\"K?>:qR-"`dL?%j&pfqG.7N'ZkdP(dX2Rs7T7knknddCl`SetRSR-N;Y1%fnSQ^)mg<-N(=sr=`P+^dFo#"YtfB2c'cr22EEA58L*d"0hV4=:-cu]+(KBUjHcE!C7aSY$&ID?R8QuQ'),uiRT(>,F3gnoQbm!D%;02?#U"E)&7j:m,,/fcm&,<?qT5Rmg?L@$t<?@dDi(6n/(?VX;!mr%3QK,R=o$6Os)5CShot4(S/\j%D6q4T=UtCa-/XOG+<6[nc%=LDVYL%OX3.G"Ek0f>5@8nnG:0\F\I(1:Nli7R4gB`h9@K=_*LXh:]>8DeP5`F6"LRe"BJ>@l$L#/s.?dK#*$7IN`X=]nW[<?)LW%1Gq&%Yban\$Uh$)9G;or/DeHZ6In(OM25opXE7p?/KcM/I.g!?8a3%rj8g8oMaV/K5*J>%RYVoR2))SZ;KI\gJ^N].6;jb_3EhW[%MSe(P3FGG0^_G$fR^@[oNcgVPQd,ua9Y69,RIA:0HeuDp;b@#sSV?lL[="$TPUQ7X4$CU3dRL-F<7G^h_7-KO]Q/0dN=JtX9pS.>%5oa[`cd>jg4:e?]&OFbL7igZl/h'ecYA:A5D,`d>;`rb`VI6=;9i%*hq(@;VdL+T5b=>Tg".mh^%*]![qJLEnB@G+@Y<apr'&8i>%FK48P_;RPXA'5-ZpC7r#g1&Il\O4nF/5<am2Ggqq!Y(p43i+H5J/X-pk/DcRCN`=?)O*`n-UBs7QE"Jo)(k`4XJYkojDS7_Dq4nW%jVK#,M^rHC^4i(7I9[][%I9gbIAt1ajr%NuL;G'IMc*VmapJu7;kY-h6uan#)>fV(C@O]Ilo8^u/LB']5S]W[[2aM;Au`B4+kbA>%&M;k$)f3V_9<,$YYg0"Sgl#W3KrH63PbV]tc9N=Y".5e8Q9/[B\CGdu2+t3V\<=_U,b2Pa%2c!tkV$@U)(-s>L8nA_;:$fDJE=g>%H,H/45bgZep=A=l`f#E7fIF?.[=l_:Xr7^6"],orZ5.'(.N6A=cSmZe#;;<&;UGO7X]JD6EVJ,]Nu3=[g$PlH.PWtW+_U8!;5iFf%-Sum%P8/;49pdYfUYmg7[b]aFJ:Y#O/?beZL+eGdQVa9J>L8I(r-%?F4499Yg-H`Xf&V;L#\R7u.:X*8)b,p+=tRsADE3VRR?Y_A%U>1%JGbP_Wh(!ulk@0&E`/.><_[ZJ)0k:2%ICHU;[Ff7MDk)&]?YIrK)\t7N+SIipD*g3?:,e1b2h.fg7ALVm.M!_5FqiWZIVCQ6%F'6CkIMTI(<]@LV*o\*ui6[uC1>OuZhc*ZWs+<"-.88:CQEqE&)rrqs:[Pk-lbg+7l==[s4PEmh!X24Q)?9:gBMJVuWcf:b]3_F)%[`=Wq.>']SY.(f#SNMh4NP8V&PsXskW"`8XN&`H59cdLUDKII2KDV!8_]"uh&O^PQ/fr7?$M$A2F2]gmR>WqZ"KnpP$mA^S#$cJC%)Q7Fb*];h9Zc!FM":'RWEHpW"3#.YIaU,CP`Wd^p/^K^il*Mr]=]TP$f8eUu>2kb$O]8r%.5W"_p:cp/Qua^`eJ>Mc:%8KuB>0J;%9MF+TZ*o1T]"`kC[^P+elE3E0Fn$sXQ>mN_KSi*lK17FdQ>9;/aj_aBo?S+U@T7FTm+efnYF2,Yj]E]L4N:cei2p/;Gb`MAh\fnG%ajuSAY:hm34;!QeH@.B'*KetU,C+*n98J+U+@`'9+G5@l&XC[Ff5"j]S4);C3)iVU.8A,e%/(''9^k)Ec9\[^"iJjnM-I^D@\10V%=(D#Q3L[BlG!X[b]+h]@'65F!W=.]CI)/Ane%*SHE0889+LNm,33iThja"6ZEP7CDEW)-AJ2bUb-%jPG!a/<r1oh2l>fZ&F!)=Qq%3Jal/$h^YR.<^>$?m.j3]W&`g9+uu+1CSj\5tD*lfd?1k$4$#4J!M#j@\YR9F.?`N<6mj\T5>=rb-m4uod1+V%@$9"\&Z0b9s>IW%E)rL"45Wr\8djI0VB7).hp=6F>e;Dfk`E*9)Er^?o\P+b=r\9&m99VlhLjjI:M.e$%eA%*l+^daL1\S_#!bl2eHQGSehZ(kl+\*k%8>;,f49e6#+G[QG'laB:"fH,LOZ"+55)\E8LVmi9$hrRp>$hj*Y(`\d41/p2V`aSoWDP<.]A5TZ'5d<"CoJFd6W#/D8_*O=(<`*n%rBq#F,g7&WgD6ZPre>T[[EJ=:^L5]E@@2Z-GtMKT-Lb4L"C<*-N3-&aK.)Zl)(P]c[a8lQ42RhFYlRV;KN0H&GECq7"<696VGT3R%'k;IS@tOq&&/dKD,&%$Wb!ndu?"+@T_o(O4MdSuIpGN-(F#sY,kaW?si`j*sR$]Q`.PurhPd^ujiNrid@9\;ldU5J1cq1KRre:`^%_mb)`QjI>UJQZ#TYja!$?-+@rAUDJE/h%+]%:bGsN?kI6+K1_XBFlHSp4?.cAc[U_lf1mOCoTocog!7-3usiGr^&<R)AlQ;m02OF%/HY,t,SkpnMM(Kjm^s?Vd=C?jqA-p='9q/XaFbH$6/L_#VbV>['FqR+r(:KK1iR@EKXE\qLW8>l/j\/YL9]RWi&/J4FIKNHc"ZMr%%i(Eo<$NtN#uIQ<A\J7Qi#[e#_VVcS/Dd%t:/'PCp@69^[?c3,.*hQ'7U$]5(cZt-QjGuWU<p^.Qt_ai\0FC9Gq[I!QW>*F@.Y*3%Y[TiL51gkr<&c-BDpb@N]Q[)F#JO-8SYio:Z)KIf@G+/7bGn@mmDI@PK3@]7oo2l\Oub>Ik*Y_a'g%?eUXZ\/Teb]k+p]cA@fRLh%`+lR3JYp&FPXe7HU#j?h(AcikL]/dT&YVt_4Q*^F8MR7q;IAnE!AB@c5\L(k21o0;0dXuHOl4I-cg@ST5C,0um6ohPJ_lVJ+r-nb%7Y?Ph>B+D6&^=-bs)1P*etJck=^oT/"^-bj-H5,5T)?&r+r:Tm,ngb?7:VkWlFApL7SZIYXRU%+o#_AWC:T`E(`D5fY/SAs0l7K4%bE).]?p<`8Kof@[1fJath3Zi(m$8j=$O<N<Zuk/f/0n/WV%,53l%K>!I'uA**+Nf2?#CK1Np0[@b4=?U%Ud&2b`"=%9<jVI(=TQ3%i<O&\]_qVK.?#i]Do1L*@*6=p(;u1!NgItg[sS"]J`-f39B[sJ-+OdQ)d!t/a1t3'R'tqECKZT90f=l=MIa/c$n"l4;0%#XV'rEe%YN&eY=%P.qPi5)/.3"_p?\_[\8i)WDdZfl13X!(t/QjB&L/Ja_KacO+rX%\I"=\D?YDc)qNj46!@:gR)Y/R@u-j::pK*b:S/$Ofe%jo(0Pl[2.!h$(VUe@?>6CS,R9\;-a=TP<sDb1o-VfKlkm4nYgQp7PCnkM7//mL`bpfl2)8R%IT&D0JJMX74Pp8+YO+s'FR>a@j5Z%nE93?I..l=DNM&.rUo'/:=#l,Xe#1Cg#lR$J,AfuT.`tUq!Z&`n]g=[`Vf$"07EB0ljl=OT3]fF05+HhVr-Cg/?]"4qmW\uh5dUP%8r_l?Ve7AYM[Oq$B01US\=((K5<&&g/b%R<G5q3jmb,4]oC(HVB05!WS0$.GYGh,P2p2a00L*17-VdI9k'^6K-R*<P0Mpri55%t2%0RU=s,i1.Khn6YujkAO<XSS]`duUCS2fI<>P1KWr1Ko8ln(4/SqaWf1T@TUS:S2#9Qf%h8`UV40jmC"n%;kS)"/DEaopT#$<P>qL%H\+o:r7`,GH7Wn'k4\*;FVj1TEIE2B5&[^k++<<,Vq\Ps`UREnRE;4>cHH([aKrIfI!'LVF8Q&.36g]VCO^DO[TK/\Q_+$:1\C!.%mGdj;X5f]F%hG%1s2`5nWS9dDGAc<aY89]1MuU=6qH[H)X?<m##PsjF\6kWErT[8#3>^TF8+2ebr!U.+Lj@qC`<W?K<u+[-UD)C_%bM0)X`P5d)hn;09?@Q,hR+3ROe;)%&c/eHOibEp`H+!?nV?]<<WS,$KIs60dHF(njq)nqtb0(%ehDn]NSpg.MXhD6Lp,:LYUU$%@%f&"F#HRs"(3Egd5YNDY5TDeTVoQk$94Xk_rD-?i0m(Kftc5Uin;)?%J\[O<f2Wik+2#$\Z5:k)d]q(d#rqII"I.8'mI1M^odkLW)%puc,[4_,lM2#Nr*2>$k#m0D^le$Fcs*FN7,F&<.m2A<63:(A%(SB`j^#FIdT6_@%"q"OUOp%@SI@S^\.WT_csY?tWiDYB[\6!BcC%:=eV#-_H"@Y<S0B)?%[TE:H)E>sF^SIA16O'q_*GFPs@[/WRTWrP85WHDg]M3\lj?O"\g3Y<N!VX]T4OMOjKSl[';Qp@C=.+*fJS%-W=:-?G2pP04#[F+0n7,%t/i3C$j$i;7o&]?gV3,>i3aYej!_i+8c6B_2$>,n>CJs(Q2WTbNZj@A=J[37XrupUjoJZ.f]8X`hn+(%>TUH7S/sALhqW8O?$)1302F6=?E-fc;tqRRYOnd-<%5K-LH`+0oW-aQO$-J5^qG'\>0nTeo%9>Gg$-c5o@"67-r5mCX=`r@rW2,g%Rgc;\?JYJH@Ju%98%g,hE<#PDM,/[M5B\4A/E?9dT:>M_kO5$PGNMu)2fI"Y2sYD,^T?dL3k"UsK+Lht4oFF$lHKA\q2CT3kI;>C%hZ,P`6bed8GQ7<kroN7phUQ**O0r9jRs^oj3@FRfnqA-h997or\b8EL30C,"'3X5WGI"sPrY0a#m>3q?=,bm?)^Ttk5<6D_T3/5l%e*o4ZDL;3?oPD6j!l7el0u(B6HM@.(m./Eu-Y/[I&,UV4D!fo,pmrX5gG#rC1](I'^r&u%O-uK>4d2e\c<`W&m,80l-(fo2n&].r%I_W=%I.ZTLI2W&QcM7Qen08b?Rp-T&rmSJJ@I7UhVg"'9gAGE$Mo*LN9-;6:GsYtSm?p'OZ*a4XXrdk,pdBpo#A?A`5!A-*BFKAn%4!:p1G(+G93.&%m>9#lG1N<*)O$:\A[DR4'G*7%kr+'j3i:Qm%g&-)7^::]KErPJU$)<8]qtQP4dFpC%.`,kdg!B$1J)/P&f:=r%%Dg`q_W]st3ij&+Oo/S\9G,Y=?fnH&SkNrB?qk[$UamcpMNP7p/n(+)P;rMp2O@>6.e?=p$r\t^t4I4I*p:@oN\ia=a=bnSXI.u"n%"DJ[PpeZE^+02pM'\`E;]]A3qIJJ!\#pqDlqf2Uam>W8iG;I![&8RO,+(#ghHVWJY'k?QVntbt,n<uQeS+u[@g"A`5#L>TMN33q4%!j4V]q8pbCc05c)X*`:tT-+heZ2VCrO)N?_5FhJpc`DKSj2:*3QGD;rXnt?S,hAOKnl$WYVIueCMtu'lTB#b#nX#RilVDGFi"MM(%o8D)hq'Wcmp8Qn9GPl9?@Fh'm;_a)7N14@F9esq2F?6!f1<fSNGq/"T!Bg.>4$GRE0W%i6[:GZtn!/6GfeAn>83UY%oPDraet:&_%&PR!+T2-[PjoINiUJHYj5!$S.*G1KFo4Wg)ZUopTIjRr[(k!M3jr()74?u>]jLfr*%eId:h6T\.=aqboL#5$Y(-V4es4Gb.*d.DD%l"'BJJ9a6hYPqJ52=LVaNLO5Kh0.cO]<gK'Cr5X"J5=\jZadC4J8ZP*mU>P6[8ac9,GNc`a?G`uELu8<fpd>/2B;)b*%h1@F0r>&%^YriFNjdn[O.;sc?;\O.7GBN'a3N$I+Ogibg[MOlpt8,&g[MNY5MP\6VpE]cT[%`lb7/`/Ci/R]rsQg82TKF#@oNAlO3QCBh]/-1%Z2+7gVo@?@BCklT4UdSN)"V`2jm.L^p>m10/?PIa-q!sV"4@[k-_:t6F#3QE+(d.Q^Vc$0IR4"3hd=_HZfdXJl.3VAj7-I\ZaiHb%C##D&[5br!cikUhlOK3/Mj)-Gdu2]J6RPrnGDl:A_#qt^pV\H3Z-=:Ds7Z*QLfmYg5P5CnY2A2qR!%TeS1f\D/3;;T%s]u*,>Z[9%aBY</MZ,DZ!TV1.nT`a'n`BSYbA5Od^:IVI-1Ods-p9Q4o[mU+&)uN.S2G\-Hquh3[VpreM)'`sGPg(I0"&HD@-ZQY;"a@qhu<V+%>c<)qiDK'b#GQqN7,h.mgE*u*q)-mB@i%/k+.`(KkO5$PF66Q%2fI"Y2s]cfs0=EPl%D$FQ2'/8!$<tH9fVsX#U_k'ma&r;4kbRQ%Iqa6/!o[Zr'a0d"nAU#\BG3`3'^EsjKY.U7DaMO[bDpF+aI<b3cd$P%Nfd$AH"fc,+lp]2jkbZP2^.7C\2Pe5Y@$1is)*S3c4M*W%SYs==Sl=-`mHa#>Dm*K2B)Ck%=33*YoQ]C06:qcXgX7m=GA;F.pFe2@._f*cFPV61UJLFYip?%&a*$QjG5C@g%=S99(g$[=4jDNt%Ss%Ps(?gZ8=,Y&:(W;OR?]]P]qW@@,+&4K8(,oT*/Pa$i]UE3?=doLX)/n;OHFrXc)n5@WD7jj-DqouBp7/g9%h[nBQe]S,pD`E6%j4_>mq*.X#Df7i/g;0B5XSt^;Zb6"%(2*9u5q\etM,3:&3B1S#jWun,VojfU&<#eLEj$iYo%3=Ga2I>JSfr(33VdFFo6/]dc(^/%%+7.Idqqtu@6QPOP:[^j+q\?H-*rH.upBNh0s3c?8p!SZR7\)O*^=i9u2L_-Thr_C\7N9+e`c&3RgMHdG)o'WRp=l+:mJe^m-T4_u%N>(SYNT$-@IiC&j]fOD:8gA`MLur'L?]X$\[^eccYq^s=e!mQ(V]YJY4["h05'6dd?_=V&XV72i1EL,YmGf!>cgheul]^)cmYm.l%r24)gk3f4h.QfY6:H^Vpq5]ICa"BV!W^K'pft"Y;l<d>15+V3BK>m9@cDcR-i"L84/FK$Solbe)q;^W97Gn)#(J[+6::*=J57)IE%mJGd!M#<<_KJ$WH^0]T&crZ-h#>s;U3DaM+3qVM3q?_H9+8&#c+>*GHr:C:Bo"4%cJ"l!''q_7N%0PP?o8KTQRh)b,*m:^6S1)5f%fT;),p4uGLVgfMe$c?WC:?([#_b#42I'!1bT2T!E:-Y>A4<PS=CObso]l7]Q)6L+:I1!CN+Z!8.nbX#Hho;Y#EG@TTVafN&2'/kL%r;<*(j)]3TX?Vi,;raVps,Bt;3UPtKWUYX#AE20aPYR4-q#bYA*j&(FA!jC)9#hJ6>s2Zhjn^cY.f/Z)n!B"*Z!Z%$2*\gCTDeTV%FFAst4M9gXXJ_,.0u0iZe!oA.GRf),)7@4>4aXuX02'W=Hme458\u:Qk?lU`s6tQ<ooFLum-!cDDfto*I_@_P>5Z_6io532drXWM%V^)uuYVr\g0$i,cP?dpYDtS1_^hDA,qct='Qg=7hb>0gWkB[rnk3etgh*oM.gY?*,qm\$*Qckl!MgfYl:[%)<ho0=%c0a'U[qA)u%:X>*sbUt;hJ4&=Y)nh_f8Ueu1q^c!S'AN?N"'FM0i,EhV1X%"h^mpuc%b^^MH/'9Jld'()5PF`e'K<rYT::3-VUmge0(C=L&mm`4%kNR91LWAQjhjAc:g>%#\A)A,N)h[VT(jp,*g5WrC8E[?7p`AT\2?r'Yi-UCeh^/`rWLA3Mhbs":9YRp4[^#Tc(>m-kgK8hBMsiqI%hg\s=T"MV&Y>6U.fA'$Fd+nNufmE1AA<O$6pq$Rp!E=+)6oUe".&%oY@RQB:6jYY2miT;[s!i,f'4LS@qs<Z/5ZaSX3r,;G;mjT7%IZ8;"8H(4Bh_m:d'Cu+u+l?>>`]n`'ddMP>`G]ppLZS$gc\WH&W-\Dd;$k#;q&Oqp,rM.4TCY-nQLd3;gH1k5\QJZ?f4%rYk#YDb%mpcp)isW*Oh/T>O3jn"?B(Jc9\G@Se7@J>/qIaV-A'_X`@DYuse,4o1Bo*>Tbl(9Lp&"Uiqj^"FZY-VR;slkq0_?``rNkb#D6F-A%a`ZF*e+luXgqW,ds0p<HYjCST([mpOT[E(Aj6nC&qX:?Z\)Y-gk,*CdkFEMEK=TZW\a#Pf0.7?=eaNIgVtg#L('bD0iJJ7m*jf=K%A[>@Np+%H9dF`r<o=RWJZ7>/;hf,mX@VnkVs'MB4C\]rd_&.RQ.bQA"j+mG4q&rWG<IXW88*h,o@mGpOb"M:YjR)>RO6n#*l&Ubp%A,HU`=grQ"2IH@_]DT./A`5lFflXI9/>X0_pe*iH^\#QPqVs4,:V07/?;^[kQ[U92l*oIE]`YrsG$j`7b5>mN$KL*Feesp%C;6?0%Yj@a<9NoRc".T;aCQ9rA`8jTCq*aG=H6O]J#NQP,I_\@[?"Nls%F&h%<Rj.B=XVPZ7o6+i(p6%MK.S\nq-uMdfZsMWkksMMe%-4^%a*.I#1!S$^5I]/F5J-0e/iJ2QkO2k@J"8^oT3E4`#@H\=UrC)-J7"*ERTlE5qQ%-F^YoXaJ'M0Uh9oZuN2>G+VR\q3lMf#m]`_YI%Rd\W!os?ep-hr1u5)I$VSMp=T?/gP"s7L)EDm"S5Rl9L2:mTE9fu]]]YX!+h>?hNaqc,Jmmp)pf)nL]PNqiBp7HsZX07F@6pAKI6%;_`m=c*8,#F/nVo4!"JNHQb\D^Yt$q];rE5IuS.-\ERZ#'E2h0qjCH:jgrH=75sS-pO78t,"'psU]*7-5D%p!mt4&K\G5HS?2qVr%qK:AQ=.QL:4T#PE+-bUPg&RT=h0,bi`B-<P.'E6M=9!u]a`#42+jNj8s#9_SoS:bA+J4er/*\\_UUHP_?jB_<2]&%Lo%h/7&jHoA%_m/5Qr9rjIm9#eHZR8+`ENO`a@.$fSjC_C#B]iW44T<rt_QOX=m%u@aQ"9kIZWHbUk^9GsT:D<jP%YZ/IIS4(peq=pd_;/ECB+Ju%VBgtIc43$m;u$OMeJuD5n>!ufPO<7G<f.*)5iUJS?JF1'fWT-[.*>FE6/.5-7n6^B!?VU:5FRgb!$B<rPbKCGdba9AUjY2(J&%BX%q!\H9qV0<J0C;OgKY7nFD:NJ;'oFatB+I="A1U(%-T:I^MT'7l[DtTR7l-+;C*Q)C.RMgV&BE4lH.<ZuDfV:2"lXA3QBpBkr?=N<%9&MX`;74*lS8H(-.tpMUgR]OZ1dT1gQ-Eoe^%J0b>D\1tB,cr2D7e>Q,"O]/5@"B^2-<Q2YrR_BPNNZnS$7[SZe8I6AdU]WdX'Qd%ZKQ+gRt0dSSBKFaNC3i'7ME+T]_9piN-?u+G@@!iISq,g_;B$MhiH$Gl-HpCHZlZ#IbHG:e'?!A@D?.@!EU4)Zf?hOc?MJL^oe=-%Z3bI][R]]U<QLc"IZ+O10]*^Tom-u-r!>^B+CJGWoA!tkd@59uRn`"HRN5e##CS\,iXCAT%DlFu#Ytq<6SYtNUI]$p!#>((HJtI(%#l'0"i;Y%cs85+]Xc[AW%ZF%GYnnaf_Y2_5<)A"W%;6fk$i`VfDP0!>Jj*"AKT2Z9&LI^R@cEM83KPCVg95-G]BohRVt=Yq)DX`P%@tjl60qmQ.)pHm3No;?nU^_P_rmDRrR*P]&U+\bjGVW4)4E(JDL9)uR)h/<MVd\Z)Xf$U;i]ftiiREl,'R:&f7ig`]+IdI3>Rl>I%J,hMO1fg1(BF>+!c>qR$^CHB@rI##9(gerk(B[:=#u#cUWXjD3TGm[r+`>;0!._0RMo<UpQJql`Z!;t!+6[BkM]`rRMaV"Y4P._X%2G^PWX)Glkf5@pAA7H410c2sU`qFARZWLpL-T@Ogf>Ejg`#(aj#hsqtLA6G+,]$XO"JJ;<#R$kf1f_$.6/f#`oX`r3_2c>GGld@-%Z1mcKkk'Fc,P>[UhWU`3U!@Te,R-mgBKP-`a.ihSD@Tb1#U0T%AUVo+o2uDj&e_jFKn.ktj;ieY)?/5fB/l3+[D3L0nR1'8'Km&4%D$_[h;L2W8B!u[;5D.f2%KS`NmiUB8>BVbgrR"mT\nafMqu,"S$nJ8YKOLO*VJ%_WU(:e!MQuaIJg4`%!_+.L<9N`_LR#CB(^%5D%YNRT"D_Jc<"2DWRD:*W7KdD@Z;-/l'3m(9N^08`]O8PgC&!P;=9qp)H(a9[SLo@CdCSN28&rB#4M:#2rmh>eP&&JPc-%A2L016+-%VWa2]^IL88;uBD\J:Kdp'KqNsK;%cX%7[ZO68U:,Jr[:`%i5``5j6hRCoRAKM]YYMU5"9((aRWb@-!'<aU7E>I-`N`'j-4,F?*S4%j[nZ+!WugTS-"`cO%5?X'o44qd6dH'-".oK7kM"!FRpl3<X]\M69e>P&-HBg)1+L8Ul@o)7M#hH!g]:#B@3+u,pJmULT=ir4T)r[%?Z%e-LoWIgDS?r=#7FoajthC1X73uX&#F'G_<PM!O.t7oi30u,n/m0gJ7cbG(PBJ7j1iMqTsAn;-b7N-nak['X2VY'r%*#P)e].+%>[F.8P\eR]l!IP[97n)`-+OEY+QLmp[R?=QH"b%qa0Osi(OA@7(S08f!RK8G[SlYHB;[s*H:Ot9&(U*RBArc"q1nle3?NJE_-[d7%7?6eFo0/NpH&m[Z)+#a0QV\(]SusF`0Y-Q.ee.T!16_-f5M9,Z@*n_a_!q/q#:Y3iLML?MY\NHri)YEXjlc"!o!%!n9H1Jh4Bcn-%QS?=.HC'"9Sq-XQ*$<f_K*h(g:IS]@87[/T+rUUsB.+OjBEEnn0odEU(pZ=NM*Ak>XT?9c=<WhN8WMWMqOh9YUpG]'W3Za3W#t=Y%dQb4U\GmCpJnUR0;)&RBD^0'$7E`K[@NnZD7uLuSHt^dO^utPILWf^@A4.H(dgthq+.V/9Qc-`/_C,AQ8HIt7P5d\n$GWUnrDCmj%eFOdTXJ_X71A0E>:?H%`4U[+XIJh.Q@jQ4(RJs-(kXsp.gSFbN(kgdROlB>kC:h[/#Q2mYa@^6GU@X;rgb-[);)0%J`9hZ1dL'+-%daD$^$.Xq_f$sPe`CQRNlAhd"<+0^Ukj`A#0o6'PV+56l&BP9orA@]YeA$FW(B:k+mD1(/+p:?/Hq0-Tdc^d!;(2H3O=VX'CnJX@%DnJp.7Yc:MT)W)[o)sO0XN.@X':Z=naORC+GaiN([P^Bu3""-K["H8<)b@(e*irBEUi:*TbCfIManKhhGS/V4s(>:1DQEH=_jKU.%?'L*$ZRcuE#CmCcpD/\7Z"VXikXKfj?HV!fE#TI>KdC4Wj!qac7S"l+*2)rd_dGT]gCVcU^o(S.R%b7.o:c)adUFntnh3F&/k0pQ%*_@hJa(!288b(Wl598_5BU!+3[%E#2OfTm50ff#1iP%n_<JldT#WU-Y5Te]=\Od)&X-]B<_0"5dh^7"n^_9=18$UY\UGrU_P7fF%%(JKB%(1lGL1.&qs1bXA"NX(spA$iq6TO[\3Jr,<U!jAnc?6hlm#X1u1r*jH#6'!-B8ito>^et/tV$%M:?tiZd"rql?7SL]h3It!P%Ag8W(i'Gsk*3B8npo0L6&Lt!brLd_T+BTD=2@=h-`R8^!E&8eamJnfTJd<-PQ3;[<>XF$8OiU1,U.c8QMfL(;6kjU8^i>'F=MXrM%24B,W/1nYs^u</hB+pDp!1/P(ZuU7F)3$CD\7g@CHj'J)QkA:]J4i2pdKmOn^^SU=QmRPSa#F3UU(o3ojcLMDi4(_=P)*_#i%h5C%!Y?3T,FTH[$A+9f"=:om*p*Ud!dkWCR)!,=!KdqGK4P4j*5dpOKquXr*$O5_#,+m.j8jP95[bpJYRs:/-jcPeN$*pqB,=a)i?DZe%=R^$TKc$%>5^\$?L'#6pH3aU>ULPF'=FikJ3_6>cRc,HH/Ya<F/;b`U\5*N\A-duZZk3=2QlHqD0c1LuM$"q?OfK'JGp'9t_N4he%`OTG<^d)U'S17*f@&"-_'P*/YU+nD8/e[.-6?.73/DtiM"k\f#Z;BW(#Uei[(l+n)n@F4[dL]P@@BB#Cnt=]H@6YSUK/js4OeN!+%N,fLKi@RC$9LMB*L):p._<lJ\(S5H),RjtrN='ca!<L,r,JmiFTpZaM;$k/_mGNU9%+%s_J23W_G(,r4JBOUr1O,;>5#<dA<[>IS%KL-5A3),'76!@q1Od?h//5Qu\LK3F##_`H`1_@dP@LP%M77A@10TuEh3ua8^il-S$1(B$C7j\e8M+&Wd_BTBL%NtjPnTFs>Ak\oH%"I0k@U_:V,',3RN#iZ(g)?bgB`DHbI&X%s588A9UAVhfZ%A4b4#])k[.)(pr1QI;QLBLk<&]hm=X;[iRKt)ctonA&_4?c'a:]gW*%`.jo"6%]/o5qjeAOmEQYi1OQiZBj;4d"j.c.G.`PMY;2p;4s#E!*5Xfp_KC81MdJ::B;P*o,'iB*C[ghU(?I9#"^6D9k+A4P=%%W%."R<\Mgn1lL4Pj?&gRN1/kIiiS2jHm@UC>]d"ZoS5QWL"5Rk_p/J(XO?lWjjB`sk*RRTj2W!JWG?n[B`(pn"7"XJpK=MX>LDi,<1%,#9KlCNBn@$AXLlRZ3-UA3$_2UNDI2gM'gW$kagb;DL>L_XX>f-lJ/?.0'X0YXip?SP,.Y=A/`5$1@.Hl2VYj`)EpS%'@+I49cY(%H/Ro6G$Q.A$Y>eqp+&`A?s/B,66WG_7i<M&$<+`6847:1IaNa)k=q#mINe;/C.fK?H&,]V"114s[58Et%WQas+b?OOZs#RfO\0X[%:.:b*kfEfCdHFj9)l"/S!d<`,;Bc_6N/0BXQVnr5&o(nf!uS9E?5\d@)Nk3BN5^t%O[rMU+RfYrPV?-9O=ijna8r4FY;B.r=JiB0%)eJbCLXSP%!M&@K+7Jh5:=0gS?2QYY!FhI5f!`ttLEohJA3V6a3d:qIF3?i!mA8bV48j`D3O@c@`=.d4[H>gST:NsVNWL0sh=+o8%=BU0Tq%<i!C!;?jc?SSR]T<)<Oo]p7c_\)&?K(K\@'Z['YuOVTXX_h\U;`iN=@-/V72ct1=YUQT6kILK3s[g*eG-h[>f[m!A3&'(%ZS;Z"*T5Pdrr=32EZ>+"'&kP.?f%-%c9h`7R>@NCfa,hGo+;#N!]$=^>&m/DJYAfhdDC.X+#$M$#oIdK3Dgk"NJcMG#RMdsINUT[%!Mb0R7<XS$s-;>Mp_RZq6*1.Yc62K_2+B,@s$1N8hRj66;LdU*;b.@l(^^*T`0CDh'MXeMU0,G:P7YR-'t=tuDd$8ROhqk[67\$0%#Q^'rUd,@/@b1h2=qPCd_T:4KGeb<-I`Qfm"H<IV#E+=-6C3Tt+!S'IG)hI[nm"L8aP9/=%/pS<5KZC`*aV*/`-&l/k#c26,`GFq%6*U+e$ABU$;c;rdS0T(V;A!`*V%4bX?L'-A.g1OH4(08Z_-]Lr)Y7r]q'cXl^i]cKEkm=(O?W`>Nu3RV$Q+(4AIG"tj9pd`"n4/q%HBBKDm?'cY7O?oH@6$/_0i#b0([X(F+G&St-BI7JjGlaWph><XJQ\ft9]RTn75Wtdf].VXR.mfZ@$,Z*+^Unqb87+u!)8$k!"9=Q%C6j7%35M#[YU9FdK$f__HN9raC4I^aMpYAEMRbJc-+6OM<->]UaYSb4;U@m.%^k)k*0u\Q_a6'WT<]eE<B>t@kkE$A+@#1o-btu.%40&jm#Sk(K@SgXd3;>*@P]&b8Xij1VVRSDYhZn-$pc8T.;JiL9$+7,,ED;ee^H.;7WD9.o=AKC[_V^\,"kDU'QATUq.!DJoWF#8/%*&6JVDZk8tRq"p$)>LK.l40_?0Mp37g]2CP#-072$1mu7>9A\!HXakU#Q\Smdenm)9\^!8Ro8o\'(ks+Q:2fPrP9H_Vq5-+=0p#0%eR\\$+3'Wf\?6'R*Y:',m.dd-7Dnc%nGhWIIKq<-^An-F>N6eV#0ZP@pT*UhMPEO4N"u(ikfrda0.8S'nY]K8oHWN&@U?R%6CH*a%mpR:R(R\'WDtmgT7C"WbkqQeVqT$a;rqXsJTa3\I_IUF'Cs;<G_?9S\ZOo,$ktRp7>61(`3d>";08:S4fIkWUD8,TTR"(q+n3LVg%\CL&'gOEV-Ie40uK2nf[gnB/:&_h@Ha*g/O@"l4'N<<?b8\n&Z_789'j_)9lXOe?-Y\K#dC[mtJ(7%QGcL^Umo#FJg.`#H!#9`H"%m#6]^IgZL&oO`>@T!QZJ@bI@a6\=kF<6Dl&n#OBJ3M5itM;TbPj[^@rk1lP2Y@dKSB*lRAr4gKD]41Io4E\`Z*)>'pfs+rE7`aq@%0^(lt]osih*Tn0DG8@7IXL%-FHU=tcH5Sll/S=Uu@aN5Q<Po1)HDG*WP!?(m:(b@ZATe9F4h09=8*uEe$eGb1;(m<V[?D18-Dr(6%/$T:CA[,$f8gI&"BlV3\;Cg@ermb.07&5X=]/6+%46-0F^)eprI'=40SaNlPUqJ9f7t)^%Bc#FM5+9cCUY0s)s&dLrF2OlmjUBLF%?q45EI'#5mL/d@F7rUIjIYreIPdAsHi5N)l`!F=Y;>idZ?mpYYe[>i/^HrTkEEo\KF"f-)O\dgS.sUdV]X*-TU4NscqgeK1,++?V%6F/+0A<Sfd.o)+(:o))IrnEops/bR@rc$EP%`eK]#nil*[UQNVKM1XA^"Sm'X?.L+HYkYWaR+8a*;#$PM$uO#1>Sf2VDs=LjAR1p%pl#6cPQR'ZQ*A#]%0;NLLXUg&M71MZN>i6q)q\eQ%2O#P'K1612]g6Fg0i#"++Ud10Sea:1M_t_"`VP`3JeN/Q4(Vu_7p2f'qbmF%_@F./<3@_poluulSDC8.O<!sD5&('@R:JWLLWJsGb+':"j0=-f4+%Y@GcIV*R^9Oudj^p>@5OYS1lM8Ng#H$+=PVW31(!6:c\b(&%8UI/^Y[8?2KX(^9Ia)B2+f@/jf;^:Zhddi2>DFM[/GqBkL4HKn[A:/1l:,I&Safg!j>Yf/P8/Y-R"/D$L@[%UK9=c)BSumRhdJ3+%#;o['T:c71XEc]7SlNNS]HJ6eWMh3&k3L0kHTlkMfd/"27T)ne'h+Da+45Ig=E7oP;@`<D<8`(#DUPF=8Y#1c.2#_]9P&!S#S#@Z%l9T9.:b1UOX\b@""hC_0VV"^un$%mdj[-,SE4E<[]>EEmp3Dk"1+`iSKO9>c4l@KAkU!%9eLt(Q`/krSEI]"o,@Rp\VWc0BKpu47%(2gi<[d[M`kV?!Pg/8D+AJr@q@ssL+9gY%H?XV+4:a9Mc+*7N!JYMD`T0822le8\srg1Vjo-uHc`U&"4(;b(YY(/VCL-g]h..T'D%%Fj579j^3a%J\,s37Pt[OlQh;a@*GOfD,&;5\&oHGopL54LI;MH/CAr9K)DMl+ABh_teZl)GYf(%uil&@'/O*`qr(7l"D[9Q4#/7%`_!]omC#!^TJFXs)T&q4cc#F@N1,0pRVA4Qra7baR!(AN>YTRoj\lOV&5be4$QHP?/A&gMUbarIMVB[]_Q;;!2dQLU5)%O%9Ats_%rKa0tl(V&p4F^,4oqEOs/YG`$Qj`sOHjBLHW/X17Qt@jZaYr2/NF'F<a.7M>dpfr(oZ&liR#F?6FJuT)#sp:Q&X)?ljW-Un's([$%`tFOFaP(;7KGka?=XmKskg7iu!lr6Tfg8`AA^V9H:#4*(Bn0I<YR;I]+AXa%@A0s),V6<fW<is7jbeZ?D*I287SDjA/Mn55D5"(J%e.u628$/WKQ#g1`#Ja,'+c1ai^J@q)rcl/%T1t<`I1Aq10EaXr/</=l)$2i4L2tbZE[gT;2Hp)m*a5LB'(TV@>(0RN?D&=B]2fkW%ZZ\DM)XBaYY)>X+8M)EcAjZ:(>jD'Bg_1Z@pEonW`%nWQZdn5H@=W<)WQ^k_fS2?a4KjmYL/b$@\<q.aq1=t=\5,?lp$LRbm.nWi%YCX\V1[=]\B>qY[.o_t/OWGq3IM7jJ&]uq5NpdZle$OIbVlFZ1(*DZc#INI7NND,Eh$T_</AO#XB4/GmU\VFoNram-2SJA'#c43=%C,d"#Oh0+P.F_]DZpEEgbfVI>NN+jHXM>Mqd;6-oGD02Ig59Ys-''mZBF,Y-)#>(a^Zj[O,A"E.<@MnWVT*Jm,ZM8o@E@/UL[#YH%d(#2!pG?)'2);)k;usD*8@@]]cLK8sh#n1!o:CMkJJp'KVN)Sef7rh+JHUVWN<L.Llh.Vt8KjbXS`s*U?VtE]1."?2Y%QL"YUoOt%kkm<J"A3u"*tL-L][RFj]&@`f?EO:3Xf&28T2.t#\/!Z!ZV73XPLMG5&6LMkCnpSfo<Z30GRN%kd\"rs2k?;]@3Cp$c3+G_c!JXd%DTTk:g=PLn]smdlZ&o88]F(]GG+GQ%?1g%6"q9D=*O!;+Qa>qXpUQYc##`2KMR:&PUNb8[AINP^+m@7=Z.-60D)E>FiE^hqEY5qm%"R,=-@T54.h0%VuRRILnDq7X1HJKC,1ZS-O"#VC?Pa4^VSl3^1knjuT.sJ9UU\]BH/!-2(a82fs%[UC(O0\8\hGTaoM[BiD);q!+%40*,ZT>AD>2%%*Q&j,:*hKTKt\i(K<NSH8I4^M\oq8988^4lq%pFAp=I+OH'jKG&?58-RL^jnpoTtJWq+2Af/&&n2)e+jhgAVDb.%[-sTLeT1('eIOgCU"7r"eqe72"(^Sa12kc@;+"s\X9QqqoqX\:%*&PQ[4&;1lgG)7]A_[dMl'-?R8X\r3sd5gOENXOfc.%gN4Mj=%.'"SFY?;s7cp;8P&=s/eRu?7d&nXn_S(7fd(0_tVB&s=PI2)bkhRR('9i<;dlOSan]229Nl)1-0rP0]K-+k@<i3D"E^('"t@B*)M%1i&8n;@[q"/G\QfARJF[cQrs^Fhot$*!jb@Lqr<&<gf"9>cb=Ubh/XHANO*)?S^IZ@AMTrX3S'__?9Cqq8%)/`%)N`."9k(q^VNG%hW9e,qrc*UQ4mF(K[8gj;SMr5N3aOthnJq,f_NIP*=s5,3\KfLIh&@LA`k`!G@tZW>9.D/m%#I#)4sS.J;`0e6?Z`I+@u!'$1+;;%g-,c0MB-q*"#sE`)0V"UIDDU%LPh)nG0lZPl4e3?I5QX"H3=$U/_,(3j3Bl.QPc),+<'sRQL!BT*8^KJO-Z=^0Y"S@OLm@eh<\G4%I^lbgV^$Gb?-"e?H]-ifk4r0LK4K$R?j,OOF1b"X./6^`q?4!0^GI;VDOtGQ\o@h^">W>s=K8hU<+]G521?fTL(@pP6L^FXjNc)H%Oo,2S'g?/+f<-M$fmU_cg1^^?[-Kc?9eT,&chPQ1;(4O-*d;MS#q\s*gN%j.Ni-ega\*rqY<KQOdu/@0.i,),W0:bZ@tIhF^[`HI%iZrsK)Y0`N!qTuLGsR.$cLbi$Yn.gR<nWQ)9f7@=$lZZb,2(.p6LKnoY,_F*cl\T-3of"*BpJ^EaYJpn5\;dP/i2[MeYbXR*j:KI%k2\`'20Rm3SG@B'da\JD_StBB]:5_]9J[Kre*g8m0)h"t)\l`.nRZCncNg!+U8QLj[lG&+MJkb5oC"@,>]uVY\)Ql0cW0CsHR'?i%G]VtnAG&$4Q?(km3+0hNh!<#H%"*)DkKj%gNbgEGFcpGAO/I42X\O@_F2kpVra)97\ae`ERJ,lJ`_!f?frMoX5FllQ(3>,906pVZ%r]KT@3[=E6kV'SM5B5!p&ajUriQ5;Opfcopa3Ko2\F;_d1Y%6G)iigF5-94\2CEitpQEfqHgZ_TEHrJb-I7Mla+]lKFCro^-iKf"%.73C_/'C#)2U4JDmV/C;+6LE\5[X(;i<]\mfeHQti#+XVSa"r*g$sJ6&;r(??-](pj!9t\^&$(CqG2+2Hi/K2-DsTmTd8qcL*V%R%n(F0Z`)AEQo!1QQ2=LBAJp]Smb_J8mY+ii6\:D8snA-W,Jst>^7/,o86(e+tiYhd\m(RFiS*'j,2[kXkT[!T([Kq@<=U7k"e45+G%F.YERm=/ET,"d^p#4Se%&\](.-sI8gn0/<loH`_+d==Nt73(!.)ke/uN>08oZ<t:=1]QR_^P=JV$_<=T,g1@LDpHN$Fu%PEm&`%N%PMTlJ8^W(b)=HVF(qe=I/@=83CCs"&CDC[^3g,"^a.Yq)+P=R_s5#0r&O$6JNn9mc5/"uNJrjip6C[W)AXQSqQsM=-DjgC^I0rh"%)At/05WiDhT:Nr-eYlGB>`O"/:RJ?tPg+L=:TQ^ur0Y\@Pt2nm.1noU-cpOEl-ne[.+>9!esiU;;,W-mJafdq"9-jSHL*^Mbc('=%Y/^`8O)+1.IBrOd6C0\'jTg]4J/HcKVrBrq3^dLX9:9sW7,2r$Hn.NT]a3`G^UOc>I8&"$j*Pg/\UMe0(3Ar0-p_0]qo)finplt&%"q=2X0q5\>@'cnKi\=YT*[aosYW9NJ#1r\!a>j6+h4-b?6PJqYqq:+Fea7\@;d`Uo+*D'Js!`#c_T;!;EqZ(D/r)"-QGKI;jZPd\%9=$Z"`*F$!a`T7IY=jA>nlQJbrHJNmN!<(K<F9IjmS>Tt[n8hH9R)F3^q75&At#'mO7Z`L]Mg@LDd#'^R@bliMs-NE!jaDWk[NR(%5kB-"cl7DFKFX)oN&t,r]:ReXTH4d79RT%takPWnb!>p9)6Wu'$Y:q3)H3,(VS\&Mm<"P5?0A6F9i>CTI'3Bo`r2pA!VKp,m<*fN%B`O\c*<;4ZFB)+^lGMd0Kr'pFm/ohb1b/]t]`c.1brlX)eqlVZ?to6idg2bI\`*%T&#\Q?9q(m9MfQ%H<eu"J;`L*Sh\8"f?Da:H%EJ4Za>!5IJa[K,q+-XG)L:LL`Z;,RMD_ncDEDiIB-a,P9PcL\?V^,Yi1-l>[nIul1jAOuU8XiZS%W7,PK3tr].H]!8kUYDd;E+)Z%!kg1/OFt;Z0rW<!YfK7bq)[&TS/5Rs1SBq?F8/+/lm`A^>tK!S0<dYeLpT/:V"hqYC'$n(6UO1M!-80[13b3dRWu\g:_5]_ptI5!%-M;sUW)3\QXOScrb$tiHCabF&hDp9cd54`6.WJrX3/ki@a6AS>Jd0)ifZT\!/e[];L8;4N#Se4n:)+rA3tPO-CbuTS-RCedBNEP_%"A8$k,`TY&<73P$`H$\Y_*^\a`*)%oV6?9,1`=14>JS6YEE3^QW-K0)72K)54B!Lc!]gtBS71Gn/YoBle`IQCQr$LU`(=2?,,H8R%:3m^><HZI57?T_Ma!dmTPdhJdL7$%qLru\V_O@Dc0U(M,'G2Au=KABdNPU]`&BY%H+Wa))8M(+%VC%2_G&2s?Jh_EqG(@S7B;;9s%)L]Kd(MCmqGG05R^qXR>m_ps19`=qM!k=L3F-XS_2"*&o`AC/HCsJ3Me-7mhGZ^APZG(=M(#,dd07?IB*<*f\X"9XDi/,[KOEh#p%-qW8*E&%h1YknJqY[807OYIEO>\$trE;dFF]$V49qH,=]kg;s*`<"*fq,)ZMF%0dWJh$s+mnE^)p!(R)agMGBqQt73BroT-"b/Dr%;*H!:dkU#j#V,+G.JUb#S3JmG1Y90R%JhckG;W5?#"5-2$WG>Mk%o"7^"[jfH`kliQ%e[$$U?%:IQ>_Zgtr)rR31+aF&Z=L%i2hD%=(S_RCd3]nfHFcF3uCHtd(9iu#7-:KDI3Saq=g@i,<W%j!OoW/S\tFb9cZA7#=H(rONf3bL*R7_;o92j.s#"?J).ST__3oqqEAnJ%!<:V?!h:On33M,1_8-:$s+kl/)rh_@']<LCf^BMWYWac`ON`1W]d_aQ%@qkKNnUm&pZ[1KKnmc<S>VVb:Pr7b"P>n;PQG9da5f(U%PnEjYVt;];*`Ol?o?8X&LgEp:8n'uN"JAd:K?-CMs-;HUCnS&\i$&CQeFsd:g<!I2oYA.mE4eFJ</J.bK=u8LT2e/ak-9NbmFtA7%rRP<WHFfKA]_qnt5SU1a)\BoElh/IZdZZ2aq"iu3/f(>M2p*#-7!\'i"\up1;6F!&A8c3s0UIR:'d)A;+.SagX2\F"n*LJn,\E[Z%#]@$;eqiT[G:pkUlC7tL3!+3DI6KaPra`"a(-(V+"=P+uaGqnO^pUAZ9/7HAR?lIkLe9Y&#@\m-M"`9,!ZI1OM![\]gArK^NP5qZ%1\R'9jJ"^Hh=somSSt3S-C6p0GW5c`j/56Nq`<1SotLK4&dp1;l\H]&+:9AVCMEiPmN"FjH7\a">U(H5DLbUg]tALgLuu"iSs/"&%l)d#m99N/7n^6Uu](VD'hKBr*#OsNGHqr-u2!(C/S^e#TRklrTcJJ4RL(miM"mM9SZREMo4JQR@^BDMf>kp!.BUDDqC`lQ#56*&I%]s[BE0ct\:r5j^1h^1`!;8*HT<@5E4CAS\''@8&I<n@(C]cTqgYJ*K#M/'=d`G(?.%0GZ"cG+#0I(4<f(@^Q0KKf^FD\/O6IW2-2%K%H[iM$Ps0<-E;Q"BJ4TG[)uVlS\VH:gIEDr''g[B!EVqK<3"_*.LK-nb_e6l$Ku<OcHo.E_okJj4HNG[5jAg4psKWAHZ4L]D7bG%#K5l-*h_ENBmqbNXs/(A4g$Q\n2DhHdC_T)]'&M$eKutlWKTZ<R(hY=S,%8tZOiL0Xtu2^k,H_.NP-fcM9ekE3(H6-`f@Q?q!'K\%XJV[.`e'\45P(Ze_:UeIX+t'A_q4*6T_Q22cpd*R?uqP<"-0AWJ:mE?>ATp\L=MhmamTNYnqSIgSa$Z[#EW!P9XHn]#a+5\!<3u\%1%<5P-f;b7B,:*=*g,:D3@04fm401I<A6M+&FY-V7ZV@@If5?lS]AgrWU]?u>sM%8H8G0W2F:-trI4KfZcQ]2:W+=1`S>taAX`E)%R2neYUBD>,*i@uL2e,60R>0DQ,.'Orkd@"4d,Zi9ok+&IP;eMg\RFK<R>r)S*B(mF9"D"X>tX`!=l-l3B>`S)rk)=9AXRm[[6aT>%@g=\/`(eWX8QB9^kMhACJpAPp!2Ei(V\^_Kp\`)%$cBsHTcA$,L->nXo(jK5pV@7nh:%ed`7]n#I9,Qd+6Q8B)ilQ(FIb7Gm:03"%bg6;oGl:h=:_%LZT;>P]S+V&CcM46.I`aL:/r,$];Wf7V.\EQsfqO@hYjh<gLI')'`E_O/\;9D@(=6Re5VjVH%.S"@UJ.ALiF;J@%)"X&aJ4X>Zh'UJ[FC;'.%8I""d6.S/=S".&8tREmpV9giVh@\F`#q-^Y:<];iTR_?G\5`sB$.`2$7MLm1[J[pIKdTL_FuS+CjH;f%@0PdS_/ppo0aJ@4@hOSW)0K1!]aqMNk2LsYb;r@&>kR^e8LtukZN)6A!%i[`qN1>&<l22Pc\P7m`RP?tE;`kEYP`aK1<t)l6YELs%[Q#dL`mZ/s%TW$,TKZW'MdPS_chWKWZS6RQW1-8\=<QKa`H\8/,S9V)"#PK`bU/48A<qA`,PgrVfX[]*`\fEbbtB)BdSTr&r$VfW%V,Dih!peQ-0hnb'JEG<udGYIp+G@F^n&-Us3V47%_c0S>QM,U:34S%<goIZ&Q$+WYhfpE:(-UiE9^MBHlF<4b>rISc3<PMhrSSnp%B-/!_(3qhEI$,I#["aq+)TTAsppZbW$\l<_]td+?&kj'*K16#j;oXhf)9.lR/U3T;(T9kq26r$Li"8fd#]B,t\!KQA96oEaRNP.F%V%5rUMp1PZg*_rON$K.C]b']O1;9-'ImU19OB,>pdjRAGS>DQ#i0Vhpep(1H^&[Gr:QR)YegR5abbd&bU$L#\):p4g^oZbk#$Bdf%0hr9PUrR/RnT5?.h=4-WCun\];gA]o728T#7oB?%_..Ml4n$-%4Vsr^SB-LfDk<$KK5md9S\O2uO^aA8ZBM'IQcrB#Qfm7X<(cif%ol<j#Fh#nilWU0j^83^s8n=&KT+%(%Ch4u%KO_IcG3OtMHN;[fZT>nSA\WPm9l@eFLrO&c?D0G2#>No0?2$"+cJ/.lG2d_f%(*f[%1@HH1eH1sVb1>r[^gqJp0iMa^hV3R:A`#Fc\^.G^Mi?0Kf>?>n]%6I=Q<@idU]VfX=\OjE9KZ1F5sp?Gp?ScFcCaiL<r%Wn;hW>e%kBPf21[[quCK+EHc5f6tPr8'N2kAR#Q3YUFZ&@X+jL[\>`n(D1Z8WrglF=-+&a)rd1R1)lErcbCY8P*$mB2@cYLE^G(bIA;5K[+X%1!%Me5Ep5J#:D6P!lgqqahPIMa6`)#Ppj)]Ts18XiG7?R:h/bMiii=c>S$D+ksB`p1iN_f:53c#B//uV,+OLUQ7KI^!'#)`SQ:($%D&q^k.PK]T_:e.:6nm]n^G3Ml^X%K-GRh(Mm^:7'g[O#9#d2>3@XIb\/>h6UVK+DO7=p+KN"?iUJ8%a`5GOmd5cOAmD*AcIc-1V8%,N9WA[$R`$"J$iBBrn4WOq\HZCeh>?RJV@mq^uJql$<2I\Xk6KK.Qmo`p3A+Xu"5tL>a1t7Mc8_a7o1WR%?]?)F3:$7;//OR:n9r%"EP_4Up^iSC6)WkXW/tUf,:qHGlp/=G;*BoAhJZ5CjNF_e$C1cTVru^!!UtV2uD%C%BL"aTJoBoLpn3*HE847J&nuCs1EX$A!tBn%D5KLt^9PdummnKT6QBapB@T?,,n&^\QC:@d=bJ>6H_6&nA'&Xr-/WPKl9O'djjHMCre>Nj-pB\Z(Q$&m#noRT#E-Xhihi4IY"oD'%k_nm\)Np1&V/ACGaA6I8D64laP'S&q3_9j<Rr@SCI)YVNaCg#BcUmiuq`TR*6IArti[WSiA&)SCfAjn.s#tf"UXYE<rgHp]fdP&S%2bWJ`r&&Qck`&3aLKac6L#2[i20rQ*RkZs#3A%ZAGB)/<6o`H.9P(YtE8GUWT1(\Doo:MV/-;3FV9J:Q)2>abY4F<aLL^-p[A3f^%Q-S3^1k.q2I09E)bG)W0/=%Ym=9J]$qiajji]iIEHQK@c$GC>M%sJW@;^q^tacQrD^((%K1I\2<KhJ&P#1o8TNba9GZO\8HE3POo%AHkS;E#8rLadf5(?Z*4*oXmcX?TqdE&FVQtl*(-rk_iUdaPZIq9N^82(5f7mFY7N$$9;@r4-luW5M0T;iK5TLK%]YV[,3m#IG?Kk%=Ng3LW%=>U3hG+l?MqOoGFgc#:6Bg_3-%1q_uu8Ki9oKG9/(GP,jG>q'FVI9>N,/:Ude="_8TqRBZaB(7dJOJ.PL%p=QKu'E46q'%)$6B:,<W<+?%DKQ1cO=fPE@d6`3A&O&b]T.JN@)an.Wd2h8F$t_2\3r4ZK9:buGOhs.rTg\=VmaU-9jAVj'DCB0RE.@)qR=gq@%J%S.>SD;%VrJ;:,u7#!%H_FS8:Z'+\F!+2F`IL07Et9/)h4#iPG/8S=f?'WAaf,ME0NQ?f:(7(GJ%/JcIRZo#Mol=Sp+D__;)^t&#m%mW1n#E&mN7OX[W9>d9]+>3YPAC^Jt$9Si7D/LP^fNCSo(7X._'E.>qQpKi/hA?K:/\%o[b^4_>EQ\u$Tm(g.oH7BDSkr\/!oSJYS%fLXi7=V6\0k>r<Nd/sKKk)iH!$.Rq3/Et>?B@&JuZ1?#'C-kS6M`X_FP=Kmd(O;cPGSr)1WT3P"pf\RLIFghm5-iZ!h;W]"]cb0c%"8=>K)_F'SFSa#;!O%VaC#Yd%8>sL#cBf$ge`b_Z/3-rJ+],)\XPT?0Fo&[oBn&$_3_d7U^3t'ioMp'm4+1Z^CO2P;O2p)GUNWPJ%Ni2"/h*Xoe.HgqZH]rCrj12(F<i>rG*cn4-C#m`eP%$&O4(TI:7$6s>:=bs$;6eH=E-:W7<i8?jH(W^QPWa3@)OZPa;qMK8m2Jn`%I_=5!ZkQ3Gcb#m:-@2<!3\90&c0\QZPWiB4qhW9bA&+8`Js*,EM\iC6"ZuBp;Dn*b,VF.ecm^bLGP^lV<`F4aF#*#=1;5qUl#k]_%]XjVW3h7%5m*s;.R[l&e0=9!'2qKf@H[;&nGC"Gn=h6WF6EASSqMfTC4fP=qWDf9b`_'mAFnJucWZHYn+$&^`R>3/aG]?d5SEWmj%!^]R.F-XMfRO_7*%4f#\\h:/k-,!%Y7-Wk/;<ej4]+u!+F\ateiO]<XPae^7?+N[GRd]klkYZI@q&VEY\C8=dW2SqP&P?X-4@[5+%I2d5ZO1mV$Rpr`c-*!1'JSqC5bJJ$rl4eurnnqfklg]*b]@./^j$b@Q>A/36\>2.@:2S9kM7I#9k5*"-c1?ZkVpk==;(XqNR[r:I%X.e#lTSp,1k27`eWRpApEVJ`nC3Nj@\aMY@X-?Y_J1gT44.#A?mk^QaA%bWm`+'q[Wnlpiq;BHDo6F012Q(l(0AWBrh+gK1Z+HaZ%l#V`,IEaHLS_BUWUMKnWg]u?@-A(.=Q:JF5UPDoX=M*$<LL[S;ejclB5>'$G[F-ptp)c`LHD&a^[ot;aalsi'kpY[mFo'qV-4A<P%YkFZoe>^\!k3B)Ej0M_dFrT)toVrdP?4S^TT[WO24k%9uSDZJ7V>Mf3kTipW=D2MGl=C^6-l'Z0;(138@Afen<TnP7#9N:6FBVqM%D/(77]Z6S?aGZ_@.F?2@gS8AWM%p/a\uf!JmaQ":TQ7(Sm$-.ikoKa#e]ON[5c5?P)SM%t_2gX2p8(`XW1H)Lf_N-eF#T`>^%7ob%;\4K)`i>pDc(D)J(:nDtKsQ4nGhUg>"fghXPOS3>Xkob[X>enFc\ZE:Xf)3kdP:_TGflP0,`HS(^Kuu8o\XQA`F9$I57:WE;`VjR%Apnj)qt=J6TEM#jHIu2X\(nI^oN<bX!+U3p\[CjHir5`s@doV1p)#nDJ*&&9D*EH.4Se[-IMmF6oq/sER$R$:!b8DUY63UiJU($<%oq+!`_2\Q9a@,7j<r_Q'N+)@N?7"j(rmU3%po+;6ii`*YXo#QEjj-AKVsT37l,dLW,WtHH2_aBeM#9[:I'/@BTUMj<ENBO2:!UFb%F.f'VVnD<Ze?f(N[n99@A!(f+R3.R%Cq+MX59<cBq38YAN!:<*2>C.NJI'_q/%2%-I2'Gi(BK>%[mgLK*$-H<?9lH(!mp,0]#l+!%*)Z,l/Vng.)!T*qOZ]Ms.#p`r'ui6EP/7Z87]1,8HFDDOLd:Z[5>u\3W"6KD)EghF'X#)I'^=h'ar\G[k=);tLM,,9jGtbPH;pE`%qOPJ_8%2D6kBmQ+QH#k%(aYkncQ$9e>a`Tg*5T#g-0qr,EZN?M$b_%p;d.R_j:ck>A'#hQ]+kqUU>P34YnPRQ'RB_Y:/R7ocP:d+%D`XFQZjf&JSZqs]6LS:DO3oFXJj)UnYLC&`HESsh<1O*Z6L#?_'M>Bs^o%5';il3iI#5)(G'&a@aM(tRilr:c=Fc34/P00^bRGe.%Khs$I'4!Q6Ng,i$`_*?Qj\?EN&2COQB9ir?!jY&$TJ%YslTciF-TCP(]%lHRBT798g"Gp'Nrj^O_n889orM%cT_mI^q!*IQO0qdI%!5$$o#NBD>O4@KVTi!$dcTVB;7oU[-Vt;>sp[jrfa,JqIJdWKL@A^eZ'1H@Ak*3ZCZf04rh?j3%MqIQ6jncb$T(6FT`*F,j8BDI2%/3*GiJ]jH<,`"2"5o#_iK+`r]9EoCV!;uF6cabIQJI(?d&)=1$L33'ce&k='[FY9>PLGGimeglrfea-e#_W+$$hT)BGqY4mOF:!P%&3@"LaKeK(@dl7bj!+qia>*h**8MRoh.DAs+g]M9_TT6l'k^*c--c[8enJefb\uLS]o_`D29a@5J'Wh?/8,6W2J5>;,?$aZkG1nQ%H4"E;,L0Ugoq5!^*]4u?$O$UN+Y-R=TGDQVVed#j"W0n)/#6'+T(^kIFSfW7`19C'GHV28AY$N]<nfZ5M=Y^*;[XZ63&SO0Tuj.j%2j\-TIe1.4%-c_q/kVLI<e;'MnU0T<`D^,2N>A,W_<iVGeh@7AcH.r&.#&'mGJQLd>r!#\jO&T:#/k#`+NDJpB0AB+,VHtI-f_"_%2R)OXXC;p3)O)XmHu>J@*0pFo\LVPDG6UssV:LgrCXY%$4H9Zn+'o>L71'L4kT%!kFNJ6<M?J'2K$"_R)j4H*BgF&L1bi+gL,[-&%V7ep5^N4KgktX#33V+UV]eF;dn.?c9'GVlBR<`5,<DU@tqQaHs]U#p=R*9tJ=lWA$ASdZKQK\b]s17(7HW&%9$#+-AAGP;@=+<bn%,CNda(<9q$V(3^U:1m,LF\u`QOSYgg1j8+7cqi05UR9MtJm6Uj/uSgtpL1K7B&`;NTPRAE@,\dH$,&MD(i_NoOb^jlF\%J=qb.Wj%AQ^'$YSjs"P_m,d;qTJZQ::u;-/7](CCZb"X0'EC.>O<4P<%:L;Ya0jgA$)lEg8]=1/LI+Yo8kN[T6-<DId(G<U@4H#9P.-jB2X[%mQmb!CGCgAkno#_[+030+YOVPA0Jli%7Ic'`XbKi\iU=2_meD--RP"VM@=>si304S)CDJC;V0[AjF3(_7cN9rPUF3G,6!gjNV6rZ%Z.c&W]qi["3=;n]Hl+I.TdLs9bO6\9+k\CWC**U%e!;r>="lAPQ5.3Yb2_2.hUeAAS[rTC>!TXCFAU.V'8rs;B4uP\37iA7(A/0T%<5cEG];<paia+Uh^dfb!#J@h*.]nN4U\`&@p-ofa'j;F.:;jiW,486hQ).*gl''bID0).9h<*Ce8O]%1e'3skjV$d@\ECeL1aXYS%RB<Qh4a??^J;'6SUn[M=BnbnX9Tt"+0qPMq)`UGf%n1?$[ngoB5$4SA&rcp%9MI*3'8h4e\m_rqmfRi/4%iX@Mn=>uI/mI-j.8cY%>b>17ki?M%Fq!q!E__pZ<L<EZS8%Man>7^!^JMMiR`Ms@EMi!MXoEVfg]>"%nJGfKXEhZFmc$0C/WSb!Z)nEXQs+leH'r"fD;[$o%T"9'eHq39JO7d>]`J32)RLnr(C/%69oQF%2nJ__=Fu"P`8&VVI'S&nql?%F,M[`$dAr"mMX<OPF(TWet2fA,'k&P)cFTNom-1'N5%I3Jp;`+WmLfrD"$,tJ:mD?5<oCb+5qU$6ee@#<F*3k<d+9,-MLff0cYWFg&=Ct@Mm"3IZ8_s\Z%?NMqr75QHSOgfuG/Dp/E:X"g!%J14P*[ka]#ZoD=QotZh)KuXLL%2hg!eJ&o)77c_t7Ug%KDBLX*Yo2%pj3q6).5dug:apTQrCST;FP`_]f[OTm\(rmp7YV&g`X]%o%._VP0;PAp@\(53m=ESIHUY.3"+@0Bma53Cclh1>%Y)mCE)Jq"XLN%FbBZg)R_E!-9K2<&^p57cV24A"=j[NFm6/mcIbcbZ4D@Ih(%`R:HgO!:Z+$UaI\2]_bGh-h(,OaVMB)[Fe,4>TN'6<BPngpfd1$\7IpQg-&'mBp"$b];(/Y@\-fcc8?nAp4LADIZV/%MV4H(r3EE%g?V)aWP:A3j+(=Annnq-\`garH<IYEJ:JXi=,l?tCnXI^JRA0Ems-6+O2CcaHo[ij>/gb?AdeE@oW=hGIL<-f.<&euJT^_0)aKkK%le94XX;IVaDCM\^lL4&r@jjrR\>'dkE-2#)/L[@FVZg]@CM7AhmnNApQE?io$\KA+Y_@B`aEAi%IroNNb)aY&:Ka'7$RY/]3ocBu%;K>P*=5S%ke#orGC"^s(4,?'P#c&22(P!E<k0Weq=rUknMS#pF#B`&;]s&dF7]WF`'LM*@:g7h8;[pi68?W&TR>I9a0Qi_O6!AJH%CmHpKah!3U(F""8-f^b5>4I&cWEf)D7AU1HH8si#>6)ldmDe;<#bUcjD]gb)U3`188U"ktT<,@STVQ+cfDLqbl*qRL5CpPH06)Zi%nt7OSKVi_I]q]^I/0H+9S9AEd=><c,a1X^NF8<l9>pC@rAZLO(CSIq86"b6[VM:*QLe\,EXC>kH)EQmc3rVg<]kcggB.?s/Bib[[%?UJI26-!%7mTi1m>X9`qq"C_]o,C`WM:I3)f$NZ'b#csS<XWeJ6YBXi-gXXc[t`2<*Pg;nC?UU,k\q;Tru*rY$G&qBemq.RIb@q7%XrI#um"*cl"F:?>[NEpeVABXjB,oJE.hoXF^!opp,O`:OFsGJ:SK+kul-692rRRe)fD%T9%HF!k<q/"F<nSm:77A/6XVe,o[=BXD%)P7$aPC6Q!k6H>gY+2g\^LteH;45(!*gGpO54'M-<Bcj^Xpg&\=#-\Pj>)RX/aAeAo=;G#7W[as8HIB8>=%m*^5&@kqm<WRe/jXO%lr#X-RK_=!AtdjomtLcCJ#:?hMVX5WD58T%XOte5k;Q[c&@<`KN0QZH65TbiWM<_o^2XOrPZtA>Rouad;(F!N5pmK!V+]r:YO:8=%:=6Sme9ZscQhm#u-1)Z+"(^YuAKu[u4*>/"3+T`^dNkTdZJ\gP9Ph7K"_Q<5:NG`$J][,M-quL=]<'WSWV0Ta:iR[[JXP*(5h>U1%(mK'Ej*%8Qape1rG-!bRM0.>4-dQ18mX_j9>:lg1R!SD2<6&WP'4]/nddD2_9K38cDpD7_HtZKVC]d@@=8hP(;^GQ?_jJ8<aOZPS%BXFlrVFpchP2GQYR;D1hXb>4'Qo/5oQ!Bg/p'IIrQa\fRQW&I^!2)MI7&0=XefrK`'C!fN^/(g71!3F-2l+'%4kS5,`QFZs'Xn<U%H8Gu+Z^;c@<[tR1Kp#*H3cUuhUFd7c`6D!LI:C0W4us+(3$m=KeB#b`??OY(jLN&4)'=-U:HPiD7r#,KI[us.`<n"PiT0S^dlTUa%&j35DX?]O[F`]..$Mr>$>CZ!Nj]!&(>$0S0oZ,7d9^h23g%jIH*CRO!.DO;'n#0@(Au49ugPj@rOMpb2?octB)&\&MD$[JQ'f3YS%<Z)eRh<F+WAn2TC;P2c2T>X3-AcB/ZR#DH%&jJG2H^EH^@PoATS_Tr@SjQhop<LbKnNN<[l/'$e9/e)jfP>>-L8LSfY^E$?jU`:I%=GF8POjU*u26Y?\3[:tnkD+kM=?qgjEDAq83"o&q[!aSBYH?;sW2X"!6Q,E2m\[8K/-BhYfIA]@q_/i@-ZsMj@X\>0nj/F"?tpah%4hXn=d.Z,-0%uZeNJ#S;3Ge$P1!Qi9S(3+&F`k<4RT8`OKlqNBm+9^]O@,kGodYYiPFrIKS5negHqU6:HCdjo[FNpPd(s&\2C9HI%*mQ%WJ"V+tmEQg.[2r)V$bC>6lB.'P\/fdlDHRLJ]<C[rol,\b(,W4MZYAk%3cmNT)"/t)iXT6)VoZc3'lf#3LGM%=i*c4s2V"*W%_l]6:e\e@r0qDmHgr>2i]@Ml\b*.@PB:F5l[<tUtHQmA[m>3ZbrO^b>jn2FVq(;#f1kd.pCU*I<08?fO"W!I5K!WM7W\bXM!)U?6%hL*@"/?[GtLhW1h.+^!"@e_Y7'LVAZ\JV?":c$jie(W?VD,^^tNs$U?[,p^bG\>u;)7:O7'uRYc`)+JnL\T_5%"SiuB_h:)Sd(/3%=:dj+kS:uq6m6)+'#L3c\j:;Znh;#\C$BNAL;<GJ>tq'sokBD'N?a!_M-&6[J6<2Wq3tLs5R?pO^N*cKMH'/f;A#n9MH'/&ffO9V%fH-RL?]fYaTSh7rK2eZ'+/gCVr]h3tpXYCVhFqX_p\!W+O+C>J=P.e\OW/.[`\gdP0a,8J)B1AGMnk3J3"8%E09j>qWh6YAoGjeD%DM'SA8h&P5H-:%tiN1%aqj##)q(],kmU%Ds;e6]f.nt4;L"",(=k\%cgGhURkX9Z:Mjt1BG9X]J+6tNiFJ'NRV+_usAJ?`_$A?rF%b(C,sn6p>\bNVT(jhY#n_ZbOR*/NkD]WhB3a5l2c//1%DlKTp@KIf3b@3-]iKt#'9Z858YHt2r,,<3AN_gB`<NaRTjFTa5"!k\k'%#<tB(SG:fWn0dVmpHfTb+CEI25O_RqfSN-qQYOV>-Ue'g@S&WB([$Vi9)MtbbRkSNC"JoH*P%,dh*OCf^F2/9T2?[hMUaXs2:h<b%I/KdAm.P*lm.P!q@J>6$d$cK!$^n*'H[;7VNG>`(%7M%-<U=o,3KTK"\caS[I52CIW\/IA0W;2X#YsSbfFc(>EM_,5H[J_`:p51F%B-n@:91H\F;W-q;[o7Mjm&0i2Hm,8cnZ$K_:)D+.UdMUi8,=OaP\8o?[tC&%!;)*qKK&YXT3,h%\t2U'g&V^bhNC&$IP%q09d)ti%H+r<5-S.9(cDV^[+\Uj`i;AtZTGH/U[j5,/Ei\h?4oAP!CICsDWuIQ;m<'I>?q'/qhsQh[=l%gVXGc<R9'HKI<oo+4nt7q`BamXV%VTJpWP-^[4bF@so[TEua._GN"b.^%iQcNkO8L"VPq^$8Po2FQDVS5u?fD1ik2..HhQ?SX(%C>s1EEgN-WQB8kRbM-@Wp)oHQ.==I%B6nd(VV=9FZV*0H?5Dt5eT=j;LY9G2:+I]jOI(T!dqLiA]2Ut3^Po;"dsfVX3iuSsNUt3aY,9YLAU,*!j_D@I/Fj;$FLl7k#HalP%P%-6'5?Ke6<\9kr]ffS#dqRptnVIL+XJXI>D@,X66WVZM3B,B38r'FDe#K7n3c0>\C-(I<NX\+IIB)P=SC<Hkn(uT:>4bb\L,qRW%SK*mIS\i!?dqOA"B;urYRa)hkp8t3UK+bUa*<K`JNhJ2IG,hFg>"6oM\QC1]gK)d;e^E,EmpOqZRVi3mX[Us6LT[NGCTNiC4J`-[%dhtWY#HO^X=;a,,24_"#3E.l,(,E*QI`Q7b_b.(a<RYZ-Odc%77J72kWL%0T,R&_HrF4M$h5#OYf@6LJGPU&7((9A#KjB^dYHE)S%hgKXi+Z[g<0K\,mVsRbl`05Op4@rY<G!^YKRl_B$=l@cGIBQ+mOq#O=.e&h^/n]L\X0j)OlC6AR>K)f?0PbD?,<StokH.bH>cD/g%&hA)m"H0;([TT)3k)^<6]BF/$C[Ut=Xt70F]3]QVICl#Gp#.L*\^RY@Z;aB(c'dKNqid9]h<d<JiL2jW>@ri"<0j_u1X7E>(YtK&%`cMk$PS_f,me4BW%c.,jjZ[&]gg-kb#.pCH"[#_]R0'TrB0iG53=Eg0(:GVsW*Jb]C3dVE]N\rE2-5&UXR85.im7FS'Kk\mi%883%B2QbhS>lU*kc@b!Rar:`(Ydc.WolXb,"&+L(m1#ahQYOE]/T#33c,OB:nJ2n\)%51"-)BelL+;ujC#Tn!3!g&L8mtL=uug-KD="n%YA[;6kk3S%oTM^'4u;J.KX9:I%)9+V_?h2m<gn5rD,^jHf\$FZ=l4%MopB/rX`r7b[@.=_'bC@,e4%A/SEJM]6`k4;FA^_8;.3+>%OU%%=H`/e3@tp7nEJ&[fg[(WJRr.W*CYk;R3GY[eKG"u5c*t&XZ+1jBgs]h+p,C8[hRW2sIs1r[1"t0g%@dNj&qJp,I9SR\+r<T=%$&@:&<JA%6#i59&LD=.)`m+onM3g"fT[aJK+`=fB\I5/omLF<Uh(JG&Dh#ZqDWTpMhH+g@DReHuVE@NE6l'[_42;;LHr\lDY[_Xi%SZFHc6@HqX2r*ZSp\MP5Wc-jN4,^#*_s4/2L$PI-$aLIaN^iYU]s.4eWgdM)i98tb;ckQRHosZ&/U8&[.]cXQ-!>l,@l?uB[75*F%;9p+ZD043a`D#5-/8K&;0d.Ue/RsCaj_\5ZY-efmegA2LW!tHa^E"N%L$sG:dQL]%?,gDUOq[S'7\[O1ZWb?o9ld;=*RR;7E!O/g%Z5JR]?`]PJR:D1=<*T_XH"Z4?D/$sk.g$:i1CYo&Q:4JT8>JOP@>>cQD!N7CY&K)!1X&U2Z50'TQNi<RVugrLM:ER0[_;)@Ti0Ve%"4J5-LIIMiVF#VfXCN"se[T3q.t(7Kq(N?6?h^M.%i1IWmXO%;]T5fEGpZP;ju';L8;>_Zb,_*Cc%?]h_sOk^V+,sIlNbUt*57>0%&s_[sZG)&<d"^De_q3,:n8jSmm^m.&Li@.JnV/DG)p*j_A=&PTY^,m,iM*_6U!-dj0=l4sbiWqq;fN>;VgD;`l!8A.^2XYGPJr-U%=8gi;U6oMqFZO)p:T!bu>H\>$e`J]er@9lPqONpEM[-LcFV3L#2nOO)9%-T_QOL\`#.8q>C&'oDb0i-Hl1e;_#VYa_F8F>Z^:@Pf%Sn@A^JDLf'[o9$r;O3Re6<gG%k\_*KlfrWH0tQM-M!K5!F"Wb#Q"-AqZH&!gA+isl*l3BS9[@"eSR$cG:c*f<!9fVCKXpNOW3>%F%qKQE'::S.0kW7\,!-,8]O.7s]$0St[F:*U-h@4^kl'1SFb8KDuYNm+Xc=ksCbr(VaK;;_qPhFNVDu#i;V3hZI,l/fYBrbIln<!:f%+02qGGI^qY[ZXWTm<LK\c"42oe7QBja-Wc>DF(To3b9jCF)SGic)=H6IIcIe<G?pB+\@0"k59<>fR&&qCCNql[b.Kh32DY(]N?fj%ghN/k(m=Sa8&fi6/Vd;:Sontr\A$MM)llk<%tU]pnQIH`]\Au+%fuXGBZiEg_SH_#HnD#\fDL:h$gZ@S_'A!>=]si8m!TKuWoXQ2%FYd7V'YEVMc'H\`0'nd)QM-?U._pInJVIjC>VB\-[6S-r]<n[#a&H'FRqK\T\%hAs8&KG/>.TL[C_\02;)6e@BttKb]j\aJrgp[d%)d2itKu:'N)gQmJ.6BQ0PZ\b$jp$Edan4'dD1=qu&g'Q/\k7J,68C`+BlI^Bj[(`OUDLA;Z.eJP&_2tRp8%mBF"2K*c.!\6%S;fN%Um1l2QDK*Z<_GGA:J%11;r`d\XO%K]]U(/`l<%\Rc$PF/m/@d9b\kh]W3.uZp7Qnfp\#F[X6&#DOrGp<qd@Y75+Sf02H]2EgF*lh%o+#1^]2o#:XT>eN%Z(Z$lSn+n7Bb:B!3OfPg30u797q[?21WOMLV$Oe>-.fnX#rIF!EuT+[-^isBXJ$Umo7uJ$IEMsTWH.JLFPQi%21R)EhRNti@n<&"6c+-q*m`uM%Wa(k`>dM(]Tc3j8H!`cj\ob+riJihN,E/fgnfBFHL*n`o%>qPkl6W8q%R/m^NM&upAN'f^6HtA%rlRAVjca<ld%HW[Zbgq+j"Vtl2SR^[^U'W0Hi<Zk$YTEE5LZs4%W\bF0K&6%rO1EsCN-JLomKI0h!:l2q#Scqd_=>Z3%M?RM=5Vk%hZecK\,'s3%CP60IYOA?/A(.nYC$5,GD75YquHKf);j^lQrD_u?9dKK9K)2C?,M$fN2J#_jLt!SPH+&Xd^`T=!2=hDTCITa4&gF;%f?a4m^Kp.UebAnXml9&]$X/CXI1FPo.t,T.h!8U#X5@?cdMS1K81^AuATFuHEN$LS$[Tj?rJY[fgZ(K3rG19!^=Q.&$8d#5\W>'Y%6,e#?Hi8m2hrPTPqqUMH;2)'\ePD"?p:]'R/r#k)qJD`iZK&WI`_2H&"5W9UI&il+.egI)cZm>b?]hqo]m`Pj>Q&*q>jZ[;TCG77%I]_gWp\O.$PeYc;!;H"d=<4hn+5af1GR4'6m9TH?0Y5eQMe\9g`k?gJFUuL(D0NPBcX:Mmn@USQS)<I:5:mg,SZ]VD<LU>o)7'$K%YC$5,f:/UB"T.$@-Xg40N8EY[^?mjnkhO4fY8F9Wp"Sq!5-(rqdHM+0p\J`N'q[h1*9:EjnI<`IrQn[M#IrC3Dg8>?G#`6'a'\&A%3>t#ge%L3Vj'q^H[7PPFh`eS7lhC5n6UA0O!;H=-LXo\ca1$+)Y"W&;hWqX@0td'X5J@reNgJSioi'I).<"n.4QUC7Hi4A^G6RWE%E8078B=uV`^,pb8Hi6oc;;LN8IkKN"p\O9C\(p[`5HAecIeW\q22Rd2qX(_<E:[C#?&k$6J`$K65@__F=L!M6lXt*t%rneF1eGSj%SU95ZV]1:^<pTh\qH:YerqH6qPgmFt:T(d)7m?V7oeSK9\lG8)hWnfj*.Wc@*^Yg4H!,U[=*8#heMtKH:5q1c+XM;C[dqNg[;3)<%?<O^=<2Hr5O%HB2DpGUSm%MlTmNKT-R7Dj1L6uMI2O!X0MF:n?>M8.t"s'jhiBDVW!5CGSI&$BX[oaoSD"@;]_;fK03QC$<'1I[p%f!o]rn]%F*F<&X'PDM`^Is^_M-43gqROH/_BqkCn;C5"eFe,IOfdENjo[j7e\b%I@7,uc;+WB`IQFQnYp5(m*oTQecP2F46]Q-?o%Vn.05ja)#7]W=FOU4")Q&oYLqPB]09oe%"]62+iVH!qN4RHo7*Nj#%?a7JYELos5!I-mE@pG&]p=h!G^2X@.u:WGVs*T'"<P:+gJ%\EKZSp6GNW&W[tj/%qUj=ff/t2eN6D09u[NbCetEOK5t,!(m)W=S<MP/;>fdkOn>MNgtOB9Wu+Ce2nYj*<%[6UUU@<hC$Ei+8fba%_71ht&2M%C?,YKok6BN-)9p]]g1.qQ6n1bBS+f@GF?HTUQI5RnW[&=;6_"'C3/I!s4Mit4Ku-o9Z$`.6_V^A4:,^*i,)K)N0p`ok%K\Zquhcc#]f46`-i-QoUiQ[`AGY9Br5VmA)hf<snSKh6G>Ch9!iMDu#7kj:UKkO,rgGY\_7@Gqj4P?"bfUEb[dSWE5b[aa[AhNN?%?iBeNF'\F&cd-#NFu"=q[_5HQ5c,VId-!B>)?p?"DoY-`3@,or9DCBg/)a%P/Um9+)uR]0(BcDA.Jn)70<j%/pbdT9@\"Kj5D6rk%_u@MYWsm&?9W.=@g"`eF-Ac])nIuA\,olK0<uNJ)Loi`&e#HmY+8Fq.Wr=&cJ2GJ=;#][D)i3s9jU^La&+KZLHVhk6_eEBOjM0Ms%\jGF-GQO/sd0J,:+,(7QaRVok5Zf;T_'0=1O9c/'3E:iADre.7++B$3)iQ/MGJ_><]q[h#@Qi<N-:lc;N63Be?KrM>kCs5r]=C@<%@F=An0dMr)<dQk^-+uSKmOi:tcpE"Vku66XWQe#4R]CaX*;]/9C;'@Vro2_\OHc;<n!R+c[]2SI96n_"1B^P_T"Mqc3lIM&6A1_c%XD0,8d`Z.m,L]be$k&-p)Dj$?;WON1BZ8Q+BqC5(?>4tKRZ)(Jq%VEo#^.:X#c.#M3I(,`I99nNHN:\T!ma9I-O"\,7s8g*GjM"k%TA_.%K.*6bTK[ba+gu`Rn;j<V4;-X$)7NI]eE]pJbp+g,9'Rum3[s\jh_?<;qMO4A.'92kK68UOf\O$A!DB`DgtLo758FL+r,I3l%aM!i'Xn^*4bQEgXAL6X_05Bb@MCiHK7&YD-=Igd3j1El`VT_*4Eg$`%/0'HbF1a.>F[HZ2$Ic-%K^,ISCZH:rb:@PH7n99Bn>PKD%:L]M&6$P^hI_(XQ5,&->Mr6,G740PdduoGmj*i+Z?V.>(6k'2OQ>PFi=MmB/"n")OU%BU5H4<#HKqfZaPmNQr?*[9KBEf"$^eG#h%l'kAa?kl09E_]I`>k%:l@ZV/P2+d5=S9l2dqGd1Y2C7Rq.R?J6(F]fq_ZFHM\43J'<Mdr,#`na=<Cg:;>fm6>Dk3YE@&uu`YXpDo%o=^BhkkM,bGg99C8%mrc!q>iIU9cRm*>\#tA=7KQWIfaS+NI*af!R8a*o)`;Q&JVVm=h0Up3f3C`j]BLm5kWs>Gj-IL:M)+l5P6&%F5S#4ZBZ&jL3pC).IThYDR!-4YRC:?34\#,_oEK35[2DDQgJ.!!C%bj/6+LUgV"h#p<L!Un69$T'L2-'^qh`T4_9fi5t=2&FAAOH%oo\'FkFBgKhG,pAE&+4f!K-N137-P]3DR33cHa>"mj.\Nk$Isph*'PeRdK988l(`2"/bKE:\Hb+$Dnb'"VF*GLN9e7kcI%>'(;E<%!Jj^3L(6KR9'&Dp/]4k#`dF`uLb+olBZ3^In$`:b6B6+s1>*p>JJiQt"SG5s!L"UlK4*t7ED*Yom28Kl*fI[V]oYR+^g?241-jt7%[-PGMXe!(c/N6C1J_dN-M"g[G&X"aJ=5Rb')G%si3IJ:uWY5mPhJOaJc,o"1LX,\?/r7ZK*eO<XJK\>(H3LL`F6;LT36$;!lU6WQ%pTA#AOnf"JF<7J#F/[$LAG:50Tj>RV)gL4lMgFsuo@06S<C%;MW-hQ>4YWKBaM90/"]KVb@,g>e3ck,NQIo0'8]-lJc?+:J3<rCo%eR$ip`-_/77q\U79++8qaN>eXn"a3D87uAW3@\Bs7<MIF;^/p5!Uh]klKtSh$XYg+,='Om.sUQQd3M,0251j)iN$d!&g+e2j69>r%$@SZ;SE<,Af5o'sJc``o$QR$Y``0+oAL&Iphr&c3QND[rfa7e\9E?9eh:f=P[5_EP<(3Z^cu4r__ZUh5qJ*:.QFD`]APgbG:m2!;%b_h9`"R&q`r(-t;^`Wbq&]+1bQf4f0\Cbs,P%6QsHp-s!!Vde12>?[VFhW;%DkeOAbToT<=gg>a@I>Y_,'Y(=SFu_1:.jIi4@c9$%,"M,F'LZ70HJnIlT#QXQ$M]W0N]T=ne5<^[,!HRB]h#CH3j])$oP!7hH@_`F"tdkH>eh_[/@#d?nU!82Nt$C>-C-*3d/[sbf[K^5%RL'g84(+rrN(R^XjFVVs^eS)^9%5geLP",sc3+iWBc.8JB9"p8;+*r__@dJ\`u*c/5"7kffh`Z%,be]FF=j5[V*mV"h[O.U"?Ltk%naK*5UokHl)IN%`i&c)&8Ksf-STLZ[KG7Qlo%]l1?AM-#^P%W]DCt>YN!K\4G<p<%,9@0@RZo%jGC?I2#Q,IqGhgfhNJPOi/HD0Y%2F*r,KpCH'%579FUZ*,`5@u_Z/J)r70V&CLTK[pa57MOlC#CHEXAB%'5`AjDL.>!u/U1H"RGs?-6Ops_.QnCo<@ihaR0Sk3O/;sa%T*gi)#nmMQcp8uO`]XrM'BOV:.irLa<HdJXEIaNC0<:KU$30Lh,*(/jB-*7Ph-G:7V3eXlU#n'A/N`Qk*"tF)QlHdOW*YNiiY;lr%i%YCk%5sK.laEbQH#-i&G`D7/HPa[E[aMoo!0F>4P^'7Yn4M3W2'QE\L83C-s/H)bEXEZ<D&O$INGTi7^<S/!'URo9=L-!XGQ.Dm%#=0qKPotHYaX=O</N!fr06\CgapuP#V,^4ajBT6b[e*_\91(f%e)Et/5M:Q?I8ook4I:JE=iDo>=8F26]>+f9K<IS.:JW^)qW=1q%GYR4.<m(X.BDKDmp>IM"IbVNX^0S:Po-mK81&kA"<;j)C]EXr;lFE6RoK%9pdX"nE"Na_<`,i'N1(0%@C(E+7E=djM;)/#hV2XYL%j2)h0KPgG!?P%6ia1t_t<\^(B80qVuOR!9@=?:ahGkJf652"q<FrWZ*armEY&@hFiUYsI$#TjaH$s)P*+JeBIpc>t<W"tVOU$?>[%6>jX(-K47>_\f4@2$-hc4"bMAl;jE<TBEt$D[%R\I_q.f=dg(LeO_(^>d!ai+MXKOf-Cni5"`\:b1?$aU]J:!Dc#.)b#h41!/:Jb%5>7q7_o#$V5\JeX1u(GbKSQti4BtPMA'>:j^;`*+p7/r;&=!UpKu+nrc'KpMRjgGVpD=p(pEW@-_fZguMt(<Z3/4C(T[E7%@P-RV%--_/!l!"ik8SfZ.F6km$+<OpCW78mEZ<'8Cp\N^$a^/qHf(a9M468gg\J%4KjT1(6a9gB<=#htY,jS6OW>!uSh8]4G+lVT4g.Dbi%%61l8-jCT\\m]2+.W4m.d\K??508n;[KD=47BofU3%4hi'V_u#/6`<gNQ9G$C)$3G="qD[6C'fA$\1RW$h-oYTq/l.L<<9la]sNT%I&C)BZf,:1[/3IYh2eH:^DSjpMT^$OmfooLh][*j2bu"\i;StEW+0F:XPdkVfZaAhF@qF13LQrG%HU>+ji(L.6BYP_FlQ\0T7FKP%TVrP+de]-:'1Gi2#T@;jV6Q<.J90C8Bdcpb>_qMSLl1"*.FUQYE_h`S-X>GT`,@08M?p_%^4kYNQph`X!!kjW!ML.O0;+Q_!l#"'%MTuh)V;3/U-`[.?Q(Yc;+(^hWA&-S,B2j?YoZ!Z;2%$@Z%<Q_/h%8AN=UE/:CFMCH()]@-?">(QH!sT2:3Ku+=amVYPXV+Q_`R&u%0Ki"!!G]gk8;E9Qnhp`_qh'F9oq7gY*R+`fP@ok)'==tnY1^0)qW#^7Mn5J-cFtMr<4YN5e2'95U4j(I6-;HUF5jme:B6s99%0co%GT:=tUX\%$(1q'i)ut.[-8%hR9*TG8'[."&Z0!8nTh!T8o^"RArOpWU_pE3`r;"WKiIR=8nUA(Q9&ofE!Z(qeZ8D$JW-m<)(@Coc%=GLD!$;Faq"$KZSo:#BO'G1#j#U`DO&pE(5`j6)QC[qXSO_6ZF6h.,F#[/4d$cgrOdm@,$,am35+M]'4FU2T,ag@cg6&g$ZD-#&F%M0D`CO3bB<MNVcjnTIIlq,pD%Joi6Z/DdHR->+XWL_0J>.(!H8.jdLN5Y/Ym;LX)R(adU@JlXsZ5g-L';Fq&1p"4eb/t4s=.ti]"%F@KMqb,Rj2-IYTE"*t<@OqT!%Lm9(5E%?%M$O%s[=0+ma&/\1e+A%]eJS$%)4ebAkfUUY_%"T%in"1f-!6Ms+?XW(4S:u`pV]t5.%pS3V;)fp7ohOAHqcgqe,_6$V"1pd8i.XrLu^dYHmnF3-:_oC>6cF'Gfn6!DS`^/US_mR>ap#^,!nX^b@i>cf;fI^$_i<\V1UGp;>%jQjmV@P(WXCi%HsY(/j,V,jB:5S`7TVH1gt&%(BdCX$j`b8eXl%G:=,?+bnXePF>1mC<.MW_I?hQg]o!mOjm!\1\2%i!3D9db[Ug%-5J0J1H2il,h%:A'BR1WRHWd3r^IR?0>q)<9i7M7_hkP7;sbt+)G#-67(_l*U<lgg?"Ym9aEG3Y2B6c;?BBSKe6-9#Y@Z\gPsf&`%T#o89*r7:B<Oui$/@$.f;Q@T4c@G@$jf;PRjqCH:s$kc(C\e*X$LRGHX:M<J.es,AT7`m:nVc-^Nj'I!:7#b/<%;0oQ,7g7Zn'4c%`3b+4&>Oq3)qq+)D_`!=6Fle6lbPA+&5a:b#8jLHB;p8=6#OjEf/%IF;&fRGZ!.]3Eud5p5!KE.5D`"D6%r_-g=$o]EDBJ6Y9\)S%;s1Bc*)n^#ZH'L3ZIjra$ippQP25DKN4?t/s2A8X>8tVgrWW-/EalHWUA*mQCqq//)qtZWnNou)#+6%/3.R3Vqr.PJqnCT*Zj_j<%`,e_GPDE\t;q50#<>RmI[BDre4FOoaY,Ya1m64i2'8pUb*e8kXqfAUA=abPq;Vs-TJGXZn'D&E_UZn2Os#ca==BK>6!mU0*4/MgL%?_D*6YO_oYDqUB8M;e42dK<kI#5[lo;JtVt?\#Q9Z8^.5=7qL9!IXtq$Yu<r@cC=*ki4NgRsu?DRqHNp[Z+9K3k)Hm:d0@Ap':3b%Vs`sD1X^`PV`%=O=r8$]#UDp5pHS)i1QE!u^q!>9!iE`mAKT7KT9gH][eJoMq">%VU_q[s?ViDqG?--Y)+=GrMOkm2F-?6$o(nrI%qY^=c3!(Ile^'gm<HIHEni'&;F#bKF7J!MXELmF/!rg%$1])!1m%@G[J/Y:D&"t*F@"uA@:]S-)CSCeiVpF1'!IW.A\kW:Q+1j>&%E,PnVBUJZIJ?c$4lSg9n]]H#0TKO-*L.2%k!#kV%c>t^=g5I*p/F2u_r%-(:03`C%\(B'DZ$RmLk$&m-!>JhdSI/cqrX*&u&.\U:%c?`(p6=)^:KTbib+0#MmS+5r9B@l8?L[oo.qISf&C1H)L-hc[7%/^UI^QhICDba)W?!Z#[ZNm@5p@Zr1f">/=R=<Ei_Rul&H)Tbu%05i-]6ePfOB(H%=^O6E"]nIaBTD[mP=8&cOHXK82Oe;FC`MT!gB"A!tp"-Z3]_o#1BQAV!l0X=Z^,/3R=[Q;,>RnB#cq4OdjMls[%6YIo.\Qdl]`ZR-lZ)]ZdQ8ZJnlE^^;(HtCX@dC4\GJ#Xg7qZ"o'1P(5K<[+-#\HS6rT=L2bl[fqc[4u(qXMSMrdeV<Hh%a9P7rW9%pZNcBWX%d&Qq7NI[]oR,::fAbcI0k-A*ZqF-;V(j.LYC<2kOE)H3KKD-e_31n%\jZLgfF9.2<OcJN<a?ZZ<:9+absgX:`Z3O8f;H%4TR-R%O/VHd]#sP[XW`@')uLYNrF>+7C'6rLT>Ic>l$%OFZ(Mk,2+=,&o8k`\JJRD2H"(8HNDO8TkL*EBTmAXB(n\J$*aJ+@dWn)%?=_a":Sr\@Gs?/oSnWG^&mmE"fLap'I[o?2GfL.@A[_L1GGZTW$6]9k2<]YoEcS3>5M\i$8=*!l,&JJp$h5jfWd^IERG"&OSNT(U%gKpGS]0EoFKGBKp]AH+e?cL[9j%s)p:RkZ1V-ggcm<1>bL^ApVgW8S=("r#%aJci-Hk2q4#4J>dgXD"N]BX>-4a8T3.@5L2O5g.3%5K[P"D.SdNV/>'X7j;L2*A\9h0BegmgN*ur7cM>8GA<4b.9]X$bY#o+0>Ph';%f>4D@V6gp>h;4oRoR?Eh:)l]/7!.gZ')cR?,RX%m*b\S">$%W5;=ZmduF`n=7?]L?VLRJg@i!gG4a2[AssCO"GZ!%\kY,<a]R;B7V*C/b]`8`A`70Sa1[>K?ItSSq:q=RiTUm'I>QH"%$d<?tO(pnlqoJ)m+-I0+B%SS%nt<+Z5k8?<Y#;k%TTtXJB0rfFK7_-]c@fMONW!KV47]&N(X7h;s-_5fnWi_#08[&C&P9P'LId2D%,t!UWkciL/(LJPI^Aj4(BN\QrOq-=@]E&(p@q@<X<R8e-_L7hs+5r$JcA?UP50Y+l91JGcG'uuY?=.?-C!j#0gk^c=[V+\c&KN&+%It[9;Ur8Dcck-M*0(<S\g&'-><_:1gi6D-YM[EYP<P8l1%p$4g96t@EE5=0?Hi*[>]de>Qp@GW%=^PF&qPG%3l\d7e>daF&(<5Z=%pQQKmD/ac_gCBd>"#uLJB;tOh<94lVIZ*<i4nV)2!ag+t6!>O&?DPcKgD^ZbNK_mC;&Sgg8p^"+-*h2CdA?Scf`-f9]++<0Mt(uM%ps8q+2s3ncPk\+^qf-UF$92m^5Z]o@,bM^R1-]:WB&\KW5IUP2Nnc2`qj3)BYFBl7mF&YLG8:HH98C'LqWj8p&Ig7taNmeVnC)da%!qPhi;bdT1_$T0#F@P9qDq2]!ed%TZ5ZKPi:6=91k6@faZbhI1g!o`1?[;$ejmBNqIVW*:A5hHpml[%$[Tee>5E<LS]3jV+nDal3%q,`V(J,/%<J+8tWUjT/=`kG+^4Efc`kbbmr4(`lO32$&RD@A+G+11MaZfl>@Qm[(jRof4LRqTRVdnL)%b`*E/gZ@RXjH/Uj:".3i%*:L_Y,trN>:[3VGfu#Cuce:J(HM`R?4aK6F]Ws-_jkC0O)pP\icbaU[UCuiIN"2iMl8uFsDMFc9(t6A$9M?Ua?MSYKVV^f'rt>`,%J-N^"BR77>cn(/]8nVJ>5^r^u1%-RFf+?^JL,U4K^XXJrlccg7S..`AG3S5>4FLMRaIdZ7dX\Dc+H>ROBiqH\+5uWOU:^<]n2Z[s%_+a1uR%VVs+EoikP[/O:Val2V`F#$Y3.WXIIf%[=hPQ2&5?"@5^f6HqB8WM^qu'5(RI#9t8:!pY;apPT.DiRd4&r*VR3IoYrhkYG%5?"@5^f6HqB8SCKk]a$ts"d*$F6RJ?aCO0a74JC5'tJ=]#d8+Ap,fj\1S^,O^:IP9?_/$34C0sq8h;[ijNUKBG*,.c2uf8Bhkjoj%]C;u;=6QHnh-(uL?o1LJ<2W.1YYStZB2[HgY'Q&)Ki\:ZY&PlBqdLAn?;)'49tr`1rD7"=Tph_VdK"g[h\m%h^fIl^<9Esl;`Do-%)<8=-qs8\D[O@SZ]Z>.Yh3b_kgJR:$Gd[*irf"tBf3/ks](PuJ@a8G!a-3-a'2)Y+MAf2%.':UAV=W5Qhe$L.?=!EbVj/gVI5SSu%X3PO05Am"+5!M(j3iu.Wjsi/[)d70P*h9@(2]?TRs1MYtg])`N35)E=<bI`T/8o>m^XCb!4(qUBD;S,l>?NI"<<N^'VNa@ZOHhKp%g=Q!>\";rgHr1uWFpBDTdsDc#a'LN^qTBDuWBN*YVmAl,?g%GsHLKS&BA>92iF=kC3'[@UodkH&e\Pd#!EON]T0E(0^us8>`>A=R%4R0F?s/reVp<ihB5QC,G>5>])iU,ooV'l-QYhh2?UF04lm.qClN*@_Y4TB)jTjKJoS>o?KU3!W5SR_;0FXC>1G.L01<(=a*jb"Wj%B.iA>0@!fBbcU"lIf6hVDUJGi*k'P?e$)K-R@hU)fbh3mpSOIq4MA&<]BqD:+EYZ36;3R]qJ`%'2U#Edf-E7,"P_PJR\+]5l<%Qt%I$QBt'k:l!V"19[cpU($-N$+SYN/cmbK8BY]2p>#;!V='H+98K*V7W!Co1:WqFW@7JS'59CaF2NK?a&"\YEl+1VHuCQeM>1ApUkd%Djp+e0JgCGesEa+e4d'3R]26.ge=p&7'FbS_p.gg:%V$qRtmEr20h(,9<oNJ1t/K_d7aH?kl]3&lF8?!Pf[+<bgj<$X#IKud2D8E%T`5Tbn.5C6U,1^5SZ[=LG7Dq;E.gutL#)>3SH27E<0EXB3^dVr&NZ2>^4th[3'rCEnG=&s1Z/P0F?dA"+Zbg>NR2BN"a_/^1Z/P0%ef:BTL?K%*6:^\#]nSN=1.%lurEb9C$ogT:C'):\9Ct21kN3'Zf+-1GE.e^7)/qW.59k9QSV_I[&=ihlkhJ"uju31frs0XXV4Snl%"-1a=-]dp[[,j1e];NT.\*qt"4P&*iSSP-NgcRu;^_&U0bX<@WKMM9+O#r*[$ogSO^F:6<"-1`BX#Ti/6ta:I3h8'hmMqrWi:ra_%LSa/W3WkDh\XJB)gCTnVa4ElN`#qFM>"eKA6DlTef+=JR8*J`$>P:0GVkktl)PY[g%_YZWR65Y/B!8>C?9Od8el.'hD;<OnhDY%=%mH9[6`@giH%'sT[/PWkUA9N64HZT`Z[Q(16I4X%QnMpL;kCZW'`(oH4o%a.fp0tKoNVdGfUpr$/H'kS?;nUNuo_OAlKp/+/l2AYP%0"5u>0EY:c_pY(.@64E`#E.Zf!u!&l1T0fFr==gN,3\,tdW/E5qlRR!j6`Y=8^coXBDuRLqK,S]5?p=aqK%JW$N(?=V?:+U^M7:1%?%KbjeD0@&r59VN0%+!h479d9afs9;nZDc@bP*SHIJjo/R%)q1<R2b80cF\B`tu5GRXM!&)a#l]2\S:%CgQn*nW)G2T%a1P.CYC#%HYe2D/d%j"(WTS$b2OZAgH&rdo4mZmffaS]ltH@:MiQ%#_EI_,HGE^t+TnV:-,H31rr].nMoeU&SDnI!i#akr0+!*mYm4"n97gOA%0FsT2Q\9`tjFL8-c1pC/;uDg:YDbS_MI."obo6P5V>)@Qhk]Ab')T?Mm-FbbZc%=]!dgc1')T?Mm&>'gNY;5N$LDi!&_>?Rl_b!T%2>#&4#U"%(Qf#RJ!PeN5EHlT:\bC%&]V;Ik+,,4>mjtYW'<B-"r87n;r*1,+B<-?Q\d<:hG@p+;Eoh!7o'#F^n,2)./4&`3DJjBo%<+i8rfj-^%<uhN(C)9\+<td.?mfLD_MQ/;fs6p!(^U>Vl(@j#DXGROV2sGsS4p(kobi[dFpn2IN.+P]P4p])OQWN'cV1_!4r"hR[%a+lk[qPWVY0<71CC9.A3eH<O)X("G&;o/=1orb0dXe&L^nhk?\Y1h+NPdAp#b+%^2*61^;[b=MVBAQmb+.XHRa.GM!g;bOYSR([R%d5E2`j,L6.?07F"6<kT$6@MbN(jsDi%^(Zb?=cXRZm""2405nKCUFA(="p3.2'4RY*1u&2j7[">ZC'VCo;lPgQWIauAmul6etS5.%8kA(IP1O_i"!G0eZJ8K?_?Z^Rl9<c+2.N1m_2\]]![(SfH;h3PY;%3-XUPQ_$S;e\Kif!&M=i`=JNG$kn0)"og_&3M+!Mi)QK?A0%`L(6(&*6'pjR)8Te%8u_;V<Z>82hCls#I$2lM*d?rO_%t(&hikLc9cRs'Sc\cdLYg0S6>dj_EZLN2P_lYd*mRfQ"kIa2^HBp"5-a%'MQq:s':Hg=YKX,-'8JQ;bXE@:+70e,;[?HI,`iMn*iG_4j--O0rei@`NfuDPNQ=CUVSrfMZ<ik+O>T"fE"on38WjuPZKrIK0ZL=%UDTbW+BWS)?aG!d`D\h?f8]lPGa6YX!Z"q(<91Scmk_b1/%HM4q`96YBM5LmM_5%=2<XHj%utkZ&0i/*p^[p,L!-t9[ap-@?fP)$%\gU?_?Yku87>6rciZMQ/bOgs/^DHnu/?Z?rPquU_a:BaMc[AgG3l_c&q\eH^()!F>!GkJGM`1_S%q_I9!4RZ<>uV$/Ae<]*JeT?K%HmmH%YM,ot@lQ!/(q)UU2)[d,!I=Su:iCVV*&2ZV#>YBm"r\bb,_GY"\Tub[RPI\Zed(CV#Jmf-7Kk-5Nn,(&YZ?i%SZ&nRr#XK2%=Q,TQf<h;._%o<oBmC/J-isHA!<3+P,BfBbB5mpKWJhhX^`&j;RuL5k7KMLb/YgZpW0^anEf9V+=DP"+#LG(=KKNh>W,ZQ1(N%a2%S'-M3l-Li.?!.AN]@)^PQFT]agj'heR2S2Oaj2S@VW.cS#@#?W_m)JEo)2]#g`o.PJSu]3-Gm@UQ:b7EON@X3TT]pSV/($\Gm;q8%8-TeR&=q)MbEI!Xq(.T$ciJ4(7tEs@F5[S+K25&%:b?1b?We+I($0t1jAt=_!hpm<f*Z/)Ksnd8E^,daba_,CDj/mMF:u!PBI@h/%dB14&7M#VWO<?aL#ne6QOUto-:`D]_/8t+;$>Oi;"@9q:6<eDcemLiHF<X]rCP*;\i1,F#X,7Zj3@P#:B3#Kt6>$VT&P"<4P<1O%%6#7o,M:`<6'<N-2MBJj(+Y3gO2ZYC\E"J0;TO>Rj&c,KQ'dd6ad(md`IVp*5>'U/1hPG;;o0b_=6!#Yu<7#Ar9P7pXPuq#_W.`aG%(`S.6W7!R\5BuN!lih)T@?YBl`1"X,aV5>Qkt#R\ReG;>`$`ibVQq@2TNOWJ/Yjo<qSkp1:ht-AhT<GFJ>+e!!7"5hFJ;cs$i(P_%je2@2N,"?Y-+O'VZk:omH'9C%aR)CYUf'ZDO_\AV"K$TbKK)gb->Mn-9,dk0&d=Fq6RQn1Q$H6O_7:o':kqMJd8=OG.]>`T%RaCA%BGKUV]nqS<S4JqB"qO=$f7g1%Pr7NM_8'R]TBpbfD'q5ug.n^_[3A.p"fi;RhM33b(u9;DSm+sGV0B3uh[;I`JJjnHJ_3)5cVTH+%KH!I<2R_86R+&eN>%$']"N7AJMdSAmLmJI)%U.atpHTqAJM=YD!q8*2jL$T_*P7Ck(Ih&qbuJ`H\:k2UL__lb[SJ`9a2Vbcj+H]>%F*B^f8A!VBD;&5,(rPP$(^_O!5p4"]"q^o0R39:;/1ai;+d3J)g9aA#W%8:ogOcff7kYE%b@9'aO=H(2W1cbV(QlL6l&=Dl@#FM5%_Y>9BiAK979SGlL-SC8&:5fj_dH(\3W@S3>YJfo4*BNICEE0PHG]uHPG)G9eWL'*MC86Br`/Y*1;$_523j3]O<=fLU<YPX`Oc8A:%(aO7&&Q]:4+XS;`B2-dI=u8r?4)mifG2f#_c/J.!biHPd6,8\=g+sXK5YNel&=dXdb$^+@%=$)UBamBH*@EO8nPm@lB0K2MM,utp%quJ05_A*\u?'^=M=)^Q<*t%$&!B_r[0b<?>-Fk/\']aG1?''uk>@<Q*,j6t@Hj[Rn?!`(!AH`-XC7@=*`3@Vi[ono"9r/(s&7)K'%+X%KJF4E$L"gnUeA"KV5-ALS2EOOhR8)5?u@`A?tqCbqJgOVl2_&`:dZ>('a0gN'J>:;fB1DuE96J,fS^tf&hY0]Jk4,P8C*bMJ"%B:3FV8q1H:W7!rI:.(d[;_94o:l3HdEg?uhKMa>)qcTWA$iPY!aNFg/1I&[G0io^)':VC*43krnaYWdnLbWDBK(pf*#7lVV4;:=J%N]&X3Q,*`VMS`<@_P0l9YcCJg%6gS@*^0s'/K&CRU2\=3Q./\Z;YN?%DELI#2nI$26c_R1\W)aF-mTI=!r\IEQCVWUQ45Q?*g0[B%pJ`].N9IWYJ\h,E4Y9rbH>2kc]c8=T&=B8HeSq=kKFE_)7f$4pM-.P1'd0`saj<BcJbULHL2.-P:JMjCon$!rRLi@[UPEB#NLVT/%%A[Tieocp7]!302!q&O4Uitcl;JdSC_53M>#-LEY9Rrku&\u&26!,NcP#BJI>/;4sQ;EIXiDU&=h^:YlQeF+@U3:$''SG,!$-DPN%QW1gjF,DZ-U_f/ho#qBMnj4XCMZT#[N-+'+.O<fC9bO.%hIfSkn3T\WFtBMS:#+NXdu`@\&i-8j)sLkS@S,_/">W3&PS2,o4=q1U%aT*%Z@j;QF,q>"XU8/6K^1R:l/6PsA>_7g!66oO-XW4OfjB0%A)NN!H6AN+`DR;te6WWcYLCVE@M5*0:6GSG4cB:^MjV\UsmuHI@%2),<R?R'0J6uR`rPCOL5W0jMlSt2%]1WF$>eM:Gu$E-SlOPXlf8Zsd6"]*=!jW#S5E<LFfOp?p.7!,,t$*g:YoMVSAeNmf'R4f3-%M@<sJANWmUTp73r<)"76+iVVNHq807hPAaI,''L2+m@!=Y:0N+D\:aq^u>;1\kjq8GR<VS0Q7&lI[D4`53;=&%uULHR3]B%r_(Nh%'Y0Ja<^Y#_PgCS]h.W!U`@.9iBi=BEJ^pNKbCD!1P([epNRpjj-J=)qT`b]$9E:/XS<p'="t[4t:`uIIDfX!l&m.V=86N).4s7<R%D,:V&<PlnSRT:/N%duLc6o1b-^u[NdQtOId>)Dpg;blL);/,98JQcYT-#H9rd`hW6Afdn)!=@W$C)O'![J.gNQEVO7h,okCT/__I%Kc%&.PIrS*pQ!&i'Be;,7)-o[+U*"5aAQVpSfSAo&F8jY<j70I<fBW5PiN#oAV!Kf'u[uEB!u)KnIS!D(QSkD:X$-jdRG2bL\%le%"3BgqD)XMO[L6j`CJr5@OEF6M!2AHH$UdUR%ZCs>LA3CN&-:14+q+rs/he_;i6BBh&>Bo8"?mL;QdlQ.S$`AjSr:LB;\,R0#oG#6%Hmd/[*=!q@iO]<QKZ"h]Ab&+sP^)2SgfZ#hqOAj3&oC`m.W7\Z]2<:IkUrb85h)pqJ$o$ubEe<0FN4Uj*(_NDW5.P]W5\214CrU]%0[4Hh<l2sVF#p8,Ls;4`A,[;FEAR?cg(pDY.K>oE(H.,oW2U.J5d2hb2dVjVm0!_,SQF!J'u]5Q@=i08PB<LV:`#o?^.Y3T2$5D]%%'[O35p]heiBqXtnKtf<]2!Bd1'+DmnX!E;^n_ed]TVJ$`0i$"JkpYm`$$.%jUu'C/Y<.m.[I"._Ec/s(S"Yu/!1d.R*d/2;9>iS%JJ5lA-0If0VhhU2"^3W]#n[g(NA([h78XO:,)^KeWKak7"Q:!SaPt!;TeMM^l%T$1'LOU\AV>R?Tpg='.R7u]Cunb8U(7J7f&T\P%j&JpU6+&0>1/SftEH,-T(NQLhg1GT[q>d>mD(5+#iraU#G_9=lV*$J@U*Nk3Fju3_9ZY9gieKI#G6eL35p-t>M;].?NKHk:9;aG"%C1P+nnNN<d-TIK`-G>(46*2k6Gh$$<Q#aa(FadL%ji,m*Au'"-Od9Pf1)[\:3i'2'D,P.b+_*\A0ZOTgZf'[O'=ikV4X';sX["_'%KK@Mj`2YL'dQ`8QJcVS$"H<gq&PU#6($RAN*p\Fr=,M%P&d;[,%.-!_Jr7o1fk^(Oa!@pf*i"b.Y"!+O.ea"nSn\dt>atAMA_:,A%"n(gPoc5HX3jWgP.;^rR\o`7DZug]&GB%_Npp+o8a4WaKM[fOqbRH]ED;>ADPS#]l"%u9f(C<&G"o`15YZ&io039.:(LlDA#`uk>%<!@:I*Uu8`i>R?'mm4lIEF10`E$@`$<=luJ/3r=K*;]4kLV>mh6cWBlno_L]>r&%qQ#"P(jcXqh!3r'BD3j-;9/j,S>mZ3_]ZZ5U%A`k3i=8o/2X.34>)%NF@CDlM*\bPm4SJtlu/d><ido-X@@`C':D_C@#a2fm[s+^Q8&[P0/ef1YH%5OS'UQSE-&UlS6!j\$oAN,0!%;IdRh3-n,'`]QimaKC1r/DlW*i9_kpe1_JE_7bCO.Wedh9h[i_VS[6IU67PU1YG[5Ln`b"@$8],'P'YMP-p2<2$_-U@`Ra`0G/+h%fFX@S4/,kL0%%aYhTu_ao/>X@kBk0lQ8Ya9h_3<U>C.0QNUrqFBsbT*-N]#_3;_L`?/!AD?[oe'SH%D)fR;0BG;h[,;68F+R+V)<%Y0K-k4$0U*J(m'B41T&'G2r5Ynn@J/mk$M<>3c"oP\7ECHhbUsdE1]-?S37`n!ai$esi<V\f^^/*`1+*SN$6]V]]`K8Vt2'fgK9!%Y#O^o^,5O:gU>F(FRI#cl,Dc@l$d,dAaaYXG@P4YjkdJ'nj_10gXuPO=*/nbNQF%!5<V*1C2XIF!1lpp.edc1lEE'>jf.j/X;lYg%oVg8b73=QGD_0[X=Xj#4UE`G;Wt.ZVV$l9^ZKWrePoR*f,\UU&B@6Y;=mmau?,CgS;emLQ&?e;aP*;QHjM2E[UV/A'4=+p,Kf'>>%,A(X5%iLJ45oM<?$;ftZ0f=c@X>n5lOGRtF@eO]q,VMX'..jC&A6'KCHgtCG(aip8EY]^XTCu"u)lEq#s5I\/jj(s%l0#TL[gq_P%/Ucechi$X;X56CO%uV)AD3@S68\.9od8=(^MRJ.r$7f]BV,]2Fe-*X;>cD=,$A.(U<d[?jlnGeE5;T9[<sm?VFu*87<6>I:,a]sA%37LR/pPlBhhOE6I!o4)D$&M.4Cd_nD+3Tl7&0q?C.gBpTUM<a"5o"7B:b9^h9qF2RdmB?ubucFVJp!Y)C3^F8R7-.;;pN%W#r0eX%0./R)a5W<;Q+ZRlb3hBm^AD*m\j<Wu,:Ff<j1[:Z9:go5E(lA"%@,HGhZ4D28^`8E,kiPFN5a:c;jHF9E?6!5Lie0ce,0$2[iRnk%L=0St/\K@oX^G(/7,elFZ!Yk4k+T)_<\[3bK=qkSUj%M,`S?-@9:Lc!+c't9>a[GRaV+1SJ)d$3+/84,i9n,h[ec&\`[n16'X.j(%M^"!g^ds:O=lRJqQj/OO3iP0HD$rBg&#i;DCiY0(Ci*)hK<<rf25EiO3A[Ct@7)M$1K0@_]%apNnX[AL]cVs?mO7^eNa_Na%/Var%"s_:\-<6<GUqC!YZ=[t6.T?m,H$IjD?F[c0bVLn((<RsU6lW%+6KV%YOVFQ88JUYo0Hro'DY&T=D2mu2)nq_L\=V<F#LB\'"@mWB%%0OG4-Y"7f(h++mUPe-dM54X[8J(0bSi*K3Z0KSU<)`:qn(PSJ_Mg&6?CJK--G>t\orZH?b06Ec`E6DZ[]_2&DVN=QcY[HMXKL)H%BBAuS`Ag8Xjr2Z@U-'tQCZ%QN_O(dlbg;tQBd<5HkcL+Lk)f59\.U-b!b+h@@[9&1-DQ@sZgpl6+Y#>N_*N6B=V4k3/)ZB9[0.hr%Rr29V8HZSn=$F0$61K[5=*Ml;B5Fu"ciZ[%WRR^VNH>t.;6K+n&8T0eSr5e?(Pc\3<%/ud2Jn>7#W4c1-WnYVV_#b,PKmIFM^=8L%^>!_,6saqF&BXL:[7Oc@:A*E_f_]-':Cb9=!kTT]KOM3Q@oa"%*h/9f$BVdD$,kC#jaF^MOn/_T't<';9p6cfa0aVQ]&%h=^8?<r%HSQZO3)!0,18YJFADcA)Vi*NVhEtZQ@Z1^mX!p3QqGJqo-p]!8oC!&1WAE'!<+nC[jeJQf$]i^tG$[Qr]S]"7.9^5K>Rf]\E\/jp%9p/hB%!2&@]0FcFm)?mQkUaoQh\H-lQ1U/XEjLa$M9-l6aq8YgJ4ODJWQ?0;DMn0=T80\:-+e/n6kN9h*VdeH`XKqt7ih_)'u$D1%6L>X.l,u4'clfJ%)oJ&(P5V(AOlF<@.XZ8Nam51&d&ArhRW1*n9u,sgV51HQg+hU'K>8Z46,]A*@SNfBeCa//m"+A;_]+;GC>hm\%&9W;Z([r\gCKXs8nnsaE']3AEpFn7$Zr)cAfj)S!-j<9"6`r!)@R6?YL)diUeIb][LZHo9W/>V2XZ])%XlN2`G8@IHm54q+dfhde%13jG"%:T;he\*;GZOOnuW5XphD;W#:f)"g$4qq5bci)^JQ>S_7:ClM=o(7$8AE;pe_oCI&]qaW-H0+O)n*`_gn+;j7g\?N\<"I:o%(O/BDHL]&/5D7rFc,W=DlE=8>rs+!Zk[F~>%AI9_PrivateDataEnd