%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: orcon_4.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Lisa Tauxe
%%CreationDate: 8/9/10
%%BoundingBox: 0 0 428 274
%%HiResBoundingBox: 0 0 427.0088 273.4966
%%CropBox: 0 0 427.0088 273.4966
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 7118 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD3FFFA8A8FFFFA8FFA8FFFFFFA8527DFFFFFF52A8FF7DA8FF2752%FFA852A8FD04FFA8A8A8FFFFFFA8FD59FF7D7D5252275227277D52522727%7DA827277D7D2752272752A82752F85227527D5227FD04527DA8FD58FF7D%7DF852527D527DFD04527D7D7D5252FF5252527D277DA85252527D2727A8%7D27527D527D52FD59FFA87DFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFFFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FDFCFFFD6EFFA8FD05FF%A8FD60FFA8A8FFFFFFCA9BA2A2A8A2CAFFFFFD06A29BA2A8A29BA29BFD04%FFA852A876A8A8A8527D52FD57FFA8A8FFFFFFA2A29BFD04A2FFFFA2A1C4%FD04A29BA2A2CBCACAA8FFFFFFA87D7D275252765252527DFD54FFA87DA8%FFA8CBA8FFA8FFA8CBA2A2A2CBA8CBA8CBA8FFA87721527DA8A8FD04FFA8%A8A8527D7DFFA8A87DA8FD53FFA87DFD06FFCAFD07FFCBFD08FF52F82720%52527D7DFD54FFFD09A8FF7D767DFD06A8A2A2FD0CA8FFA8A85227F827F8%F8F84C7DFD0CA8FD46FF7DA8FD04FFA8FFA8FF7D7DFD04FFA8FFFFFFA8FF%FFFFA8FD06FFA87D7D525227522727F82727A8FD04FFA8FFFFFFA8FFFFA8%7DFD44FFA8A87DFD04FFAF84A87DA85252A8FD0FFFA27D52522752527D7D%A8A852F82052FD0BFFA8A8A8FD44FFA8A8A8FFFFFFA8A87DA87DA8527D7D%A1A1FD07FFA8A87D7D52522752527D7DFD06FFA8F852A8FD0BFFA8A8A8FD%43FFA87DA8FFFFFFA87D7D7DA87D84527D7DA87DA1A1AFA8A85252275227%5252A8A8FD0BFF5252A8FD09FFA8A87DFD44FFA8A8A8FD04FFA87DA87DA8%7DA8527D7E7D7D7D524B2D52527D7DA8CAFD07FFCAFD13FFA8A8A8FD44FF%7DA8A8FFFFFFA8A87DA87D7D7D84272727522727275259765FFD0DFFA8FF%FFFFA8CBFFFFCBFFCBFD04FFCBFFFFA8FD45FFA87DFD05FFA8A87DA87DA8%7DA827FD04527D7DA8A1CAA1A184FD0FFFA8A2A2CBA8CBA8A2A8FFFFCAA1%CBA2FD44FFA8A8A8FD05FFA87D7DA8FD047D527D7DA87DA87DA87DA87D7D%769A84FD0BFFA8FFFFCBA1CA9BA2A2A29BCAFFCB9BA2A1A2A2FFFD04A852%FFFD05A8FFFFFFA8527DFF52A87D527DFF7D52A8FFA8FFA8A87DA8A8FFA8%A8FD1BFFA8A8FD06FFA8A87DA87DA87D7D52847DA87DA87DA87EA87EA884%847C838AFD09FFCBFD05FFCBCBA2FFCACAA8FFA8CAA8CBA2FFFFFF527D27%52527D2752525227A87D5227A87D272752277DA852F8522752527D527D27%52277D52FD19FFA87DFD07FFA8A87D7D7DA87D7D52A87D7D7DA87D7D7DA8%7DA87DA8A2A87C7C8AFD08FFCACAFD0AFFCBA2FFFFFFA8CBFFFFA8FD0652%7D2752F8277DA85252A87D277D52527DA82727527DF8527D7D5252277D7D%52FD17FFA8A8A8FD08FFA87DA87DA87D7D52A87DA87D7D7DA87DA87DA87D%A87DA8A1A8768AAFFD06FFCBCBFD15FF7D7DFFFFA8FFFFFF27A8FD06FFA8%FD07FFA8FD07FFA8FFFFFF7DFD15FFA87DA8FD0AFF7D7D7DA87D7D52A87D%7D7DA87D7D7D7E7D7D7DA87DA87DA176A8FF8AAEFFFFFFA8CAA8FD07FFA8%A8A8FD0DFFA8FD05FFA8A8FD2FFFA8A8A8FD0BFFA8A87DA87D7D52A87DA8%7DA87DA87D7D7DA87DA87DA87D7D7DFFAEAFAF8AFD0CFFA8A8A8FD44FFA8%A8A8FD0DFF7D847D7D52A87DA8FD067D52FD087DFFFFFFAEAF848AFD09FF%A87DA8FD35FFA8FD0FFFA8FFFFFFA8FD0CFFA87D7D52A87DA87DA87D7D7D%A87D7EFD057DA8A8FD07FF8AAEFD06FFA8A8A8FD37FF7D52FFA8A8FD057D%A87DA8527DA27D7DFF7D7D7DA87DA8A8A8FD06FFA85252FD057D53FD077D%527D7DA8FD0AFF84AEFD04FF7DA8A8FD38FF7D52527D277D52A84B7D5227%527D525252A8A8FD0852FD06FFA8A87D52FD0C7DA8FD0BFFAFAFFF8AFFFF%A87DFD3BFFA8FD047DA8A87D777D7D7DA87DA8527DA8A852FD047DA8527D%FD04FFA87DA8FFA87D7D7D527D52FD047DA8A8FD0DFFAEAFAEAE5FA8A8FD%4EFFA8A8FD0AFFA87DFD06FFCAFFA8FD16FFA8587C83FD05FFA8FD05FFA8%FD38FFA8FD15FFA87DA8FD1DFFA87D76A2A1A083FFFFFF527DA8A87DA87D%7DFFFD08A8FFA8A8A8FF7DA8A87DA8FFFD07A8FFA8FD19FFA87DFD14A8FF%7D7DA8CAFD16A8A1FD05A87D7D7DA8A1A19AA0AEFFA87D7D7D527D52527D%FF5252527D5276525227FF7D7DFF7D5252527DA87DFD05527D525252FD2E%FF7DA1FD0AFFFD0D7DA87D7D7DA87DA87DA87DA87DA87D83757CAEFF7DA8%52527D7D52A8A8524BFF7DFF527D5252A8A87DFF7D7D52527DFF7D527DFF%7DA8527D4B7DFD25FFA8FD07FF7DA8FD0CFF52FD077D52FD047D7E7D7D7D%A87DA87DA87DA87DA8A8847C5FAFFD09FFA8FD0FFFA8FFFFFFA8FFFFFFA8%FD28FFA85252FD05FF7DA8FD0DFFA8527D7D7D527D7D7D52FD077D53A87D%7D7DA87DA87DA8A1A87683AFFD04FFA87DFF52A8A8FFA8FFA8A87DA8A8FF%A8FFFFFFA8527DFFA87DA8A87D5252A8FD27FF7DFD04FF7D27FD10FFA8FD%067D52FD047DA87DA87D7D7DA87DA87DA87DA8A8A8A1C39A8AFD04FF7DA8%52527D7D5252527D7D527D7D52527DFF527D52FFA87D5276527D52A87DFD%26FF7D527DFFFFA8F827A8FD10FFA8527D597D7D7D52FD0A7D7E7DA87DA8%7DA87DA87D7C758AFFFFFF7D7D7D527D7DA8527D52A87D7D5252527DA87D%7D7DFFFF52527DA87D527D7DFD27FFA8FFFFFF52A8FD13FFA8FD047D52FD%067D847D7E7D7D7DA87DA87DA87DA8A8A88483588AFFFFA8A8FD10FFCAFF%A8FD08FFA87DFD40FFA87D527D597D52FD0E7DA87DA87DA87DA87EA158AF%FD62FF7D7D7D52FD067DA87D7E7DA87D7D7DA87DA87DA8A8A8A1C3A1C37D%FD62FFA87D7D7D52FD0A7D7E7D7D7DA87DA87DA87DA87DA17C9A59FD62FF%A87D52FD0C7DA87D7D7DA87DA87DA884A884847D7C5FFD62FF7D52527D7D%7D53FD0C7DA87D7E7DA87DA87DA87D7C5FFD62FFFD097D847D7D7DA87DA8%7D7D7DA87DA87DA87DA8A8A8A1A18AFD61FFA8527D7D7D59FD107DA87DA8%7DA87DA89A7CAEFD60FFA8FFFD0D7DA87DA87D7D7DA87DA87DA87DA8A8A8%9A83AFFD5FFFA8A8A8527D7D7D52FD0B7D52FD047DA87DA87DA87DA87683%AFFD5EFFA8FFFFFFFD0B7DA87DA87DA87D7D7DA87DA87DA8A8A884A87D8A%FD5EFFA8A8FFFFA8527D59FD107DA87DA87DA87DA87DA87DFD5EFF7DFD04%FFA8FD0B7D847D7D7DA87D7E7DA87DA87DA8A8A87DA8FD5EFFA8A8FFFFFF%A87D527D52FD0D7D527D7DA87DA87DA87DA87EFD5EFFA8FD06FFFD0A7DA8%7D7E7DA87D847DA87DA87DA8A8A87DFD5FFFA8A8FD05FFA87D52FD0F7D53%A87DA87DA87DA8FD5FFFA8FD07FFA8FD0E7DA87D7D7DA87DA87DA8FD60FF%A8A8FD07FFA87D527D7D7D52FD0B7D52A87D7DA8FD60FFA8FD09FFFD097D%7E7D7D7DA87DA87D7D7DA8A8FD61FFA8A8FD09FFFD047D59FD0E7DFD07FF%A8FFA8FD58FF7DFD0BFFFD0D7DA87DFD04A8FD06FFA87DA8FD58FFA8A8FD%0BFF527D7D7D52FD087DA8FFFFFFA8A8FD05FF7D27A8FD58FFA8FD0DFFFD%0B7DFD06FF7DA8FD04FFA87DA8FD58FFA8A8FD0CFFA8527D527D527D7DA8%A8FD08FF7DA8FFFFFFA8FFA8FD58FFA8FD0FFFA8A87DA8A8FD0CFF7DFD5E%FFA8A8FD1FFFA87DA8FD5CFFA8FD21FFA87DFD5CFFA8A8FD21FFA87DFD5B%FFA1FD23FF7DA8FD5AFFA8A8FD23FF7DA8FD59FFA8FD25FF277DFD58FFA8%A8FD24FFA852A8FD57FFA8FD27FFA8FD57FFA8A8FD7EFFA8FD7FFFA8A8FD%7EFF27A8FD7EFF52A8FD7EFFA8FDFCFFFDFCFFFFFFFF7DA8FD04FFA8FD78%FF7D525276525227527DFD77FF7D527D7D7D27527DA8FD78FFA8A8FFFFFF%A8FD4CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2010-08-09T17:41:17-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2010-08-09T17:41:17-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2010-08-09T17:41:17-07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>164</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgApAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqkvncaqfJmvDSPV/Sv6PuvqH1b+/8AX9FvT9H/AIs5U4e+KvHvNv8A0MPf&#xA;vrVjoFnq1npErzpot3Hc6IZWgaGZYw/rra3UCtIIShLevGpcszPxAVTeax/5yHGp30lvqL/VZWv1&#xA;sYJV0owxLINSWzaqx+ufS9LT3+JjX1G5VowVVL7nyx+duv8AmnRdQ1C41DSrOK5mulEb6O62PA6p&#xA;HFziIuFeVre6tYwUDgjmX+JUIVR/nnS/zw13Qo9Mt0aJNR8uiHV7eF9PWL9IS2V2LuFnkJlDtcm1&#xA;SNoj6fD1akHgcVa87+W/zYHmGxXyxFK2maDbzny+0X6KhtI5P0Lc2sLPG4jl9f63KqhVT6uEI+EU&#xA;NFUJ5e8hfmlp/wCZl/5in53jJoOrafp+q388Ehkun1e4nsPWjhK8Va2MTEJGqKPhAWnEKpbp/lj/&#xA;AJyDt9bW+06W9slvb3UbrVJL6XSWaUfoywSzE8Nt6lvR7qzaLlEnNUqajkSVUxsoP+citQ8v6tb6&#xA;wL/T9Qk064GifVJ9EYi84TELfTokTAuwiWBrZVC1PqGo54qvtbX/AJyHt7K9iga7NwTqkmntdSaT&#xA;LH6Uv1x7MTMS8ovBO1vxVP8ARli+GgIpirN/ICedE1nVY/Mb3MnpW8ESTzcBFNJHe36pNGIgsIkk&#xA;shavN6ahakCgYMMVZxirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUoby0nlnh&#xA;hmSSW2YR3KIwLRuyhwrgfZJRg1D2OKoDUfM2h6ddi0vLn0rghWCcJG2ckA1VWH7J+6uSECeTbDBO&#xA;QsDZYnm3y88ixreAs8ghX4JKFmKqCDxpwJdRz+zuN98PhlJ08+5F6lq+naakb3swiErcI9mYk9Ts&#xA;oY0Hc9B3yIiTyYQxylyS8+c9BEhUzOiJyEryRTRlXVok48XQMamdemS8Mtv5af4rz/Uug85eW50L&#xA;w3ZkAIHFYpSxLU40XhyPKu1BvicckHTTHMKOl+dtJ1C8itlEkP1iGGW2MqOpcymQFT8PFaelseVG&#xA;rthljIDLJpZRF9yd3l1FaWk91NX0reNpZKCp4opY0HyGVuMx+1/MfyfcR2E36QjhtdRtHvra7uGW&#xA;GHhHKkDozuV4yLJKqlDvXbFVbUfP/krTruOzu9bs0vJZTbrbCeNpBKoeqsoNU3jK/FT4vh6kDFUX&#xA;5a8zaN5k0i31TSrhJ7eeON2RXRpImkjWT0pgjPwkVXHJa7YqmmKuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KoW+1TTrD0xeXCQtMSIUY/G5UVYIv2moNzQYqh/wDEmi/8tH/CSf8ANOKu/wAS&#xA;aL/y0f8ACSf804qx++84watctp2i3htrWMlNQ1kRs3AqaNBaqykPL2ZyOCf5TVUKpjbXfluysorP&#xA;T7p7OGGpX01dmYsasztKkhdmYkszVYncmuEFkDXRAzP5W1G4mOqN6l0oVGlQTIskXpyxoeI+yaTS&#xA;A++/hk+Ijk3DLKIHDy/s/Yg7zRvKzTwSWF39VEbq8hYXUrUjZXREBcIqAxr8JUigFKUwjKerOOrl&#xA;Rvf5fqR9yND1BAmr6i14qf3XCOS3Za7MOUVCQ22x8MiJ1ya45uH6RX2tRWfkmMg+rLIVcyr6kly9&#xA;HaVJmPxE9ZIVJ8cfEKnUTP8AYPd+l4/+c17f+ULix8w+Tdbj9CAwpd6NccWYNEoWKZFcKzrRAGWu&#xA;x3G1aJyEpOpmQQerEfLv/OTl7ZNbjVfLdpdrbiBI3tZ57ZgtsHERpIbgEr6rfPAZlicsj1539r3b&#xA;yb+a2iefNEuvU03UNJtJ4mia4uET05PUBRhA6F2em+5SmRakv1T8s/y4vrqyuo9Qu7OWytmtF9EA&#xA;o6yxLbzSPHJDInqywLwZ1Udm+0AcVTW18q+QLWO2WCZ0a21CfUhKI/3jPOLkCJ3MfJo4/rr8Adx4&#xA;9aqph5G0jyj5fc6Xo940k8ttbL6EgCsY7GFbcSBVSPdurn+Y4oZhirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdiqld3lpZ27XF3MkECU5SyMFUVNBufE7Yqlf1zWdTA/R8Z06yb/j9ukPrsD/vm3ahT&#xA;/WmoQf8AdZG+Kpddav5e8uvJ6XK+1WQcZ5mb1JmpuBJKfsqCTRF2XsoxVjeoeeNcuS3CUWsX8sQo&#xA;ae7mp+6mFWJtruva1IRBqF1DpP8Auy6WaRZLkd1iNarEe79W/Z2+IqvQfKPnTT7e2j0rUvRsFgCx&#xA;2DqFigaFVpxoKKjJTcDalCOjUr46NFszCMcYyA7XUv6JPI/1Tyvodj0JEap+cX5X6YeNz5lsXcbe&#xA;nbSfWnr4cbcStX2pk2tLP+VzWF2f9wHlnX9bDfYuILB4bc795rgw06+GKWx5m/OfUdtP8nWOjqT8&#xA;M+raistQe5itEdl/4LFDQ8u/nNqTUv8Azjp+j0/vbfSNOEx4t0pLeOzL7Hjilv8A5UzZ3g/3P+Z9&#xA;f1oMKSW8180FuflDbiKn34oYd+bX5W+VNI8pLo/kvyrFc+ZdcnS1tJArXE0Uan1J5zNcGTgAo4Fy&#xA;wpy64pWflf8A84v6Jo3pap5xKatqYo6acu9nEetHB/vmHv8AD7HritvdkRERURQqKAqqooABsAAM&#xA;UIe/1Kx0+D1ryZYUJ4pWpZ26hEQVZ3PZVBJ7Yql/q67qgPoBtIsif7+RVe8cV6pG3KOEHxkDN2KK&#xA;cVR2n6VYaeH+rR0klIM87s0k0hFaGSRyzvSu1Tt0G2KovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;WmZVUsxAUCpJ2AAxVJ/03cahVNCiWePodTmqtoPeOlGuPH4PgPTmDiqtaaFBFOl7fStf6ggJW5mp&#xA;xjqKN6EQ+CIdqgciPtM2KsW80+dJJGey0t+MQ+GW6Xq3iEPYe+KsLnnihieaeRY4owWkkchVUDck&#xA;k4UMV1qx81+YGQWU8OmaMdzHcxNJPP8A5UkRKqIztSNuv7Y/ZClcPJWs3W2peaNRmr+zaenZL90a&#xA;safTitq7flp5VgJmk06W/lFCt3JcSzXCvt8QSRuGx32+7Kp33beXNuicQjcj7wYmUSO703Lf+r8X&#xA;pn5W33lpI/0ZBp9pYalb1AeC3S3aUCo5bKpNR3+g1+00MWW9jzcaUI4iBGQnil9J4hKj/qciL9Q6&#xA;XvIcwJAvRcvZuxVBvRdYipsZbeT1PcRPHw/4H1W+/D0Zj6fik3mvWNXsLqFbPitulpd3kzclDN9W&#xA;RTxo0b7VcdCK+IpvZCIPNv0+OMhvzsD5pfeef39WdYrf01sbjhModHklRFk5r6ZFUqYxxPcH54Ri&#xA;bI6TlZ5j9ScaBr0t5pl/f3JjdLeeUILZxMnpxorcUcBOfU70yM40QGnNiEZADqOrH4fzAvnlmlEc&#xA;Dws/GBRMvpICbRPimCfstcsW226b0yZxfj5uQdIKrf5f1unwT5dS0C10u38z3y+g10lui3EwaWVT&#xA;eOkUUKUDFQ8siLxQAEmuUyFGnCyR4ZEdyFtPzP8AIl7q1vp1hrNne/WYZZlvba5t5bZWhmtrf0Xl&#xA;SQ0lkkvogiU3+6oYItvP/kNI5pG8yaWsdskMtw5vbcCOO5CmB3PP4VlDqUJ+1UUxVE2Xm3yrfC4N&#xA;jrNjdC0hS6uzBcwyelBKnqRzScWPCN0+JWOxG+KpVafmd5MvNXvNPtdSt5raw06PVbzV0ubU2McE&#xA;sjxqDL6vKv7ssxC8FFOTAsoKqVRfnn+W89ha3Vtqkd1JeaomjQWVs8U9x9YluntY3ZIncJDJ6TSo&#xA;7kco9xUkKVVfVfzm8h6R5R0jzRql79Ts9aitriytJTH9cMN00a+oLdXZ3EIlDS+nyIFaVxVPF8+e&#xA;R2ujaL5h0w3aySwtbfXIPVEtuvKaMpz5B4l3daVXviqCh/NT8uJ3dYPMmnzLHKIZZo50eJGNrJeA&#xA;vKpMaIYIJG5s3H4SteQpiqtJ+ZHkFTxTzDp88tIn9G3uYp5fTnMYjl9OJnf0yJkYvTiFPInjvirI&#xA;8VdirsVdirsVSq51+MzyWemRHUb+I8ZI4zxhibwnnIKp7qOT03CHFVi6E94wl1yYXvdLFRxs0/55&#xA;kkyt0+KQkVFVVMVTgAAUHTFWK+fdZktLJLGBuMt1X1GHURjqP9kcVebXd5bWcDT3D8I1oOhJLE0C&#xA;qoqWZjsANzhQgILO6v50vNST04YyHtNPJBCEbrJNSoaQdQPsp7n4sUoueVraQyu1bZv7ypA9Og+1&#xA;/q+Ph16VxQiopAdx36HFKLSdVpyYCpoKmlSe2KoaWG91W9itNJiZdUj4ywXRqiwHlRXmanwJt0Px&#xA;H9lSRtXON+9EsGKQvIIyB27pDuIPMEHkR8djR6/YzzoRZ3jBrtFqJQOImQUBcDsQTRh4+xGSB6OP&#xA;hyEHgn9Q6/zh3/r8/IhXubgQR8/TeUk8VSNSzEnp7D5sQPfJAOVEWpWkE/qvdXVBNIAqRKeSxoN+&#xA;INBUsd2PyHbEllIjkEQyRk82UVAI5EDYGlRXwNMDC0DaaxZ3szLpwNygPx3iD/R6gdpekh7fu+VO&#xA;hpirpdB02ecXFxF6k4pRqsoHHpRVNNskJFsGWQFWiLzTrK8hWG4iDxLIkoToOUbh1rTr8Sio74AS&#xA;GMZmJsIDzToLa3pH1GOf6rKlxa3UM3HmA9pcx3AUrVfhf0uDb9DtgYvO9E/5x80yPTNPm1jWdQl8&#xA;x2+l2OmyX9u9qEgFjLa3MS2ym1VSkU9kODSozFWPOppxVa1X8g9Ps9OtZfLFzctrenIsWnTXd3FA&#xA;kdLS0sTIzCxvFZvQ09BxMJFXenElSqqK8n/84++V/L2kXthJqOo3q6ppB0a8hluAbeKOaNEuXtI+&#xA;FYjM6BzUnfFU6tfyi8v29jq1t9evpZtZWE3l67wet68F9caklwgWFYhJ9avXcj0+GwHClQVUpsv+&#xA;cffJ1tbQwm+1G4ki8wJ5pa5lkthJJfoKcX9OBE9I9eKqPY4qv8w/kF5T1zy9Y6BNqOpW2n2en2ul&#xA;SC3ktudxb2L+pb+s0tvLRkeprHwrXeu1FVHXP+cdvJGszF7q91RIZGu2u7WG5SOG5+uXM12fXQR/&#xA;F6UtwxiOxG1SaYqj9S/JbRtUaSXU9a1S7upL6LVTcsbJHF9BaNZRzhYrWOOoi4fDx4VjU8d35qoZ&#xA;/wAh/LiaZJZ2eoXkcs+oHUru6lMUjyvPafUbtWCJCAJoGcjjQJI3IDiOGKsl1j8wNC0XzPBoWqyC&#xA;0+s28c8F25YoXkmMIRqKRGKgfG7BakDqRiqAvPzi8gwWcs8Wo+tLHFLKtv6NwjH0kaT4uUf7sMq1&#xA;DNsQQRXktVaRd1+aPke0vbmyu7+S3ubOQRXCS2l3HxJLfFyaIKUHAkyA8QNyab4qgz+cfkNlsXtb&#xA;ua7ivrj6sksNtcFUb0TNzkLIvFOI6/M9Fcqqth89+XPMN3Lbx3Mp0eCxmv7u4iM0Hw27qHR1KRzk&#xA;cXD/AAGjD+YHFVsP5qeRrNoIIJFt9G+qvPFMkMsZVklCegtoIhNXi3qbL9n4qcd8VRZ/Nz8uxHI5&#xA;1hAIplt3BinDc3Z1FFMfIoGjYFwOIINSMVZfirAvzSjW2gt9T3lkAMK2cdGmkIBk/dISOVACW/lH&#xA;xGigkKvNLT03nGoalIsl2Afq9unJorcHaiVA5ORszn5CgwqjX1IHaNfpb+mKrFlZjVjU4qpWklwb&#xA;5tOsYpLpyocRwIZnirsBwQE8Nup2X5dFWcaL+Xms3f73U5DpkDGphRllujTb7QLww/7HlUH9k4FZ&#xA;9puiaVplkbKytkit2JMi7sXY7FpGbkzse7MSTiiQBFHkp3GiW7qv1aSS0eNucRiNUVgKCkbclA33&#xA;4gVG2RMXCyaCJA4CYEbiuQ+B2+VWiLO7M3OKVRHdQ0E0Y6b9HXxRqbH6OoOEFvwZuK4y2nHmP0jy&#xA;PT5cwULda9Cs72dhE2o36ELJDCQEiJ7zyn4I/Hju5H2VbC3qX6DuL8h9cmFynUabFVbRdukgPxXH&#xA;X/dnw9DwU4qm6qqqFUAKBQAbAAYq3irsVdirsVdirsVdirsVdirsVdirsVSXW/JvlzW52n1S0FzI&#xA;yQxtV3AKW8/1iNSqsFIEm5236HbFUju/J/5aeX9OuoL/AIWsOrW72Nw1zdzNNcRN1jDSSNJIwWgF&#xA;KsFAA2GKoCXyn+V15d3N5cX6M17cG7nEupytydxxdTGZuIjdKK8ZFGUKCPhFFUZa+XPyntbaG2hm&#xA;shBA0bJG15yBMVq9knLlIeX7iVlNetanfFVC18sflrp+nalbaVqcFvc6ja3Fo11PftdMq3KKp2mm&#xA;aoHpqaV7YqhoPIn5SjToLW6voLm4iUrJe/pB45nZxSRuaTBl5rVNj9g8emKVR/I35OsLetxAJLUR&#xA;rDOupSrMBG8r/wB6Jg55Ncyct/irv0GKsk1Xzz5dsogltfWl7fy7W1mt1CpY9OUjliI41rV3NfYM&#xA;xClQhtGuvL1tO+palrdje61cLxluBPGscUfX0LZC59OOo3/aY7sTtRVL9Q8uflbezPMby2t5ZPtG&#xA;C9CL0A2j5mNenZcVQcXk78tUfk+tiUDorXkAFfH4AhxVMLbQfypt2DCWxmp+zcXn1hD80mldPwxV&#xA;PrXW/KFpAsFpf6fbwJ9mKKaFEHyVSBiqt/ify3/1drP/AKSIv+asVd/ify3/ANXaz/6SIv8AmrFU&#xA;n13zx5PhUKs8eqXy19C2sWWWcE+Dof3Q2FWZlGAi2vJhjP6hy+Y9x5j4MGu/NWu3d8lzNOY7SAsH&#xA;0aF3FyYKgtyuAEnf7INF2Pi22Uyl3dOjZHsqe0hIj+aTRj/VlLuPXiJMTR6F6fod/osmhxXWlKke&#xA;nIhZIrdNkA+JlEcY6+wG/brl0ZAiwwhK7sESBog8wRzB/HnyYlpP50eV7ixuL/VuWkWsXB4DMlw0&#xA;kkUrzrG3pmFGqVtXc8OSgA/F8Jws6RS/mtozX8enrC730upjTkhTm4ERmMK3MkipwjVircVYgtQg&#xA;VocVR2q/mf5F0m9uLG/1QR3NqSsyLDPIAyoZGUNHG6syIpLBSSvemKrB+a3kEvwGq1b1PSoILj7X&#xA;IIT/AHf2A7BC/wBkMeJNdsVROnfmH5O1NLxtN1D699QiE92ttDPM6owBBCRozMaN9lQT9xxV2s+e&#xA;tJ0uw0jUpgyabqlwYGuLhZLYwottPcmR4pkWT/j2pxIB3+9VBeXvzS8r67rculWkrg8hHZTSRTxr&#xA;O4jZ5Y/3kaCOSPgw9NzyPEmm2Kqs35p+QoruW0fVQbiGUQOqQzuC5LD4WWMq6gxvVlJUcWqdjiqi&#xA;n5wfly8bSrrKmNEaSRvRuAFQResGasfwhk+wT9s/CtWFMVTzQvNXl/Xmu10i8S8NlIYbkxhqK4Zk&#xA;pyIAbeNunz6EYqmuKuxV2KuxV2KuoKg03HQ4q7FXYqkXnTzJceW9Cl1eOzW9jt2HrxtN6JCtspX4&#xA;JC7M5VFQCpJ2xVMNFvb690q2u7+xbTbudA8ti7rI0RPRWddiaYqlDec7HUpJtP8ALMsWp6rDLJb3&#xA;IBJhs2icxu90RQgBlPBB8Uh+z8PJ1VTLRdEh0xJZGla71C6Ie+v5f7yVlFAKdEjWp4Rr8K/MklVM&#xA;sVadEdGRwGRgQynoQcVeQ+d9D1fQrz1YLmdtMnY+g/qOeB6+mxr93iPpxVjS6pqI/wCPqb/kY39c&#xA;Vah1XUTfzD63NQRRbeo380nvhVHrqV8wobmUg9QXb+uKut9W1CCRYJrqUxtRYJmkYlia/A3uOx7/&#xA;ADxVHRSYqrSQW11H6c8YkTwbIyiJc2JG9gkEdQSD8xRb8va4nlfUGMEhm0yRz9fti3KSIk/3gBNe&#xA;NT/mCSMcVA7cuvk25NHqJkZbMp1yMR+8iOQEhQ44j6eKzL6Sbpl6flp5F1DTbOkMk8MUVutrdR3E&#xA;0cgW3eaSNleJoyrVupakU+1TsMyQ1QyCYEo8ilGqaT+XeheaIjNaTwy2kcWpXVwlzdspka5ZbJTb&#xA;RtIbmVpmm9NeJp8XjizSfR9d/KO41O386akr6TqhupHtxLPdvCsrwwGWVolpDH8N+nMsoFWqe+Kp&#xA;qupfk5e2mnSW5lu4rD61NaQW8V+7lEmE86TxKvJozPGrBJhxZlFK0xVL/KWofklp+jXk1pp66Zpu&#xA;rxWsN1BdxzyGaN4TMvqROJeKIsjc5PsUo3LjxOKp6b/8pdf8oqYmjfy5o8iiKKCO4gEclxE0EYii&#xA;RY5GLrdMqcFNWO3xDFCUeRbT8uR5xuF8v2l1JBZ2y6q+q3VzqEkDXFyGHqBLjlBz9KV+UjMG+JgB&#xA;9shSg9M8z/lBpOv6jq9tFNDdwMH0+dzfMs/qRlmEELrwih531FNOB58htiqg+oeQJ9QbTpvLrSaZ&#xA;oNrBYvKbuUobB0twrSw7CUQ/pIsOZLL8TL8W2KvTvK3kvy15Wt57fQrIWcVy6yTKGd+TIixg1csf&#xA;sr99T1OKE7xV2KuxV2KuxV2KuxV2KpR5k8raV5itra31EzhLSdbq3a2uJrZ1mjBCNzhZG+HlUe++&#xA;KuuNEu4/LkukaTqM1pcGNo4NSuWkvp4+bVZ+U0nN3AJ4FmoDTYgUxVKfIH5X+VPItvNHokcxnuwv&#xA;127uJnkkmKklS6/DGCORpxQYqy3FXYq7FUPqFhaahZy2d3GJIJl4up/AjwI6g4q8R80+WrvQNRNv&#xA;LV7eSrWs/Z0H/Gy1+IYqkMLU1Cb/AIxRf8SkwqmEb4qr/BIhRxVT1GKr7W5aKRbedqsdoJD1kAFT&#xA;X/KHfx6+NFU0ikxVUntrW7i4XKB0G4r2PjkZQEuagy/hMon+iTH7q+SM8n+ZP8P3EVlJOJvL9y1I&#xA;bgt6nouduPKv2a/5+NETwcjcWOo0+WEpZSd+eSJiAf8Ahg4QB3cY4b/j3PEzPWvJOk63qo1K5kk4&#xA;yW0cEixO8TEwTevbTRTRMkkckLu9GVtwxzIZA2NlOw/LXyZYxvFb2H7qSK4t5EklmlDR3cMEE6tz&#xA;dq847SIGvh7nFWtK/LTyjpc0E1lBcRyW6GJSby7bnHvxSUNKRIqcjwVqha7UxVZJ+V3kiSGGFrBu&#xA;ECQxIBPOKxW8K26RPRxzjMSKro1Q37VcVV4Py88pW+ky6Xb2jQ2sotgSk0yyK1kFFs8cofmjx+mp&#xA;DKQa74qjNJ8o6DpP1lbG2EcN3DDbSwElo/St0ZEWjVrVXPImpPfFUt0/8sPJtg8rwWkzPLbzWTvN&#xA;dXMx+rzpHG0QMsjkKI4UVafZA2xVZeflj5ZlM5tYmtHvGiF+6s8hlgi9GsIEjMqhxaRqzAVpXua4&#xA;qy3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql+u6HZa1p0lldL8LbxyD7SOOjLirwfV9Gv&#xA;dH8wXVjdrxkSKIo4+y6F5eLr7HFViPhVERviqsyrLGUatD0INCD2IPYjFVW0u2WT6vOQJdzG3+/F&#xA;FPi+e+4xVM4pMVW3WlWN4G9RSjuKPJGSjEe5HXK54oyZxz5YkGM5R4eXUf6WVx+NX5sm8k+aJ7G5&#xA;j0DVZOUTCmnXjbFun7tuwPh/btCJMTwlxRiliHF6fCJ6WPDkTtGiT6D/AAm9j6aA4XoOXN7sVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYZ5j8sW2v69qcLUS7i0+xa0n&#xA;P7LGa8qDT9lqb4q8qvbO6sbuW0uozFcQsVkQ9iP1g9j3xVaj4VREb4qquqypwJKnqrqaMpHcHFUR&#xA;Z3bFjDNRZ1FaDoy1pyX+I7fdVVMopMVXXVrFeQelJsRujj7SsOhH+ftkZwEhTZjycJOwMSKIPKQP&#xA;MHy/t5sz8keZ7q6jGl6rtfxAiGf9mdF79T8VN6Ht40JyMCeRcWRjjycAJMD9JPP+rLvlHv8A4hvz&#xA;tl2TbnYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUntf+Uv1P/tn2H/J&#xA;68xVLfPPk5NctPrNqoXVIF/dnoJFG/psf+InFXjrpJFI0cilJEJV0YEEEGhBB6EYqvR8KoiN8VVX&#xA;QSqvxFHUhkdeoI/h4jFUTY3bPWOUBLiOnqICSN+jKTT4TTFUxikxVknk61afWY5wPhtlZ3am3xKU&#xA;A+fxYoZ9gS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqk9r/wApfqf/&#xA;AGz7D/k9eYqnGKsE/MLyV9djfV9NjreRitzAo3lUftKB1cfiPfqq8sBpiqsj4VREb4qqupkCsjcZ&#xA;U3jbtWnRh3U9x/HFUx0UXGpXAtbeMtdghZIhvxJFa1NPh/ysVes6Do0WlWQhFGnejTyj9pvAew7Y&#xA;FTHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUntf+Uv1P/tn2H/J6&#xA;8xVOMVdirzH8xPJRgaTWtNj/AHDHlewKPsE9ZFH8p/aHbr06KvPwaYqrxvhVlHl7ybrOq8JOBtbN&#xA;t/rEopUf5C7Fv1e+Ks8TyfBp1vHPozenq1sHMU0zMEn5ihiuOI/uyQKUFVI5DuCFTPRdZg1W1aRI&#xA;3t7mBzDe2U1BLBMoBMbgEjoQysPhZSGUlSDiqQfmJc+aIbez/wALLPJrnKV4olTnatCsdJfrBdkj&#xA;5DkphHKpeg+zzoqyLQ3V9GsHV7h1a3iYPeKUuWqgNZlIUrIf2hQb4qjcVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVSe1/5S/U/+2fYf8nrzFU4xV2KtMqspVgCpFCDuCDirGbj&#xA;8t/Kc03qi1aKpLMkcjhTXfoSaD5UxVMNN8o+XNNYPa2MYkBqJHrI4PiGcsV+jFU3xV2KpLrelXgu&#xA;U1rR6DV7dOD27NwivIAS31eU9iCSYpP2GJ/ZZ1ZVG6NrFpq1it3bB03KTW8o4ywyps8UqVPF0OxH&#xA;0ioocVRuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVJ7X/lL9T/7Z9h/&#xA;yevMVTjFXYq7FXYq7FXYq7FXYqxXzdXy9Hc+b7CJ5JoEX9K2MKSSG8gQ8RRI1cieIH4HpTj8LkLR&#xA;kVTbyt5jsPMnl3T9dsCfquoQrMimnJCdnjan7SOCre4xVNMVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVSe1/5S/U/+2fYf8nrzFU4xV2KuxV2KuxV2KuxV2KuxVRtbGztBKLWB&#xA;IBPI00wjUKGkf7TkD9pqbnviqtirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irFtI8pXFl+YOv8AmSS5mlt9TtbOG1gaVmiiaLmJgsZNBXijDbqzeJxVlOKuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVhdx+bflC21q5sJ7hktbW&#xA;LlJf+nM0ZlEkiPGnGM+osawuzyISihWqRxNFW7v84/y1tJlgm1uP13bgsMcU8rlquOPCONm5Vjbb&#xA;+oxVl9rcwXVtFdW7iS3nRZYZF6MjjkrD5g4qqYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8ivf+VIfW7v1/rtfVflx/Sv1f0+Vx9Y9Hj+5+q/70+t&#xA;w/dU512xSs/6x5/xZc8PS/xD6919b9L65X1fUb1+XD4Pt1pT6NsVep6J+jv0NYfo3/jnfVofqVeX&#xA;9x6Y9P7fxfYp13xQjcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:FC7F1174072068118DBBC16639B0EF74</stRef:instanceID>
            <stRef:documentID>xmp.did:FC7F1174072068118DBBC16639B0EF74</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:24:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:37:40-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118DBBC16639B0EF74</stEvt:instanceID>
                  <stEvt:when>2010-08-09T17:41:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:FD7F1174072068118DBBC16639B0EF74</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:FD7F1174072068118DBBC16639B0EF74</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>386.725586</stDim:w>
            <stDim:h>315.044922</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ComicSansMS</stFnt:fontName>
                  <stFnt:fontFamily>Comic Sans MS</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.00x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Comic Sans MS.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Myriad Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Splash</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 G=149 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>214</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 G=152 B=237</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>71</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>237</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 G=81 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>42</xmpG:red>
                           <xmpG:green>81</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=58 B=228</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>58</xmpG:green>
                           <xmpG:blue>228</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -273.497 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 273.497 li
427.009 273.497 li
427.009 0 li
cp
clp
[1 0 0 1 0 0 ]ct
166.109 89.1746 mo
168.77 87.7909 li
168.309 86.9036 li
165.647 88.2873 li
166.109 89.1746 li
171.432 86.4073 mo
174.094 85.0236 li
173.633 84.1363 li
170.971 85.5199 li
171.432 86.4073 li
176.756 83.64 mo
179.418 82.2562 li
178.957 81.3689 li
176.295 82.7526 li
176.756 83.64 li
182.08 80.8727 mo
184.741 79.4889 li
184.28 78.6016 li
181.618 79.9853 li
182.08 80.8727 li
187.403 78.1052 mo
190.065 76.7216 li
189.604 75.8343 li
186.942 77.218 li
187.403 78.1052 li
192.727 75.3379 mo
195.389 73.9543 li
194.928 73.067 li
192.266 74.4507 li
192.727 75.3379 li
198.051 72.5706 mo
200.713 71.1869 li
200.251 70.2997 li
197.59 71.6833 li
198.051 72.5706 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.697627 .675227 .638575 .739559 cmyk
f
165.577 89.483 mo
165.577 243.247 li
165.577 89.483 li
.75021 .679683 .670222 .90164 cmyk
f
165.077 89.483 mo
165.077 243.247 li
166.077 243.247 li
166.077 89.483 li
165.077 89.483 li
.697627 .675227 .638575 .739559 cmyk
f
166.602 245.609 mo
167.101 243.956 167.561 242.88 168.094 241.554 cv
163.049 241.554 li
163.274 242.029 164.041 243.956 164.54 245.609 cv
165.075 247.378 165.44 248.983 165.571 250.023 cv
165.702 248.983 166.067 247.378 166.602 245.609 cv
cp
f
329.148 38.2583 mo
143.876 38.2583 li
21.1489 106.924 li
329.148 38.2583 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
329.148 37.7583 mo
143.746 37.7583 li
20.9048 106.488 li
21.3931 107.361 li
144.006 38.7583 li
329.148 38.7583 li
329.148 37.7583 li
.697627 .675227 .638575 .739559 cmyk
f
150.674 69.7514 mo
266.215 194.045 li
150.674 69.7514 li
.75021 .679683 .670222 .90164 cmyk
f
150.308 70.0919 mo
152.35 72.2891 li
153.083 71.6083 li
151.04 69.4111 li
150.308 70.0919 li
154.393 74.4864 mo
156.435 76.6837 li
157.168 76.0029 li
155.125 73.8056 li
154.393 74.4864 li
158.478 78.881 mo
160.52 81.0783 li
161.253 80.3974 li
159.21 78.2001 li
158.478 78.881 li
162.563 83.2756 mo
164.605 85.4728 li
165.338 84.7919 li
163.295 82.5947 li
162.563 83.2756 li
166.648 87.6701 mo
168.69 89.8674 li
169.423 89.1865 li
167.38 86.9892 li
166.648 87.6701 li
170.733 92.0646 mo
172.775 94.2619 li
173.508 93.5811 li
171.465 91.3837 li
170.733 92.0646 li
174.818 96.4592 mo
176.861 98.6564 li
177.593 97.9756 li
175.55 95.7784 li
174.818 96.4592 li
178.903 100.854 mo
180.946 103.051 li
181.678 102.37 li
179.636 100.173 li
178.903 100.854 li
182.988 105.248 mo
185.031 107.446 li
185.763 106.765 li
183.721 104.567 li
182.988 105.248 li
187.073 109.643 mo
189.116 111.84 li
189.848 111.159 li
187.806 108.962 li
187.073 109.643 li
191.158 114.037 mo
193.201 116.235 li
193.933 115.554 li
191.891 113.357 li
191.158 114.037 li
195.243 118.432 mo
197.286 120.629 li
198.018 119.948 li
195.976 117.751 li
195.243 118.432 li
199.329 122.826 mo
201.371 125.024 li
202.104 124.343 li
200.061 122.146 li
199.329 122.826 li
203.414 127.221 mo
205.456 129.418 li
206.189 128.737 li
204.146 126.54 li
203.414 127.221 li
207.499 131.616 mo
209.541 133.813 li
210.274 133.132 li
208.231 130.935 li
207.499 131.616 li
211.584 136.01 mo
213.626 138.207 li
214.359 137.527 li
212.316 135.329 li
211.584 136.01 li
215.669 140.405 mo
217.711 142.602 li
218.444 141.921 li
216.401 139.724 li
215.669 140.405 li
219.754 144.799 mo
221.796 146.996 li
222.529 146.316 li
220.486 144.118 li
219.754 144.799 li
223.839 149.194 mo
225.882 151.391 li
226.614 150.71 li
224.571 148.513 li
223.839 149.194 li
227.924 153.588 mo
229.967 155.786 li
230.699 155.105 li
228.657 152.907 li
227.924 153.588 li
232.009 157.983 mo
234.052 160.18 li
234.784 159.499 li
232.742 157.302 li
232.009 157.983 li
236.094 162.377 mo
238.137 164.575 li
238.869 163.894 li
236.827 161.697 li
236.094 162.377 li
240.179 166.772 mo
242.222 168.969 li
242.954 168.288 li
240.912 166.091 li
240.179 166.772 li
244.264 171.166 mo
246.307 173.364 li
247.039 172.683 li
244.997 170.486 li
244.264 171.166 li
248.349 175.561 mo
250.392 177.758 li
251.124 177.077 li
249.082 174.88 li
248.349 175.561 li
252.435 179.956 mo
254.477 182.153 li
255.21 181.472 li
253.167 179.275 li
252.435 179.956 li
256.52 184.35 mo
258.562 186.547 li
259.295 185.867 li
257.252 183.669 li
256.52 184.35 li
260.605 188.745 mo
262.647 190.942 li
263.38 190.261 li
261.337 188.064 li
260.605 188.745 li
264.69 193.139 mo
265.849 194.386 li
266.581 193.705 li
265.422 192.458 li
264.69 193.139 li
.697627 .675227 .638575 .739559 cmyk
f
266.215 194.045 mo
292.609 222.44 li
.75021 .679683 .670222 .90164 cmyk
f
265.849 194.386 mo
292.243 222.78 li
292.976 222.1 li
266.581 193.705 li
.697627 .675227 .638575 .739559 cmyk
f
295.811 225.033 mo
295.05 223.482 294.655 222.382 294.144 221.047 cv
290.448 224.482 li
290.937 224.676 292.81 225.565 294.301 226.436 cv
295.897 227.368 297.257 228.294 298.062 228.967 cv
297.449 228.117 296.624 226.693 295.811 225.033 cv
cp
f
123.679 90.5268 mo
122.088 90.5268 120.626 90.3774 119.318 90.0768 cv
126.922 83.343 li
157.062 76.6236 li
157.556 77.1553 li
155.105 78.9138 152.494 80.5907 149.754 82.1451 cv
142.839 86.0698 136.123 88.6367 130.332 89.8027 cv
127.94 90.2844 125.705 90.5268 123.679 90.5268 cv
118.167 89.7603 mo
116.892 89.3473 115.796 88.7666 114.907 88.0163 cv
114.907 88.0163 li
114.894 88.0054 114.881 87.9947 114.868 87.9837 cv
114.868 87.9831 114.867 87.9821 114.866 87.9815 cv
114.862 87.9782 114.858 87.9751 114.855 87.9717 cv
114.853 87.9707 114.852 87.9699 114.851 87.9688 cv
114.84 87.959 114.828 87.949 114.817 87.9392 cv
114.815 87.9377 114.814 87.9363 114.812 87.9348 cv
114.809 87.932 114.805 87.9291 114.802 87.9263 cv
114.8 87.9246 114.798 87.9224 114.796 87.9207 cv
114.791 87.917 114.787 87.9134 114.783 87.9096 cv
114.78 87.9068 114.777 87.904 114.773 87.9011 cv
114.771 87.8988 114.769 87.8967 114.766 87.8944 cv
114.763 87.8918 114.76 87.8896 114.757 87.8869 cv
114.755 87.8848 114.753 87.8829 114.751 87.8807 cv
114.747 87.8774 114.743 87.8744 114.74 87.8711 cv
114.738 87.8691 114.735 87.8668 114.733 87.8648 cv
114.729 87.8611 114.725 87.8576 114.72 87.8538 cv
114.718 87.852 114.716 87.8502 114.714 87.8484 cv
114.711 87.8453 114.708 87.8422 114.704 87.8391 cv
114.702 87.8375 114.701 87.8359 114.699 87.8343 cv
114.694 87.8296 114.689 87.825 114.684 87.8203 cv
114.683 87.8199 114.683 87.8198 114.683 87.8194 cv
114.677 87.8148 114.673 87.8104 114.668 87.8057 cv
114.666 87.8044 114.665 87.8036 114.664 87.8023 cv
114.66 87.7983 114.655 87.7942 114.651 87.7902 cv
114.65 87.7893 114.649 87.7884 114.648 87.7875 cv
114.637 87.7774 114.626 87.7673 114.615 87.7572 cv
114.615 87.7565 114.614 87.7561 114.613 87.7554 cv
114.608 87.7504 114.603 87.7455 114.598 87.7406 cv
114.597 87.7404 114.597 87.7404 114.597 87.7402 cv
114.586 87.7296 114.575 87.719 114.564 87.7083 cv
114.563 87.7081 114.563 87.708 114.563 87.7078 cv
114.135 87.2992 113.762 86.8452 113.45 86.3466 cv
124.907 83.7924 li
118.167 89.7603 li
157.556 77.1553 mo
157.062 76.6236 li
158.819 76.232 li
158.403 76.5419 157.982 76.85 157.556 77.1553 cv
.338048 .269108 .266484 3.0518e-05 cmyk
f
113.45 86.3466 mo
113.094 85.7796 112.816 85.1547 112.621 84.4707 cv
110.066 75.5718 122.561 60.0937 140.517 49.9004 cv
147.426 45.9805 154.138 43.4155 159.928 42.25 cv
162.322 41.7679 164.559 41.5252 166.587 41.5252 cv
168.557 41.5252 170.33 41.7544 171.858 42.2156 cv
171.534 42.5013 li
124.907 83.7924 li
113.45 86.3466 li
126.922 83.343 mo
172.202 43.2459 li
172.937 42.597 li
174.28 43.1466 175.388 43.9086 176.221 44.8858 cv
176.181 44.8403 li
176.229 44.8954 176.276 44.9512 176.322 45.0077 cv
176.328 45.0152 li
176.329 45.0167 176.329 45.0167 176.329 45.0167 cv
176.328 45.0152 li
176.459 45.1772 176.583 45.3442 176.7 45.5176 cv
176.7 45.5176 li
176.701 45.5183 176.701 45.5183 176.701 45.5183 cv
176.7 45.5176 li
176.764 45.6127 176.826 45.7097 176.886 45.8084 cv
176.888 45.8116 176.89 45.8149 176.892 45.8182 cv
176.893 45.8202 176.894 45.8222 176.895 45.8242 cv
176.934 45.8891 176.972 45.9548 177.009 46.0212 cv
177.012 46.0268 177.015 46.0325 177.018 46.0381 cv
177.018 46.0381 li
177.019 46.0386 177.019 46.0386 177.019 46.0386 cv
177.018 46.0381 li
177.069 46.1301 177.118 46.2235 177.165 46.3183 cv
177.166 46.3195 177.167 46.3207 177.167 46.3219 cv
177.169 46.3256 177.171 46.3294 177.173 46.3332 cv
177.214 46.4163 177.253 46.5005 177.291 46.5858 cv
177.291 46.5855 li
177.292 46.5861 177.292 46.5861 177.292 46.5861 cv
177.291 46.5855 li
177.376 46.7751 177.453 46.9698 177.522 47.1699 cv
177.522 47.1695 li
177.522 47.17 177.522 47.17 177.522 47.17 cv
177.522 47.1695 li
177.568 47.3023 177.611 47.4371 177.65 47.5742 cv
177.673 47.653 177.694 47.7316 177.714 47.8115 cv
177.714 47.8111 li
177.714 47.8115 177.714 47.8115 177.714 47.8115 cv
177.714 47.8111 li
177.747 47.9415 177.777 48.0731 177.804 48.2057 cv
177.804 48.2057 li
177.804 48.2069 177.804 48.2087 177.804 48.2098 cv
177.804 48.2098 li
177.805 48.2115 177.805 48.2125 177.805 48.2142 cv
177.805 48.2142 li
177.829 48.3351 177.851 48.4567 177.87 48.5797 cv
177.87 48.5797 li
177.908 48.8257 177.937 49.0768 177.955 49.3311 cv
177.955 49.331 li
177.955 49.3311 177.955 49.3311 177.955 49.3311 cv
177.955 49.331 li
177.971 49.5635 177.979 49.7991 177.98 50.038 cv
177.983 57.349 170.335 67.6435 158.819 76.232 cv
157.062 76.6236 li
156.801 76.3433 li
157.168 76.0029 li
155.125 73.8056 li
154.759 74.146 li
152.716 71.9487 li
153.083 71.6083 li
151.04 69.4111 li
150.674 69.7515 li
150.674 69.7514 li
150.308 70.0919 li
152.35 72.2891 li
152.716 71.9487 li
154.759 74.146 li
154.393 74.4864 li
156.435 76.6837 li
156.801 76.3433 li
157.062 76.6236 li
126.922 83.343 li
.337285 .266545 .267094 3.0518e-05 cmyk
f
157.556 77.1553 mo
157.062 76.6236 li
156.801 76.3433 li
157.062 76.6236 li
157.556 77.1553 li
157.556 77.1553 li
154.759 74.146 mo
152.716 71.9487 li
154.759 74.146 li
150.674 69.7514 mo
150.674 69.7514 li
150.674 69.7515 li
.636469 .551324 .533165 .279393 cmyk
f
156.435 76.6837 mo
154.393 74.4864 li
154.759 74.146 li
155.125 73.8056 li
157.168 76.0029 li
156.801 76.3433 li
156.435 76.6837 li
152.35 72.2891 mo
150.308 70.0919 li
150.674 69.7515 li
151.04 69.4111 li
153.083 71.6083 li
152.716 71.9487 li
152.35 72.2891 li
.608026 .524132 .508965 .21445 cmyk
f
gsave
176.181 44.8403 mo
274.941 158.72 li
275.612 159.495 276.109 160.406 276.41 161.455 cv
278.955 170.362 266.469 185.838 248.514 196.025 cv
241.599 199.95 234.883 202.517 229.092 203.683 cv
221.617 205.188 215.683 204.357 212.853 201.094 cv
114.092 87.2144 li
116.922 90.4775 122.857 91.3077 130.332 89.8027 cv
136.123 88.6367 142.839 86.0698 149.754 82.1451 cv
167.709 71.9585 180.195 56.4824 177.65 47.5742 cv
177.349 46.5254 176.853 45.6143 176.181 44.8403 cv
clp
275.088 158.895 mo
222.319 98.0475 li
222.323 98.0457 li
274.941 158.72 li
275.088 158.895 li
221.649 97.275 mo
220.788 96.2814 li
220.791 96.2796 li
221.653 97.2732 li
221.649 97.275 li
200.888 73.3353 mo
199.549 71.7916 li
199.553 71.7899 li
200.891 73.3329 li
200.889 73.3349 200.89 73.3334 200.888 73.3353 cv
198.876 71.0148 mo
196.177 67.9032 li
196.181 67.9023 li
198.879 71.0131 li
198.876 71.0148 li
.389654 .317082 .311955 .0028687 cmyk
f
199.549 71.7916 mo
198.876 71.0148 li
198.879 71.0131 li
199.553 71.7899 li
199.549 71.7916 li
.631556 .561395 .528222 .280247 cmyk
f
196.177 67.9032 mo
176.328 45.0152 li
176.322 45.0077 li
176.276 44.9512 176.229 44.8954 176.181 44.8403 cv
176.221 44.8858 li
196.181 67.9023 li
196.177 67.9032 li
.388586 .315953 .313451 .00277714 cmyk
f
275.46 159.398 mo
222.276 98.0714 li
222.319 98.0475 li
275.088 158.895 li
275.099 158.909 275.111 158.923 275.122 158.937 cv
275.221 159.061 275.315 159.188 275.406 159.318 cv
275.424 159.345 275.442 159.371 275.46 159.398 cv
221.606 97.2989 mo
220.743 96.3041 li
220.788 96.2814 li
221.649 97.275 li
221.606 97.2989 li
200.852 73.3667 mo
199.505 71.8144 li
199.549 71.7916 li
200.888 73.3353 li
200.877 73.3449 200.863 73.3571 200.852 73.3667 cv
198.832 71.0376 mo
196.124 67.9151 li
196.177 67.9032 li
198.876 71.0148 li
198.832 71.0376 li
.380713 .305791 .302739 .00173953 cmyk
f
199.505 71.8144 mo
198.832 71.0376 li
198.876 71.0148 li
199.549 71.7916 li
199.505 71.8144 li
.626978 .548089 .52752 .26511 cmyk
f
196.124 67.9151 mo
176.7 45.5176 li
176.583 45.3442 176.459 45.1772 176.328 45.0152 cv
176.328 45.0152 li
196.177 67.9032 li
196.124 67.9151 li
.380102 .308721 .299565 .00183108 cmyk
f
275.778 159.918 mo
222.186 98.121 li
222.276 98.0714 li
275.46 159.398 li
275.573 159.566 275.68 159.74 275.778 159.918 cv
221.516 97.3485 mo
220.652 96.3516 li
220.743 96.3041 li
221.606 97.2989 li
221.516 97.3485 li
200.775 73.4322 mo
199.414 71.8621 li
199.505 71.8144 li
200.852 73.3667 li
200.827 73.3878 200.8 73.4111 200.775 73.4322 cv
198.74 71.0853 mo
196.012 67.9399 li
196.124 67.9151 li
198.832 71.0376 li
198.74 71.0853 li
.3664 .293095 .290227 .000366217 cmyk
f
199.414 71.8621 mo
198.74 71.0853 li
198.832 71.0376 li
199.505 71.8144 li
199.414 71.8621 li
.619593 .547356 .515679 .247501 cmyk
f
196.012 67.9399 mo
177.018 46.0381 li
177.015 46.0325 177.012 46.0268 177.009 46.0212 cv
176.972 45.9548 176.934 45.8891 176.895 45.8242 cv
176.894 45.8222 176.893 45.8202 176.892 45.8182 cv
176.89 45.8149 176.888 45.8116 176.886 45.8084 cv
176.826 45.7097 176.764 45.6127 176.7 45.5176 cv
176.7 45.5176 li
196.124 67.9151 li
196.012 67.9399 li
.368933 .293309 .293736 .000488289 cmyk
f
276.051 160.465 mo
222.049 98.1964 li
222.186 98.121 li
275.778 159.918 li
275.784 159.929 275.79 159.94 275.796 159.951 cv
275.88 160.104 275.958 160.261 276.031 160.422 cv
276.038 160.436 276.044 160.451 276.051 160.465 cv
221.379 97.4239 mo
220.512 96.4237 li
220.652 96.3516 li
221.516 97.3485 li
221.379 97.4239 li
200.659 73.5315 mo
199.274 71.9345 li
199.414 71.8621 li
200.775 73.4322 li
200.735 73.4667 200.7 73.4971 200.659 73.5315 cv
198.601 71.1577 mo
195.843 67.9777 li
196.012 67.9399 li
198.74 71.0853 li
198.601 71.1577 li
.351781 .283726 .274815 3.0518e-05 cmyk
f
199.274 71.9345 mo
198.601 71.1577 li
198.74 71.0853 li
199.414 71.8621 li
199.274 71.9345 li
.612299 .546471 .503777 .230045 cmyk
f
195.843 67.9777 mo
177.291 46.5855 li
177.253 46.5005 177.214 46.4163 177.173 46.3332 cv
177.171 46.3294 177.169 46.3256 177.167 46.3219 cv
177.167 46.3207 177.166 46.3195 177.165 46.3183 cv
177.118 46.2235 177.069 46.1301 177.018 46.0381 cv
177.018 46.0381 li
196.012 67.9399 li
195.843 67.9777 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
276.282 161.049 mo
221.863 98.2991 li
222.049 98.1964 li
276.051 160.465 li
276.057 160.48 276.064 160.495 276.07 160.51 cv
276.147 160.685 276.217 160.864 276.282 161.049 cv
221.193 97.5266 mo
220.322 96.5219 li
220.512 96.4237 li
221.379 97.4239 li
221.193 97.5266 li
200.501 73.6666 mo
199.085 72.0332 li
199.274 71.9345 li
200.659 73.5315 li
200.608 73.5755 200.552 73.6228 200.501 73.6666 cv
198.411 71.2564 mo
195.612 68.0292 li
195.843 67.9777 li
198.601 71.1577 li
198.411 71.2564 li
.341375 .27158 .269108 3.0518e-05 cmyk
f
199.085 72.0332 mo
198.411 71.2564 li
198.601 71.1577 li
199.274 71.9345 li
199.085 72.0332 li
.607477 .531609 .504021 .216007 cmyk
f
195.612 68.0292 mo
177.522 47.1695 li
177.453 46.9698 177.376 46.7751 177.291 46.5858 cv
177.291 46.5855 li
195.843 67.9777 li
195.612 68.0292 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
276.474 161.691 mo
221.616 98.4352 li
221.863 98.2991 li
276.282 161.049 li
276.328 161.181 276.371 161.317 276.41 161.455 cv
276.41 161.455 li
276.474 161.691 li
220.947 97.6626 mo
220.07 96.652 li
220.322 96.5219 li
221.193 97.5266 li
220.947 97.6626 li
200.291 73.8449 mo
198.833 72.1638 li
199.085 72.0332 li
200.501 73.6666 li
200.43 73.7275 200.363 73.7843 200.291 73.8449 cv
198.16 71.387 mo
195.307 68.0973 li
195.612 68.0292 li
198.411 71.2564 li
198.16 71.387 li
.328618 .260868 .258091 3.0518e-05 cmyk
f
198.833 72.1638 mo
198.16 71.387 li
198.411 71.2564 li
199.085 72.0332 li
198.833 72.1638 li
.602045 .518151 .503777 .203189 cmyk
f
195.307 68.0973 mo
177.714 47.8111 li
177.694 47.7316 177.673 47.653 177.65 47.5742 cv
177.611 47.4371 177.568 47.3023 177.522 47.1699 cv
177.522 47.1695 li
195.612 68.0292 li
195.307 68.0973 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
276.621 162.404 mo
221.298 98.6108 li
221.616 98.4352 li
276.474 161.691 li
276.479 161.71 276.483 161.73 276.488 161.749 cv
276.541 161.964 276.585 162.182 276.621 162.404 cv
220.628 97.8383 mo
219.745 96.8199 li
220.07 96.652 li
220.947 97.6626 li
220.628 97.8383 li
200.019 74.0743 mo
198.509 72.3325 li
198.833 72.1638 li
200.291 73.8449 li
200.202 73.9207 200.109 73.9991 200.019 74.0743 cv
197.835 71.5557 mo
194.912 68.1852 li
195.307 68.0973 li
198.16 71.387 li
197.835 71.5557 li
.316472 .254215 .244816 3.0518e-05 cmyk
f
198.509 72.3325 mo
197.835 71.5557 li
198.16 71.387 li
198.833 72.1638 li
198.509 72.3325 li
.592645 .51693 .489876 .187655 cmyk
f
194.912 68.1852 mo
177.861 48.524 li
177.845 48.42 177.826 48.3167 177.805 48.2142 cv
177.805 48.2142 li
177.805 48.2125 177.805 48.2115 177.804 48.2098 cv
177.804 48.2098 li
177.804 48.2084 177.804 48.2071 177.804 48.2057 cv
177.804 48.2057 li
177.777 48.0731 177.747 47.9415 177.714 47.8115 cv
177.714 47.8111 li
195.307 68.0973 li
194.912 68.1852 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
276.715 163.211 mo
220.888 98.8371 li
221.298 98.6108 li
276.621 162.404 li
276.664 162.668 276.695 162.937 276.714 163.211 cv
220.218 98.0646 mo
219.326 97.0363 li
219.745 96.8199 li
220.628 97.8383 li
220.218 98.0646 li
199.668 74.3686 mo
198.091 72.5499 li
198.509 72.3325 li
200.019 74.0743 li
199.903 74.1722 199.784 74.2716 199.668 74.3686 cv
197.964 72.4043 mo
194.404 68.2985 li
194.912 68.1852 li
197.835 71.5557 li
197.59 71.6833 li
197.964 72.4043 li
.307622 .24152 .239048 3.0518e-05 cmyk
f
198.091 72.5499 mo
197.964 72.4043 li
197.59 71.6833 li
197.835 71.5557 li
198.509 72.3325 li
198.091 72.5499 li
.586633 .510796 .484047 .176638 cmyk
f
194.404 68.2985 mo
177.955 49.331 li
177.937 49.0768 177.908 48.8257 177.87 48.5797 cv
177.87 48.5797 li
177.867 48.5611 177.864 48.5425 177.861 48.524 cv
194.912 68.1852 li
194.404 68.2985 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
276.737 164.15 mo
220.352 99.1326 li
220.888 98.8371 li
276.715 163.211 li
276.736 163.518 276.744 163.831 276.737 164.15 cv
219.682 98.3601 mo
218.779 97.3189 li
219.326 97.0363 li
220.218 98.0646 li
219.682 98.3601 li
199.207 74.7505 mo
193.74 68.4465 li
194.404 68.2985 li
197.964 72.4043 li
198.051 72.5706 li
198.091 72.5499 li
199.668 74.3686 li
199.513 74.4974 199.362 74.6231 199.207 74.7505 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
198.051 72.5706 mo
197.964 72.4043 li
198.091 72.5499 li
198.051 72.5706 li
.578485 .502251 .475471 .16025 cmyk
f
193.74 68.4465 mo
177.977 50.2706 li
177.979 50.1928 177.98 50.1152 177.98 50.038 cv
177.979 49.7991 177.971 49.5635 177.955 49.3311 cv
177.955 49.331 li
194.404 68.2985 li
193.74 68.4465 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
276.635 165.451 mo
219.52 99.5914 li
220.352 99.1326 li
276.737 164.15 li
276.734 164.265 276.73 164.381 276.724 164.497 cv
276.707 164.81 276.677 165.128 276.635 165.451 cv
218.85 98.8189 mo
217.93 97.7576 li
218.779 97.3189 li
219.682 98.3601 li
218.85 98.8189 li
198.487 75.3378 mo
192.71 68.6762 li
193.74 68.4465 li
199.207 74.7505 li
198.967 74.948 198.727 75.1437 198.487 75.3378 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
192.71 68.6762 mo
177.875 51.5703 li
177.934 51.1283 177.968 50.6944 177.977 50.2707 cv
193.74 68.4465 li
192.71 68.6762 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
276.129 167.774 mo
217.815 100.532 li
219.52 99.5914 li
276.635 165.451 li
276.548 166.105 276.407 166.779 276.216 167.47 cv
276.188 167.57 276.159 167.673 276.129 167.774 cv
217.145 99.7593 mo
216.189 98.6568 li
217.93 97.7576 li
218.85 98.8189 li
217.145 99.7593 li
196.993 76.5217 mo
194.96 74.1774 li
195.389 73.9543 li
194.928 73.067 li
194.286 73.4005 li
190.597 69.1471 li
192.71 68.6762 li
198.487 75.3378 li
197.991 75.7388 197.491 76.1349 196.993 76.5217 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
194.96 74.1774 mo
194.286 73.4005 li
194.928 73.067 li
195.389 73.9543 li
194.96 74.1774 li
.566369 .482063 .469001 .137972 cmyk
f
190.597 69.1471 mo
177.369 53.8935 li
177.606 53.0966 177.776 52.321 177.875 51.5705 cv
192.71 68.6762 li
190.597 69.1471 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
274.697 171.342 mo
214.753 102.221 li
217.815 100.532 li
276.129 167.774 li
276.056 168.019 275.977 168.265 275.892 168.514 cv
275.892 168.515 275.891 168.516 275.891 168.516 cv
275.888 168.526 275.884 168.535 275.881 168.545 cv
275.88 168.547 275.88 168.549 275.879 168.551 cv
275.876 168.559 275.873 168.568 275.871 168.575 cv
275.87 168.578 275.869 168.581 275.868 168.584 cv
275.865 168.592 275.863 168.599 275.86 168.607 cv
275.859 168.61 275.858 168.613 275.857 168.616 cv
275.853 168.626 275.85 168.635 275.847 168.645 cv
275.844 168.65 275.842 168.656 275.84 168.662 cv
275.839 168.666 275.838 168.67 275.836 168.674 cv
275.834 168.68 275.832 168.686 275.83 168.692 cv
275.828 168.696 275.827 168.7 275.826 168.704 cv
275.823 168.71 275.821 168.717 275.819 168.723 cv
275.818 168.726 275.816 168.73 275.815 168.733 cv
275.813 168.74 275.811 168.746 275.808 168.753 cv
275.807 168.755 275.806 168.758 275.805 168.76 cv
275.8 168.776 275.794 168.792 275.788 168.808 cv
275.788 168.809 275.788 168.809 275.788 168.809 cv
275.786 168.816 275.783 168.822 275.781 168.828 cv
275.78 168.833 275.778 168.836 275.777 168.84 cv
275.775 168.846 275.773 168.851 275.771 168.857 cv
275.769 168.862 275.767 168.867 275.765 168.872 cv
275.764 168.877 275.762 168.882 275.76 168.887 cv
275.758 168.892 275.756 168.898 275.754 168.903 cv
275.752 168.908 275.75 168.913 275.749 168.917 cv
275.741 168.937 275.733 168.959 275.726 168.979 cv
275.725 168.981 275.725 168.982 275.724 168.984 cv
275.721 168.993 275.717 169.002 275.714 169.012 cv
275.713 169.013 275.713 169.015 275.712 169.016 cv
275.429 169.776 275.09 170.553 274.697 171.342 cv
214.083 101.448 mo
213.063 100.271 li
216.189 98.6568 li
217.145 99.7593 li
214.083 101.448 li
194.25 78.5778 mo
186.805 69.9927 li
190.597 69.1471 li
194.286 73.4005 li
192.266 74.4507 li
192.727 75.3379 li
194.96 74.1774 li
196.993 76.5217 li
196.081 77.2304 195.166 77.9157 194.25 78.5778 cv
.262028 .204318 .201663 3.0518e-05 cmyk
f
192.727 75.3379 mo
192.266 74.4507 li
194.286 73.4005 li
194.96 74.1774 li
192.727 75.3379 li
.557519 .479713 .456031 .123964 cmyk
f
186.805 69.9927 mo
175.938 57.4619 li
176.129 57.078 176.307 56.6971 176.472 56.3195 cv
176.474 56.3153 176.476 56.311 176.478 56.3067 cv
176.48 56.3016 176.482 56.2964 176.485 56.2912 cv
176.488 56.2834 176.491 56.2766 176.495 56.2688 cv
176.495 56.2676 176.496 56.2665 176.496 56.2654 cv
176.848 55.4574 177.14 54.666 177.369 53.8935 cv
190.597 69.1471 li
186.805 69.9927 li
.260136 .206882 .197757 3.0518e-05 cmyk
f
272.66 174.844 mo
211.321 104.114 li
214.753 102.221 li
274.697 171.342 li
274.127 172.486 273.446 173.657 272.66 174.844 cv
210.651 103.341 mo
209.558 102.082 li
213.063 100.271 li
214.083 101.448 li
210.651 103.341 li
191.08 80.7746 mo
188.342 77.6172 li
190.065 76.7216 li
189.604 75.8343 li
187.669 76.8404 li
182.552 70.9408 li
186.805 69.9927 li
194.25 78.5778 li
193.193 79.3412 192.14 80.0711 191.08 80.7746 cv
.273808 .214054 .211551 3.0518e-05 cmyk
f
188.342 77.6172 mo
187.669 76.8404 li
189.604 75.8343 li
190.065 76.7216 li
188.342 77.6172 li
.566369 .482063 .469001 .137972 cmyk
f
182.552 70.9408 mo
173.9 60.9643 li
174.571 59.9514 175.166 58.9498 175.68 57.9668 cv
175.768 57.7979 175.854 57.6297 175.938 57.4619 cv
186.805 69.9927 li
182.552 70.9408 li
.273625 .211978 .212619 3.0518e-05 cmyk
f
270.922 177.278 mo
208.717 105.55 li
211.321 104.114 li
272.66 174.844 li
272.127 175.649 271.547 176.461 270.922 177.278 cv
208.047 104.777 mo
206.9 103.455 li
209.558 102.082 li
210.651 103.341 li
208.047 104.777 li
188.609 82.3628 mo
179.327 71.6598 li
182.552 70.9408 li
187.669 76.8404 li
186.942 77.218 li
187.403 78.1052 li
188.342 77.6172 li
191.08 80.7746 li
190.257 81.3215 189.433 81.8509 188.609 82.3628 cv
.285649 .223758 .216892 3.0518e-05 cmyk
f
187.403 78.1052 mo
186.942 77.218 li
187.669 76.8404 li
188.342 77.6172 li
187.403 78.1052 li
.572229 .495827 .470314 .149874 cmyk
f
179.327 71.6598 mo
172.162 63.398 li
172.436 63.0411 172.7 62.6859 172.956 62.3308 cv
172.958 62.3268 172.961 62.3229 172.964 62.319 cv
172.97 62.3106 172.975 62.3032 172.981 62.2949 cv
172.986 62.288 172.991 62.2811 172.996 62.2742 cv
173 62.2697 173.004 62.2642 173.007 62.2597 cv
173.014 62.2503 173.02 62.2409 173.027 62.2315 cv
173.029 62.2293 173.031 62.2265 173.032 62.2243 cv
173.04 62.2138 173.047 62.2034 173.055 62.193 cv
173.056 62.1915 173.057 62.19 173.058 62.1885 cv
173.066 62.177 173.074 62.1654 173.082 62.1539 cv
173.083 62.1534 li
173.091 62.1413 173.1 62.1293 173.109 62.1173 cv
173.109 62.1172 li
173.177 62.0205 173.246 61.9238 173.313 61.8272 cv
173.314 61.8265 li
173.322 61.8148 173.33 61.803 173.338 61.7913 cv
173.339 61.7898 173.34 61.7884 173.341 61.7869 cv
173.349 61.7766 173.356 61.7664 173.363 61.7562 cv
173.368 61.7494 173.372 61.7428 173.377 61.736 cv
173.381 61.7306 173.384 61.7252 173.388 61.7198 cv
173.564 61.467 173.734 61.2158 173.9 60.9644 cv
182.552 70.9408 li
179.327 71.6598 li
.286686 .222904 .216983 3.0518e-05 cmyk
f
269.146 179.466 mo
206.233 106.92 li
208.717 105.55 li
270.922 177.278 li
270.365 178.005 269.772 178.735 269.146 179.466 cv
205.762 106.038 mo
205.467 106.038 li
204.364 104.765 li
206.9 103.455 li
208.047 104.777 li
205.762 106.038 li
186.195 83.8142 mo
183.158 80.3122 li
184.741 79.4889 li
184.28 78.6016 li
182.484 79.5353 li
176.249 72.3459 li
179.327 71.6598 li
188.609 82.3628 li
187.805 82.862 186.998 83.3472 186.195 83.8142 cv
.295506 .23154 .228885 3.0518e-05 cmyk
f
183.158 80.3122 mo
182.484 79.5353 li
184.28 78.6016 li
184.741 79.4889 li
183.158 80.3122 li
.578485 .502251 .475471 .16025 cmyk
f
176.249 72.3459 mo
170.387 65.5859 li
170.741 65.1721 171.085 64.7585 171.418 64.3456 cv
171.421 64.3411 171.424 64.3373 171.428 64.3327 cv
171.432 64.3273 171.437 64.3219 171.441 64.3165 cv
171.687 64.0104 171.928 63.7033 172.162 63.398 cv
179.327 71.6598 li
176.249 72.3459 li
.296666 .230472 .231113 3.0518e-05 cmyk
f
267.281 181.541 mo
202.67 107.038 li
206.019 107.038 li
206.233 106.92 li
269.146 179.466 li
268.554 180.157 267.932 180.849 267.281 181.54 cv
205.467 106.038 mo
201.9 106.038 li
204.364 104.765 li
205.467 106.038 li
183.731 85.1987 mo
173.178 73.0306 li
176.249 72.3459 li
182.484 79.5353 li
181.618 79.9853 li
182.08 80.8727 li
183.158 80.3122 li
186.195 83.8142 li
185.371 84.2931 184.553 84.7526 183.731 85.1987 cv
.307622 .24152 .239048 3.0518e-05 cmyk
f
182.08 80.8727 mo
181.618 79.9853 li
182.484 79.5353 li
183.158 80.3122 li
182.08 80.8727 li
.586633 .510796 .484047 .176638 cmyk
f
173.178 73.0306 mo
168.521 67.6602 li
169.037 67.1125 169.536 66.5635 170.015 66.0153 cv
170.019 66.0112 170.022 66.007 170.026 66.003 cv
170.031 65.9976 170.035 65.9925 170.04 65.9872 cv
170.047 65.9787 170.054 65.9702 170.062 65.9617 cv
170.063 65.9602 170.065 65.9582 170.066 65.9566 cv
170.174 65.8331 170.281 65.7095 170.387 65.5859 cv
176.249 72.3459 li
173.178 73.0306 li
.305791 .243992 .23563 3.0518e-05 cmyk
f
265.295 183.558 mo
199.237 107.387 li
199.287 107.387 li
199.964 107.038 li
202.67 107.038 li
267.281 181.541 li
266.646 182.214 265.982 182.888 265.294 183.557 cv
181.161 86.5432 mo
178.057 82.9638 li
179.418 82.2562 li
178.957 81.3689 li
177.383 82.1869 li
170.048 73.7286 li
173.178 73.0306 li
183.731 85.1987 li
182.873 85.6644 182.016 86.112 181.161 86.5432 cv
.316472 .254215 .244816 3.0518e-05 cmyk
f
178.057 82.9638 mo
177.383 82.1869 li
178.957 81.3689 li
179.418 82.2562 li
178.057 82.9638 li
.592645 .51693 .489876 .187655 cmyk
f
170.048 73.7286 mo
166.535 69.6777 li
166.573 69.6399 166.612 69.6019 166.651 69.5641 cv
167.135 69.091 167.606 68.6163 168.063 68.1409 cv
168.066 68.1378 168.069 68.1345 168.072 68.1314 cv
168.076 68.1276 168.08 68.1229 168.084 68.1191 cv
168.221 67.9767 168.357 67.8342 168.491 67.6916 cv
168.501 67.6817 168.512 67.6701 168.521 67.6602 cv
173.178 73.0306 li
170.048 73.7286 li
.314305 .252323 .243046 3.0518e-05 cmyk
f
263.168 185.544 mo
195.388 107.387 li
199.237 107.387 li
265.295 183.558 li
264.61 184.223 263.901 184.886 263.168 185.544 cv
178.45 87.8564 mo
166.821 74.4478 li
170.048 73.7286 li
177.383 82.1869 li
176.295 82.7526 li
176.756 83.64 li
178.057 82.9638 li
181.161 86.5432 li
180.256 86.9994 179.351 87.4374 178.45 87.8564 cv
.328618 .260868 .258091 3.0518e-05 cmyk
f
176.756 83.64 mo
176.295 82.7526 li
177.383 82.1869 li
178.057 82.9638 li
176.756 83.64 li
.602045 .518151 .503777 .203189 cmyk
f
166.821 74.4478 mo
164.408 71.6646 li
164.595 71.4962 164.781 71.3275 164.966 71.1586 cv
164.971 71.154 164.974 71.1507 164.979 71.1461 cv
164.984 71.1421 164.988 71.1381 164.993 71.134 cv
165.415 70.7471 165.828 70.3587 166.233 69.9692 cv
166.238 69.9648 166.242 69.9603 166.247 69.9558 cv
166.249 69.9545 li
166.344 69.8623 166.44 69.77 166.535 69.6777 cv
170.048 73.7286 li
166.821 74.4478 li
.328038 .258183 .258762 3.0518e-05 cmyk
f
260.893 187.506 mo
191.411 107.387 li
195.388 107.387 li
263.168 185.544 li
262.433 186.203 261.673 186.858 260.892 187.506 cv
175.581 89.1337 mo
172.662 85.7681 li
174.094 85.0236 li
173.633 84.1363 li
171.988 84.9912 li
163.489 75.1908 li
166.821 74.4478 li
178.45 87.8564 li
177.49 88.3024 176.533 88.7282 175.581 89.1337 cv
.341375 .27158 .269108 3.0518e-05 cmyk
f
172.662 85.7681 mo
171.988 84.9912 li
173.633 84.1363 li
174.094 85.0236 li
172.662 85.7681 li
.607477 .531609 .504021 .216007 cmyk
f
163.489 75.1908 mo
162.132 73.6264 li
162.778 73.0911 163.41 72.5498 164.024 72.0064 cv
164.027 72.0035 164.031 72.0007 164.034 71.9979 cv
164.04 71.9919 164.046 71.9865 164.053 71.9805 cv
164.172 71.8753 164.29 71.77 164.408 71.6646 cv
166.821 74.4478 li
163.489 75.1908 li
.342229 .27039 .270878 3.0518e-05 cmyk
f
258.443 189.457 mo
217.765 142.552 li
218.078 142.261 li
220.12 144.459 li
219.754 144.799 li
221.796 146.996 li
222.163 146.656 li
224.205 148.853 li
223.839 149.194 li
225.882 151.391 li
226.248 151.051 li
228.29 153.248 li
227.924 153.588 li
229.967 155.786 li
230.333 155.445 li
232.375 157.642 li
232.009 157.983 li
234.052 160.18 li
234.418 159.84 li
236.46 162.037 li
236.094 162.377 li
238.137 164.575 li
238.503 164.234 li
240.546 166.432 li
240.179 166.772 li
242.222 168.969 li
242.588 168.629 li
244.631 170.826 li
244.264 171.166 li
246.307 173.364 li
246.673 173.023 li
248.716 175.221 li
248.349 175.561 li
250.392 177.758 li
250.758 177.418 li
252.801 179.615 li
252.435 179.956 li
254.477 182.153 li
254.843 181.812 li
256.886 184.01 li
256.52 184.35 li
258.562 186.547 li
258.928 186.207 li
260.464 187.859 li
259.943 188.285 259.411 188.709 258.871 189.128 cv
258.729 189.238 258.586 189.348 258.443 189.457 cv
260.464 187.859 mo
258.928 186.207 li
259.295 185.867 li
257.252 183.669 li
256.886 184.01 li
254.843 181.812 li
255.21 181.472 li
253.167 179.275 li
252.801 179.615 li
250.758 177.418 li
251.124 177.077 li
249.082 174.88 li
248.716 175.221 li
246.673 173.023 li
247.039 172.683 li
244.997 170.486 li
244.631 170.826 li
242.588 168.629 li
242.954 168.288 li
240.912 166.091 li
240.546 166.432 li
238.503 164.234 li
238.869 163.894 li
236.827 161.697 li
236.46 162.037 li
234.418 159.84 li
234.784 159.499 li
232.742 157.302 li
232.375 157.642 li
230.333 155.445 li
230.699 155.105 li
228.657 152.907 li
228.29 153.248 li
226.248 151.051 li
226.614 150.71 li
224.571 148.513 li
224.205 148.853 li
222.163 146.656 li
222.529 146.316 li
220.486 144.118 li
220.12 144.459 li
218.078 142.261 li
218.444 141.921 li
216.401 139.724 li
216.035 140.064 li
213.993 137.867 li
214.359 137.527 li
212.316 135.329 li
211.95 135.67 li
209.907 133.472 li
210.274 133.132 li
208.231 130.935 li
207.932 131.213 li
205.965 128.945 li
206.189 128.737 li
204.146 126.54 li
203.998 126.677 li
202.032 124.41 li
202.104 124.343 li
200.172 122.265 li
187.269 107.387 li
191.411 107.387 li
260.893 187.506 li
260.75 187.624 260.608 187.741 260.464 187.859 cv
215.799 140.284 mo
213.832 138.016 li
213.993 137.867 li
216.035 140.064 li
215.799 140.284 li
211.865 135.748 mo
209.899 133.481 li
209.907 133.472 li
211.95 135.67 li
211.865 135.748 li
172.517 90.3761 mo
160.019 75.9644 li
163.489 75.1908 li
171.988 84.9912 li
170.971 85.5199 li
171.432 86.4073 li
172.662 85.7681 li
175.581 89.1337 li
174.554 89.5706 173.533 89.9842 172.517 90.3761 cv
.351781 .283726 .274815 3.0518e-05 cmyk
f
171.432 86.4073 mo
170.971 85.5199 li
171.988 84.9912 li
172.662 85.7681 li
171.432 86.4073 li
.612299 .546471 .503777 .230045 cmyk
f
160.019 75.9644 mo
159.684 75.5781 li
159.708 75.5594 159.734 75.5391 159.759 75.5204 cv
160.285 75.1166 160.802 74.7097 161.31 74.2996 cv
161.587 74.0761 161.861 73.8518 162.132 73.6266 cv
163.489 75.1908 li
160.019 75.9644 li
.352728 .284489 .275578 3.0518e-05 cmyk
f
260.464 187.859 mo
258.928 186.207 li
260.464 187.859 li
260.464 187.859 li
256.886 184.01 mo
254.843 181.812 li
256.886 184.01 li
252.801 179.615 mo
250.758 177.418 li
252.801 179.615 li
248.716 175.221 mo
246.673 173.023 li
248.716 175.221 li
244.631 170.826 mo
242.588 168.629 li
244.631 170.826 li
240.546 166.432 mo
238.503 164.234 li
240.546 166.432 li
236.46 162.037 mo
234.418 159.84 li
236.46 162.037 li
232.375 157.642 mo
230.333 155.445 li
232.375 157.642 li
228.29 153.248 mo
226.248 151.051 li
228.29 153.248 li
224.205 148.853 mo
222.163 146.656 li
224.205 148.853 li
220.12 144.459 mo
218.078 142.261 li
220.12 144.459 li
216.035 140.064 mo
213.993 137.867 li
216.035 140.064 li
211.95 135.67 mo
209.907 133.472 li
211.95 135.67 li
.642725 .56643 .536248 .301579 cmyk
f
258.562 186.547 mo
256.52 184.35 li
256.886 184.01 li
257.252 183.669 li
259.295 185.867 li
258.928 186.207 li
258.562 186.547 li
254.477 182.153 mo
252.435 179.956 li
252.801 179.615 li
253.167 179.275 li
255.21 181.472 li
254.843 181.812 li
254.477 182.153 li
250.392 177.758 mo
248.349 175.561 li
248.716 175.221 li
249.082 174.88 li
251.124 177.077 li
250.758 177.418 li
250.392 177.758 li
246.307 173.364 mo
244.264 171.166 li
244.631 170.826 li
244.997 170.486 li
247.039 172.683 li
246.673 173.023 li
246.307 173.364 li
242.222 168.969 mo
240.179 166.772 li
240.546 166.432 li
240.912 166.091 li
242.954 168.288 li
242.588 168.629 li
242.222 168.969 li
238.137 164.575 mo
236.094 162.377 li
236.46 162.037 li
236.827 161.697 li
238.869 163.894 li
238.503 164.234 li
238.137 164.575 li
234.052 160.18 mo
232.009 157.983 li
232.375 157.642 li
232.742 157.302 li
234.784 159.499 li
234.418 159.84 li
234.052 160.18 li
229.967 155.786 mo
227.924 153.588 li
228.29 153.248 li
228.657 152.907 li
230.699 155.105 li
230.333 155.445 li
229.967 155.786 li
225.882 151.391 mo
223.839 149.194 li
224.205 148.853 li
224.571 148.513 li
226.614 150.71 li
226.248 151.051 li
225.882 151.391 li
221.796 146.996 mo
219.754 144.799 li
220.12 144.459 li
220.486 144.118 li
222.529 146.316 li
222.163 146.656 li
221.796 146.996 li
217.765 142.552 mo
215.799 140.284 li
216.035 140.064 li
216.401 139.724 li
218.444 141.921 li
218.078 142.261 li
217.765 142.552 li
213.832 138.016 mo
211.865 135.748 li
211.95 135.67 li
212.316 135.329 li
214.359 137.527 li
213.993 137.867 li
213.832 138.016 li
209.899 133.481 mo
207.932 131.213 li
208.231 130.935 li
210.274 133.132 li
209.907 133.472 li
209.899 133.481 li
205.965 128.945 mo
203.998 126.677 li
204.146 126.54 li
206.189 128.737 li
205.965 128.945 li
202.032 124.41 mo
200.172 122.265 li
202.104 124.343 li
202.032 124.41 li
.612299 .546471 .503777 .230045 cmyk
f
255.816 191.392 mo
182.965 107.387 li
184.976 107.387 li
185.031 107.446 li
185.094 107.387 li
185.659 107.387 li
187.44 109.302 li
187.073 109.643 li
189.116 111.84 li
189.482 111.5 li
191.525 113.697 li
191.158 114.037 li
193.201 116.235 li
193.567 115.894 li
195.61 118.091 li
195.243 118.432 li
197.286 120.629 li
197.652 120.289 li
199.695 122.486 li
199.329 122.826 li
201.371 125.024 li
201.737 124.683 li
203.78 126.881 li
203.414 127.221 li
205.456 129.418 li
205.822 129.078 li
207.865 131.275 li
207.499 131.616 li
209.541 133.813 li
209.899 133.481 li
211.865 135.748 li
211.584 136.01 li
213.626 138.207 li
213.832 138.016 li
215.799 140.284 li
215.669 140.405 li
217.711 142.602 li
217.765 142.552 li
258.443 189.457 li
258.058 189.753 257.669 190.046 257.275 190.337 cv
256.795 190.692 256.308 191.043 255.816 191.391 cv
207.865 131.275 mo
205.822 129.078 li
205.965 128.945 li
207.932 131.213 li
207.865 131.275 li
203.78 126.881 mo
201.737 124.683 li
202.032 124.41 li
203.998 126.677 li
203.78 126.881 li
199.695 122.486 mo
197.652 120.289 li
198.018 119.948 li
195.976 117.751 li
195.61 118.091 li
193.567 115.894 li
193.933 115.554 li
191.891 113.357 li
191.525 113.697 li
189.482 111.5 li
189.848 111.159 li
187.806 108.962 li
187.44 109.302 li
185.659 107.387 li
187.269 107.387 li
200.172 122.265 li
200.061 122.146 li
199.695 122.486 li
169.247 91.5696 mo
166.84 88.7943 li
167.415 88.4954 li
168.69 89.8674 li
169.057 89.5269 li
170.534 91.1159 li
170.104 91.2709 169.675 91.4222 169.247 91.5696 cv
170.534 91.1159 mo
169.057 89.5269 li
169.423 89.1865 li
168.336 88.0169 li
168.77 87.7909 li
168.309 86.9036 li
167.629 87.257 li
167.38 86.9892 li
167.014 87.3297 li
164.972 85.1324 li
165.338 84.7919 li
163.295 82.5947 li
162.929 82.9351 li
160.887 80.7378 li
161.253 80.3974 li
159.21 78.2001 li
158.844 78.5405 li
157.556 77.1553 li
157.64 77.0955 157.724 77.0346 157.807 76.9746 cv
157.808 76.9742 157.808 76.9738 157.809 76.9734 cv
157.82 76.9656 157.83 76.958 157.841 76.9503 cv
157.85 76.9438 157.859 76.9374 157.867 76.931 cv
157.87 76.9288 157.874 76.9266 157.876 76.9244 cv
158.193 76.6949 158.508 76.464 158.819 76.2319 cv
160.019 75.9644 li
172.517 90.3761 li
171.854 90.6317 171.192 90.8786 170.534 91.1159 cv
166.166 88.0174 mo
157.056 77.5118 li
157.076 77.4971 157.097 77.4825 157.118 77.4678 cv
157.12 77.4664 157.122 77.4647 157.124 77.4633 cv
157.133 77.4571 157.142 77.4509 157.15 77.4447 cv
157.287 77.3481 157.421 77.2524 157.556 77.1553 cv
158.844 78.5405 li
158.478 78.881 li
160.52 81.0783 li
160.887 80.7378 li
162.929 82.9351 li
162.563 83.2756 li
164.605 85.4728 li
164.972 85.1324 li
167.014 87.3297 li
166.648 87.6701 li
166.709 87.7355 li
166.166 88.0174 li
.3664 .293095 .290227 .000366217 cmyk
f
166.84 88.7943 mo
166.166 88.0174 li
166.709 87.7355 li
167.415 88.4954 li
166.84 88.7943 li
168.336 88.0169 mo
167.629 87.257 li
168.309 86.9036 li
168.77 87.7909 li
168.336 88.0169 li
.619593 .547356 .515679 .247501 cmyk
f
158.819 76.2319 mo
159.101 76.0214 159.381 75.8099 159.658 75.5974 cv
159.667 75.5909 159.675 75.5846 159.684 75.5781 cv
160.019 75.9644 li
158.819 76.2319 li
.368933 .293309 .293736 .000488289 cmyk
f
207.865 131.275 mo
205.822 129.078 li
207.865 131.275 li
203.78 126.881 mo
201.737 124.683 li
203.78 126.881 li
199.695 122.486 mo
197.652 120.289 li
199.695 122.486 li
195.61 118.091 mo
193.567 115.894 li
195.61 118.091 li
191.525 113.697 mo
189.482 111.5 li
191.525 113.697 li
187.44 109.302 mo
185.659 107.387 li
187.44 109.302 li
170.534 91.1159 mo
169.057 89.5269 li
170.534 91.1159 li
170.534 91.1159 li
167.014 87.3297 mo
164.972 85.1324 li
167.014 87.3297 li
162.929 82.9351 mo
160.887 80.7378 li
162.929 82.9351 li
158.844 78.5405 mo
157.556 77.1553 li
157.556 77.1553 li
158.844 78.5405 li
.650233 .565515 .550591 .320226 cmyk
f
217.711 142.602 mo
215.669 140.405 li
215.799 140.284 li
217.765 142.552 li
217.711 142.602 li
213.626 138.207 mo
211.584 136.01 li
211.865 135.748 li
213.832 138.016 li
213.626 138.207 li
209.541 133.813 mo
207.499 131.616 li
207.865 131.275 li
207.932 131.213 li
209.899 133.481 li
209.541 133.813 li
205.456 129.418 mo
203.414 127.221 li
203.78 126.881 li
203.998 126.677 li
205.965 128.945 li
205.822 129.078 li
205.456 129.418 li
201.371 125.024 mo
199.329 122.826 li
199.695 122.486 li
200.061 122.146 li
200.172 122.265 li
202.032 124.41 li
201.737 124.683 li
201.371 125.024 li
197.286 120.629 mo
195.243 118.432 li
195.61 118.091 li
195.976 117.751 li
198.018 119.948 li
197.652 120.289 li
197.286 120.629 li
193.201 116.235 mo
191.158 114.037 li
191.525 113.697 li
191.891 113.357 li
193.933 115.554 li
193.567 115.894 li
193.201 116.235 li
189.116 111.84 mo
187.073 109.643 li
187.44 109.302 li
187.806 108.962 li
189.848 111.159 li
189.482 111.5 li
189.116 111.84 li
185.031 107.446 mo
184.976 107.387 li
185.094 107.387 li
185.031 107.446 li
168.69 89.8674 mo
167.415 88.4954 li
166.709 87.7355 li
166.648 87.6701 li
167.014 87.3297 li
167.38 86.9892 li
167.629 87.257 li
168.336 88.0169 li
169.423 89.1865 li
169.057 89.5269 li
168.69 89.8674 li
164.605 85.4728 mo
162.563 83.2756 li
162.929 82.9351 li
163.295 82.5947 li
165.338 84.7919 li
164.972 85.1324 li
164.605 85.4728 li
160.52 81.0783 mo
158.478 78.881 li
158.844 78.5405 li
159.21 78.2001 li
161.253 80.3974 li
160.887 80.7378 li
160.52 81.0783 li
.619593 .547356 .515679 .247501 cmyk
f
252.994 193.303 mo
178.485 107.387 li
182.965 107.387 li
255.816 191.392 li
254.897 192.041 253.955 192.679 252.994 193.303 cv
166.077 92.6017 mo
166.077 89.483 li
165.577 89.483 li
165.077 89.483 li
165.077 91.9266 li
154.234 79.4233 li
154.262 79.4052 154.291 79.3865 154.319 79.3683 cv
154.328 79.3623 154.337 79.3563 154.346 79.3502 cv
154.35 79.3476 154.353 79.3461 154.357 79.3434 cv
155.276 78.7449 156.176 78.1334 157.056 77.5118 cv
166.166 88.0174 li
165.647 88.2873 li
166.109 89.1746 li
166.84 88.7943 li
169.247 91.5696 li
168.182 91.9366 167.126 92.2801 166.077 92.6017 cv
.380713 .305791 .302739 .00173953 cmyk
f
166.109 89.1746 mo
165.647 88.2873 li
166.166 88.0174 li
166.84 88.7943 li
166.109 89.1746 li
.626978 .548089 .52752 .26511 cmyk
f
165.577 89.483 mo
165.577 89.483 li
.653803 .579431 .548302 .336461 cmyk
f
165.749 92.7016 mo
165.077 91.9266 li
165.077 89.483 li
165.577 89.483 li
166.077 89.483 li
166.077 92.6017 li
165.968 92.6353 165.859 92.6685 165.749 92.7016 cv
.626978 .548089 .52752 .26511 cmyk
f
249.955 195.189 mo
173.81 107.387 li
178.485 107.387 li
252.994 193.303 li
252.002 193.947 250.988 194.576 249.955 195.189 cv
161.991 93.7586 mo
151.195 81.3096 li
152.214 80.705 153.215 80.0846 154.194 79.4491 cv
154.208 79.4403 154.22 79.4321 154.234 79.4233 cv
165.077 91.9266 li
165.077 92.9026 li
164.041 93.2084 163.008 93.4941 161.991 93.7586 cv
.389654 .317082 .311955 .0028687 cmyk
f
165.077 92.9026 mo
165.077 91.9266 li
165.749 92.7016 li
165.524 92.7699 165.302 92.8364 165.077 92.9026 cv
.631556 .561395 .528222 .280247 cmyk
f
246.686 197.033 mo
168.943 107.387 li
173.81 107.387 li
249.955 195.189 li
249.479 195.471 248.998 195.75 248.514 196.025 cv
248.122 196.247 247.732 196.465 247.342 196.678 cv
247.123 196.798 246.905 196.916 246.686 197.033 cv
157.955 94.7173 mo
147.927 83.1533 li
148.237 82.9869 148.548 82.8178 148.859 82.6459 cv
148.864 82.6434 148.868 82.6411 148.873 82.6385 cv
148.883 82.6328 148.893 82.627 148.904 82.6213 cv
148.919 82.6131 148.934 82.6048 148.948 82.5967 cv
148.953 82.5939 148.958 82.5911 148.964 82.5883 cv
148.977 82.5806 148.991 82.5732 149.005 82.5654 cv
149.008 82.5638 149.011 82.5621 149.014 82.5605 cv
149.241 82.4346 149.468 82.307 149.696 82.1782 cv
149.696 82.1778 149.697 82.1774 149.698 82.177 cv
149.716 82.1664 149.735 82.1556 149.754 82.1451 cv
149.754 82.1451 li
150.238 81.8706 150.719 81.5918 151.195 81.3096 cv
161.991 93.7586 li
160.625 94.1135 159.281 94.4315 157.955 94.7173 cv
.402258 .324285 .32047 .00387579 cmyk
f
243.26 198.769 mo
166.077 109.77 li
166.077 107.387 li
168.943 107.387 li
246.686 197.033 li
246.425 197.173 246.165 197.311 245.905 197.447 cv
245.017 197.911 244.136 198.351 243.26 198.769 cv
165.077 108.617 mo
164.011 107.387 li
165.077 107.387 li
165.077 108.617 li
153.731 95.5331 mo
144.5 84.8891 li
145.633 84.3487 146.776 83.77 147.927 83.1533 cv
157.955 94.7173 li
156.522 95.0264 155.111 95.2973 153.731 95.5331 cv
.410773 .334051 .329168 .00582895 cmyk
f
166.077 109.77 mo
165.077 108.617 li
165.077 107.387 li
166.077 107.387 li
166.077 109.77 li
.637018 .575433 .541161 .313207 cmyk
f
239.633 200.385 mo
166.077 115.568 li
166.077 109.77 li
243.26 198.769 li
242.905 198.938 242.551 199.104 242.198 199.266 cv
242.194 199.267 242.191 199.269 242.187 199.271 cv
242.178 199.275 242.169 199.279 242.16 199.283 cv
242.15 199.288 242.14 199.292 242.131 199.297 cv
242.125 199.299 242.119 199.302 242.114 199.304 cv
242.097 199.312 242.081 199.319 242.064 199.327 cv
242.061 199.328 242.057 199.33 242.054 199.332 cv
242.039 199.338 242.024 199.345 242.01 199.352 cv
242.006 199.353 242.003 199.355 242 199.356 cv
241.983 199.364 241.965 199.372 241.948 199.38 cv
241.946 199.381 241.944 199.382 241.942 199.382 cv
241.927 199.389 241.912 199.396 241.897 199.403 cv
241.893 199.405 241.889 199.407 241.884 199.409 cv
241.868 199.416 241.851 199.424 241.835 199.431 cv
241.832 199.433 241.828 199.434 241.825 199.436 cv
241.812 199.442 241.798 199.448 241.785 199.454 cv
241.779 199.457 241.772 199.459 241.766 199.462 cv
241.756 199.467 241.747 199.471 241.738 199.475 cv
241.72 199.483 241.703 199.491 241.685 199.499 cv
241.683 199.5 241.68 199.501 241.678 199.502 cv
241.665 199.508 241.653 199.513 241.64 199.519 cv
241.64 199.519 241.639 199.519 241.639 199.519 cv
240.965 199.822 240.297 200.11 239.632 200.385 cv
165.077 114.415 mo
158.982 107.387 li
164.011 107.387 li
165.077 108.617 li
165.077 114.415 li
149.274 96.1925 mo
140.873 86.5049 li
140.91 86.4896 140.946 86.4744 140.983 86.4589 cv
140.984 86.4586 140.985 86.4582 140.986 86.4578 cv
141.003 86.4508 141.02 86.4439 141.037 86.4368 cv
141.039 86.436 141.04 86.4352 141.042 86.4344 cv
141.059 86.4275 141.075 86.421 141.091 86.4141 cv
141.096 86.4119 141.102 86.4097 141.107 86.4075 cv
141.119 86.4024 141.132 86.3971 141.144 86.3921 cv
141.148 86.3902 141.152 86.3885 141.157 86.3867 cv
141.173 86.3801 141.189 86.3732 141.205 86.3665 cv
141.209 86.3646 141.214 86.3626 141.219 86.3606 cv
141.231 86.3554 141.243 86.3504 141.256 86.3451 cv
141.261 86.3429 141.266 86.3408 141.271 86.3386 cv
141.287 86.3318 141.304 86.325 141.32 86.3182 cv
141.322 86.3174 141.324 86.3165 141.326 86.3157 cv
141.341 86.309 141.357 86.3024 141.373 86.2958 cv
141.375 86.2947 141.378 86.2935 141.381 86.2924 cv
142.218 85.9385 143.065 85.5621 143.917 85.1643 cv
144.111 85.0737 144.305 84.982 144.5 84.8891 cv
153.731 95.5331 li
152.208 95.7935 150.722 96.0112 149.274 96.1925 cv
.420844 .339635 .341405 .00781262 cmyk
f
166.077 115.568 mo
165.077 114.415 li
165.077 108.617 li
166.077 109.77 li
166.077 115.568 li
.643549 .574548 .554528 .332494 cmyk
f
235.706 201.869 mo
166.077 121.58 li
166.077 115.568 li
239.633 200.385 li
239.079 200.614 238.53 200.833 237.984 201.042 cv
237.216 201.337 236.457 201.612 235.706 201.869 cv
165.077 120.427 mo
153.769 107.387 li
158.982 107.387 li
165.077 114.415 li
165.077 120.427 li
144.48 96.6769 mo
136.946 87.9892 li
137.975 87.6379 139.021 87.2501 140.082 86.8265 cv
140.082 86.8263 140.082 86.8262 140.083 86.826 cv
140.104 86.8174 140.126 86.8087 140.148 86.8 cv
140.155 86.797 140.163 86.7941 140.17 86.791 cv
140.179 86.7876 140.187 86.7841 140.196 86.7807 cv
140.212 86.7744 140.227 86.7681 140.243 86.7618 cv
140.248 86.7596 140.254 86.7575 140.259 86.7554 cv
140.296 86.7404 140.334 86.7252 140.371 86.7101 cv
140.373 86.7094 140.375 86.7087 140.376 86.708 cv
140.541 86.6412 140.707 86.5734 140.873 86.5049 cv
149.274 96.1925 li
147.621 96.3994 146.021 96.5582 144.48 96.6769 cv
.432074 .349859 .346777 .00967422 cmyk
f
166.077 121.58 mo
165.077 120.427 li
165.077 114.415 li
166.077 115.568 li
166.077 121.58 li
.652949 .578241 .558312 .348028 cmyk
f
231.203 203.206 mo
166.077 128.109 li
166.077 121.58 li
235.706 201.869 li
234.163 202.396 232.658 202.842 231.203 203.206 cv
165.077 126.956 mo
148.107 107.387 li
153.769 107.387 li
165.077 120.427 li
165.077 126.956 li
139.054 96.9479 mo
132.443 89.3257 li
132.981 89.1913 133.525 89.0457 134.076 88.889 cv
134.077 88.8885 134.08 88.8879 134.082 88.8873 cv
134.09 88.8848 134.099 88.8823 134.108 88.8797 cv
134.114 88.8781 134.119 88.8766 134.125 88.875 cv
134.13 88.8735 134.135 88.8719 134.141 88.8704 cv
134.149 88.868 134.158 88.8656 134.166 88.8633 cv
134.168 88.8626 134.171 88.8619 134.173 88.8612 cv
134.638 88.728 135.107 88.5869 135.58 88.4378 cv
135.583 88.4369 135.586 88.436 135.588 88.4351 cv
135.596 88.4327 135.604 88.4301 135.612 88.4277 cv
135.619 88.4255 135.626 88.4232 135.633 88.421 cv
135.637 88.4197 135.641 88.4186 135.645 88.4173 cv
136.075 88.2811 136.509 88.1384 136.946 87.9892 cv
144.48 96.6769 li
142.575 96.8236 140.761 96.9091 139.054 96.9479 cv
.439155 .360479 .356176 .0127871 cmyk
f
166.077 128.109 mo
165.077 126.956 li
165.077 120.427 li
166.077 121.58 li
166.077 128.109 li
.656031 .591669 .556023 .364477 cmyk
f
222.44 204.407 mo
218.137 204.407 214.777 203.313 212.853 201.094 cv
166.077 147.158 li
166.077 128.109 li
231.203 203.206 li
230.487 203.384 229.783 203.543 229.092 203.683 cv
229.092 203.683 li
226.7 204.165 224.465 204.407 222.44 204.407 cv
165.077 146.005 mo
131.587 107.387 li
148.107 107.387 li
165.077 126.956 li
165.077 146.005 li
136.814 96.9734 mo
128.23 96.9732 122.844 95.8404 122.844 95.8404 cv
121.686 95.9706 li
117.766 91.4511 li
119.318 90.0768 li
120.626 90.3774 122.088 90.5269 123.679 90.5269 cv
125.705 90.527 127.939 90.2845 130.332 89.8027 cv
130.332 89.8027 li
130.891 89.6902 131.459 89.5644 132.035 89.4257 cv
132.041 89.4243 132.047 89.4229 132.053 89.4215 cv
132.054 89.4213 132.054 89.4211 132.055 89.4208 cv
132.184 89.3898 132.314 89.358 132.443 89.3257 cv
139.054 96.9479 li
138.286 96.9653 137.538 96.9734 136.814 96.9734 cv
117.111 90.6955 mo
114.092 87.2144 li
114.241 87.3855 114.398 87.5501 114.563 87.7078 cv
114.563 87.708 114.563 87.7081 114.564 87.7083 cv
114.575 87.719 114.586 87.7297 114.597 87.7402 cv
114.597 87.7404 114.597 87.7404 114.598 87.7406 cv
114.603 87.7455 114.608 87.7505 114.613 87.7554 cv
114.614 87.7561 114.615 87.7565 114.615 87.7572 cv
114.626 87.7672 114.637 87.7775 114.648 87.7875 cv
114.649 87.7884 114.65 87.7893 114.651 87.7902 cv
114.655 87.7942 114.66 87.7984 114.664 87.8023 cv
114.665 87.8036 114.666 87.8044 114.668 87.8057 cv
114.672 87.8102 114.678 87.8149 114.683 87.8194 cv
114.683 87.8198 114.683 87.8199 114.684 87.8203 cv
114.689 87.825 114.694 87.8296 114.699 87.8343 cv
114.701 87.8359 114.702 87.8375 114.704 87.8391 cv
114.708 87.8422 114.711 87.8454 114.714 87.8484 cv
114.716 87.8502 114.718 87.852 114.72 87.8538 cv
114.725 87.8575 114.729 87.8611 114.733 87.8648 cv
114.735 87.8668 114.738 87.8691 114.74 87.8711 cv
114.743 87.8743 114.747 87.8775 114.751 87.8807 cv
114.753 87.8829 114.755 87.8848 114.757 87.8869 cv
114.76 87.8894 114.763 87.8919 114.766 87.8944 cv
114.769 87.8967 114.771 87.8988 114.773 87.9011 cv
114.777 87.904 114.78 87.9068 114.783 87.9096 cv
114.787 87.9134 114.791 87.917 114.796 87.9207 cv
114.798 87.9225 114.8 87.9245 114.802 87.9263 cv
114.805 87.9291 114.809 87.932 114.812 87.9348 cv
114.814 87.9364 114.815 87.9376 114.817 87.9392 cv
114.828 87.949 114.84 87.959 114.851 87.9688 cv
114.852 87.9697 114.853 87.9709 114.855 87.9717 cv
114.858 87.9751 114.862 87.9782 114.866 87.9815 cv
114.867 87.9822 114.868 87.983 114.868 87.9837 cv
114.881 87.9947 114.894 88.0054 114.907 88.0163 cv
114.907 88.0163 li
115.796 88.7666 116.892 89.3473 118.167 89.7603 cv
117.111 90.6955 li
.44889 .36527 .366888 .0170291 cmyk
f
166.077 147.158 mo
165.077 146.005 li
165.077 126.956 li
166.077 128.109 li
166.077 147.158 li
.65658 .593683 .566644 .383185 cmyk
f
grestore
206.581 84.9604 mo
205.146 84.0005 204.252 83.2466 203.14 82.3491 cv
201.665 87.1733 li
202.186 87.0962 204.251 86.9263 205.979 86.9331 cv
207.827 86.938 209.469 87.0581 210.502 87.2368 cv
209.545 86.8071 208.117 85.9888 206.581 84.9604 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ComicSansMS def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 88 /X putdup 90 /Z putdef/FontBBox {-93 -312 1187 1102} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings3 dict dup begin/.notdef <1C60D8A8C9B7A73DB6F0B6FAFA7BF3C28FD0A21D0FB70854A4518CFB8D731A1977C1C08A> |-/X <1C60D8A8C9B6092206CD5AEE2B9C72D9BBF62CA31CD05101AF9F5CF9EB857137F762E0A067EB05566405EA81D2FCB002166772CA238C3A4282B79454B501C810413B70FFB12751D9083EDF9F814E65F098F740C3CA1B0C614185B0025DF3146FE3B28A413D0F4BB2119BFC45EA1EF8E0238D5969E42C9043F42EC5FAED2EB768D79D7B6025CBD973FC6247CAC87211423314B74FBCBA2E901BBE09A4DC840F3D28B68467B20FED3A901127EE0EA1523FEA8C1E4CBEADC08A2ACE8B315116BA65C96DA2B7773F48BC53F67F61820EE186C1FB1E990E287A6A075E7D673D> |-/Z <1C60D8A8C9B6282379083F504FD1A7C73963E44A2CAF0F3E4C2114131A8EF94C7A5517B1792BA707F31A53751D29E33B5576AEF560095DC390CB6B16FB9062CD0B458C5D6727C283AF0AF77347DA2D14B67531B67AD4164E119E305277963D68566BDEF8D5BAB62C34FA95DB541993F5028635D5C51C0E8041318E5D892C58C42985C4D8AF0360ABACC82164210E32A0234FC351AE461FCE35CA9ABBF75A5B161F2DE9D82EB10A7E794DFC9DDEE0081F1CD73B395D00F36D4D26AAB36DD134A1401799442ADA736AD20CBFB62D99AC7BAF773C> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTY+ComicSansMS /ComicSansMS findfont ct_VMDictPut/QXICTY+ComicSansMS*1 [88{/.notdef}rp /X /.notdef /Z 165{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf286.795 198.917 mo(X)sh61.1895 123.316 mo(Z)sh176.1 46.422 mo
270.725 157.175 li
271.486 156.525 li
176.861 45.7724 li
3.0518e-05 .976532 1 3.0518e-05 cmyk
f
177.387 60.5466 mo
192.441 65.9225 li
192.778 64.9808 li
177.724 59.6048 li
f
191.365 76.6755 mo
206.419 82.0514 li
206.755 81.1097 li
191.701 75.7337 li
f
201.043 90.654 mo
216.096 96.03 li
216.433 95.0882 li
201.379 89.7122 li
f
215.021 104.632 mo
230.075 110.008 li
230.411 109.067 li
215.358 103.691 li
f
229 118.611 mo
244.055 123.987 li
244.391 123.045 li
229.336 117.669 li
f
239.753 132.59 mo
254.806 137.965 li
255.143 137.024 li
240.089 131.648 li
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B84186EC> |-/equal <1C60D8A8C9B7BDE38931BBD04A1F1E63D492705533370D5C0D2D0CF20659152C1BA6FED65BD91B34F9CF906EF38449BA7BD5B5F84C54070F4B79BEB91907EBCD64BE6DF5EF21CA0A19BD15F70C852E58681E3F699CF9FF707531968969BCE6CD4042802F16C62A0CDA95AFAC40F46D1DC2D5D949D101DEC04ABCD7B6A9C42F97825775AA3EF07BD84B94742B22E3DAAA95EDDA11> |-/a <1C60D8A8C9B7BB5CA503F41BCABD6C718309D7FD3EAFD4723590A6DB54A64A3783FF0E8915C8665146025473AABA73A7307808FC49DF54120176FFCE6E5630D745DEC9D7FE687B22D69E14177C1006B659795051D4F564854E1C732886E0B2617B0D55057161A197AD04FDD89E349DC800C8FAE6C2E2E7218942027A386140843CEC6D038F4E517DF6E091EE1EC97061608AA6DD07992C53BB029F315A3C165875CF85B20BCD136667E2BE57C24163FB07309C0F29C421C91BBF197F69B4468BD92D4E0F963A574D94F4959F6C142EC285F75B0A57DCD73FA9D71DA6249A4005429B> |-/b <1C60D8A8C9B7CA6425CFEA7643A8DEBB5A06DC7605086653C2C486B6F4158198BD8053CFA2CF0B5746D9FD99FA76ED96704A3EE6AD5240E402B445EE535F8D30988D2BF1D277FECDEFAAF08DE0E8B511C56F4A81B9520ADA97B65EF70A3DA2FEDBA1CA8476F2464DBC51D59ED582B47C20AFEA363D12C1DF79765DCD8D8A76043722F8B425E1F7011ADD62634BA97617AA71C6A854B0F0CC686D37B26387C30ABB6C12591354F3ACB70299295B8E1528868221EC40C239E0BBA6645FF00A6753502A06D2C7D368BE1A45974809B92A1817D27F99B4A021556897221B8E32123B695D2F3CCFD1AED08823BA> |-/d <1C60D8A8C9B7F000DE2C8396BDB351B4990D8D398AAE78675B97459FA78429037C4BA1F4D53EE5133D48D0684659BD3916AD44F9EF388C820B65831703EFEBCB54E84A08629938E7E1E9BD71B24EDF23DBE596C10C019E480A33F574EB4B56CE5524F79CCE926D853B8A82B0FC6533439ADAC617F645B18C65D98BB846B0DC1C7B681B7522D351F2F82B4E916C460C2918D70553B74A3820D6E276C27FBDBE6C2473D5769F6125482A622191509AEBF182367421867D352ED6C0E76416F79DC149E960E3968BEA79DBC1A9A96F0CC21F57FD172BDA58BC> |-/e <1C60D8A8C9B797474FA4303150FF95D22C1576367C7C82BE107A33DB836FE273C47A9F1C294729003E4BC6906C807AE64492E567EB699590C33760698497B7D8BD4606E6533DD313B7408096D0253255EE30E5A5E3E06503BE924638C5951A143C8FB027E022BA2CC9736D9A6F100D38EB1D4C686421142EAA9CB9B186F914996503E87D112FD301022C9ED0ABE9EC3841A2AAB1D0ECFBD04DD27FAC9222691EA422325A2608DE3AA47EDFE24D5B> |-/f <1C60D8A8C9B7BF865DF0D20FCA4404E9859CDE906439E1B6481B2FEB75413186C365A9DBC3A750FC8CD5B7F7B8622936B45EA60095B3D37F9B468C68E03657C1298567EDFC2A59EB6AD01922F49B485CDC5C730EBEA4B7AC828B861131433F470ED067D8654035DAAD4DA6650191581F595073FA084732A337B92D51D4D5D1490EB14D559CFDA4011DD74E951F328BCA12BF2268B70EA48A2C4C52B1A0109B3EACFA7B6EF61D5055DE5A6ED1F24E05DB4ACEB6> |-/i <1C60D8A8C9B8524CA9FFF1D59707FAB92D69C69B7C857EED4D13A4787BF89B18996B1BFB164CA796A0EF07F1407DF3454BCAB96192B46A6EDEDC573AD74AE5EBB6C7E282C40345BC6C9BD822E381040AF84910E37D38B52009BFBA09050BADAEBC8553B469DC8708DC8B7D087E48B2E8AA99CA401E54F66DDB7E9923B974D88CDA4785FD295B41FC4A68D170B03EDBFBD3758274FE3E0C921CDB5782B906DFB9938B6191061DE008B5105239C6B4135C4008792AFAA4EA6826684C0C> |-/l <1C60D8A8C9B8581A5C985F5B74008F0E2CA964639DBBD35F5DD00E39B9E95E3CD2193CB410613D02E647955F9BDFF4F3308822726BABA78ABE406A4F243D0D7526BB93B898D78CB4E4A407748C335667C85BC7C5DB0D0060EEAC> |-/o <1C60D8A8C9B78D34A55956A51486C357D04D448C2012FC2F5B0A5FE1B320E5CD61418E269420C85D10935D5D9B29D4FDDFDD85C698EDEF649FCF7B4152030DE7FB7B0AD250869A491A4776C5C05E1436F84934B318F30DD94DF542C1FA3FC71DCD30BC8EC67320F785CD0C113E143028BDC1093B4CB998C3891C7A3F7C> |-/r <1C60D8A8C9B75BE51651FFE67439D51A25F90110BB907676984B99DD0B35C7709F13E9D884F7A5E4D5DC6EAC702AA1CA7DD0308EC3E47EA3A772341F5B614E58D6E83BA0E5BB48DBDD3ED30A643443B6748E7F94653D8C84439C4E79874BBAE5D54AF00F5DBBDC68AB601F5B54A0C720942814BB32E87436> |-/w <1C60D8A8C9B6218487477493A6ED6FC49ADE7DB5A336FA1EBC5DDDBD48D99F5928C02BD528261F4B15A41301EAC0B328314A22E884D6FD1C59CA5497BCB2DD47D888224B9D6A58A779C950597CDE4E747B3963BC377CAE93AA58AA7115E69CE989D76E37B26207B544A0ED52C2A2EC01472B28F0E832B7D16EADBE6104D00877050F8D30EEE2CBA8A97FB7E3C2997DC2B38AE56987D1577B31463680DA7FF636A537A36637C58577517E9D0FA948B1552DF9E47467B7AAFAD757883931987E128011F634BAAAA9FF3D857B1ABD99308B07> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 32 /space putdup 61 /equal putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 111 /o putdup 114 /r putdup 119 /w putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 26{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 2{/.notdef}rp /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf238.845 110.611 mo(field arrow = lab arrow)sh317.944 46.0962 mo
199.287 107.387 li
20.1601 107.387 li
122.844 95.8404 li
122.844 95.8404 165.058 104.723 201.567 72.7456 cv
317.944 46.0962 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
328.24 38.4865 mo
205.762 106.038 li
20.8243 106.038 li
20.8243 107.038 li
206.019 107.038 li
328.723 39.3621 li
328.24 38.4865 li
328.24 38.4865 li
.697627 .675227 .638575 .739559 cmyk
f
123.474 96.4103 mo
123.501 96.4159 128.794 97.5496 137.227 97.5497 cv
152.4 97.5511 177.769 93.8731 200.815 73.2973 cv
200.149 72.5513 li
177.34 92.9154 152.249 96.5484 137.227 96.5497 cv
133.056 96.5497 129.663 96.2691 127.317 95.9891 cv
126.144 95.8491 125.232 95.7092 124.616 95.6047 cv
124.307 95.5525 124.073 95.5091 123.916 95.4789 cv
123.759 95.4487 123.684 95.4325 123.684 95.4325 cv
123.474 96.4103 li
cp
f
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/n <1C60D8A8C9B7B07F0BB93457D6C8288A70E0DB940B4E04FCB07C44C762FF75D1D950F6658944215ABDB8E09DA0C33F6809AFCF2421406F8688ABED2DEC4D49A55251B25C4373E5276DE26457B8215FA156A3918E62986142B216E3D126083708C5AB3D018A7C93A0546D1AE450568C33979D5D1886CAEE4F45CEF158C9F75F841729756DC86B9981305315BE025F34658A8B30DA9E4FC92E74778770409CEEBC81A51BD2DBFB108DC9287AA20C6C0FDC2D19D58643D88EB36209DAC3D913F6852F2F8B06C4883A03EE882CC27439C56A729CC60E3CAC44D3416B7B9356E70E374DD5228445902D99BC6E06C8C6558C> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 110 /n putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 26{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 4{/.notdef}rp /w 136{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf147.448 269.752 mo(down)sh152.414 61.4632 mo
267.467 41.0335 li
266.943 38.0797 li
151.889 58.5094 li
f
288.061 35.8535 mo
260.803 53.0791 li
265.646 39.834 li
256.539 29.0664 li
288.061 35.8535 li
cp
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/N <1C60D8A8C9B6D0A8EAEB10EC6C83A8151ABCF50170663A97AA6C8AF4BBC458891122B79EA456A4FB245891A0A08C3F5C78856E717318934EDB6CFE82EF816E4A49DE50D454AA4D5253D6CA844409A8A10E7CBD876280B093069533B6F6D725480B401381FB0ACCD7E70B82A55671F2BD692AB87154FC02E8EFAA7321920BBE6F8AD18AABE78061D095650FF694ED9E55586C17666B3AF0837B29CC058D114E11672F0F69980A26F4FDC5EA82BD1C53B74B670AE4AB837D81949E7D924709D0FE446761EF57CF343A7B12F8661A2DCF313DA4275B0A14F039CB9570AC5B4F86F1D15CDCD36D311971E0FED3BAAF870242> |-/h <1C60D8A8C9B7F942331D263A3CFBA3B9EBF03F980E00D0F1D27326C82FFD201AECBD022977AA1E0D941B50CF40E2252C13449F1B526768F4FF8F3B35D635BA79049C632C8D93F40FA3D65B4919DC249999AF595543B05BB9E3D553D6A4D06BC3071066915C6AADEE1777A88F11E51EFD7CACCB4548865877FDF6CCFA4354CAC26FDBD4DD9BCB32241000DBC1885716260CE6C2F8CA8BFCAD463770D7B8A9C86F4DCBF5E02D8934AC4CA9D3F2ADF013F9C85E9FCF15B65F105FF737947A93A60146633ED9F20D919596A73A57C422CA8CB2588E395D294B3A8FDF5162BB0F2955418BC69D1C2B1DA52DCF8528385D883EFC6D36000E> |-/t <1C60D8A8C9B7445140689D163BE9CD19CB6263AAD663E751BFF4FC3EFD289F54C938D7522CDBDC78B86C3A6B352FEC6C942B3A84D1DF37948F119DD042933AE483D22B2D630A0536911763BEC72090C0E7972085EC665EF1618CB3A1E365C68118F7319C489021F7E5BB1237C8B28D9185CA450113B4347A96F5A190A1E41185CC68C22E0D8B3619F65EBBC7C09A7899C42BB7EC5C668E84BEB96E5966CE04926328B6CA13AB435E16BBB7670DDC776BE2EE98FDA0050964E0FA7809BCE05F1D859FB5837E> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 78 /N putdup 104 /h putdup 116 /t putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 6{/.notdef}rp /a /b /.notdef /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf292.113 31.8887 mo(North)sh194.009 30.6785 mo
194.053 30.6743 li
194.15 30.6657 194.403 30.6471 194.773 30.6471 cv
195.958 30.6457 198.327 30.8428 200.569 32.134 cv
202.808 33.4299 204.959 35.7802 205.799 40.2767 cv
206.783 40.0944 li
205.911 35.3486 203.539 32.6797 201.067 31.267 cv
198.597 29.8496 196.063 29.6486 194.773 29.6471 cv
194.236 29.6472 193.913 29.6831 193.897 29.6848 cv
194.009 30.6785 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
.292973 .756527 .000457771 3.0518e-05 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/underscore <1C60D8A8C9B66621B1FC614DC22A261CDC9633D73BEF2B15C91987C6C1966C96C3F6A28EA35CD5B3535A4BEF756AF36EF54196F4BBFAA0F653219B7114F89D716B2B90AF1CCD0C76C5A474E37EBFFFB08B3E> |-/g <1C60D8A8C9B7883C34847673539A3C47283D2869DE727C001A8ED17F310363C066266AC877F71DE696B52BA5756C41FA2C6742427FE25CABE743DC5A8409CA03A46FFE172EB266EBE72B596730C9547F1BA9130523A2B6925FB6C63D24A5FA2932E01CB40C0D974065C69BA7D95C92F84E75317230A20A5B57C1414477131B85EE5ACE9CF2CFFA8F81FDD0E1570B07F54AEF9E9559FF767E5E4A6770AB6167D2B403FC1CDDEF440629F36A00CE900D50814788B0FF5D0993B3F9BE201807168AC2FF35AD7144226A32EFAB4AE57534B933FE2F650AE3AB04CFB63638BA8BDA42DA1BFD76C61D93DA> |-/m <1C60D8A8C9B6FC2D96873601FD7D92169A9B88887C32231D12B856F0FF258B62829FEDF861E7207C12D5C53BCDFD0EA3F0EF441B3104EE7A8DCCC9135A66A3908121FDEF89ECB4290FE2DEBBC0D2CEC922FC3B50F2ED674EACC69E69FA370309E0EBFB994E62CF35AAC76A68A27F1193FA80070D9751608DC309EBC2115575AE6BDEEB113F39584664AF7AAA3C82601F097876EB086034E5AE78A75047B10841E51F7380B84CCDD035E85E1A5870A2BB0942D4819E585F0952EB73250253334BF49322F96375F5B49CB7CFA7A0B232F8AD1DD38A4207A81B8B16535F38363976D31BC82130B6F42B86DA3EA4FFCCC6C8DA3BAD0E6D585D10CCC6A4EFCE59BB479065B92972F3D516BBD63C0E7C814F065EEF1040A3FF51C243D5475EBA7E962CAD4F75D3AC0EDC0C293B5BB6A5776BF4AC8F3BC665CA79374C2D10BBB5A4EE69B305850280C1> |-/u <1C60D8A8C9B7B3D0EB94C27794C8FF7A66F97FA6CF9FABEE835E1A1626320F2E2E58AACC9742E2863A234D717CCEC554B38E6670782546BE1280DB3D026E3D97D899C4DBB14646E84E5FA9BF09835296C032D42FE102EFEF2CF2250B419A68387C6038BB86A74FB974D87A0B2F0A7872D9B0CF5DA9A83619FEC0CA43F47D29F1B253EC46F0FA880E9D913D7D1074998F6C45D6194D53073B871AAF04BD179A8644CD091C1AF599D8C323C678F3C145D207E61A3CA7E44F7257600C6DCC4283614DCCA35CB9A41B86A4FF> |-/z <1C60D8A8C9B78181CF7403A347E4AD8687C7377BB84C2D8D37DDAB99BAE45345A0696395EADDCC8C80FC69A4904702F5EACB9BE2C6DB26AA55CBA722D1396922984300856064911BA64AF2B2CEBFA0F71035A73C2EFF18BEE1D055EB6A567A32C8BD76673673D4DE9BDE89B2B554DC0D70CC9E32918CA3396E71081EB3572E875B8503A44A9608DE9D423AA2263CF29FD4C750120816CDE0C7E33B7553CF2397CE2DB011E9F74D9013C00F732CCC4C8B31DFEC60AF92623FD9815754B7D460047E76CA19A3E3304BAF40> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 95 /underscore putdup 103 /g putdup 109 /m putdup 117 /u putdup 122 /z putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 28{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /b /.notdef /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf204.39 29.752 mo(mag_azimuth)sh.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/parenleft <1C60D8A8C9B72DDD4BDDDEFA1F2E33EFAB2609E3C9DE388E20E9C059C4F1BE51DE95F72A2C12C7492DCC98E0E6966BF3C6ECA33D6154D0170812D5FDFD86FCB61BC83579E6C82B47DC2EF7EFEC0791C5D64493C14198901FA2252477E06D36F6FBD8470D6ECFD0F8931D63CA891EC08EE802E9833B5640A882BF6370D5475D687E5637A4> |-/parenright <1C60D8A8C9B72DDD4BB51EC6C49AB7306C1A14C493E9BA5D78AE2C195B29D94044F912FEED39F75BE34A7150607FEA016A23803EFDD2F9288AF7A180AEFCBFBF998E3FBDAC6F3A4074B0F5D69EFDE59096176B6B29149A14AB78FC2B3577A37D471DCCDE635BBEA2665A37EE893BAA312D5DB22CA01C4916AB9D79F1B336301D84554794> |-/c <1C60D8A8C9B7B9B9DE292882013E19E33F82B7ED3A5C89FE0A41E2745CE52BF345EF21317B06CEB633B4C461C86DB59ACA948BD5303B9C1ECB87024259662E6DE6401329C576CA7C717795A8221E64812E10D7279DA0C4ECEFC761695BC43E126B44B9576721BB314891B8E9D440D85A903F31586B4587EAE794E85616ED3F2F41CC7C8432421936554CA0D609EB4EA211DE1B1E7934AF872FDEE11CAF3B598B06E47B41> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 40 /parenleft putdup 41 /parenright putdup 99 /c putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 19{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf258.147 122.926 mo(\(direction of drill\))sh.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular Initial
%ADOt1write: (1.0.24)12 dict dup begin/FontType 1 def/FontName /MyriadPro-Regular def/FontInfo 7 dict dup begin/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 97 /a putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 104 /h putdup 105 /i putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 114 /r putdup 116 /t putdup 117 /u putdup 122 /z putdef/FontBBox {-157 -250 1126 952} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def/BlueScale 0.0604582 def/StdHW [67] def/StdVW [88] def/StemSnapV [88 92] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings19 dict dup begin/space <1C60D8A8C9B896187A> |-/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12CD842E> |-/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE588EC87D3> |-/a <1C60D8A8C9B75946039FC5B56ED6A50878B478B1780B40C4125CE8039A261528F027CE6FDEC5783823498623E2545F156FE1817CCA8E4CEF932EAF146EA4E45F8E44AF7B3429BDE6EAD3417E01676A62E7E41175148C72742B2C6CC241FF06B9AE6A99EACBD61DC0A967A1A9EA490A3B86CCCCBA356FE0C46F09ED4CCD9D7FD84EFCB667453A166D73A23A48C3A48DCEEFA9A85E6DA8EDA33C7A566D88393EC5B1BCAE7CEACDFA7D9A043D> |-/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C66B70D3B3E9B799935A114CCF88968CB157B7DEA63450CA5D1B4BBF8E61AF225B205D414E242FC06624097F1B5D47BF4F384727F53BA1763156DBDB0266> |-/d <1C60D8A8C9B7E7C1D82219353B31AE497773900CFE039E7C34F7CEBE101056958EFFC2C789CCBD8768CC683564B6074DAAAE648B50C88AD4C58AC712C8476BA68C74E592EF7E71792F9E5367AB3C80F9D183D28DD5E961AA14DCB5D9206768FB9E099DA642A8BAA73D52C56C9913DC619FDF3F90996DC8D242E6BF94BEBE752CB2F5D6196384CDD6E5AC10AFB49712810FFD82A2782B9B182DA37A23E6043872EFC1C407DD53136E> |-/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6A9740420B265CA4AC9DE99AD8AEDC4233110D7344BA8969F49ACBE3164296BAF8D8824063AB5A81F8F9142D2C0492C8D085FBBDD29052840FCC873C574581FB314AC3521D9DA4AE8E6D987C45E9E8106797186054DABC39E6B> |-/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71AD800DE9767801FDF34CB86E1E21FD9D405698D46905E6F519DDB7CBC96570BA09B7E74CE45A9784C89ACE8876894AF309C859106C75B1212CD> |-/h <1C60D8A8C9B790A816BA887E1DA4852044FABD5C80CA3A9E2E9C1F200BD200369E1A531F52CE66B5B19C492F0751A1C2858510B2E2690FB789B214E0E0C6537C1C71B0F5B79BE42FC591254AEEEA9BA5BA2F0A43A49AB11B4C> |-/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A54C45E2D6E21C6C79BBDA40B7772F2DEC85ADAD3476B> |-/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-/m <1C60D8A8C9B6B770778B71072C32D83B2DE18F9EFFEDDA9C73816E98D1CE691983731B7222B167A6D2F63D304D344E93EA069603D18629A4320C5F1BC8DCC049DE26F978CA9BC88005768D4CD278F658DBD0215EC4C428D90DCB1C70291E674313AFD07F4ACB4C5152C73088F1801AB89447326D19BFA79413EE5F810BDD4269F23365D24789FC23A7E37320B3F849B7FB9F5D52128289A6456940F89EBCF3> |-/n <1C60D8A8C9B790A816BA887E1EEC2C6B98EC99098FC021FEBA148F884875E3B03D8F5BA9B51A6918EFA4195D8FABF82DC961545110C1672CA0A5B167A36646DBDC6B2B1EB2CCFFCB412605A41F5E921E35125025B68561FC08FF5F5A87F0318D13C761F9DF> |-/o <1C60D8A8C9B7967683396363C4C5A9E451FFBD75248EC3A8EC4B566E5BD4E7BBB72EB29C672F7BE91209F1171F84980F7DA08B43C90BC9E3BDC65B190F81C7A4B1ED6D074E407F8CF228B147D6A94BC016CC67> |-/r <1C60D8A8C9B825FA276057E430FDF01407E8A25201058EF45B5C185214AB1116383552C8A26ACD44FF0BE1E00A052AF17C7B552C44648BDA524B50952CB0AE525A4563499AD1C42D4D0C12A5AD458628362FB1B81E032637466F> |-/t <1C60D8A8C9B821B37F30E246C711EE3A9B1905ECA3B2281EC66105C6FB87D8A11F34421A86A4C8EB1634F07587A29F1959067E8F5C01D391C88E6402088837AF0D6E016A2B2057BCC898EDBE8C7509BAF139B3EFB89894D72C8915100CD3D16C57> |-/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62DD7B90AF6DE09B4373C71DC870DE9EFA0B94E7506F75EEE558DF81CD33372DAD0B84FB6B3C173C4DB8D5EA8C4F6D8C721F2FFE6909411B724C264F09293D8D8F89019F8CCCB6FE3AF5C57> |-/z <1C60D8A8C9B76F05D40D9AF06C62C52F8E7A83C69F6CDC031056F31E455ADB43C89D34E1A28A8E500535BCBC2826CEC41780F6E88D88BBC16CBA809407E19164AA6CDC22FB> |-/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364CBBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917B17192> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/QXICTZ+MyriadPro-Regular /MyriadPro-Regular findfont ct_VMDictPut/QXICTZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]QXICTZ+MyriadPro-Regular nfQXICTZ+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf210.973 10.0439 mo(\(azimuth of drill direction\))[3.4082 5.78418 5.13574 2.80762 10.0078 6.6123 3.97168 6.66016 2.54395 6.58789 3.50391 2.54395 6.76758 3.97168 2.80859 2.83203 2.83105 2.54395 6.76855 2.80762 3.80371 6.0127 5.53125 3.97168 2.80859 6.58789 6.66016 0 ]xsh83.3589 121.253 mo
171.87 42.8715 li
192.036 25.0889 li
83.3589 121.253 li
.697627 .675227 .638575 .739559 cmyk
f
83.6903 121.627 mo
172.202 43.2459 li
192.366 25.4639 li
191.705 24.7139 li
171.534 42.5013 li
83.0274 120.879 li
83.6903 121.627 li
f
82.0747 124.009 mo
83.9355 123.151 85.2515 122.712 86.8501 122.14 cv
82.8613 117.697 li
82.6177 118.268 81.5156 120.457 80.4443 122.194 cv
79.2993 124.055 78.1646 125.636 77.3457 126.569 cv
78.3711 125.867 80.0835 124.929 82.0747 124.009 cv
cp
f
82.0747 124.009 mo
82.2841 124.463 li
84.1217 123.616 85.4123 123.185 87.0185 122.611 cv
87.7196 122.36 li
82.7092 116.779 li
82.4014 117.501 li
82.1787 118.026 81.0708 120.228 80.0187 121.932 cv
78.8858 123.774 77.7579 125.343 76.97 126.239 cv
77.6282 126.981 li
78.6133 126.306 80.3129 125.373 82.2843 124.463 cv
82.0747 124.009 li
81.8651 123.555 li
79.8541 124.485 78.1288 125.427 77.0632 126.156 cv
77.3457 126.569 li
77.7214 126.899 li
78.5712 125.93 79.7128 124.336 80.8702 122.456 cv
81.9604 120.685 83.0566 118.51 83.3212 117.893 cv
82.8613 117.697 li
82.4893 118.031 li
86.478 122.474 li
86.8501 122.14 li
86.6817 121.669 li
85.0906 122.238 83.7494 122.686 81.8653 123.555 cv
82.0747 124.009 li
cp
f
182.081 49.9088 mo
276.706 160.662 li
277.466 160.013 li
182.841 49.2592 li
.675502 3.0518e-05 .872801 3.0518e-05 cmyk
f
183.368 64.0334 mo
198.422 69.4093 li
198.758 68.4676 li
183.704 63.0916 li
f
197.346 80.1623 mo
212.399 85.5383 li
212.736 84.5965 li
197.682 79.2205 li
f
207.023 94.1408 mo
222.077 99.5168 li
222.413 98.575 li
207.36 93.199 li
f
221.002 108.119 mo
236.055 113.495 li
236.392 112.554 li
221.338 107.178 li
f
234.98 122.098 mo
250.035 127.474 li
250.371 126.532 li
235.317 121.156 li
f
245.733 136.076 mo
260.787 141.453 li
261.123 140.511 li
246.07 135.135 li
f
51.6192 103.85 mo
34.9405 103.85 li
102.655 88.7531 li
102.655 98.1106 li
51.6192 103.85 li
25.6203 103.85 mo
0 103.85 li
0 84.3809 li
60.4168 84.3809 li
25.6203 103.85 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
34.9405 103.85 mo
27.6684 103.85 li
62.4649 84.3809 li
102.655 84.3809 li
102.655 88.7531 li
34.9405 103.85 li
f
27.6684 103.85 mo
25.6203 103.85 li
60.4168 84.3809 li
62.4649 84.3809 li
27.6684 103.85 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
102.257 103.85 mo
51.6192 103.85 li
102.655 98.1106 li
102.655 103.497 li
102.257 103.85 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
102.655 103.85 mo
102.257 103.85 li
102.655 103.497 li
102.655 103.85 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
366.372 75.5303 mo
263.146 75.5303 li
295.392 57.7454 li
298.652 56.0615 li
366.372 56.0615 li
366.372 75.5303 li
261.075 75.5303 mo
260.961 75.5303 li
262.76 74.6008 li
261.075 75.5303 li
238.938 64.1879 mo
238.938 58.3699 li
249.293 56.0615 li
274.426 56.0615 li
238.938 64.1879 li
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
238.938 58.3699 mo
238.938 56.0615 li
249.293 56.0615 li
238.938 58.3699 li
f
260.961 75.5303 mo
238.938 75.5303 li
238.938 64.1879 li
274.426 56.0615 li
296.374 56.0615 li
262.76 74.6008 li
260.961 75.5303 li
295.392 57.7454 mo
298.445 56.0615 li
298.652 56.0615 li
295.392 57.7454 li
f
263.146 75.5303 mo
261.075 75.5303 li
262.76 74.6008 li
296.374 56.0615 li
298.445 56.0615 li
295.392 57.7454 li
263.146 75.5303 li
.149844 .118776 .120851 3.0518e-05 cmyk
f
.697627 .675227 .638575 .739559 cmyk
%ADOBeginSubsetFont: ComicSansMS AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2010 Adobe System Incorporated. All rights reserved.systemdict beginQXICTY+ComicSansMS dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/p <1C60D8A8C9B784FA605C1E2DE9CD48D992DC3CC70A48B838E2D397F5893EBF5E6CB31C410B2D579A798B247824C0B1DA0D694D5A554F49A7F104B09B8C8123B1EE0F250469E618A08C9EDDFB5A51FAF77BD9EC9F3207514B493F3B559D151CA44FECA1422F66057BA97C6A129E034A9C3AB70E463FE85C8478F346F06A6148E354DA6D0BE5EFF6256E4BB886B9C73833B34381A812E73BADDAFCE8754E4C232F6A62C54AB66D9B9D76ADD04785EFB7DCFC18E5B399366900582D047B460CC42F08F2E9ED5B222614010BACB1AC2FAD7F735C4AD14F71C1> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTY+ComicSansMS /Encoding getdup 112 /p putpop%ADOEndSubsetFont
/QXICTY+ComicSansMS*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 19{/.notdef}rp /equal 16{/.notdef}rp /N 9{/.notdef}rp /X /.notdef /Z 4{/.notdef}rp /underscore /.notdef /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u /.notdef /w 2{/.notdef}rp /z 133{/.notdef}rp]QXICTY+ComicSansMS nfQXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf5.0957 97.0903 mo(horizontal plane)sh231.438 52.7924 mo
231.464 52.835 li
231.752 53.2931 234.174 57.3935 234.168 62.3603 cv
234.166 64.8889 233.553 67.6363 231.729 70.3016 cv
229.903 72.9658 226.853 75.5613 221.923 77.7278 cv
222.325 78.6433 li
227.383 76.422 230.604 73.7137 232.554 70.8667 cv
234.505 68.0206 235.169 65.0493 235.168 62.3603 cv
235.161 56.7184 232.3 52.2932 232.279 52.2515 cv
231.438 52.7924 li
cp
.292973 .756527 .000457771 3.0518e-05 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MyriadPro-Regular AddGlyphs
%ADOt1write: (1.0.24)systemdict beginQXICTZ+MyriadPro-Regular dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F43B727FC67DAAB0A1AC346364003E4FEF79FBAC399EF60BAB44182D20FA0C6402BF1E27F05398DCDDDA14D79F5733F11E560A813FF9D16C42617DFDA23021803BAB86086244EE74B29A5E1F99E79BC6C6C8880FE4C572C55E990D88B7521BD46854B97930948AAC94E7DFE2FF69F2221950186414A7427A5E80E1B04B219E3300404246D87351FD05C6F3EA0B95C636083B47E4D5C2DAA8BBB8D343439CEC8A6CCD7C3BA57C2332F2A02343DC56BF6AA691E1A081F9D254D> |-/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FDCA5DD8FB0C9C7D76709EB2E3CEF7455DFF330D234D9132A6F52698D79064F174F1D99AEB0CF9139A6469F8D4BE826FAC77DD18B951C7429F3A77A1434C1A624632AE9545E6FD8A1CFF86A978EB2F9D9C8D213E3AEF1293A1DF353A70DA5E24E2AC4CE8D2656D24B8166AAA778D66777269CA00CCD283376A690AE85A4058A8C9155FC3FA3A08F87D3A4F002FFBBE8C69D79181> |-systemdict /gcheck known {setglobal} if end {end} ifendQXICTZ+MyriadPro-Regular /Encoding getdup 103 /g putdup 112 /p putpop%ADOEndSubsetFont
/QXICTZ+MyriadPro-Regular*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /u 4{/.notdef}rp /z 133{/.notdef}rp]QXICTZ+MyriadPro-Regular nfQXICTZ+MyriadPro-Regular*1 [12 0 0 -12 0 0 ]msf302.655 71.9907 mo(\(plunge of drill direction\))[3.4082 6.82715 2.83203 6.6123 6.66016 6.70801 6.01172 2.54395 6.58789 3.50391 2.54395 6.76758 3.97168 2.80859 2.83105 2.83203 2.54395 6.76855 2.80762 3.80371 6.01172 5.53223 3.97168 2.80859 6.58789 6.65918 0 ]xsh.292973 .756527 .000457771 3.0518e-05 cmyk
QXICTY+ComicSansMS*1 [12 0 0 -12 0 0 ]msf245.284 67.4746 mo(field_dip)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QXICTZ+MyriadPro-Regular*1 uf/QXICTZ+MyriadPro-Regular uf/MyriadPro-Regular uf/QXICTY+ComicSansMS*1 uf/QXICTY+ComicSansMS uf/ComicSansMS ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Lisa Tauxe) ()%%Title: (orcon_4.eps)%%CreationDate: 8/9/10 5:41 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l#Ib6Q7hq8G_c2AZRVFk&AEom@q18$DtQpQ=])3%T!iF?'TaS[$O[o3,hCGjq9J!YR@qJ$9-aO;&k7K;l/CsuZ[X$'I'Im@%HZ=(PnS7O`QS3!##W%h5/-e+l0l2:.`W&!tbMmiUcF+Zj6H/?M8u11Y[];.0,CXu]OWHTo4MEsc>hj^RFa:X0^>?Ue]=b`SEjl!k%IPL_GreeFXci.^"G'<]QD!u1hr:fWAUW\Q7<4tCY4ao-#\Gl=.IJJB;^4(EO3^9>3T)E6jlLo%CeNNK_p<B)5e&BH*O7)urrGZk)%[Q(k23hP<Rgorr7d.ndWDGSSRrd9(lj5T@I=i^cci<PsipX_6B1f+.<i]g]gTA?(i^8380:B#?1?XMiOncSpl`T$$7<fKT0BH6nV%s4@;*0?9Ec@Cr>O48PL@c"#]3%,Q@-:E<]#ZTn@HNVN/Bk%]?dH?o%qs/:R\\pSQ_^\[gb2Ii,bjL.D_BpQcO?$sf$R.GL"A!H99%/^E7Dc#4B1H_KTh1^c[f^XN4j-ERR*EbRUG5>q+-A')%iBr?"XZU@ScJ^g:bGk'8Iio_t/@ujD=DD&,"bAr#XH7TH;HZer>oH1G\%/k1d9s2m9M\NO/%I=H6o?1TJEo'"\l-]9ce2LYSgClWWXpr?,/8ql`r=0EAu7&ZGb[ofR^B;>,b48F:'G&_Z,XjnN-H*b$UmddPD%ib.;e[-k@C&UoOY<]p=nj:91Lk1n>[FS;mpN+UFm[8)DG`OE5=hcu_d3kb;da&[ZapT)c,NY),)e:2)]oK\n=Iq=9ifpeJMKoVO6%ErYI)KjiU<=ek6M?5&`5bYPKAZrpn/NAQGSU6pjkq9>GLjCg%CC[oSan*LQ4F.b`@i8:'pDlreYJ)<jc_!_j(D$]np"SqcT#Z&WB%3MTX#plmRLjc!A'+!"LR[A$EuW)MpkSurg9C.0`P&-&BTr]Y)an)MOgI=/B9O#fd$q"Eo"B0:TaK^Xt^j;Ai?N*""D4j(6Yd_671%`UGNq@8?S6[4ittWI0I=iEt*NN:8L_D(?dU@SZ\7T.hMfMj@nEUh.aUs'jj[NDdt,IEH:ss/:WsiEt(p3^T8%%n80e/?:2"KR`)T%RCS8_`\(bbhD''*,HDu;:^cm4^M$2^:hD<:ac>==C12S"_m1c_/EV_;nHlOcrPuZ.Eg5KheAD.QYO%u[M6*cMNuj8b0QNp1gG9_>%X?(+<]%O[9b[pD`\Vs2XQ'Q:%Uk\h6*R)eW'=5U*12H\$o>A>A-1m2madU;Wp_S',]<*`FZL.#"b"3+1h+#:O.n4@m\PS11Jt3;(%;d";^SZKEp/*hqPgQ'qAAF-7+]h@\^]R2A^AE7bdKplT!ASn5s,Q8q[4.UP?B'TgdXjbCtFdcuNW8$NbU-Cb'd?'pkBpW\%VgZ@:%CaJWDZl1i')mAobmE1X2f(fi*$WhHHa*[VoqCR1>ZLDN'/Ut4C84cFNht!ZZq)nVA5N=/aa3j`)p!<'/Ho(_e5C7bJH29+B[_=^\%OHSk;r&Hm(cdQh.1UKB`c`q]h=8#WXgF)ekoCHrdVP=5Ej6jE=*q=1E/,rDZ*6A/D7qk!!^V1tSS\b'mq-]$Lr:Jdl6)pkh%['U/%omQAL5'[d>BM$@hJUNU1nF+aQc_/!*BHR9;<d>*u)Khh[rEj>BIi,;8MtVA8l'!d4,G)?pnQ3`A4(>'Fqu3e$MYrcc^[EhZ`PE/M%oH56uM@9f,NrS3L>&U.gh7C)]l"AfEqn$*T0]ZNcV5*skH^Nj#js<YBD$HhT&Zs.g]3[_6I6>b#dbFcXrpKdR1b[SgC,+Ih;7f]>%Z[)$.9lo*V;1"P\?`m\IPPpq`"7qi+asp&Re:,c0V\rtjkVpas+(HCtMasG&!L0V1nqcMa.b%S+4H"?V\K21V[f/r\,Q?-4a.kBW%F%q%3&@59?N_]RGqc71<Nd9siAQu((VKmikDel'`Tf)*gg75Pd%7aG!/b-0[92j"h>?`uMA&']-HP:884(h;lPZIHk\*IQnjkJ>Z%D,*TENk>"o^50W!^8DS-A(:+ihbu2?]&pFRZ=?K-HZC2's)hM%D?d[q2LaTpgr#hVlF?!fCtqEo7OduaL#l<sVsgbrI`@3"ZG#:`%W'p*IW.X41-5o!U8ec$!npd>9igE9DBmJg"Y>$!n^3+PCBT:$1q`OSMB%P3s;2=6)*iO<tAWj1.XHRTTlYlXC>VX^4Lpi@"Ie9f@%Khai,bPiQ4G'mbZQm[j0cdCJsmq6M_>kSH<HQHhc/E`LG6KuPSC3b3KO)\mXL[l7i/:FihL2g9CKNC:p2m:8aE@U=en/[]ai*"&?%KW_Sd11L&r].F_.P/XrG4=u_Q`a@K7G%YD*s75>e^Ngjhm68d(=*PP$9`O/G[db89aU2J$A^oW]'/pK%-"@W,afDVC>%T2[c!r@H%Xc33-R`=-Dg\t[&KK:8N83o76*k[9YG=hU=-i9.OAX.kY7dW/7_:lHLp]f(EmM]Qke#;Vl\'[3,\"b/ddpZIih5Md\MXA?j1O+$"%O1MaO><_qm'%;ls>n`JuLV)KkfY.5`IbXT+DUQ"Q[1PG<7amgQeejCLD9YZ48ilYlh84JChDlOC4C&FOj!J&iY#@E%gj5*hg.l.H%p7&$Rj`%s9rOHJ[MOu*g9RR2K2',/49(M:E\>"s.N7+V<>o8(HPB/-JbNUiUjW5>,i(s7(5'H?"MU8j`HE*LWYbu7NV,&"*l"=Bb%#IbGM7'rOWP1aT=k%(SC4^mdiG7W/"PCeR,'mE`$'cr?u'cY!(N#(e>q@9:OlV<-qcuEUY_o!<<IQ#S)lOGn>A#E6H9f;^XZ>8hd%hW:KQYt7hSkXSCX]<)nq;C-BppMb7LFOcfiD&T*$`Y3/AAXmFXg0ZmpLNja#=Omm2qsO&fJ&bA`fuHYEKUSDIC4Y_ac>mI/W!:Z9%$QBb.:V$Y,O%*V@;OYn?c^H0/[8DJE+?LnJ?V%-$T8o:+ep!_?aYl-J@t0)6T*H]?D4TdtNZp#q`?ieL\DLs8MOpJ&170BWP2s(?%Cs?X076%ZE>A,I'OSP!WR/?LEC\u(8DEj5SYreNVI`J>cot-usm7;AV/>%WB[_D6Vg-<tT7FoQD\8L\7Cfg>r*W1<",iKW\gPfoB%r@QL$XLXia.l6#6GB-F/:Gbep_JIcBNdgE!(30A97N%K\&^1U;6ZaZ=fd(!\[QZf\T'P?MS"qc!9G4^urA7<44sD0,[<o?'pa]T(%qu5YPlh\n*lH4S3,s.NeP#F.+m+#`Vh9`g>0)O"tAXnraUN0pqH+_TYg+t^,->!)Qr\_84*Liu_];;i7Z/Tu,V=$+Z;-U]r;SQ!&%>@.rto6F#(do\ZSH[!etrhX[0X+hu4-`W=W<os6/r@j#^`Ju7.77Yh;k\%C&=6dtS=0Df%f<=B.g37^cf@.+a3kOfb/Q68N*D8qs%.,?WFBA!>?9/*c[@Fbq_".BOs*8,(NqWBs)?$<[@CLoP2bI]&r:0ngsnNqLXns/g>Z?%iPlfq!n%?*dQ'99`[]N1c[9QVVIfAp#;%R\k@dh;""AV#JeWJWET&MPQB49iFmq']7H!kaRbhbcD`C9RVuN>UBd0j:A^F1afZMSF3?AF'kO1cM1]!DgM:[[`;1-k2:lO4RKS'%;jkd:89\a:2D,lXO"r5gWDoVII.ELfPNJ$K1p&d\A3KHIBu0(k2t':ccRU'4K//>81O7?sDBga`U`4cY<1[2T@jD0Mjo8[-?CW.`%-i_r94@_+!g*2()?<s..^67s=s7r-#MjrH[>Q;AOlH]Fb?J[69:G6%F/S6m/]XjR3Zp60^BD:J/ECJbin*FB.f/rlMMj)VrZh_o*%r:ottZ1I.Je$G7Wc8Sd@CZkTg`*B=d\[A"(n`eTomJ4r3`@j=EWK')*kJiRbnHD.f[Bkrb(YtjEp?8J4Ik#S9]/ljlc36/A[<!d>%0;\)J=80#N]p,5G9%@.FH95-_g:;'C:Zeie/Zs7lBRl#[c7uHqcLoHAl3t#/?5t3`]^t1Ng"G@skKWo3/+D]o%R"eq^Gu&ZN)o2#%_thg9aj0G<S$uIsY?p,Qgg&*"('s-ma;A*)gD?28-]=<Q]8&K*>bB9E?Z3?H2eTVOkGK-*;^M>>G&ad.I_/drFf1i0^:ZLP\Y,fp%0,F?_q>C*ap'`%E_OScVp]%d0>[rpEQTnjD/:KTCS"K;%M7QHCk@aEPHg9_G-#N)+@D'1JX^7N)hOH0(hFsPP,o1-+Vf+9\lSnFq%`QkW&`i]rDr]8iF"H?ZVd#`DdkPU5ER?j3Z[1C\4J""NVnDs5>;\2K(['o,sec,=6C+_SoG^FST,NY-;`m(-c\ZMEhV_hg.&*eH'%%J=df!Wq>oT$H#MoBSga+Fg&a2m4lQYDGZUG'5q[4m`0_/!P&+#'VIgo-Z!e;bsQGC6ecDQ+iAQhfS8=]YBRIhb/stqe!R/Y>2<#%f@Qo^h:&YAkO[^ad/2?[Wm-V#5ff(R'>:gFqY&q!r9F"RCjp^ukOA%Onb8U73BakEh'".DV#U5K]Be5C`L!nqe!H5#_JJN,iqO-X%7pjPjkRr3-P'd1TVuLM0Y9p4`hu/&Q+Rq^4DYDo:mGbaeD\d-_IOBR-*=5.kOun@ZG9<&CP';n#pZ1m8):j;Lm$,E3>R<L!;iC[d%SY+;b]Q8DhP"t;eg[=uLGIR^Zn&6:=L(@L+FC53hL2KcLB.'T1?gc9/cT.,$kKVQ=amCf;WDdR%#4.YE+7%32kDNF5fp8[QLNjGl%oZYjk1Ohb&r1]sbj3GL#lt/HQ0'YHkoDalj`N-u%`rVIOk[aY]ipHQ&QY/PLaR>r78[??#d$fGWjFYUAXZsS:2rbG+T&%grs*f*9%qrUZj0/'g6^ahdaL?,(1ZYt<j5K%473;\=D9`KHZH[<$NStEamj)6htY]tG=FZu"-l"MS0]_H2\G55`)Q+%AeQa?^^?bL`7e)-bA%05-Q[]X@\8PXOfGF.24?p/Lbb7ZW@C\mb,!qn:"2ju9JVHY:8JYM4loj76lZm/?=b3(@Z2eSO^>pA4IK]?AC(f'Ms/X`Z5X;Ug15%I=03K>^UT9$Zrj*Xg$O.ma]R7l\0*RH4TZ06Z.=%:(j2LUsn@JFmtF[>>OhGI0b`kdHU?"6r.+1\)<LkB8[RE8O5H<Xk']p`.h'D%&=McVUV/d>K2gOWMq@PZ$Z>Ruob#f'd2G^:q`X7lp?X__@[ugkFC5&0fJ6%O08TdmdR]9Rqp3k2_UckBijF6DG=$'DYg)EQm^N0?%5B6D9%sqC6,I?;&O8O8!RqISRg+_IL(L(8En:=C(?/M^?6(\"I?JDg9kMAMZ'O0@:YP3+dM4(tK$*Eu;agC41pQjsp\A8\aLdRo/%4Hs7o.fJ]DHc,hJk-7;5Oa"W1QUpHZ'&(n'\imMu56pW'*VmN5++2if@kml?X5ESsIbu7B6[oe`;B^]1;TPPb1"<EDp;90U$qG;n%/qt3QME-t^`ne-@pZ"P%N(5]C^Qh-C.A`P,WbFEZ,r3[8OBqQ?jHrjuH-A/7k.SF"&+X-m.Pu_9MD([AP"J2%;lO?;m$7NiYZ21V%d5[)&o^igTgDeV/a"iZbV4ZR`DqlEF`l%=[4JGhpPpTEsNKs@D\JA/E[I2U/qUr(L>P4X1da(cRg8-*Z@.\?0+.CA*%=+9E[nGP`%PGn$_k=b=U@]Kb+F3$R9]174cefLsjT$ne-5Cn;.s!7Tcr)<B'jIb.TG2&'g@.!@Ic[l'8lHbUjD#HR3.0qYY*'b't$,T5B[unVF%E6)QE&]Q;7ltpmP!UB0I%jd;,*<bAe6ma,2>pbc;k^S4_*1guB1+KQqV0rnK3b"8?LaIaj[[:rcEg1a7HBr9cW(6*-aN"S-0`_G(%+<mM]NeW4E-9?Gh-'^qoQ0CUaM?lgGC9,aHlf^qhCSEDSY+i)ZM8FEt3n']Q-Fj'<@/4G`;V4oG3,JMdk7C9K@]NuO4X#=aI[q%'%%,O8Ud;Q^N&<%%1P//msJ.*bk&2Gq+GRl5?0c2DqAn'h?ZpYD@:XU#bPen<%4[C&?&VOpf0p+n*Z</H2K<7TX'<;uh=kk<^e<.d>%+s!@nFk!]j0hO7FV!pJEq1K3gm`4Whd%AsD*=-tJ]5>66\ZJIe,%p"O+Csst+_$P;&2;1,"Ppmp3)h=3Jd&]:CE5.MMF=6bD%t(_%L^5f@5c[;.#=O&P<tj+!U5/\f82M(nS0.&4;:6W8:EXs4aJ#bl1j2Y6T4oDAkSPBRrscpF$5(T*q#12rn+S'SFs6jj9;5gDs'Ykg%pp`Bk#B>[I7NlADM#lr`lm"C^i95,>oS59q6^"oP$:dTVL[6kS,;E2TL^Tc9F;0eQO[!kV_r9#%iShW34pdN\U=,/@AYt5-2<#/&%iG`a(boT^QHdkbQ(q6Hi9KblaJu=/.qa^O=1ou,NkH+P*%6!Z&)Kqdi]D[:KeKIY!T;Jtg',tY3R3iecWh(P"CiR>0!AUuFU1(u_%$`usoFU=5$5R6J6%adJ2W*NT9O]F-a)Fdn%:FC.TPBf]3FJ$kD/tL^9McMpgRR^P,:Zm(tZ[U!#ff_AcQ-ORsSreai"QC&s%)b"5%C$52(s)r)m8(u-[3uVg?4mh[AQ&^Y**RJuudAC"!qEb=HL^X@T/XM3:7""?O#\9";Ua#4t,a4&9"VQ8:%cN52huPRM4Z_sfN*F4F%1D*h:P4M(fK0LP(4<RPW6^!s0c;c2(NPom$&a\G9L_CjA$1B$OJk3HaBdY+p5c!ff*@KQ33WZVAF<"sck\t&n.+C*p+!dS!87=jm%)cG=M_C@!VB)2>nU>f^3[o*,*ced+rGQ3=fmQSQ7rsSdDIb("LX!QQp`['H/j;X;1A!1b(nr65T1!)@$q8O];.,Pt*CdSOK;V7)J%5AcQNqL2W>piEqGei(WW]UiKDOZU6gIm&4&Z+/cRKQe21+5m<C'K4P?`gYdeo,DIoA'Jqnq2I8HZ0"!rr'kV^QuF!BfT<t)'L(<@%QTKK3mS2GG$"c*QrISkFY&GrH5/";6IIeV*HO\_t`9mlbme6Qsg$e[O,#%2[`N?r4Irfon5J)Z,YQ((\\"/7OB?k@XjNfV@6kk;W%M,]#[I"/ZV^NPt80`0U/rqIT-hu?&t5L8?Ule-dfmpUCVja[.8rE=(5]IVI>B@!j\.ig5Yg=+C*d3?^c\AN60_/fsd@\JFXF=Q/3%WUXPYr#\gfLGE<pI#ZFtr\gZ4r4$%Pi+I>I##^V/bZ7b"p$SjjO$8N0WUDCFVk:`!7?kJrU>)LrqB69bD"ifW+%N8@\7WCn!T`d2%d?fDF!!RXT@RA1-K6O)LhYFNQ-ZU!np.0t27rMtQDW>'9)4e,$+k2o5gFc;CkJB.12XU+@:4s>$4B3;5EO#'k)dfg"<Y3]&.RVS'%Zk2uSB3`iD"ee:IMmNc.lF8Y(\^Uu]0oW'^4Oqk'a11Mm`Q_G]Ff\4qCpP^R,pNo],F4;4Yf]IP(l5Y0HV$6k%WrCB*d'TJZ7WXu%Y&;_?j"-0LVn-KBd*qoJOiL2`dR7aS35TP]gF6Tj=s3E\gMZ4i<A:$X>;PZQp4\:'/19.M>+*r4Tb.O`imsA0E*"rj<m-6Qg0(!!%ZtfV'TiIhJ8dC;uNW^3&R2*9FS]P?4<LP]U!H$[O)(B\di[Xeu[*KT78EVuZhoZ:Ghah9jD:iLg#*6,8qHZFX=VJV[Ip4T&OV_+)%U.&q_g;(j1g+(57*8C"RrT.?Li4n[M)?16:QeB\u8Oq>`fpK4)>u_SmRM1@89>oCD#^_C&>`-Ehg*RuJZ#3W(Oo,Je-%0s.[a<(^%8<uF$?W-PQ&+URMXn"G@/u.7"3duGFi1adE@RU,&XTX'la*k$,*Rd+d.tV:M.h.`1Qn,b7k`tjU8@$GmGdWA!dXe5,%l*>pM/lk_%hIs3'2?k(FF:cY.jcHu9bNJ5'"6rEI+E1I5oH!<2*K^[M(<A&G1SejVB1LNelb>D?gYb0i*;ZQ8&i1PT.O-a]bc"8`D.r&SD$N*e%I[eh7ROZDuQa.0*gb(Dt,""DN$!!c-3_;NoaMf>Z8k"ei#,@qVi`QgOc*U9#q8>15[ooE],+(#H6MqC1>c>&$PG(K/.8c1U&KI*[%-Y@6>'>pEh0d]mt3h^$b`^Sp^_jG%],hYVWP1XkD@TaC7g3aNo\N"khHLW^(9K*N(SJ?r*89prCYp=]DmEK,rr)*l+9'W!^O&h%]%)m:N02eHf^b+KQrEhVpck[DD;6*ph2Wt*i7Z73_=W2_CA+L4G$>j*t8!DKd5q7b;/&<8k^n>u]LZ(7:jn@"LB)$fQ2a(JPaDSq_6%$</qq!=8k]r$mA'=>2J=n0AjT\3p]G7j3huK(T"lXl\S0m?/B>G-J'H6^!,VV%lY%95TirU)i>EnW4FO($Q>7n)'e3;&/qbH$UYu%atsV\<)u\QfLQCr=p5&XCr?D&H)1[9K<(@boi\PrR1B6bi>;^]M1c!\bVDcDs,m#+(72r^0,U3@ZV1c<]RimoFI709hNa.T6mi=@%<f(qf3RUCDXPbnR#pXbuQul%9<Ob;P6`U-EIUb^A?kB:_kQ[:VKbngWA;I[Mjp%bd0&e!N!Ds'R8XiE,*[;.(m<I0lJ7'?1$p:QB%YX5?42W$kZ!4Ng++>pDs.nRqhn*/IO7d`!t"HA/IG7]-:.nj3*5"@b-0A`OUW=o$QlP.^(*A`,!2m[`N^n5o.cMKrP)^:(HT5>d9%e9D[i*?C6X[fY$];KPhhieef,B$Jt@lg%ZKZBWaVY&;hETIhA-h=Y:^U0Qo,>-0[lD.[oo-8e(I=;\%sJBse\AUtOl3]MMY.doDi%4'&D=CJ:@]KkZknVD:2'GUl0tUOC^BQof%#8/-]b2?K!eW@k:pqokk2A$Id.X0o2nT9#ii^td&,C`Y%L_JgN%h3;WOWA$$TV?0Q!%)[D4R-ak\62G`K<Hs-f0=:89p==mnM=r^GX?)6_Ic4bsM\/jkR6\'6/$Jc&_9q>:gG?.-1aC<IOm:8c\aQa)Mi]`P5*Q1K1!^T,8%NbX-Q&f1m_hdH*ZPWPri8KK:Wg_ZOZ<7hJ5^+q.$Oi0'h^iM$%&j8ooZ+t9jG(@"4=^9ALPFe['.PG+X</FaE3Mof6fLD<lkGbZu%6A%T)UuQ)oZiHAsc!\]@8la(rdMsde)O%M'HK]g"K%?A(<nN7'4?hbA9I;\=7cB3gS)AB0g4JO]-95KK8So35>U^?\1"ke8oFQ>K%(S3;02Aksf,Z1McFdl3!enoq[!&MFNX^K']#MHSB[tLTiMaOCq%\6g1*>X;+l==\a<eo`KhA.lSB@A+4)iCuqFIqFg4@5NML,T+V%a6![cbh)Dl#**)`(E8*CjB\\2AQ!rm^k3m1!1nd>quWo-S.8YWSiMJIFtBc>$TDP,Qh22Xp].9nUSp3H=XC5+SnVb41MYN4q^`bU%-A%s_(-3mY1M\1$Vh80Sh:Un&K4?H5fLBYYXA8#TnMIOfLQPP.m\d"K8:;l6.fs%*7Tt%j%Sb(d9R@cO$7g]")g\@q[4I+oA12tj%p^mgA=I,aqjB7-HL\+GkcD9s'+6Z,5@_b60@s&sd.hesnJHg9hT?1d-,p;lTMTnKn!30*GI@Q0EZmbd1A]%%gC`?R0:mSJeOj"9g%;E>D@4_GLm3IkRI@hA)Ro(>-;;>C]Fa?d/1*?$/B&(8eF\g[%d`5KY)BbD"N_QFYSEUlYj!rSKe/E2:>dq2JYdl;PW'/*6'8+T5q%@=-,6X#]/^HWYTVVXNcF'7nO:JiIaLRsOV-,PBB0%&P8'GLE0`3oA0%c=OUi%MKAH/P&u[C,O;hXJ0S0X/^Ga@*s$54t2l$&YDWB%^nSRY?%_I=/:OXoc_Mt]s!i2DPQ`K\eN8BtBi,4jD>P;@c.\M-4o-AVi+HF>@tTt$s-T-BWBtZ'To_c8)pPe90N5D0*4?":G',Ng%1.CL&o/dLF,pL-$K,[6jVkmq1-p`DqKt3@IN>6Cd"tHDoYmul;=O\UWigWJ8IV1Kq%##nQ=i'P=<[Abj>#S>07cRg[OT(MQEs8`,%E7V6]:>3MJNO39(IrY[3Jd[Wt`%!DrSPg@fW1AC4M1JV?lF+PmTdh%OE%-UhO_cT^+T^sg9-si1f(H<e<WX/k1Of(-(/4jC^(+D6%_+CST3eI:__cEg8XF*o'R<r(@'lV[!F%1R5\XlG3.s//o!WJ&cng`u5XbDuSqHTHE5c'M6dn2KB"'AKRT&mt(QB8euhDZ#\%\ej*%._))nWN1sEZY1ep6`A`(d"-o,#k(B=mKegVk9^%k[Uj80JoS)K-,AII?%kFIg#Hf1!)Z]BG4;`98]i6"_FB<9P3(=6S_,D(3spp+%%a9D1p08Z66F;;1ke%D>1(5VYm_XA"H0IgRJAuH%pTuE+,'hW:U#3+Em3"qjYQX`FE`$,0a:dojLj01%(V6*>m*LB.H"Yh)5FOS5%`>LhS"G!R4YBCoE[Y'L[lc`KDKkuCNb,aO'9-Ti/2(nL#bOQ+:gVOgf.%-/[b_?4h!6;YdXQI<Dl.LhfS`4J$\'#]!#J!Fh:d]'&%p^hd3Z+U8j10YDeF`JnlljCtr>*7+g^4GQ@BA.>*J]J?8*/lG*;M%kUSaon5gOM6H&mZ6MbJ>_S5Q`FIaVDIWT&snU($p`4%.b2*%@E0`_h18o_Jju2k7_^I#_QtYrW3OhhgUQItr)V1rI1ZjA*EUZ8Xa5NpeB?c@E>"PV>ZY$ul2sOf][8/f32ttfj<t&['CKnhZXQ[n%]pOVCkU@_@_R0aK="sB6r1u'mTqd%bgL2PKNQWJ*g/f,o&R'Jt\WK/,"Z=PmP8IT11Co?Zp&k".r&[_uB^</N#Fr.D[bPCU^iMfR%KHge/k$6T#a4AZ9"u(HH"`04?C^4P]FL.)e0P5(?VSL)7%TQtZd%8l?)U.7]5e`8F]:)gtdrB"[s(HQ5@Z8S\64<B5q[IW%%g2,^%Kiu6B@1[-TJOYtMN-[!!Tf\3D_cnYbft'3['h-:/0]II^)l*8Y>";V$+[[;GX4:gUc.n_Q)'8R)[Us'2DtABZ@7%JsLtP[_c[a'T%"K.`B)cKh41\P5,XcTF?/(%_`e'?YVEU;,"3u5XS=CKeeUGW,@-%6WsapO)dGXSZ7Rn-S/ZoYNOAI`:3XI,#ESBeMR@NqdFJRr-V%VVi:;Jd7T5F7O.A1kUjV&A4Q5`p,(DqU>l:(#hk3(-q&YojlhqBrSF$W'K?Mi@**k_#@AX?.W+"*7M1iY>p/hQdCOVQ<,I,nR?3$%ilo>m3;C_oQA>-'r!-OmdLtbb7#h8s4BP5F!d"8Ok!B[K'hEs\i"4,JLETYp9:/O+`3j)f'/DP#mgYsn?7[(0NSt"L2D7C=JGqq?%,YNbgc<Od;cn7FR0Q[Y+0;NcsM"2+GW/qA,Fr]:La4=<3fXp=(o$gQ>*6;&$_$&42ES)D$F"IgmjYJQ&*,YlK*f@'*/K5>S`JH"j%'g!&]qb537C7%#I@*"FeNZ88f7<S9j@5JP%?nN&1?A@/AV6#7pF82)3!#?[NLg!.+ANj.&90#Y4N9r#@4cPO)90Oqr+dc**SUV?!%+F(!'9e.4'@o3V=Qs%^A`DRfu(]$+GK1Rs.o7V[4dY*Zu%Qju>eFD"_8l+e6jF3f=ps?P`Bc\KE.%O<J.3i^S3X2g)U1>obY7Lep%)H?p2<%L$E0R6f:,RJRt.[uZ*%e@/5oO6ZEd0g-uairmBcKlEN0fg](ocL2[e+3`U'OpT;2*BI;aFo-QJ^nhi&R_>R&/`kc4GUX`%mt7Qm'bigJ(3?4rA[22AX@7A*=jNuFUb#F;=N1&c+<gDRjAT2]j#r&S,[j/=o=6e-rXV28,_qfZd:5/8X=+9@\;D^6@YQ/u@1%o;%7c;3cj@GGD%lNTQUnEOT#<+2'1/*-4#JCC,VM%B>Y:D,p#bJ:f!BgQZT=A2ZC'-47+s)muJ-1o6<BFlI)TjCBH*gA;j2@!INZfbA%#+#umj@eT.&#Ms\.?!R%^"h;b<!C3VM.qlckh$chDHaJL^t!-jPFXl.Si_1ckfMa?4N"u9(oj)R_QjM43O2h%,A$3D,WP&-Bb\^t%.FWMlg>_KdXi*Dm0):9F]BlC3-Km<S\YdD0/X;h5/dUI/J0TA.Umfktp+8,M$:Y;\JBtJ6?H*JLEJ0HHc$2X#EYQJgR;T.60Nj%t%30=g-KDZ^o->6\KkL73QAMQ(8X]8LM?I&lpP*cGUn%_Q3=&hkZHiO6jglhAg[mf,Dlp-(c$N<7DML\BuBFJ/KBXDtGl(11\A;4-K%F/$s&AB[!kO5SdnR%Z46E`IDC`0`%LV'kqig<R>6,eAaHLSR;U!FeIBi#N""Z2IA@%Jgs)TAgEAl.d</4nrlIS4KBH<__V186_`]%LLW8)5$]D-E"GY*"&-[.S?lbJ[tFik[%KSW-*3.O*!(UP"RV&^KT+k(E"%frRsZ6mW<WaZZ&Vs4Ll^0r,WseVFiOVT$ed\)Ej4ss%Y6^m.Z&VI$b7]+O@bbFjWZNpPO4`J<?tdWETT('ELsHQO33&>T7&JAkOr;PDcdm<u<"LrKZK<sYefHfla8MsOf-Q8lK&Vknj+rJQ%.5bQZB]oc(<ho/Q)cDQPN.^V!-,PFM0mKYYSA7(;i%(OZ0R!a^k=CWKM2&Tuo?%q!kQOGPHHt`!Ym2-[KX-6jL;53!#tPD66l>/+%hjI]7\%nDO61U=dT7b)H@h:E6_LQmif4Rqk7j5/E6%1[q3Xb+#R?`X$9-e)qM,#`)d3`+c1!+&L1NFKCc\p6\Z$IAl0?c<^h!PF_%<)BeIL9t..9qi<dV1"@@,0L>8#g,G.5T"T'_&X):L1k2LJsabIj9ke93G.OonfQ\Jh9tfT+uZFU=u4(E5\*P]_g[[ZnUnVP:(F:%%s#u6;\&B(g#d'(]S=LX`4-qN,&;4.@kU=g7+Y9TWcfV%,AF'JephA_)TGM'I]_Okd/U2Pd<M8"\2ri@@0W,+LPp!HLc?;F/SNFj^%5G+h-)9W:e_\)&X.U\8hk"ea[9(0<NBi70p,,Ah7LY6dhASO78lIG'F1\LmIkrH]4f^Y<QVnY9IZ`W->M1<S:1VM'!cDpaoZ$chb%!1,U`c^q\?\SdTj+GCkc4rB8R?\S4h^7jaYM00etVfq!=@9!aNm3T<kpOQcaOU&@Zn$7NH=<dL1+A4iVBL-Z2,j<K61D^bWWP@pR%O\FqZ?^pe"'YcF$3pbO07oj2FH3dM]qZsAtKXR#ldTg5\649E+U,eQq*VN1,Cr@VJLTkO!3R5/1V:L`h'o6K8]B/+\F"(V\+8Js)%),flFe*&T79TeNT1-a6hp33*dh_Xj0+rjjd^qq1)'f2(YOt_.q2^q'8KBTbFDZ1ndN3k>%?He'7$GjT3n\_-s<Z!cGLR8XbjM88g%Bk;*ZcsHWM(8XKW#U+bX(n)NYFRsm+O?e]A%%(BSMIerfa,\Y@9gM/3RA5m3%>C;VcQ*58Gih-$j*/`<pHNqW,@#rc58;;Mj2@[N%1lDX-:YX*22g21[ZPO72KB4lmp@Y\-"J^Nh)Em7q1]JL$E@MOAYYT])a:5_tLeZfBgcI(id[@r:a!gbbaO3@V'W7:?K?BMId.1>1%BLaLd,!f&FD4_EbaK02)Ugl;tpYl`mohsHGQChYt78='$9*5h@kPQMsZrZl[ZF4p=9ngP;oiXdR<^<*@)b=:#"=$;_N)PN\-5+Aq%F:5UZp,V&-i!@1lfD'@D,l/p$I0Bit335.bdf`C!;;)pLfh;0e,/"-UGt!mU[cJ,!K7sAa+,RuAcb;.F]o_hQ@C3k)XuYXcOGOmC%j?,2,@5UcRE+Cg_Y_cu>H0ZOi7FX6M"5:Ln9a0;R_-%7p,6LiL3Cs;bmUGE[g_BZjP(pluq7JAeGUBBtOJ,f%I.2V3$+"[]FNXMQ%@`t6i,>8a_b98\GLW'XR3E3n9/8+Bc3,G_/R$Q572G##s9J9hrR\K'nn25OO;6,#ba%b0=.SR.")5OfJ0_cif1n)3M*)Ka;$gb@.%,YGje>JGYu+$C*)b:gb$]kk$Ob5('h]K+ukA&83S%25`]_e*bqWK*EjNU1h(/Al3rlol@jE'W/1P,<f-Z=X7%-ojtboi`X+Js7ig%C9q5,Q3(sB=f%4sYcEnkblM,6D2e@B=l.BmW`f*f>=t';b2,)<QU)0>D`78(-7`D:NO.%nPisF2SMh`L[BcA93B)EfpT^rgq&)1C%T>P`SW0,o%,nS,;^1\).>V[k*1?)0t1)n2rP830Z?&^CU!Kk>Rgi&8X@YN$PHcQ8REBMMh$W'$/<>i)=arSPiWQUBWd4IX"OB0(&%=[8!@%p=F)miW#-Ffn%HT](EN-tIlS\$1=8/6KWZg80a2Y]N1K/0J..HY&Ru5$?5d$i!I>$65Qd&=.$^/AQ3smLEc99QqWf8?_J*%$Q*jo=g3iQ1hE$X91Un`K&n3qAt`!j1s?$P9FZ.TErm3*@hs=0_E/6"AMOS8#DKTNA^I(jP`a9`Qk"uW^6]<:crBKI["AEcH0Lu$%4sse7TEJ$eFjiX=Z$-EV^"k[s8A=I%$5D["K2S*s_X]uYQ5I"EVj$,nCK@<rJj<&sm/dXr+@Iu>Pn3qI)*Ub<!%MV_r=f<@cX@nm%ck$2)Xkp%7ggU8&'G8$u('I/J!shg:!*GgV#gfe$N3^l"/&d[1*-hi"9B+G?XB6)o]E:gD$'Coi8N_>)>f2^mhR0SH-%Si6HBb-q%i*Aa(_9aHtQ/arA7aWJP]*]HH1Gh[2kIkYEP%Tf/qUj^O5mP4%O24C)9esOVg`S4KK9IERW!gMY28Rqtc794FN0?"tV-)%`]_Ni;%UE@I3ZfI>J*pV&;%tC,Jm6A(/--+B;?A/XdqbDnhTdF;DHBTju"s\0BB1$\\2"E`Q&SC;9CFd5;mijb8jp;.Gd($u!=.%#pZIEK9%T.9ND@"n8TY\TEX!IjlB$nR<\_V:s2BAlU1TqN6*\.^>R5^jL:KY1FsGCmSQiD0"LBku[&!3,C>4/%B=ls\Ia-d`65ca7X=P_%b]%kFG`\l,`4X[V.&Y7qNMPm=`!\'C?bs;m/VO@8SUF4/#Th%GOB7&W_LMY\5CX/qjot(#X;2SOM!+>K!jMRXC$<<p?TEGXD9FI1(;*%6'dZ;4A0uj^lrqM3T/"G[L[UL`Wssu"rs,NAhA?Id.H6uk?uSjFQS^OQThldOp$#kOMnY#cGVJP+u*R1fN?<8-0g05*C33B.=mlu%JtNp+]cD,!.V4N(+Nk.9#:ad-!3u_fkrG3u,R>kV0P?s%Okh5NCH45dB9G"!%e%OQ'&Lb>#nLO9G\dJm-dJ5h7`$B:#6W5naL"N1%1B!X:g#jC\De4ZT7iPPIK=<34.`NbC4Iu*F_U?SCX9O5_SPMn\p`8]C"K-:_9*k;nVTAEeaOrC\H]4-:f#-AIoT`j$AafnUq-+g*%EsG7F1./0J)[:)eIX:@mNQ'%VXObDVI&==Jk:$gZkSRciijL$5X`Il4NXaJJ5GtQ%$2>!SjtIMn70b86eqAJ>0^5]1@I)X!K%d>f%%eaeXd%WF;I=>`O+"^L57b0..*4!uT#()-Ba66?R]n=4ap:Q'*L[,fp&&Z*0k5dRML3n]"GsE@L_nC+tC2aXVmZ;^bF2P]_1Z%l9%pOKJgBi'%tnrL??hD#m;4Km]"*>UNQ-/:SNaCB+tG7V;J1tXl[qdNi_]d*P461?=N*A#csdU;P5pLdk$^tp6[CJE!VG:7/G=B(79%e6q`9e&a$jTr8jS<lTl@YL\HfhFUN&[$V?t*nYXp'CHl3!kuXj6LMd-jY/MA'#R*EPQB[(+7%*0+l@!R3K\JO^-@62*W[69:gW-<%i7)3+kU=R'0Fa2#K_F\@_nNHZ/?rX@0nB*1kW?kh/;*^1V]2FdiIbJL>,ag_TFAlG#Ojm7n@cpRY]<N>,Z1GtpLr9p0#@:dnl`+)%@)3B5M'Y%G4-mU`>ZRM(KF!Z0#KoS%R'W9[J1tV8FTLG%7c=\$)eh)cooNub@W-d5ciTtd'p&kck0"u15W3YAW`Vf^1P8qL0=8d!%Tu;TI&be9cfn_j,[fjb&,"#3PWF74(I1]!dMUa:EZ/OWB*BY8A1(T;T2Wi/SH['W_'*u!'@1[5?VT3-":oqkF0.j8!`Afh@_m&PP%fW@j+dmt>[[kr=eXoNLc!,O-(63gaB-stS0BV.@o[$<KK[^KW&C?_RM?e[QAbf4?KXNoq&8LXcOK5=Z5/nD/oLa.Y\icB.F@BU8c%9g13rY7[?H71=2&!0M<?GmnqW2S<:jdW!e=fifOXgbi'(JkRtO>t6m'Jm1QI1M1<Z%<RTFG4lAcc.W):oGcdNnD.9E+g+sr-`1d;%CIS_'K(BW7RMAY+QN5W&c4rWX9:f9$0:K_ZOk^Jp[u.VKIrLJW$Ogh\]bUn^h3B=G9^Al=$'OehKX?K;O1F#fr?T\_f96c,:.s3&%p^gK0-Xd6_G<H7B<4_BenAm)r)B(^?,<CX'"R:8g%:K]N><me0!j!!EjojF\B0CQg[4Or40BE?lFL<^A._+2Ef41juHG(\iZc+t$%-D(#Q^hP'/:j3/F[M$PH#P`^FC3XI.biKUk#-%<8"Ql\B?'8+op2P[ECPa4.m<O=VCDT.(g.#L^3_4$pGnqK]4YcBE&DJ*u!IAHN%\KRrg1VLSY)+dPp?$'Wa8WELMK]T1(C'=#;,qpT%VjkdC)%B.HpEqd>78foV.&gj<U^kHP+6jK%R`[r8Z6?1jmORePMPOht"TEr^%8aZ=oNj1mL3Upj?%7q"Z&#1ScKI>jGP+pTJe<!Cme-s;n_\%YkgZ,4qJob@:39gd&=)\U<NKb(Z[!EED5XOC@#,6j6LY6&XC+)o$%E1[n6%JGcVHO"3AK@qs.0Ns!HmkN<_,DnK<$oO2iWoU6>$oOr"kKkp4:7pc*e1dT+9EUs/-Rs(X.#,<]mP*.PXdlAn(i%],hM$]X%VKM#ZHO+bm1;4eq%B2gTA-hJNQ2(=<XIT9M%-7sbm?:Y(MP+SQ[/,NM7d;HI-9ZrA3&,IX6&j[S.d?P`TLS3IE+oVE%8F`5Q6.?M%4m^(T)hJujkqObWW*r%/a_GGo2'3s-)ha[7#icPNg*+Cr)M4DVoHdM.'6.uQ#+t?,W1hceS%M6fHbfC@P]6]T+_fpF5u!7KO^#MV%TZ/.o+mT`i+cB61#jT3n&%*RZ_2=DS+.jN=%?)'%RiXg(58W4DUY-@^!sl\E:oF]:83[-T3BW2B#T,6<AOmm*W4h2gZfI&=k\2sA%C2MmCKU<>t2XiQo:2r(#O.D$D:NEoT8(uWr(4APF,Npm47bWCA-t?M^ihj&G'P`1egLN@pF@m/_[2R+WcF%)XiO7c>V)l[SeR?"`%J8+isO=$fKl.&5Zs&eh,@1"Eg4^+<,?\I-H?ti<%eOd_PVqQ%#1T3-\%Sk4`:Ad`jQ%[eOd`@W+-.)gk'1@2k%4;U<"$<Ot-CmG%%d]K4=3QZJa%4$o];>(GCNFU1=UCJGAa(f!1LB=9X-3b>Q3]$Ec0B&[g&:t$;K1@<!]R;YZ1_:%/XEVJ-M'q;LYgJ<VV.5-I-`#P@%rCLf[11UISNZK%.@.<6gKStjj:^.,^k0>e(SKT_D[ACG;MGAJ!LLHo3E/o,m-5n9M"@mf01m194U,YM.8%X7>!7;p+mUj='o9<]u%G\H7"6YM>AO_Hd-TqT;!ToLQ=)Q$Q8Y$n"KK#cs_&iu;40k`gcjGuUp)@d\!].l5]2"d*<Q9>Qn\gqSs"$uO&W^+GlLmZs/4pqK3%@UP:>re>s314q2Lj;6=qTZs0$oW![26V3#LD.R*3E0aTFp:5r([kboS>8mc_[XNPpZ]2rHgA&(8ebPT/&A`U10KS:$Po9'/%Y3K\%"DHrm;U!=gBAgr?]>Cq:o@*fp;V8>="K&O/77IWU(VhQ%>h4]3R]WJ/ok_ONZ8Mm*4KhN%VM]ULaK%fn(IWWso#;jSWEEAu?6$N7%'O&25aXj`^,t_fpkK%DuKQj<R4[;[)6-.,#XiWN31Im8nc=OpJd1>BmK:Q^-Kf'`"j4#.2i[WZ-FZpm#JeBB"fRoaJ+i`GE!BYX_%\>0=PL<8OFDeROJ@$Z?8:p;_icoAN>Fq-'>lOqj<R$F(0N-.lmY^-LrN^uqMb,RfiF&F2rILYNM%oZ/36TTk@@/fdhB)nF@=rPa*%@8MO3aYVkL,@gKrQubM:#OsX'3I<"q0dKe93UlI,iY'Hq%cXf.)QU@kb^;K+58$jJ3fJ,fe]Kb.1Lb(&A.@Q=TL:RiIu='>G"r[3%i/iFVr_*Y.i_86N5H>'&Qnr,+4hqr$D4i=+^)9G!o/@B?$nNi.?kqK+`=qd$*o*8OAs./[=jsSf@FQ.&RBruQ^B8>mc9N$9aC[sM%Uj+Do3T>/&rFP>hMu\%rr%#9hpj1W;lX7u2$C&t8bn,[cq$(S?2$54'oH0e=H`V/kBnie5(L.9@)(IGjQjqH5)06d`!6n&A_7CSW%)(+mPL/X=aCB6,4BP.*Yn?Fl*Eunl,%*L1^_dNkoN)WL?1ds1;&;!M_:hDKh3[f&i!['<FEru.thgipAC4qbu".9P056<rY*&DCf%\.oImS.L:g>p15G)2GB)L1,h._4`H?2WE"mefd'Wo>k@S?iXdaB)u(MpuR062HQ7'b8;P\k_<CJmtWB#kiDr#H]<6bb<YOX&=9WE%&A,.X%Cut-aX^m)6\^OJU:N8@14h!7DH>P5"L?1^#$XQdd)(+Y18&p'`WfTN`Ud`]/9Afub"Ih-ke'Z2\G1$_,2bIK/49@S,iu'-%Q3.2#6Yq9a!8.(,"iW!i61TPP\8mII,J9_8',$0:YjN@e`L>^7=rG>&:2UB?*5!-SL/nMf"STg]b"8@eX'k%RjSkenWsip/',2^i%gSI4&)FGuEKqbapQ&u^#^?XgE^kgouQP.BjC6oPM,Y`S6,nLD=?T?ZRP_4_H%AjQ;kociM"$Pmi@+`m_9\BFIQe`9J)9Ehf%%o:c%2VH(<`kWB9_NK3$UQf$rp"WBdY]oTi:s,<=X5Li!;hgYP5<-QFOVBasXm6Bo#1t$FUCO,Z#R;=oL/Nan_N27$P[SaS+YBCP6*51D%1P:pc]cjB$5g#TZ<oXf`fe\5Q(e>N9&.H?QO><+/TT9SYr/C)'huK-6V3/8+];rg-HfFt'.4Pe=<pgWegB^8KYmmO',/^7aKMmQ>%%/ctKB+g2:$1G,r*BA+%hau(G*9Ra-%],*m"pD+=V9HCcV:8>a%Rcr4&kX$u#4*PB]<D@"F_X8m4+;>jUs)!!##ZL&C=GMk#aN;]%d"@RF;;rK^fn&L;C_10&*]X_\6'R!kBFVe1>;m-qD%L:8luX&Z;oCcL6^/0p6X$rbPW>;geHSm*)FOAQ*JcIo)#1?W=:FAjCTq9o%.p39]N9"ZEa%m'n"qWGF7FY_a`"j";$\K0]JtPjL.qW$7auWXE@LK"h=>=?kQ`Pam%"\SYk->+??6-rP%rPX[Y>fZ(0SP(8_:6;,%%9*c&(giQ:Jgn\ji=G5t`R$Bu=trE"+EW]T$7LXX$<:IK:Rq)9Xq"3s#J$(!dDQoH&:36L`)++.CV>TOL=6VK0Qp9%GU`H_>X]:3%qkqpJ,fY+M+l:$IV^ck$O!=jF&?eY\(btA%ediH`SFkP*<>71__'fAkTnrNh8CYAILtPJFY+^Xt!U%p`LiL0I0\\aH(lBX*_[7TB%(J5CbL*7$8cqOs:*!D,L6\o.Z6?+gf0fWX!@0o8Z'k(*E+N2@-!"_I?`5pf9V(P&i+VQS:K+K7V.>tY#j?bB,+4CjUG]f#g"2'['%^t;#1*T-3q#\(5_jk_H[5iQN!W3&47(fmc*W<f#r89i_t`4udA!MM.iLfoi&AI*8ZL:sAe+W`L>bojqL#=$ZMKGZ`aDK@YU0OHM;%9E1D<ak_LZA'&_S`=dik:(+B@K+N)\H@c^WYXf'lG9Fhc"G77WK+J.5`5\E9M"t'P@*oiY$mIu>Gni\?CkO[d%RM-LWaZNKdb=u9%`!o%lVT.Wa5_p!g:NZt0$rs,\r343l<1In%@F(:LKI-OMr9dQY4@tf)839L#&,/?*hH5=>F5P@u_1rW+#E$Li_slJM_0.V`f^i;O%h&ZDI>Xi$49cAJjQ"`(9'.r;E+kcKb6K,!?@=V0DaeWV>iN/.@mWoRr>u,r5$4MMdh#dk%QCBQ(.ns-+oN.LN`>%]3'>OiSTu1$j%/]7)#Yo(>Xg`WDq^tr\V*#Y>=8d(o7q*eD0d'@JqUa<B!/=.L#>=Qd?NkaY0QBak@Hj;7H;FA8J#*qu0PIt=8iG!8Q25i'JOXbn!%L6RCoT8(^CZERaE1-ZL$CL5@/-4=V$a::"1JJH9gWZ^!53RhaL,E&oQoi,r1/cmn*dYSh:#:m1t[tKi3)8'ejONi*fVVu$YFhh$^%Ku_p$o_:s])hUZ7g))m!etr[Bg=dB%dalF2Og[/21=FanJ<@8uL5WFHl!]^_2MR*r[4tXVX\B=`['aV886['d7,$Y%+sP9CfE3>B%AZ0iEEu>l9ZFLBFd#dBF>QR9]c`gh$mBd]Gd[Z&m:e4;/k`LtbHE_N#$-B0=Hju%3TRo<4`jA#TOnB+r_Ouum<&T.>$4.RQ9sm>T%,5!pGjqS1//8M3o#`8InkK=kg,XsMu]EEljZ4s!$`BaS"2@tXW3(WhP@1r;o8D*o/(`Nqt5&%:r=LQ#1?dlLlK7nf6_=g&'`c'%+%X"4jU(QDq:RS=?5j*P0qn&c7E&(`?#fJ/#fX2#fo0M%]:pm>)ZOIWE9g_'mU2&]hfD?Bu(FLQf),c7Zsfp)SOBaFitG7^ug=s/nt%S&Fk:"Oa"e*<afB+9mD(+G`<+/I9cl+>!kn&4d1\(^/9=+?]kUJfoeuZlk/*+>!lIiu]iY@e`HOJJeC6@N[i5d:+4&J$^&KTcYij%dXrVn#%HL\Mh)`?d:+4]psEOnMLDikLd<+e*2Gqc=r]qmNtqpSjJ.DpHK_,X5n*R&@1WN)=r='U4U*/9`meCWBK+$`)O\>`16%OP%<S/Oo5M*ILH\>_J&L9e._FFpYSUhh,hu4G\?lkI'_H=kho9^C3iu@%k![ruu:s?QQ@8_:Sn@3i_^Y_):=#(k(SEL?K5NnZ`UO9Cl%FaO)@gA/Y\(Dl]7`<iff5AlV>6@]%/o@>Ml/A8@bh(NU,f/5c;PE=)7%$"BYqk$ei)>#hZWVH:0Z/Z4s!Z,&KmjaeJ^Y".;b,OZo%_qMXH0E2?'+ZX(0+SLUa!aI.`=:/4&0(H=M`#D61+?QuHRW3kL#@&:A&d4j%>m?)qL5J&^7ufSQR@h'8(.PrW#.j%UZt"E2*'%q4%8'D]V@;u'XX8!H'O>O]-.Mh(P03A&X("p-OX2Us]$_V0P-MF5$f32go^U7#W86]hQ[a_5h=gL3jgO\DHO`IOi9Tl5T=l$R1e*lQs%94`6#Z#3R>0m)_GNHTH>p:"@GID9>@j*Mqa3X&/%rB<j:dMWcQ&cCAD?HA]^I`iW#22gjJNoC):+YGWd`QqVC4XbK<ii\DN.;k.C%??FMqPMV4%959\jC*#D+:Jep=E`*>fGUXmQ-HqcG`jcdP%(&"8o["k?%Oi[3Vlau9qOO0e40_,^\"dVRc.YH<$usTF_b).3M*cVn%K[b\gLI13MK=5#n(%BS);-pXS`<b".?)Y:h\&$Cd+rf$:QJjrmkFo<pUC;[ZF/]^'(0l=+F[o^kW3NM-ilFk@.?6sHP8S"^6+msK%!</<cLYk3RlLLh3K,0X&dWS1sakAA)K.RpW^".lPTS9n?9af!XCC[OLCB0JEh;IA%0)NVpJ^Fh*)mp5r@!Oq.L6kknO&-4^76iW$%'KS2_A,pj]W&5.!X^Zqjn6Cl3o2A\;+<;>RJ.W8L0"c<2L!Z6(@Kj+lm:Nni:3I8a1MM@AnPTX[Zkc[]fJKjlG@'ONOFAKs)!-20%ZK5(VKrCs_L\T,ieE[8$q5A)-k,sXXKWi]PET(/]mJ-`0P`i,Sk;eAb](/%!+Zj>5:_9p3m.nG4"8qF!.?%8M-HU$LUi8_`5h:8R%\MZVdBj1R)Jp53Z3@\]d*1E$W;F6#\<`U0Mk<m\FZFaLO)^)*kFhH`g[7`QbNe64b;HSQK')Q*7kQODQ'@'3AN!YP+2b/X)g\#TJ%N%bcICF4`IHQl1[:pc=H*R]HKXkCABRku&a(lI.D8RZ9`OEn8MHG8[1YOYF\@(>^5fN&E:F%^.gYRP3><bepM8TurDI)-h>,Fjsm%$W&q"!DnSLB3W:cdb/6e#kab2B]0el_LfB:A];L@[;[[?`cBZ2UDfqGO9(<'>9RQ;fhrY!H'"VtSUD44l9m'BQ"nAuJR`)qJaA@j%YutNFn.=^FN5GQR/f^D/JM;F]W=OXM<a-K@p*NLm5_TINUE//F%+]srG;P\M'Sk$<%MF#^0]Qmd?.`1[A$NApQ2h\oD[/ck*-^h>%d&bLs2+A7jUj=I)_,$TU]W+d?!#pnn1/!kK>Xr"7#U=,81U"0g&3!a)6Yt2j$_N#bK%(95=%!^uVSi:BFB1\o"V"R8;8ac<i&$N%%PZB^4mO"0MhWgas$&\hiDE9GnqiFo!`nHDD)?9iEf\pqH[d^o?m(BQ(n%Z4^#Cf_$BY-Q.k*9=E/L-!dk7*qNq?i0Y[V":cEbe]/%I0*&<43-$>ej(7-SU%a1;$[\`Di0LP4NK'&7CroC80H(:8]kDI0><c\FU=0]0SYT&8cqXo,SQr>6<;`M]3m*]@2tToQSjkQ;[pNa%Sng%cm6hCK?q`Y7Kq]KOC[IFbYrFfbJJ4)<2c+cAEmpa1onWr8UI3S,[^92-q_DKjY"K,F&0$,GV:Ee<=djNH3Q#5]U<>Q3?(XiZ%j++0gi(Xk8\0tAr.#;T+<5\N\Y/S>gX>hSC_K9?CJ'm#$E,9QL[:!d:OkrD3aOEL!;UUQk3@dr6M&VI%=1ta'-l5uZ"-^S7D/#/N%fSDpM'47o$m<O_;:1@'--dg3UZtQ5.$.*C)peG'U2mi?9/S%)Y1b`%*+%n-.WAQAlpjb3[k?8j`/!E"@AW.:m(/YFF[k3XPf%+XU%>[#gL.VV],5Z!2k7&P#]A]g"7!==>J,-#MmO=KJ$OC(LKKlPJkRS'8&13RG`2BY,Q@K.t7YXG?Vgad%f&*rc:5`A^0^slWa#(rmr%7Ag^m3]A&[#<ema>j<hTO<r^V$MbkI)-.;,J\p?IX'k+FMQ&<^%_-<cKt``cVG\WL1)`q5o3QVAT#tNZL;Wgj=3\8)Zp>Be3shZ<%rB5I(<+NSM3)0ii"&#[#&kSc72OHf[XT;2.>gc-)g$,W#*LB[Fmm#0a2<=rY@&"`)?@"13G!`JaG\FM=$-CR/E*W8$ZSoU_6"0,I%2;9]\32o$1UF?YjVHi&^)d.+?l,[9734BWWiiUS^$D^F)No8g@[5\BN*%]+*OStJ#/7FB4_lcnb[q9\;)/Vhg[#Ad[_Y.H%!2r$7%e0Vo$7T0AU(8NY7WhUZAP'aM/;ceD_<G`1=4LP\?fiQiF:fTV%ldRb*7^Uk4h.U'2XF<!fD"^_k)fD;\>>pLm]QU_4N<TE-cUIrT%*cf`UPA%GV_!$b$Eut-u.h6SZ@/>c/(\R?kBbdF_ckDTj9baG^2:FRK_A#=6_GD0rnf+lO!!m@D"0j;bZ$F$EJ3Pm1<KrB!D!LRL%P`ACt?lIV!]]36l]rk(llO0WHdD?ONCe[m&(q)J$Jf-0J3Ps[0F!t4*-Vc*^)Anr<"QEH_5iO.lj,n(j!D1d9*%0c>"1>HYX#a3h%PmdPuZbd*A1m`LIOk]p=)3+*hbpA'2;s3esU!+B#o)$AZo@659?S<sa^)]=2#+*2'NFMZ')V.0pk2bHj>Ua3^n&2i7O?ID0W9iFg%]e;^n*_0EB?*mlG6F.*_\!e$4(MeQ+WHrH6<]-3g^u%^qi8s*X8P7(qI#!W^N%217HR=q)]L>_#F#$#t?$i01FRr%[StE[2la8Ad%'hK9c[@pIh#UM.&Z\cjff4%L5<^A#`+N>4V@Y;0gED]&DrpV/\/-?0:[T$!FK=:#&XGoh\;I^O356uQtO<?C"]K?1m:0re3X.p#9%O3S7&,UbYlZ;%eDCS3L)-EFD=p^M%/>L(/d@_@e^$bf>P2&eKrV3Ek>dn^jT23#C/U)-<&>3/E"G[8f)8"m8oEkp'@0L'Ag:6-Y\%ABT?*;^eNNVJI.eE^N;pY!UXc!mEKg<5jR#;J;Y\/2sk:"*k1>fHk<`8BODpNX1/jW[UX>p)@_=+=C@1"jAKgCN3=e1Q,=%$N4Wj%Z(dh9#-aS-AC5,Y`b&m0's9fu=5+_/n5p%@3/!=SU]L8IRm-3k]TGf"=5Ct;43q52UB7+Y?trMU2ZDODc`O]S1]*B40N;PSk2f'9%!+*gA1X!&24)(95(bg\\7R^0U(V4>k7i'4tJ.K(J*)bB#1jN*O1uf1T!u\$"q&[I#bnZ(%KB_'dq>qJ_,js:nOAq(;RR<d-U8THQ%b>Y6smQ!&hK.0!`8XnGeL/mVY7[$9AX.^Y*%)m7B(kMQ+qfAd><c\LI<<Q4MXI7'n>6AcA.hmjF`[1_$)jWEp4o+1P0'G0b[d@.5%$@.qZ=t)!ie,<\)f^lW[&Pd]$_Bst>2JQ%('_8,IVo`3lYFU&YV+o3E51>B:RG.p-2EefZ_T?Z1A8%P(&=45IjrBB;[$*iJ$taMP%E!(KS6W>[HFup>tRkp^h,,LB>&l@RGSJ9%g,4A]H@X7Mh:6^R9;65ri9TDVdEda>!^meg_]2$!oa]PkbA4q:rXH[igRbC3`2((iL%DW69:_\d3!_J55)S4kUjF-MR=2f#1fK?1#Mm6LVGa9)'.C7>p+$)5SK4^OV1U9/3E0)@+/F=H;&!Np*&-s$9L=4ldDo_MCTl6qQ'%RnfS%^*jH[mC9UY<Le\EQ$+d=lEj"FQq"ot,j%W"TQJq)?#%(^aNgJ2TItsSq9`4cbBmT]1e%")@5]&_C;:5(5A-RHG.@;N@r]Hl%m]'_oU(262<O6%i.AKi^rM]AV8)\%#9N$"ZWGjVZ-_1RI5mtZcKfuAW^"5TSqcY99-2ZD*@/L?5PEf,W7\i`pf*"UO7S@U$R)Yk?%Q_4"\lKc!HG*E#A0?'\sY,Z@^@7r40X#]Gocn!57e_EnY!8^c,(hXoOIM8PqOk!U<fpSXp23;jdG#bF1>J:;I)@IQ1M7P8i#DT(+%.`e&*.A(Bie8T;L&GX5(VRf5CNnSjr/'XON9lj.+U(!#BF7[G=U%s(95N;t;g8&KKPo9RkZts3BS^C?fbn_Zq)XmgOeUdN=1Fmk;%VsTlJRIGrd`Zl=B-T,1Oeo%b>*#cn1>R#=7+`Ydr@n=RCTaTO17.UW@QBBs_W%,0!1MVe:i#5ZH^dk3Uc+k5O2)U;E:)d$5NW:uE%OL7,\4D$CE=>fJ`'k<0R8Qr3[9bV41H_`d81>7%UH^o;*Glk7]>Las1%88.9"kI`H[d`@"828f[/'=mVA$!s\s-)Ueh,Oj&E[$7G%91lA+b`o"?^@$12UWIaC>HEPI0&-F!a-"eYC06]s$We=:E>tfQEBHa'+PI#q[IH%1+q)H/m!(P^C>h$(hJ=5*\cXe98@+EtOt)r=%M285*?^jtK)eGh2NAETg!)3_WdRbkX!(o%bL&Ie7&F=M<<E2r;$Y!%CnC!hCqJ@'Q"%IkX.H:(V3BN\G,f6`J:?m[YV%NEa>5TiD%4-8Np+"fIJ]0Lh)XrFDUH=t-)f;UTg>L518^]dm^)^A2b*ZF7.cqOu=%:6X'HFh0%/OO"np3[k)?nW0&jJE&k!EO!pFLp!@6996C%V;!r>Njj*h[tdn3;CO1C"LsL-NCI`u=dl2.Kb^ntQN'7I2C:KeY]NUd>O8HLjl2JfYdPl1a!/":ZN;SV]kBqJ7F;s1ZQ(#r5O*X3%9?4%ESl7!V^SoATJTo@"Y1<0)XRY&J@rlgY?4WEN1/![`?p,)he=A:S$HD.dR]"4-^E:][4kRSl/Y07jMggmfhV9T7WQcp%^8@P3%MOiic(A2J5)rYU9N:i,].%fVt97)+-bYB$'BaNjcm9SboHF'I9]_KHr2tG6$@5D&u2.r*\eb#_:-.+tZ;8kth7"Zf!#OOE`kF/Fm%0AaipGiBhu,eODq[/&iB0M\h$R@/Y)Wjj0^B!A>30Y9p7,qUqQ5jk?]#"h]udnOYa9["m1I>&CfY>fk\SOmX8G8rY$c#O<h-5YEY%%;g+(TGs<rkC'da'm7WZ_!RM&1!9o`2A^9g$O1M`CIDgO3Aao68`[sL'W/ka-3EA>ko%U1J!+04C[/7&PiBC@WR6IHdg/"(4^2<d%C(Iim[lGplNdZeUWG_W'G-<r<)m>G6X\h3;-=0NXR&A`?;eX*dZH_^6l%i:U6d%H&,`[%<F$9#(Hr;pb;l;2%4p"iV`b?CRH/F!9%h2_;+`F3\c'UiBGM.@r7Gnr8:$?ItW^pg:6T`r>QfnGj]W8"b>I?N;eZ;Y(0ki";h_5u509u7>r:8Op;I,1B2YFY2\d33!U/?AjV%O/VKqVOJqdY9j<[=Ksk->!s0LF'N\uTWU(8Zh_qp<V,KsTem<AB<!8bN53c/,I<3^M)&^]YrY__DG=fu>B%%-2<<mp&^-[$m9u<e%+%glD](UN:i8rU(10Sp=jNB&JDeRN*]R!E'J$MJ/[4n$\e$Kc@1H%>6o$FHo6-E%!k??*]"Xoj3;mE1=B(9hS',j6(ooC]5VMY#p%;f$0YRBKA4Y,.q\R!kuX'j@\NLPgsE#._cF(96J4i[ri\A#KN#pV(fSMtT<&pg]q-)j3-scr0Kj,'A9Ea[O]KCGU(P3mGc*B0p+_%kc?TgNPs_p.,dfZ!A32VN6S&[>CPk9H()o(+EhC/8km,pgmb]b;L(s\4g3:?$?NI@c-:Ti@Q-k"M+ind&6k;[i4l^M^1k]6[At6J%H$nn/-W*$1R&_897!C1dNpE.W40.[[N.V#Yo0*nt!5fK^):`Vg@R$`u>Sd?:2&g+:eVY@`d]3bO=S%Hje5YEVW=:Ps?p![YJ:Z+!%A"Ss^%882ZlMe-!nud!VIFj/eLV`\"aqM*tPqdJ$'IP1t"!F0N]cWMNAP(EOEB)UreC<j%Q6O:$&?RiE:&H$<GU&O]=l7FK,-"5@%dYV\HJ>BF@fb]o"V3<s(#BVLK&t('A9FAIK,&VMR^uQ,$bpA)K7\`<Y8YN<LBMJ1M$>X_EJ0e>#;`$FIdL&H*el>aW3\NHKm5BQ,%^+5Q;H1Nph.01i=(?U\.niauiU=`uEoGC4o)kE-h;6q8Ghm+Hqb1Rpq3`NpS=Um"eENC`V7q78D4Ig^e"@47PFc`r@Uf:@.Y/,:i%;#qD-nS"tjJt2s%4^FfD]*p#Y.pRQU+'BToGWsk:1`O*m]@CJ_9fK8h#0@9GE*ocsWIbcfL\Im1/L+NV4&hS_Maa,u%TQ0,2!kM%%5in:<1lU#NPe(Z3C(t9L(],)OfdUoU:``o5"T;k5Wfj&f[-[7dRdO+:^MQ!F=T]A'?[QB:Y+Q7!(38!uEG<3IXHS\<\J@u/B7,+G%$A5-+8mS\N.q&-HKl5ZW`PHM(lq_r1`=j8tj.mF!P[m,]<EtF4Ep,BMWT)3YA5eCU[!4rUYU'Z/WNHHA3ffGD08^bbVM54PNf)dV%")Wu+@"r8tmZaR.<o5pf/B,'W8d[qLE;$Rp@%8.0^P%k`S?NhIWb*PF6*")iQ6-e%%<FQ3N=$i`>F,^80*\^lX4[-t&h]riC+oW&%5Z+&p>*rTrBHTN%hp<Vg]MRla70gW;?:gj0h.,V4@ecd2\$O5W`98b+S@p"6TnZL9d!-s6<nqgU@E&_9K#9:pG'>/2#0K!5]Sbtm%^+9Ur6@"H+5sm-lgSo8\84s;(#B`^CPP`0@S7+.LN)eAE(dYTE[4p@GjXa/<;ArVpEp%/sM*BR8WrrX!M[]k%-UsL42s?aON;7Da%h:=dA@^!ndET2h'Ti!ad=O;/?f]u5=$/sMrh)Mjur1u^qO]"0<4G\sL;.NW&\]I+]AIXk!=l_VGh:uakLhhs%6Z]-GFR'Kd;dEE%%&&M_N0ND=]c=/VIOPdi:[JNY!&(__uPHA-]BOeFU'J.L>r6OQ!3=0N%g1bBjHD),-*`JZ.%.5OShU_+:ngq4-qJLFU$Gj'A;HT&8%k--NuH#-p!dC!'cmU'!(CM5b!&A>3VGVg'^aSW'_'uSs?0%M9\\A!hSKO>*'E9V(OTWXu6e9pT+&jtRj*"8FYiL+?<<(t:Z-eLa'%)jDJP4Bj;2e#me'=iH)%4)XY)M,/.^;XK@<cu<[NqdTP6cDAlg>L5,_`?U20q+Td'0kFS-g&c`grXP+Dg4FsW]*?[4`N/3,`^u7'%.LM:J)RV8%Y!GK%;l:2N5>uNX;:-PkF2O`bAr;>/@u5a*(kXDl[q9X?NAfO=B8@ua>=T1:53(ku6o:e*n\$>o6t-O_jKW8K+Ta-F%(kq7,$l4^g<'Fr#YDKB&&qSZo:c5q`1d+VhfZuB/_<Y>d#JosG$s+)fDY[OqH0RFtNT'KjB\KWB"^*):;V5GRaI,l$/r8-K)(08p%k9fN274*eAeA;pXa9lUGkLGa6ofDBXohub2hC)<e$pk=-A3H@/X@<nC*M^(E3-C>G+MMkKe@W#^fF?D^Ka9^/V?S7u9b?m?0F3gE%+V"3YS%o[c*5"rB=`.W'NOk(pEK6/Y4U2":[8g`fgFdNtRkufU:qCT#*qs8(_.(p1=`JWQHqQ=I/T_r#IZQC96e>.Tm@q7f6crSI%p]M5WHNTjTEE)#,D[?Dg%urG0R4SY)a@k-\s-CV@ROK0o!&72L)_cYCbBPtAs(35pM)sA\(_l4c*:@98`"@r@S?>RSg1\S&/;gJK%%]A8<gk2eEI6j[@(7%kbe@'Ljo$E#b7QoeuG4XWe[)k84V08(47@!Wp<SPDp/8(RH'.pSQ0OM>+>F8Uj)qn$;0&P.XN*ugC@1&1\%.>9dL^i)4EG]hdq[Sh)SU+f>QX8npI6FT8K#aYb8"um&*<i$)W6'b.WCk/RS7b)$LN8:b"%2NJ>AE9hKU]FFD)\JoiM*[(0&!-<8%Jea!rgC.'-m3#6!F&LqRDtU8B@`$?fcldp;hC9Y%diOa.D$AcgK+VNY-cMDI)^`')hth%r-Bnf@Am&EU_OEf6-'Q-1m2\R+Ua0b8%N'0cjP+_)lTPC?s6'/&"1Ig2g"VdE.O%\03W>=mN"0#GiFDr/p1Vs!(?sJu+B8hn[#b^XJ=9+pC%a)u,o:F&m".DU@>6N8J:hD@'%%rT/fH'b"l3mm1h37o/?/!6[T^qE#Ff%,?n)N,9@"D&5a`c`kbf+d,hC!Jn!Vm3]n<*],nNO6nT5bVeSq$qY#HRt$[Hf&;=G_;SK%0mu^Ja",Wg>4Psn38\'[D.+,di:utQ-N$i"63C_-VG26mNY")0]f77.>B(@0d7aDTMZ$r[@!?]hiK.lg7?\e_hDL96peIN+Rc;?+%VT.PKAKOW!X$1C0%nft5B#/]B2blM,lGQMgA'-`3lnD%j;V0KQb)i*N+LK@P!H9"lX2Sr]RdO?W*[(uGQ6S1gk]^qcqQ!jkKK>[q%JD]W>`N6(1ID&tm]IXs&Sb\>t%!E6$PUOF=Jho2I\!rQYkg_r*'7G'-H;i7J<03C`%46C=`Mk"M1ddi4^F_HKLPEZVM(um^A1c5u%'Ur<Qo&!3!>U[g^9K9BnNH)h9kN7R=3??)E`iE7a.l4E/j^ptiA:/a9()IA!ZpEb*5Jh2fq3[Wf6=,Mq9^S*gT504e>Dasb*0fI2%dWnKkOA&633lD<$B,W2hfa:GoN3VVi\RD^%VISR8bB(9WJGhA]1WhO-`C=HC9Zr$@+/#J%o'=o(0XbN*$&^0^.17q6&2UaV?8A;4%hV#XQ$oaPW6>qu:agKdS^rg%F#!Q5/Zj$2/b@9OgWEK-t,dZTC3.ZC7P1pX%7:E$>*S43#8s2K6$oa&9g!D;L3j_4RRZU"%VMo'7%+lFASaXYCfPcB6`A?]\::FL]<8=AdjAQ29FN#a_c1\8+t/P`]>.A1Vs9Q7RHJNX.^hqa*sc<#,A>nF))SSPL8p'JcrHO*dbRO2sI%be4)c4,=ZKVd<BG*jf\@]Xn9m4i5Aj)m529o5cFbmHt6f'qSY"BV%<bht)%NnsjV$r3^kOmsRX%)s"%9J,T,:dkb`NCT%,Tp>slN%hnFR=kKB%mrd/U1HujUZ0u&&3>@2b8qnk)MB,C3j1E+ipl&W;4MsEUQrbZF`pZcM-;WIQFl.O2/iWA$7g!63BDPlmlcct3'$[h](%h*:kBHhQUpr!2u:g!9=.VoSGk$YoY"ea`f,c-L:hM:3-<q5u3W'+m*8(o[%ET6_u)(qs*r'!E+LY?p,aG3s02<rG>1l0$NZS(DFO%8S`hH)6H,q[qj=Om=V"N05JnoQd7@Hb9-c1iqR-So(M'rL:2=%T$^<^HHE7IWnq!a4i*t-rb[W44VTf"F*mT?\dNSe\@t+1T=7qq%:VQFfe*YiJicq`rbiI//k@OU>i`TPl^:62:3IVJ`SE=q<[D+dd>HCW?9@&"V)>\KRG&_m.c10'VVgHXhJ)o(beEnE]41?<pf8HE)%`W+^+rN7e%<h<KM"9$A1gi#mIh<IkX3>^TG8+3q-r#<9;J9g);`I"Pj<u+[-P7u]/bM0)X`P5d)hn2-9?@Q/QR+5i:eGI6Ec/eH?%ibEp`H+!?nV?]<>WS,$KIrfm`HF(njq%s3AjlO1(mi3lbcG"V_em@-6HQ-bh6!6buCN!_M4VTgM'Wo'8=*%:+ci/<;HG-TX*gOFJ%[]Fq*p>4LukDd%HTUF`XgtS3C)ftHkRX9C>T,)&m?I)D"Isq_J^A%hj^3e)gE>X,Mr)5?ImPC&R)Ldaf)Z'!jp-!HVnQA5R%^7VQ%W@.jaRgI\*-O5R%:?NJ@4\VOJU!KSLr;6EcqYG;_YpVC(=ENfNQS5NY2g\?i+K\@\-gPjMPL%)1f:U.\N;hmZ\G5L0Y4'Wa51?e:%L<n0j3q1a>(<>=f^?>DX^=.N8*>ut[a-UG*='tt)>-,%f`Qm5Eot?2cqe;Um:HXuOP:<YQY?oM8(GCg3pXu7:LH`E)[.`SE.,LQ?%YP'V&Y&EG=l^tJp%t97`i-f6`prf/MMo>qFEdI40fd:7&d@YOtkoX]Eb!/(FZ0C[4QNqCfVgD,!GIO),M@T4Ejlsb/F7gu1%Y*R!%Kc\e-.YThXd-&u850/`QcpK,RgoH45"`8i:%uhHsS_e`U5CK/ao(]`2g&ga3mnmE'ae7q:eZJimet5KXco^e>pJ4#9p_\8H6PhLR%1*440\QOE/rr+p$B7=uLoD3iSZi8PRbKA,N@k6G$#k;$P_d>("?7iCE:KRpLML4m`#-^Z:qEV@ArR2;SQ^;?3=,Y$^eopG!nqB9h%SD9=O(V7X>4`n0rg(W/t6lnQfA::B5animOF7@;Z-h:AE0lD>TPl0)0jRdVD@^YK^_q4gjmH'P\ZhaG("HUsKr;-!Lc0NQZb?&U(%O_M*bm,NZ'[3l4=H\-'N_ot$_m%a-%qk7=;1,iEa-BEkO4aSs;_tQDg4q9O.UW^1GEG`hmi6V5q1B*E+o6]ub#;5'r[jXfGa*3HY%g<%^&mhUVbq8MJ3Khj@fhNK,SLr@`q1O1N\C$c44h[^RoR1Ku)d"!0bHI1-g)#gga5\U2jr8M1*p0r$M351Gdi9l5iI$2*WL[REK%P'8#GCi\ato_Qhcr-34q\@D?\roPpAU\e?oplL3Wg,""*_J#=icg8r,h9pf)SN6^gI3mIE5@DIiU%A-P3An3fW;M;7_U$0lp4;u:%g8=UXptaXnhh1*9CX;(Hn@O%gU'H/4f1.$7RYt5gb3<,W?!^iCT!+b;`0ER#qrg1pZjTmH0>G)Z<SW$5D1-8-Ec\e*I(K4a':GKk%4Fb!:`Xo2_R:"d.2+mgCY7%KrV]YGdZ1U8*;Yr7pc0pijr:9LHloqt4B:iU%<spnef:C@fjQ,sqoV_B4^$1*o&.5pLIpU19\*(6h%c[4kgeiiTg@<?9Xi,4S+rL\?JlV;NsWD>_,ZdXiOHu5P&nbhbKlcYLbV`-d.R7re>`Td3rZX"%;=RVqFIPT#!ld+Xs(du]i9esp>%)<Q-(*D\""B)S,[Q?.Kc*rNeo+.HdXdjcGD1<fUhb!!ITR*@]<+0o:#1?gLYcfD>:VR?*Ca,pjQ%islMVo(V;SRI]lZUopt0Z*%q%Ur08uPK+l+hNJ'5K[XAtTcuX=?GB'eH!pR<aeZhU5Ej.)n*V?W*r)^aB^%2]3r\_qZ?blS4<B>\s"W@KG`Rg'bq=CN?2/Yg<]kt.%pilo99V"D)9,eE:p5pHbk?_Fe[<k"[C4200,IncV8R@Rn\L2%-dI+iuo"QqM>C5o[Njdn[)ijX-3SNF,'l6jV%7>L+$uH#3h=.`[%5?io8D%s>d5MP\6%6o4;r2^For,BF+O=/'!et2fS:^h8`Ct:U)j^7i9X?HC(Z.U+dDbkjcS:,`BJ,@.^5a`-;+6R^Z0'H5@Sh\I;%g,XpDeA'c`mBCrs0l]B9F'n`Ojq@VSbinLsoRH`9'n%f`C)NIXrVJSrraddQ4&d9A*@b-Ko?6l6+S*&1:cZ3K=hHl13*eajEj^.u%R,8n=j%OSkI"iZrg_'-rO7/*r2.cJk^ED\8%BbLiGE,JpJs_=f6iD8%2fh4Q"TA5AjftWF5J\-iDB'E&QQ7&QT"hhK-LL#dgU1B$%s1"*;]q\73*N"6<%fX7H_u%IJ\-$@?G.8SB6[3X\T<7KYqtk`;hG"2S+"mKYn*eAPl6d2coT$R3>1cUr4r1j!To5?Md1.5/aBAQ,%XM6iHru@La^H0&RID33o?aoitQ(a6d`:6.QG67iXcN#l^jPM2PI)!9X+/8LC'2JP/l2;!CPBg.>;"he.pKF7b#l/P?4.?fP-A9#<%+b,^sgOtYI+lm"$j5q@,Rh5/=Nbh&'&)5:@#pF4RaIdEi:/501]NtQn$kJmRgiGN;Kdf-\W:ATndp:j;]d1kr`Vls&?[Cqp`[?G(%mPhVOB--KjoF1.p?BA09Z2X"!o@t^cinMH*g#^QGcL^Dpea"1Nrn0$/qH\H:X,fCjVjf6a=0JbBMi4cp.4r7XoD8+0j]=[;?Ci`d%^:IL<I!']l^Nd.E#C\Md\>StBhi0R4j,Mf<j#5c(HVNlVHfON=au:r`ND&\`eh+nLK9u1ZS=\Wp]]Z\T4gA/g:JPMIm5ZcDkek)=%52?mEc/3S]b#ZZ+E/r80&T]'1drXVWO,2l#h^jeEfj?m.i5/F`e[VOEXBD#])7eVYVfDIILV/C'fY_(QOKS<YZ^`*7%#Xe+4Oa>Y%IN.t.Lu1[m3:+B4ph_p<RuQ=fpLcr7^Wjc:Zglddr&,M/bnKg*S>koU,Vg`*:8j-cl@[+G6B/a>([@PPc!s?jI-?CK&(n(@mU=l*%U%-Ks_V+1u\+A)CH+tCB7p$ios1kha=T?s/c1Mqb1@+Ym$^rI=MNd_TD0'p@7X"c0Z?(*]e3atBS%GR>Rdg4tUZS6Xd/,<?%pa?r%m[a4+PF[a^]ROk)]=E"J4p1RRSNhrmVd@$-T3VB.H%469s3-0qO,"Bc&G_ARSQYjh[gaP]P96LAQS5NY2]22;ioFEFpK.pTg91uL%H+SMlhV/8uOnVD)INlOSL5C<-SFt3Mr4h33oWM['HoTGs/A$0L9AlN1b,:(?4G"$qQt?l]1jf.E!P:%5Z0ilD0A`>.f?M@9J,21E%p#ku=l,c)on[/!;T@#H]et1:cHJdm^qsH8(obG6fU%`Do)B5ToPAt?uNDnlRWkqQhWA-ROVoJQHff1iQq=3?%24i66DO_W+GXFAa%N<e^t\=)5!\)kH;1cC*A3id@M5Msun7UN;_PK0C.++Lq6UegrhNiW!Gc2?qSQ`'.:*9?'9B4X5Snr!NTgmm4@^W1EJS'@o1h<ETU%mX85ak0lChf1lsm\39kH2Yj7t9W`g*dq:m`YC3J#O7V\VdFI6+DAO,0l^OIr:H^&(E0%DPH$+DH^6n!(T7!]3dKN+Xp=es:\[bt;%IpRSYWBA_CQo9.)D=0#[T%iDqU6"?+>[K+%XtKRqkrkcAMa!$Ike#TM+)fJ]N#nT5nVLOJEY!rD"#kNbpQBpJ,Pr`kXV9IbiB:<%%8)S?/_\:6;]>pE_7h45Ko6Jt+AF%QOP<\d9_\>&J.%crTs/+C.2_OVjit>]\]BA^0`.s-2'&T(':YOU9%qFK6HlI_,knne`ZeCDT%pH[oK1&)gP4>mE$`o)3"#2^a8lEQe*CYr%[pe8E0Vm`l*2AY2iinIR_)iO/k(>jUJ?Cng@R]fL9&(fT0:XIn/a.+3+\bF<2'nbs=%1YJ.CO5K$1(YJM6K9;bnI2>]GN?2l)5FWTF4qi8@WN_&RIt,N$;UXHkaQEJ^LN7mbVp8tic\n&13Z#E[A0)-=H?htL]"A%?b9,'m%a++,(-:O8>k/XAYDnir?S+QR>mFh=WH`d8"%au#eq2!>E2.*l(s--:.e(5!,R9PIg\i9M8bl*)36Q:7C6fWCbI4aXbkB6Nhc=::%%+'$Sbe9<4?Xm"PH]pp/t?6%;[U[K`so]b31pS5Cuc#)^5LH@@VKDUuOf/N<q]j@p%?rrutjAZ!PofXoM3($)j^43SGK^NH_qUf:u%T_$g.b^EeMXNcXbs#<0V]glnAec4]ob%k@^ZoFfkpMr09:OG&@len"q_fLh:IZCK1)?VdqkB`:5Ogaubn$1]I8/i<.oB6cUXS5a@%mQUC`ZMa/QbJR]D>[AsF@$]8o)h$rol:W(=Bqm<Z9<1]=PYl;iV2(j"4iu4B&(n(@Xp],Pjq!G#S=SMa4$S.cVY9dE_V0nChqqA=%Rgc<GHHadj'7%op=T(YeJ+h`?+dlkF)#eE'HN9<VW>"+KS5`;f</a@GOXOZ3T(D!Up9-eq3YCL:cchfF4`6pn=&lB8<n44EJ*VrY%llM6aK_Ycbfl`SE[l6/DaK;Jng!)R'`kR*dh;r>K2')+(aiM6*o3^8J^EYeS\a?cl"T3$sJ)cpYGIO3Vl@IjKFBTKMInf)j`H;*-%o$IEndeHW-L&Qq9q!/.R2e%HkcKDS6?/4Fhi!niKT!?5GV16*5QN"ERc2E!jmdI76bM^p9q$rt1T6;UL"TP[V-h/"Rdmft29:XB,%Isp%_S*StfVG4Z&PiX\gp9J;F/C9m1QSi2tIi"+7:Ti7F#J,Tg*qAdtMUKa6^A'Qng%YC":W3V;@ueP'-`>\tG/n+.A1o3!lQ:B2%oD\%BpKo0!3H"]LrIf[0o)6k6_/`iAhaKKjU\B4]&L)kYCSUlO[XSJ$[6KDhdV/H;96U:,f')S/T"OLbXQ/:.YkUN;/[#VV\_lkA%W`6Y&l]0uYbkd=6OZ*$UEESC0'DDGFHrg65c[I%0OoJM4=mf@.0gWVcXL`:$]<g%CKj,gO++AuTa'&1eU7\l,A]F21%,&\/rnW4;%J+FhuRqb2MkH^;n?`k+B5-`C^g@F]qbl?GaebgpYhs'tbBD-p&3lTc;]ES`B'SaAEY33,P!.g.Z$/hFs_p?_(rkN]j5VO&QW;5V`%2kQb.U7iThGlAegD.=gW2`;is@4@Y<m6m&2,:plc%g;Z_-=n:77kt^NkcgVb\%=P4hbEuDnDt:1p]`t]a3N=Qp?,Mo4oi@+)`EQ\%7MqGt#9Y9I)Q)n#)u*)qUGU*HUHsp8)9-!jOhh;<VX.!<@qj<&C($[n3R+/tn@()E9CKuOOe;q)nCtjZg-0>u%cI#f6DU.m:B41Z%+Cp/Jjg+jaB%iWU`C-9'"%^qHh.]4g,TPa7XonJ</na\+SE7?$o89kAfL*4FI%kF5K:Zt+1E'Y(FEY`B5Rg!(eU!'A,(W+VM:t+!%Hi$+K4.,=10MVa8WD>G1mgZksa6(JRk.RHO\(n(!m'Z8_q`.p8DjCL@e],r%pgLluR>a>7X2MJ`!??dZ@JaLSZtF$DPMmY&2[3Bt%R=RAJJIj^>(g#9Ns4(EKkM=7';gGEE(Du8m^^d;&7j,ghOOkPlP69H69^TnLd[;OLKm]n,\>LneroFF\^G,L+s6p!=8@<CA`[.;1%$^4R6qqVZ1Vubc[1_88nJ&>)Acl<ci+"/ng7aZuF'*V/dnOT;ma<2erf/&lOmXpd'H9>.9R3JH3_Z%B=cu?&qAnP(5nImV)-9MWb%AIDegk5UjC00hI@ZEsAN:55JBIgsDQ/2#9iIgh#H+lp^]AcqSo5=ga\b`3X,GUihc*o`Y3]6$8@NI^_Q!4O+.fA6FN#7.m.C=JTb%%M<LTI0r-)gar7;rCYZJ9RXWm%/Y+=*X;*WDT62%DUl=k('>L6R!+tT,6K1C;U?pJVY3j"]3K,F/3fa92P[[F3>k)5F56l-L8]X,%,Xaoh9LZi-",2Z-aU!_eO:`tbb3_#U6mDiAg`."spkV9=\:^o<m1e1e7fmZZR]F'NYkZ7XFu(!!T\'6?=GZ3n^%h*ujNEHNVLp0*%>mPUD$Qpcu,XJIS0/+FbKMZHk2TI:=#3cBq\?[jUJiPCFlR.-ZpkNR-h'#YG0LGu<*"e=@Ci?_W;*[kZR4')<s%X0qpAfS+;=Xqp%s$DC3UP^Zqr-OeU35t>#%g_As7aV=K2&HZ:3ucG9#h$*L$9BB60NpXi!23cco9K$QD14=(YSmkc@XqFmJ<:e8-7cHAo00PJ=5_pD%B-;"*[eZ[?#n2=nEsb$-4<@(S<$7db7LRJ9Q@oaM*4<_.e*Wb5=trk'$N3@]K+.73AaJs.P;XuN(dT9h#ZtgWh.:fAP)+37)m)Wd%aln5/"28j;jp_o(D[YA&7'a]VYRudR^'%;X@EH-WFkC)M2>gD#CN'!gE)QTe5VPI0@Znpn+7mSrinc0<48b:iGG4eWpttab1D#!N%]>oo;ruJ4V.&`>hGr5C#$ZgSQ8"dfGq#`q+PPGP[L?>09#DL<tO'h)Q\R0OG_^2BYLUL+NelR&L'RE9L!>!`KZKL0DAU]#8Zs$/7%J)[YfS0CIUE<:?04^=WlM(F95=:m3-($7[69S%buF`H`OH=kiEDoA90.7=5Zi=@Vi5'S1r0^+TZN!36V*TSIqE4Yn7s/.UjJ8hcM%HbuOXpKrQ8!pZ<f+7TIb$lA]s6Q&RR5CP'ho0X_n6P(C0!sU%i"]6Icm@kRf:f1bO8.p?,,$P/&9s?r06]rF9OS(oWb"HAdR[Wde%Uu8MZE"94,@"s4^i[dek)SZD@f1t$d`W$GF)`S2sJA:h]dpJo#Dh%<H1&PLAZ[j)J.a"GI8=0ib*;6S'E(&1&U=fg1g9:tpHnKb-%CRNer_u80$P1eg`W8hppZ2O-dZeJjM_=&8am-/ot;u#Di:?`QEH0/H[s3F4dr*@;0?hO?#HN$u/l`''O9Kb=)e&=^ScU+Ao&H?bE%=:(P\UHe#j\m"b#2C\Z-%)P59OlB>kC>!jt"9/$2A>Q\4d=p\0@2J"C-lEI5ic_n)Ba$&'Bk]$@K^(0tN_I[K%(aWe4BL%%bS7%n%rbC-Le'MP:$f:<1dQTs['n6$i\6Q(aqjK2<B.M_h8]ZSlMF@9#-l\l-#D/[HreDV!7\JEXM4OWVWQL3\oQ!(oG>6@=ppI`%XC"\<%c;#S8YYO+^Z5MBI#d&drB*2ioe9!^YhOP),lQK09oq(9]HCj5F,$qs=D!h8-WIMD-qn$:\o7/G5_XCWn%);t\#c`607d4S3@TRXr%][/(ilj^HF!5HC6;3Z'chIXSM'2]69HLl,9RDA2Pk[i[NYY8$DM6r+0r`4;)*7">G_B]qo3I-Z2'rIa'jh%>`DZ7tbn7j48ZRf@F%jObm&C8)H,K7=X(5N6%HfP$M"o8E\AU&@L9KTNrPl[B=VlRr2qa[Q<&:c^Xh]rid&;.uMb?obl-$N.+6$QkL>.a"E0!UObfa<VY"%mH#T6[HE]H=JQaXPst<h)2^`LBo;$h>GDUQ"G'G(q/-1u!iRXtW<`JsZYDDV^`,+>)E,G=KH`,i0jt%m\q]3X'k"jRj^aTPJHb6B%/]._-Z=pTWi-Qr>L80?q)9-_&?kF/BY]-rpp^?!m&mU;^?7HUs+qS"4,AA@'J/\NL.r<*)r^X$:'Qdl"!H&_a(CiZr$qCK29UMW@%USGq%KMfTTqomtCp^^h'KPplD"gL]Fo[3ds6m?$-(^_;F&/:"&YZ-9GDM3Z&hL\?DRK8#`TS<b<@*FXE@ZW#E3hd1M0S=Y<'9EUk%8VEi?LG8p"650oq'u4hu9841E&rgpbJ:f8'7T#6PjP^/oOc7,2&]l4BJBBTu+L6)7N##j30UO%"Hl?B9$7-5pT3n@e_!ljq_LU"s%(e>iO+;'tN&hBD_\1hC8#_tBt@L3h<nGs^L![84n7">ms#=^reL';;NJ;AsAC'73OaK'nHUd/O3Y#l/f:mquo8s1CN#f@bg)'pJ?%N(fTHLO$I-*$-@5\/o>bG&*0j'R;IX#s'lb+__.nY+VmR6l&N7X*f^cW:j?G%u/26:5<>T-p][7>aS!*$WASiekqAl"p]WslQt7N%,o\+$_a-a9!aVNc!3tMh1K\+"-H]^q!qAdmYM]Te1mKJ^$n%1.+"%HS12-(a*[\<+'FTR/#r!$i&4@.+'4G")()fR$V$./5e3q)\%'tHA!Tg8Yf7.RW#`Cs!'&]b'5Ujq@K#,IN/0d32`"(K*/#t/C"i@r%98:nB>8,uZ&SH+6Z<N%`?AVMq="S(LT"]$n*p]6Wa_4aG?%'S0A>,U+M^RXeaJ,(`>fW5fJOgQ3P80.5_;US?$W!>f2J1/SCZ`X#'Xm\"iR+e]F-:J`s6JA3M;jX5#o+@'BIN(S7=]7UhXka7"(%,r[nBU'a<r2O95nI<e'l-tF`V<G*#["XidJ)b&L[^^&7L7M/utOKaQ)"+$S*;@5\<R)-W"&54uK+Ci7I?]i'2+=E!K#t'VDdL6b$%:=QW&f*DJc+^Y;4!/i+!K2H.e7+3P$#?l!`JS'G0&^iZ`!p.;OMdctsD44o78KnEUYkuM2U.(?g;i/BF*!;29Td$1B_]h!A%P,R*%*CU*=Jbd:MN.aeqAd;Et51CT!,8)g:!!-LDac<$8Beg)U,st.R41gS8!/;*U<&>4VX6qO"!=!<\3-qs^P)%4Ifd;j[MGO@VQD1W\%#V5T\L'XO`hI%ZU,.:moBYg//VFPO=OSKNs,n9c76nXc+g)epN)@-D"\3,_3^sa9,/Y8k2-+P.r,0rOHA,qU&oIbZR;%!L-]5ms$%i@o:A6lX<B.?H1h[8D_\N*$+a%*)ccaT5nk@`d\%,c`I-G_AOY(b7%+(Ek-d!*"VQ)Q@0s;n8KZZ?rUHfs&'k:3:]1GBsOm;%!:T%rgWcfYtQc_gM5&%&pF07^*(c,GR20-b<XVFV;[]NK;#t9\)[8&%$%X$k0TQ(h;uM6!ZV%8k]8Xe>C`dM&d7Z;/k4%PAE?h(O8jWo%!IM4-Upeo^iH#T=ZDRW3;c&4N.b'KQ`M14O6<TUC)AbeE;%i1_&B\BB#WRgnpqWq8a;bn)3RR3";$LeVi7GjG"%%n+3"4dl`*Lf@%]IsM\LG2[`@6nV6@@BRG,7L:MA3,:LjH.@_6U_*PL%2*+@%\JP0^-r+U-8\u'tFc^&kY.]5]@\E7KLDalkUiF-b%:g0@X$S=omcV%6/!2kN+c>mJ`+DXGo)43rkJW5O;^MA')3u5.g=EORO5p@Y`8f4+cK,GE%<p)['4QqKe5oa<Z3Cu![;JQJJaEdXpq&3,0o,"Of:S7%J2qHEORp6o)?lK<((HCZ/f0:,KP>#a*"i52\V+@P\VIa6r"TWhKF-[%]RZ`4l[X?,Z-(uq(n(5Q@.=O;$:1PdUt?,98N<rM_Uoi$%+%3oWelVjc&.g&SKRlMrIg*Au/gfE)QRI(Yf3oB8!=tJ_rW%a<U(hc&@,-a+/T;Vj0-D/L^qZu77?Ya$7h-seOa%t&jj:Y/3?<<K%[+>;/"Hn\A4I5#h4!$lOVZlc!AsK)EOWu+deq?\*Nt9rShS8'&7G`HIG_of]?_ASF1^-2J0Jip5=ZR;Y"D=1?ScA`u7S=*T!M">3%!?qe%7RK<dk/r@AfIf#de^8+`cQJ*<6!H?0e8hau1.#;J#/U4eb1\UN#nh-Lh\/5,_S!XO!`N.`Y.LpD9)+F(Wg)&#i4DsU\c#@6%^(Jn2i<mW?*lJZKlP(O82.g$gLsD%$2-Y5&kUoqVSUs56/ePIE^TU<<'?-*8']8nefU9usH<$VY`(]=l1#/I>NZ"Oes4>Ps2jt2k%5Y2?)"3f.4Y-64ubi^?lI3eA*L^BhS>\D+*r("!HdL,$(;YBK(kcm?'M`P\NM`D\NYJ45BkL3e=ao4=bN30[1>n>XO+C\C)nLp5e%VWjeds-lCO-V3Lej$1;`2?(R(YaUOIIs50lEHI;!ZJn%U]t&U^"\%Q!rXqkbIc\3ZMF1r?B(PlFBE3sKbbrE=r3`jTfdMgO(pdBD%Bk9b`rp&05"<AarZJT1NB(qJH!W;69Lms%hVU:m:JP/f[I]RIRUJH"0NTmOQht[`*5LOoR^n2V%l?<pWq"G9DlITU).F"4.Y+CZ<%,Of2")&bD6n:81EY@V]?j/IE4lgF=b\-B)Hb`]%[$<CcJrQa:a<%#mH_&Ao$\EGR@$g,ZQUhKddURT^FqSrZ,:LQsN?Opp98U9W/%cK<.=_oH4hbHaZUJ+H7Vk-^cDV/61$:Mquk7$r)nen?CKr>XBnF5ui+(>^OKorfF]I'F_e8,n58b5O#'!YP%-*l<$/mLHhom\/Zs%*]T2/!P]CZ7HS-?rE@cW+_T'YUs`Nbk5FSXhjqOsmg;50P"Do14LSgH;388O5An<E%I@)A!2>A8:.Dn_1I>BbI)9Ya:/FlA`@-Ol%U;bK*d2`WpTu(P!?`Q$9[(@67K?ITRZ^^XChWV,XfLPtJI1Tc8^47SffiOs5Ag0>%:FsZ09npOd$m=sab",%p7IApm\i9(1#PPm-%a9=d]^RQs_b@*=[Sm\9XY".1I61QB7g*o?JN6okS/D>D=8*o1?$hl9,,@:-`CF@"F>UU,HXMc%TPf5g4.Zl8&TuA/_$Z,Y,m#US7%.3_1h,Kl9rY<-G,(RrN=`!74ch<@\h:>1%=G3$[`P'2C.mGlm45FufEp<ViJZS62V>0R("L3@Z*$\*%%R"f_H$62?K\G?gEM^W4V%%)Ii@M25StTd'>cVSH#_6`Y&m++tsTj1*dD(LU:`,GAY0jk_C&_.Wh9:F(PF-mUX=;FEE'e$e8s8-MHIr#nK%f'pFiHZ:`CGC-(k%Ir^akkGYMmE!n5=AmqldB:k[]kKmP-0*H<BSnl6[BJYpIk>eD6[(qnQcq0Z,$,u'Jfqn?iq+qCpLY*1-fOQfXg/k4`De7^+3+g8r%s'rQD^]eJ:(]'?C!h^""n,EdBp'Klcg1Fs!nZ2a$Gr6ts6IBh1GUW(%YeLBA!CGF-2ZV$D-);TC'8X!L9c&u1?H'r++XE7F&EjZC%?H:`WdUk6H0RJjV,m$lO`n`1/f^Yr;E-#-qg"aFJClsK$!7.u6([5$APOE7Zo>R?q>dlqPl<uTt*88B55Cpj;[;0om,)2-dS&Jpf%LPc0Lkoig,kD!@"5=VB&D*/$p"t[RVY3gG>d=4"Y+`C>t`HR&R*_*KPr'+*-I]LFY/lLsH;N,(B9pdu)9i&DI^^e\E[D*:BRW]tH%em;S6,m-D%GO12dCB4gHn`k)F=YY9;8+Z1<G'o?KO\6dI6@^lr\o+?@Ar'sUch?LupG&9KJ:q]Q0A,c32,lNcAdB-6!-<eLbU@8s%*B\b%`u2;6>7k]ZRCpN0D\5(E7;DD'a\+ZGAF^M6/K6$T$#I*"9@R8M%')BgT-I;e;%p[S'`BJ?%;]*[eZ*'\HZK5IqW4_4#JSK2%[dHmA^B3cI)Q;hU(/HDeBGDTHC/IF.&k88+02<>L5P)e7AD8/D^Jg_*JP.UDi/+m=.UV/:%sV_:@FMFo+Om+p24OXrQBgX3NERPa%;<oj1PJAUTX^S"Q43:a6Z&XrW3KBlUn9-1B\[LZ9dE`S#,k[I/D-;,n<_u-f.-dtE!b^m:E'Nj5BW\hf)ChX:2NrK\ZKKAdYVfe/%!^c"T#%UroV`D+0-$pVeO2YjU(&lb&lAG2l8UI`![,2^FY*9r[^c/n.g6=\;KO1^FkbadW7,ZISPg^"gc[.qh;bTSgOZJKKJ@h#%%R\X0Ti1]]aPV<-I)NPXsi%C)(L-o/TiK9YJq,0&QB&aOK-,IlFhmoG0;g:YflF7[+_0Yq#H1,590t0fd&fF7q.9%!]L<586>Ju]f%,ZHMJU,s;h[Wj$3T?X42a$,rcW.r&^``fa(#&>q[6Z#]]OQV7oL-0^DLIA'iNi,8=3#9ZY@j+8b!4N^N@dIACf/PRZMSKs(4+7K:%keJ;F]n@S7oh/<e<_*^Y35COHOg*YB;fq-2_TaVV$THrX>PKdkFI=NcD(,^QZ3oUYIek8AT*D4bJ\[Xs_.M'n0^Jfk!_"oL^Nc1X%2t[ujr==lL[T$WMb;if=<Z4_5)n:>O&i-GDF#f1e"1:'UdoR*1$iXm(#nAXW,^Ftg1/TXm286bgpU0S;@K8,AR9:T\@UL'5-Cadb%F@<UNiF9&#U@9Qj)1JZh[9V&RPYkOD%:-U-;XtE.n[`.5]Gj7MPSH$.D>uC.O2s4op8)N$Bgr<Ee`_)*h+e)fg7'.u)oN"+C+*S#%_fjj9DmZ*Z(WK0hS#&`E[9E;P946Uhn:73tE%\\M9@:9Ad-2s'rg[TdjWFg1$@(-WaT+TD&"l.@j,?gg>-esLAD?AHX^;$X/!Z%N%Qc4,tk`9TN3?8?[kWU)(&qjT,+sbRbaub,eCO"JG5F.saVYO7k+OnbgaEHJ*%NW,a,N+rV1gA*4fJ.)tZHKrL;XHbg2=*WL(s%n7%6We"Q.L?K"Q\nVfXL2;1Ye&)Wh;rmX*4:L?ii"H9Q&XKaC\ap:Pe;$sS(/)FM'sW(OQ2DT3]NKXQ65^dOgm&p#mZ1bk`D&a>HEEA%B>TW%Cq*ZjI#Y7os'5boC6aI")6K3s<g4D6a6To$QIi4o%^.#=6U\)86K1Qg.\UH@Q@H<jmhrY`GWhccrR2mTOYrZ4^P5A`KEFkY%k$5_\]^b01NRTh]1.B&KF^)u^0RJ?I">nK@hYYc.=H<@tC0\$CIU@+r%*Z(FV<Jk3N>0fA,IAS+3PJFN:"/N%SuTLb=alg/*70F!%2mPdPeZDmNmUR`]12UZ3^2Tjd7+`]]ae5S,J$q+!.;6%/9uLUI?0e^-Nm':mK=$o3Q!"G4<GTZXJLO-afk.YV$+$A6("YiWA(-[:%'l]sVk[URiB#DrtZl),1Pl_b?B&$ubp/1C$.pc/T>Bm-e;RR"6fh/6+3A%-9W("[_Un6kAN""K9csXTO)n6``_9-0NW52kO(nVa<%0R2DUJ?cE:bkdV>!c$P^c%Kp^b"PT3BIM'sm(-d]c_bmc(tO5#*\A_VX>2H:8#gG`)c'LM^h]F-C@E%GYoQk`gN@]2B]LEr%5S,f%09eLGK3O`CB83JD[e<0e>3r-X1.ptHHZMK)=L2*#P$;ra;J2N%]YuP/)gNRCX72dFIHRSW=$99Q!Q-j=a(t0ND*FH`^R"KU;!M+K%Og\>'oWEMSN$5>H"TA-OQMT1.XeqjE]Sg^C.Y3q;!<$QE**8,*GMW"6AeBX_Rgg%'?MDFigisctJXR3Z8ioO^Sl3^1knjuT)k:GQ%7eQWo2JQqE*:')(FL^,[[N,`/lg6+KAPlmn<#56U^$`JcrH#J*IZ;4JTu7FEBS9&bT2.pGm[3JbYHhd<I:H;b_h>^R\+-TrXs$0R%?T0]h-BRqO!DcE[H(0]mJ2R0?M<WFNM[@0+9KW=Gn"5cnEpb4'^U5.R7tmWKhlVXScF7?@Y+_SEbg]o/>@3k6Dq5q'$j(0@@KG(F%%"%`DiI<DI/hLX0Kh^q[R)Erja,%:&;CGkP2Tk=+i+pmK-?P>T)MBJ)j486-Xhi5<H.0e&dpbt'adbKPV6;(n_7MDF[RnUEAc:R!%A9Wmr,lQ6AHPi1s^4[<@IEkmJ2Kf,V1/-4IRc[;L=NUZ*KI'urV@78jjLJeeZ7acVL]`4]"VFi=g+)]6Ll8YVKGe!YelFf"c:c0h%8<$SqF5<Ar`3#Fs/ITJHHA#?Jp/([m[guL642&h0o)@g[@4We5"peQe`2%eH$Q*M<5ehaG272t30DeAo0_:p?iQT$QgS288]A2[:%]4UN7i6V0R#ln5c[2q`*>h01j'%iiJNI:i_'g(o4L2aEu1@,p3qh2G*N"d<.m@Z9*eJ[:Mqg&`<oS<,P>,q&F-f%#GApQ-c[-&0M%<NAjo$P)W7<^=i'&fBEY%*76/N,JV<F[''_2mY6OLEL8uir.tP+nPU_pd)3r'eod\h$)Y-4rR&jDnmmU0?oE0S#;[-DVP4EJ]uLa%<pD7CQh-gI#!\8&_hW7W+aD6io+r4*E+'$M$6M%f)qVDLnW7k5]5@QomCEVb1<]7\/+tuE>a?@YO#oSk#$5I(?)>W6`\Mc"</jJi%W\<dDB"@/IV'8ot3(\ib-&>R[]C>&4c8+q!i-?[.?`Z#`.k5(NB&Zh2;J:0_c@&`2X-j)HD!"70<5/tQ\j*[8WX^(9IpA].N,_YT%FlE3Ta#jP'g$-/\b$HpV?bR5$\g\A]Z\R?1`;O(b(-[PtSgLZt0)EE?h`eec>P[3jI])a[Z.DZY>^FZ5<l(c=i-0'2T(:gWk![9?%]`Sj!I(VX^\OgD]Nd^!&f(gueM,^/.h,W[&eXoMZm=)ii^lVXn\'MNDpuM9#>RW5)\No6Q/DCT'cL;\)h8.+nN.-,$rF/!=lcFW2%STl@EUg:^i[K#'Lah."6q;LHuFan]5(%:n/A,'d!.t1I4E6fdAl>k(qfm@Q-FudW<S8!1Tl$M)oX%h1V*5=EG^\jgC:,[S$R`WkO%m\qjBMheh,96.sjU"'C=?1opBh`+)_&Gq1)eNH/:k8nXS1bjfGnt@\/03Lqo!rcVG_UYQ/#*2bs-@_.;I44rei>&$/`A;k0ipu\"%?fHP(*2@hXY6\rZjoc>iZ0/$H,gYfZHTQk)9'+'!2ScZ]rLccEYG\cpW1.ak*58<sm"L-(h@LCN`9&=k-Pm3flq<TVr27J#nHq5$%qhsn[)"gF*!7l!#^/V,rV[D\7,S0&]R>;BfYMTm;`;p'c2n:X"$YYd:'F4+W%=n'r)mI_O6,/*o\O$Op)CUS%_`k?_rG8P(m43R;%Y'u8aY59cjp?lf3PsQj`D12*/g%njdQ>KJUTRN2RI67]%%%`@Dp[gpC&a!7#S%ak.@$+$"=V1r53%oY9MZ\W.!4M4dV,$%]QpM@i%busCp^AAo!^+<i]bHEuS<dR@^$:Vh,,n#NQme>i*d5Np4PnTME?,.+#/-KO*`dPsgVc9%F3T;e6"+SJ3#fB6=]m1s]>+]>0Qg;mS%.TM^tiE[RRHg-'q[=B=q$')<+4Dc"a@EIP5Gk59Yj/LZU''Fu-Ep4s+ojh;I#Y'T*N+tB-\Khcr,m*N].&g:a_SnIc`NkO2)JT1E%YHg**\QUH^E>]q@X59M6+&!c=o$j<u3B(B1%h`]%>tmNE.]q0qC(*!J(rc!A:`_]RTW?fMe1``L&UTm`O&k)>%mKg@ji'eE)YM(;%CDB=u(T[@%I^C#u:g4-ql]h/9U*@i35)d%L5a!'maBg`2o()$Ckk+HMkV3u<F]Qi3lcrn,D8'?m6DL?SKE6J1.r;XoRt#&<>8Q*n%0ll$W3>4TNp`cGB;=r2<WKN1![/nN2d:.V'it=C<!]'"L`U%no=+PZk]!IC<i`t@.[T`dtccpEgYOc/qlEN@U3Fs[FGi$QL37gm=%qU6W'-KEl]prL&('K2U].WrCa0/O-2F([i_;W454.8PBeI&sP/ZFA/2&M;=er`25iY^$$F"M9*E9-m^Z4j>n`R9=tq\fJSc3FJ%O%iTdEU-maaZ07!ugnp*F:c!.T71H2iiJrj$ZP'h;4o]Vgeh"O-?]i&X-]skU)m;e^3.IYqoSh0'*)>GWa=I`%t_d4lgqE=Y]pfko'%<5*uhU>On\*)qf@oHO.S2QP=ZI%!HAM]Lm;D`J4URg>7gE1kRN3_tYXCm"cZ))d77'Z@.pYgKi]#PS;s;hE)HK27>B`).1-RQ;?"%)?Z?7J<Rr>J^_ONL4b*1Bu/]d#aj*L!hi'q*3rVCkUV]K#dL?s-@.$LT;$%q,uimDE,ZYPZd8EKLk6tjVq=X/2A_3p.7;Ne-A76b%2Q)EDp`5/A#r\4V_NPTQ8Mhs^.fq$j>aEB;F"1mldUG4(P2ILY:ZAHpVp\YjA"&?bJLt9iW]2Mc<Ra-hkG!m9,b?HJ*!%'OC!NsQ%N>>DlP%o&q-qpY<.H2VM"Hc`F-83&jSuOj5kp"6?N+3Q$9hATJ)FI2/2+/`CNj(,c&'Uho/gZ0@"P,'&ARdFT(PHfoI>CB*G"PC.%U8a!D\JlJ3JmaN``"(-2)f13"hOmX]rSgL2p-/6P'_jW3gV%9DQ>M"s?3.P+C8!C"g"-,PXHXmMZ-?EpQ9,'o@1Om[9fBK+7&dM1%SS-qMh;Km@[k!%Z$_5>o$(4kfNfrJj!%5\"!4so""T)`')&WSYb>jRF"4tlrX;alRnY^+N997CO;&l7!O:ML#2J6QL8T;Y!s+;b*%V10>-0=f@^gR'keZH`'][-4QF4NaRc;C:[6#XLns.g9:iK8\pD:\H--X$[t`pTCA#`./+-H==sab+&nnhS3i:\X1K/iGs5CXp#pe%Y.S(OY9%S4T?NA_c8dM\DMCg@orGAY@('Eo@dFX_NZF''#O#G!Ylb-KEHeV(X2;pEWYl`*T7Pa%r5iGuS#/rPNIrD1:rqd`#=B,Z%_PuK"]:HVa'ttbNq9_,?MLS<jT>83)-NQt?mi9prbi.I]P(1E^Z-CCk":B*'&+#o&=g7'u4s3l#%!^72K3LD0%NMkqGQ,e[Qk,0S%aV[f(-(YgUa;D.0YTsCh5`a$$:p2#6K21Z0Qoq<VT')M?2A!Qp_Nhuc/dXeV1'*MkjSpaDJ([)^j5EuZ9PE?7]m!B%6MZc@!9&0b%,,d7q;hMc+G[FE9$KeUfd-^^IiT&3b#(!j[TY,n$Q9Z.`65pKTMX)kQ)XGK[=*f3V5:mU_Rs3!mSORkh-i@VNk6T\C?KQ.k)).Dt%kqsR@D]YJ&g["!MWSed&%jYbZ]*N;el.(XU<Gs&"aQf8toeZkpaa^u`@_PgPdh+S*2$bTI]ZQ4L52b/H59uYV_+`$VDG2>sdK;39%5f<lU#m$%,28o3PPjJG_T17_YmMU@Df5f8E"E/_QqsKNl6&Wq)Y9$J)q"WrI_S4,MbCa^uQfO=Pgc;*b#)E=Pc\<?)QMWoXJ0%@5%XYu!Vd9E8C5qd.^!2?kNFr"UA'>JSnAP"X,4?87JD!Kp2em8"^F:aoQV3_T"7T0VLg0'u^YW8JBdelIn@n<k999<I?0T4@Pb;5$q%nk2eqelCog_ksF*ap%pDpChLda]kCU982jKj\%bNSo7!'&EV*N<b9^KX*22g4onqem,b)UC^^B5f_+u@1f5juUbp9dWBn=IJ]5r_%<!]nl)$-At@H_M%p($W'iWiO;,^BjqO:4K4:Z\H4.:C+/NlO#@]@kP,!7d'/d<Elba=NXqGEA*BZdYO;-MHpbMLSTOT:&fn,R9#\%2NHUg4e!*fm"GD$XWZ7OgWd2Q4<RC+pAt5aie?@NVMa.8p9_u4_V_</<NC9eFjJl>W\%WBdV$N/0mbL"ZjIm5B@/rID6i+op:8hZ%:V80$M9ekE3laLZ7SgNokk[KtWb.n@7K_Ct:O"Y<5]i3l2aX^Qd9GZ6;#K8lcpd*R?uqP@!KO.N!sdrLY1/;XL")YkWLkU^nu!`(%PO8sX#EVuUCo"Q8%$Hm&5Q;ZF1%<4eB0Us1B--`G*g+/$"XS^2m401IFW`W2&g)X2`_UD#G4V)X0;@P$eG+3K/taL,\XfAY2F:,I%K0es=]?+!E5X_7"V>QDqB3U'BR@?T>,6[-.).d89[hD.`R>0DS,.'Orm'iU<ckL6J7P"):bo<R]r$Y]PARZruQVFgRErJ+LT,,+-%QFAMP@aol[>kB!.*:lFt[g<"Wl2\hV\1MtYe(&-nV6oBU@%N0?^h?ecr9>j1;><8%A[pA:Qj<'+kZe1C]KQVf@lT6;pRL`E3BN>7%'?+;ABqb13n]2n+f3,H03H[3qr-U0:\*nG]jWM&&=^Dnk\T<hV)6<SskA73\E[[;$I3F3Enl[H6/ZMnZ$X[7_(o21Ub%G(4MjV%g%"$K]S\&)V"&<A_1c5'Ve0&$)Z1@Mb&Qt26(D#t/4(PYQ=^s([Kh(oUr[I2N(9Hplh!4Ho',?u-0L:OR9I@4Rd:[T^S(WL<+VS&Cr%JDpmL^g>"sf-'u>cK0)eB'.GY?G]qpQu89T"X1`]<!!XV,ED)QpT_HX?9OGR=f9BBlTnr5NV_aP(1:YoT]L+3T9B2m8pL@7'p_Fk%\9`]@Y4$]9?204^:("]+OY^0h?RACuam9/,6WO$cW"56c@b:G&9B#.c&]1[hFk[=hMWBPj'[&C0"G/g^JECd(fOQG#b-B5\\8]id%34JP+V!\DrH#5fP)D#-!SE,70<!lI=^SsG`1;pa+BKkaI*9Vb`KWo[iSL=XeLOKJ;R#]8'dcVZ)%PG:-pEltIAXpon2]`:qP36;C%NIJQGT9]iW>-m9p0L302$pQOimYR':O`uGn-cs1kCNs!bH(*'2s!jF)+R%AB"ZCCd@C#Y31b-r.13P_(17m9,dBi,O6:F5@O[ZAL%:P]';E!)04]elcMb59T7"@9UP#;B]&b0Ib>cK11POea20(Eu%1`YXj-cY+$ndY]MrS)p!BZht^Br%d-M)R$3<=$Z`.)0/0m)C>$>%fhALZ]_P1@\2M>&kG<7'T*9*Dirl&DAqCd;j25R1SmR(Z0CRsXQ)>bQ<%76"OTP;0*g<)\`SdNP\LL,26q4h8qf3#c9X;q"iWD]/%'RTD=S"<$^AY)esZM5$-;R.sSQNoS!jl3a.ok\\j7r930n?R!f*NakFb"]\X-Z&%\k)ASP!&q/N"(82gW1Iaf>OX'cd<VZtm*.$]%PBJP0_eZOSIW:O?qHPcX/b#.Oqab)'!Mr;lFaFiWRG;Z('H33s%No6Br!0ae(Y=7-7dBSll#)hmS&I)%CiUZH!KjfA-:^e-Sd<]9%_;Za7rE[_`/dAfN_PP:OK$0f'Ghjc0kt[@V<*[$f*(%u<)rQ]o40MX9&!hELQ_sr,GQ-srGm@HmrfiYJj3,]9\9KVR<:[iN"ZRq/%<p][b[jf#*;,bPG[()M&,\Nt70IKg!:sLd:SAb1?(l,PtnDRQ@ZKnQ6ZIG9F6],2>DuNNtNR^$*Hh0,RHB:os(YUsGJO@4pZ]*X%%O-1#TTkpO;>/P1Z^nJC([PKFPqkS1Rq>+#,-JhKCJg$cdSH1)6@fb*"98JT#DHp6"L@7StE)im%3pYB_.H;JXP`'N4&eqEUKYX5j%9QMQM'`n:/bN5Wml_W6LAKM8O@Fn&H]gTgckUb+R@m.epUki\mF.su%r7?#LVj+;r(9uS.1KUFX=n[W02@BD1G?d*LL&,&+/e3e8%*u@@#4c,UaJ]'K?co-$QO[/C=k!I3]D'=kgT=EI!,uc@1Z=mD3(3ghe5bU$Xeq!^8H#r"j,/?8g.Ys]^_)40RJ[BD!CI90,m7Aqs%/VS]r)oN)U12Y,tDk6H$k&GU3D9T'LD!K&&QA<Zqa#S@<>4fSl5ePE@;^j_bO9KIhb6VK,olGRbkd?0T+Dn)Mq6@8N7ljN^+!&R`%`8U<@8YEj$V,MP_>=eqK-Oj&IeP?Ya8]Zoi\"5J<VZ_?J+,#0?hYBf>dKALkgP3I^l1cC^1Vetd,^]R_O[UUjjK*AV'l:-0i3AI2%l#To#R(rJol:<^\c)^\G"D3Enj\9^aQG%V87O79:/HG3JIrk/r\Z*rX..+d.QTG-CQte5tS5sX41>>D\n+k;5OrLQM7he<+!A)lD%G5efT_;-+jL"F`4WI2*W;?3uFmX7fu^ESWN"o`GBj=WMeQ)PT9JH4rn/6KFSSVH5h:Y'0tIa:6/]*KIV2#ln6`!$J)Jc8h>Om.>V%1@_ih-JQ[a*>!?'5_L-bFL1T*YTsYf6_QZrGUEE9QfDZo/[FmBq+?3_^H'Dh"COK%e-A8<7L:bWKe$=X\]WHVZlLUZE(04up2]fI%[K;Lc<7)<!Kt_/OmTK2R@0sqWJHn[+aSa-Llj!%?47E1`LpOl*RJ3p1InkT_@!Vn0rOZARAknmBrVoc)+d[4">QGjYNJ]<tW2p8!%fh0t3*T+$jMMmgX.PL1B]D_51T(#\riL(/B!gN_Z\bXO;$GUX)L@'\NOK[dKl?#b<:DB#&NR?a<>O`AQ&?"!ZFUkq]j`0ChOmE.D%5,Q8rPV:]t^Drh1fB_q`^X[-qL[Xp^!;+4>j9S-TSARE`HkE(5UDNS.E9Y&I<n+,R7T1-+r4])m>_J+;eMhnC4(-DjO7\[8FGBVQ%1=_q\-hlN3gjAEH$P3>D4^[_&J'ng,Z;4QT$Cf>->%sk)$*=jknFkt.W4^aR@])/0ZtO3-pFHC?LFi$=jVLG\k,ib2g^E7KR!<b]%>Z.UTSBI,Zdbu_VU`>s,&Te/El$GB?_VtOkD?2)1ADks"nu4AC#5j]1ca,9-1lYJAEqZW(d)tnD/l:uc8HI4-hC'4E7ESU+[.4F8%Q7'VdoiR<:/AA]&^.]_P7#5R:Sn2:SAS7LXgj2*@20($<*:s:=[=$5kB7b4_ZLOd6%[TQhe1!1l1hV-*^+E\R?VR(dPOIJ&o*%ha%._EZj^9LIV]hU)UP@!HE]@2GnH$+H5=BBVPHGSFo-JbY'rqTHm;d[2`,]l'VJ"<4.R@8;sb[[+j&a+\.2<T9`)R*jZ_gAN9.8ahC%'QcBI:S%/j2QQ*Wp;2%N:6\PHm^,&-#;Y_*?EgPghO![`bBI-6]2^\aj6OeenQ:&<=L)"-;Y>&*8mPc@:;,C]%6cSi>2BKFA`i8Q%?f)JB<Mqr,UMdu5S!16dVqpI(bB^;?BrTG(gaoS\kplR&gRNS2XYBA0a16AkM%e4Xc+0-DSLukiUsnX$5JKg]g70p!9#M\6\Ooga%rRj;Qg7:![cU@"I;:h?&8SJMu9IFme\CI#u;4<OuFZX`rDMD`9:5;75p@LrA'Q(Gt&UaOB36.`i-Kp[uW&e4pb8m&?oJ,9$FW15s%2]K9Uilej-kk#0RAb@6>_f!f0k#rZ&E(hn/BQZpHV]S:^:*[1+>>OMuL<K.*hh[cD9iJ[Q/,.Lm0K<ESG1s%FS8P5_B=5rg0fjB(%Ar,#,e#Us^B&0PST/k.kmtp^.l4hT6fkkML*W"4MoRaT&F/QB,X[_.@*liD,X&D9MLVUSrGHMHZ:]+1qdh2-2:VLOeH@7OGG4a*D%W)K0a4kJ<B8PQ\CEGXXKeEQTO9t\/N)6HYNcIL$rmppDJe@R&Zhs%R>\'pP]\+>])V[8,g\Lc:OYYuW9aXFRF%@-IS6kXppC$\?l%Pr@^iT'pb@4]ce&e)@/se1%WqSr2$sbmEOtXnuT!FV/f_hs0jF'lr/iC(8O(Au2)5nTmLjSZ^F*Pp1;_B,rN[2CJ1/Na4+L`%=h;%hN_KH_/339FL[)ImLaPEg8Jk'1)+uKSYjN0JCH$pafsN`en#4>#WdB8XX`,*ouo_`f6u:#Yr1!WqW5=p8=Y<-0-+g"/sf!Kl4hs=%Edas6m\$9j++hbnIS0>f!kM/n!'6aNSglRHWpX'U^.f:T"2F?4\`F2u1R2V3l+L966Z(LiF`a5he\QT>s(T_4q)!?=S-:3tD*Peg%N5,&CDVdmY##E!k3Rq%g`e[Z*I\Zf6Ep]b-UK2j!<f_I[O7;d1/S4umpRh8@mW7CHXF=dNP^W'=4KWuG,`HS)IgSF;o\Y*<HZ&JJ%^3Q*SlDXhpDkCr8h7%r\:Sm]U1A?@&!QN2knDd:Dm9GlaoUfHfkdg]AS"Eg<!+Rb8@c#L\gYq_b_nsmJ;Z66hQ5U-,H`J`W3@LUU%<Bacg+u#s-)Ia]P6;LMfDdiaS;f0OTSo,dnIsSk'96r-o8[\t917nq[4qpbIQd%kNf5*kW%bCo4.b?t>l->XL0;S],hp@8]`2Qrc%Jj'X'P!(H@i^jaGo5m@]O"F-UGHr:*^))`MA=,oYdV]c>,1R%\S4?00L2)j=)hagM%5]8j]fm(/:'(#r[m6_/8;4pGGD[RbSPIj:%)!AQsFSbca3gKUt`EZ22$X1;D)!C++$KIXPU!rQ8FUFlhe8<(]Q-Y_0T#hRL%o]c/#;4W-%)($b(H\H.SVFnPpHOf<0tpj(_6<^+%Ss6fPh+j+,YNcfj8c2hep]%DFl!qc,e++BWh^S3sAc<OK@O:5:FS.\3(ngX"l<`!in1LMSThhAXl5>!7(I&(JGNh4-ZIFo['+3FE%CIu12a0HI',$.Fc(,0gI86I)MM9A<=NNaY(AQ$or4&<E9`!&O;Xj3?2r'eBe:Hi`h(P?k'PN]>Wpfg,Ro)l@S]tW9LFcAll4r%J^%TSRnpW@$!j>oe<8_;rZ!>j)1"^jHCHBHWAd>mm?'1F(40!OYF&L7M*(:MSi+[!7WL_3"j:1^:kAr88oZ`$!8QJKa2C?c.I/r](^u%F0:eo"#G0SOPM^:7787E7pr@\jT#!jF(n/VA"&$"XgA9Y%dB5MhiWB_k?4Bt;5OF-b0qEA<S7fFkYJZnOQ(#Wq9`jFX/bUcCeiY?%%4MR8rY#\3KC\g\O(j](;9oe7YD1-(9L!"]4hTr&$]E(]!k'"3(usFaL#!oYccP24Wk9!X8UMi0"`m^,\0pFJn_RD@GfL_7Dp3^l%K?k;iK2%iAT^n5ET&NE.>cE%,C=OQS?;'sa9WoKp*rS_8!lZ<5<R7ljFCD(`)g=^f94'*C;E^Vs`XR$:bqJ)%UP$1f,5&Oh?"p?V%*N@!Q3/sm@:A13H@)^LRd]qPq)62T-/gNf13*qCR-C^9.`FM)<^2ibnf2/6]QU5*S$)odU&VY:H%3pb(K$R`l:ICIB`!:SY.#e8t%fKP*GZI1`DcSWaI8E+0MeBnJdH\u-5"f;JM8faNC-bCa;T2P)L43=%EeFfc",l?<&%#n"lIe8EIJnU95K.XY^SJ,:Lg70?QSX?(U%7.ccjQW.-b#qSFPf6<pjEV4"KNns/qe0s-EL;)fajL,l%9bKYL_k*TS,\8bbbd-LOPf`OPG6tH!D&XgCT2F0a**F5M-(AKBK#,3=%p@Os+Z<p(ig(7EMEl4qBUu@0EXiuU]Z/F&qO\;T.Umm)eZ[PGn;[OGTF;F'flJus7BhZ>`k]\+FJWfma3s.9YGU-*DV`D!._39OY%*tO;i*lc92@Z3>p`ooc:M9N7V&*)OW>X'aW^tgU1koEEl!V2Ch%u`B$bb<S<A*^M>9TR:8Ci-0LX=.r`+]>jGTC!IDU\.^u9'4iC%V[>@<YKn\A>aC!Q&NB9^![dZGgUXYX7aQ5c_-B$93Soo8$Y6OSii*-V>^bXfU))QJ#.!>pmY);f8QA362CIuqen#:(<C*VM?".iH%`[2pMDbo(c=99(acHA]S])#\#dXb_&j8/n3ep9N=QMSrAOOr%/M=H[DQ3VPg!g%->>NdT)Qt=GJi-"F,m2#0Vc]:iY[qZ[TDDN<_%lH@*iX7I2ISik<k?(aX"j"M5<iVmPl1kW:S:,DCeM9,eeYBNShU?ngBZC$9,Ki!KS`HDo7YHE]YdcBL^-/eDuFKr)2c(f1Jm*bN(%R6B$DO;R'lkd-Z>b]#Bc.9W(@]Ms7Ig5,e;.G<s^dXS/0Z>VHl!iEt^G"Q]2-qQQ9[9;?L]`In9K0i0e#)k8o[4G$#qEsS'dAjhi%j>$$Qh'H7[4YZ=,d..e?4;m;Xe>bb]?N[QCOKXdfZ=L%_Zrc?_Msl>-?0T=ndZrBO^<MNk9rIH-Vha1?cioHM+PUJP'BX9N]6.n/%"<WQhA-g$$@Y`.Mi_!nepYk`9SQ"Z4.T^nsB;;Z=m%2UXGRmhj6>E:)LB<:f3fpb5q."aqL:*ZSCiWIPj3(bG)*0Q8V"S@73@21;%V;/h*MgmOL4(G6'3#O,QhkB?LGsE]G;tJ+37BJ1.6=;MU#aAn)dI%K=`rcB9Xq0%(m3Z#20\=Fd\TgY&F-C7C#"KP%mQ;D:pYb!C%LnQ5k8U69-,91+eG.2g-DHm?=\O*fi&QP^IiA.SAY)Fbk:AAVO=E:L?cla`'>(87>6Z[;NJXmaL6*3".]g\Q6F(P`DEqe%\ZslYj%*?'uUN<Xjd:SVc<8>'ecZ&5I-)lbJ)MKjV`N<Xo52\n6=c,'f#"BK^dlm]@2Nj.jWWMZT@G*77ZB.o7AN*d]t,A8n>jToY*#`_fX%.@+:XV,\K\Y*d7WH:I,D0S3=V*GYI"_J6J4'X)H0Tl8g1B)re$QcFf"+DnqNKB+;"KiuWZ>?%p/R/V-*Y*.=AH\K6d#EARpVYK_&%.cb%3G>R_:2Ds_a&N#FI*:'c@/ejoR#K&8+W+@LJk&?QCmQ752<N?E3fWfJIBR\#<Wq7/'ohb[[B2\:GFEk`j#E#<oCqsSiORGWq%)B/%AYe$;*7huY<n"@;oV!3N7/_nI*!NPORdb:StU&I30U9oW$=tp:Qa1p5X,'nZ@E-AI?L:6Tf,bJo+)N(sWTOA5_W0a8q7frNW%f+t+YQu)AYL&&2dU9:4H/ibC-k>Zs(/Iso0)1.U64^GFIkf\QC>4H\8W3KqE?%9&c!QM4N]8Ci0Q]jL(96+pWH4!(aW87ukj*!K6%O:6g7#4S"JGc;-NDm^U]oiB(E8L'k/CRFZY;V-7NhRTKun+Tl*75%qG=qIjW,OVuD^^Sh4CefuZ=`<s;![FnKa2sG8<gN<u3\(;)%8qqT8D[DekMZNPck^3.=8(]@'as'>h$5_P\g(;4)&u*N_7i$[k6e-54a7BO;GUhN.1SJro>$Scf41Z/K2Wo'pkkK_m<7&`:L(:5W%1TmD2cVup7L/)fe@Ki<G[G^I1FN,&;I'qnK20?hQFL$_kTGfk`@0N3(/U1Y4SPH)1"eBP=i/T[:`YEU4ro?F^k`"6sN#eaLcFAH9%BAj?(TeijEg\,#L2C.UT]d4K+6*JQTGl:7-a$=qE+`1e:_4^A=@K!/l_<]]GX].%GhE,M^1;2D`!DAj;K%erI9KIW^%s6/ThJ$R:%:NL*4NNuSa[.2_)_4!.fGZ(X5)#uJGLLka[YSZ?B3Qq#@d4>rrac#7HR;VHA*g0RcUIjUj?q>SiF,ERBPA&XDXsq(iW(UYXG7L)V%;!kt36ndPH$oiE+)s^2bn\iR&23Y"BE8>@HMVSbKpb22NWZ7_bc"Pd"MNZ2@h$e[[dfftB>6;`F#t-=t+V9l!b*DE7[fB+4"m^Ot%9@YV.`T2C0jH@)raZSe;h:pC1)&J]E0/;ik5I.kr6XtIn/A8H-jH"#QcAWBkbg0=YA/nG^r5tRe*ET>XXP3MB:>IBR)-mrQBkD7L%of>:eSuY"(:;eV9e+sm%\fM63;XS\_XgComJKIBXFU'4Tc5QZB),/:<n5aV2AT\2UO+*D[prmJ^9US3#SIU2Wk9(bg=fR_tNQRJk%J8+AMh]H@."RBJ51KY";H'/Mo[PPp&M;NI@7pS3?CVQj6OP1e_k0'o+)me6^6.GSuQDX=q.M*Kue0g)d<'Jmf,l2!ph7<7*RFNEL%H0Xa^FB>OKHePW)AUBKtmN>2a7_s0^Z_Q)Dj`[IsC1UKpY&nBb`<)@8RE>H==>?V4%YGm!an@&=Eq6V>?$$p//oX.s8"SYf:9=8R%)QTFd(M6[P!m44sq-qD:N_ZMUcg!>;OAfm7h28/*^,=fu++%9TeO?SU(,n,LZ&9XO48NN35.>P;dCsiTXL6J<.Mf6k.JMOR,I96Q%nbb+DcF-Y@`aD>A_JF&-%.LW&7RhlOqSfTT)9%]eB6V^8d;_^Fs1LNi7YX*bSX^\495Suh2'X?:gnIlA6XI;5cH,MF5+!>S5.G?#%2^>*MCMd70VOr+;I%JdJ0etMg$uJ'NUJ[.g?D"]J7V40s%hTJ`J/In;S4cH39K:_Rp:YRL^/ijZVXL#bA]2'kS&U>l%(s,LX3@7*%_d)T#eC!62`>,c$7nMurWHl_]oNE\24(&0&BO>5X%RT4:YartX1q*O)<stJIea9\W<jb:0f%'/l?Vc_L%[F?NWt[HdJjSgC<i&me%/WI4(H+'9qG&o#u#CFkQQuoue30QK)Om:nK4+D)(H8tRMkiOV"8%.^Ap=u@Q@m-@M^:pAn_]>LUd(CFFVRbUMf_'2m]W\8i4*EcW%+qGo!`#ZH2cL@'KUXd98<*T2-[p&3$&#YH,FI%(?>:13T>;(.N:BHiRD=<>2nh%!1M7g1%-dkufn)jqBf0^kFZa^[s'TR::`SN,X%(s\fi=C<`ec2e<RdV*_)5kQ1Co,Z/]\5#73VHlri>d%+biT"BO%)HlE@]0o+c"p0^CKJEV;&LoK&qj*.QMZU!]nKs-e9Xei%.ABQ%6QL(biqm[L"?,&=jjW[C)DHbQ5n)#4<t+7/KogaT#kpOK#/N%;_ebm@V7Xtj!n1M"22r6uV_u%CNWb(_?<(J;AgO,4De;!2+ik>q%b(ZB:;TTSF7ASKa;TTU7i6VX8H['^Y7I%dQ.T.@K;N^fpUl*ZW,?:O'=?d"94/Je1f9bAY#$S9?@Fn4CDR@q3f3$/5&H$ieCr!,(%!\6n%2"]F-:^SSNIaZrtF/2^D/\:j+V/Z=n/U&e#ZPlmd<XL58a2DGs^SDQ=PuTNA1u52H:*Vu8C"lpBlO[L"'B.1fE^"a#M==,e%XLC7=JSGIT14?6j;7*PX&6>t`%l-8_LWKcQV^HVP#@EH#(]7!J+Ju(._YQV?PD=Li:u&.PX0]kZZL"NEH'%)'hAW<6c9)R*NT$Li%_!JK3mm/Tf!a5BE&\*c8iDo)eq!$2g`7K`r58f6[+1u^j$]R:H"#&2`Sr!SmWJ8WH;A=X5=/8cDELp:+`8APUS5?JhG26<\`+;p7%((A:[7FA(f6%.T><o9.l=JpA$ag5<YgQPL>gUD0Vh8aY:CTdFbAFd%TfB[Nd</[#W.^F#n@^jgiTqiCQ-"*^EZ`,o_Fg9\r6%p=E%E)OHfN[R>QCRn5Re$I&YHIJoU1T@T_1&@H,rU9KlS\j,h^\%!T$Q<<1=*<hP\m4'f*4h\%19Z7p49H,**Cb_`TMIZn]_SJAe4R?^%c#fi5%X>5KQL*k^>HrTd$8MIto,Va1@EHni<oo,E=W5U#kJn8@[C">r--=#i>GVSjiTHq;,C1tEh;DgWY7!#c.k0*Fp:p7ClJ<:b%>tf`E8geku.R,2D8%hJhCIkH]<K;$^SE2;,_0cd$`G3K(m,frOqtdC!,,[RLN@`laQcL&h:OV]$qG*<(k@]+mJ9@YlhH>^nbl7@W%m3"'%PNs&B\%Cp*dtsSEX/4:ko^5pX[sK0.T5$F#/DP6Gl)^BcF*KR5<_cI701W"=drPB\WI3KL)-^UKrINL@>.&HVkDpWg9rA0;%nh+V!eT?.?j?9O-FOsi[>"tn@a'u]2Zt_Y(=um%<HZlKfe&o)Y'+^++9rC;51=fsUXJXHeDPZlgN`AfO<D064gAGC0FNPbt)L+l0%<7>PAVd#SGK<+7Dkbm,DFbFKj3@M3qL%hdJdfP6K<&n\NSMc?H>"p@L-#Ac+#0'=W6Xu)B<DBC!N1tB7YtVHHXesRIV6cTH_748<%h%kNeS$Y2:>tsM2==oY\8k5nY1Q5Y$<_[52131<J3b/&-XD0dJA70?RR+6;5Q!?h[VUP)[2=KQ5*uk8YYH(u+$36q"`HF8Q8cKR0%R6qANo"-n5(=JTX],^WQ?16dWqs'D5Egl)up:RS(gUj\G-hm%RP-?5!K`&P<G:Y;N^mBcP?B#.8)j4c4i%_oNcLe,<CI80Q2m'!e%MC3g\f$lBCGcEMP40-SZ;T$-pfBS.t(0-c>ZSp(P+Y./JdG;Xjh!sQ4=`hd[^#i)eFu`4]_`M+EVch,QWK;"a1Vn5--S$j]gNu9(%20Yq,bSXoj/73I2S5J?#\hc^4kp@)m0;]QA*IQ*P])?9^ID?c2]2E8Np,V:CGc"4l"^na`Jkk3C(5cHNCf.cA\_MP^npm]bGKQXp%Y4>h#h0WhRT8P3KGh1'R>J-WSU67An<<Lh!=fHp/XY9#lGIo)"c[gg>L.4Tc+t$U.@B8.&Dq,MD4!r1E4r[+4]a'i.)TeQ#h<FUs%d<7kX:rh<"<M*I&Fp:&5nZAEihkBVgl`llA-];rhc)>Omc9Vgor6?o#a+'=VC#2Rm<@M`mB,:\_IBsgB@to]FhJLHfDB87H5QL.Q%(E']%SmQsX[C5JN7HM<RKe1V?*_74:U"22^)-5b9%/0A]ZA8:*^:W^6GuL<sXK?d]8l2<@hpP-9k%\^Q:R<B\h`CLVn&i\gh$F5'%BNO@LE/nm0!.o:]D:JoL>R8k-*:C7:(%.qAFQ;gQ<d<F=4"F\b?JZNM<\s6c\D[q[/r]5.43e:ZqqPDhq[Ib\Q&dR'?dU13iU5Wn%ngr<)=h#pL#WLQ/<GBLhNkl0KZFV:hoca4hE2S'?lc]"%^4dNo/=pSdX.L:GY)>1iaATN.)UYVY_V,6qDN;tnU[rFq@BI35nHaiV%j@MV;YZA<#A.?hUfdoSC)SnF'4_I$fd7Gu,1PK>CXKc'LKQp2"N!WgW[qgE(ej?`GRfEhk[_raTG)X'L^A%"tpL"k])3\2p:<]IN%M=O]kC)N3ladp:l6l4[p*<81DAh6,pZ!,.XN\U60E@%:=]p/u4V%mLB$p6)b1pF>K(,:@`OTnsB4_e5CmDjag_A-t50KZ\a>("n*%)(6i)$H,(Q<c=egot!YH8o9%d9QP"i(0Nhi$LQNNP#8Scj-jbeog/!-_`[@9h4rgj=BOj6piVYe5!%*PR8c>=f=6DU).*%cYBi)`%%oV0k\(=Y^)ZB3/+"U?2S6s6,<2'W@qO.nD#C>Ejo2_02TBglIhc2$tK\Bpr2a#4X=?\hj];3)pc(eVV(TE/qAaVm1d@L/N^6&5]%ML3u<]sG^\n!Z?2NH7(O//E'8l.>nHV&XiWdj]Wi2P]:Q]ct*JS("&(YNuP\G?QUP+2q"*7<k^pm,g_d9gb1N1'G?1eGe99jS&p0%9@J:Yadl`M?MM_+4O6-[0D*EV1i**ooR7FaSJ%dNMQGSEg.LHqGN7%u:Tr6Md5?,99XdriF1M.[4OoiMHg5i9Aaf9Z&bI$eoYRH[%f`e;]75KGuJ3F9.R%&YaqV(=S:5?jVKGt=qDNYJ;&=8m3fI8V?E6_Z_V]`M-?,$W4:>(Z>]MY9qVP.GcN4)I3>uPGp8@lc6R6BC'%QEQ!CMTIP>U0j(JZ+?b@%nZ6fZ+A,#Qb0Y?.p;PoJN'pb>pe<!D:T);cEhZ</SGnjVi8U[m[^eZ)&:;n:S-@V.a;Tg,jCB7S=eg?%KBJ#qf!*)0LOE?\6OK:(MtKu`ST\^u+_dQjA=P%(ECa*l7JGAlRlg#NYpsnhkb"giYI/Dpqq[\2kgqJH[[_t%*prI:[iu0/btg=+%Y\sCV3&."nPuXF8_'dX)=s!]12m]nbZ($3tD#%?%iZX_$C%!IO!^-)lBS[GIojXdq$O!?A9?TqV9N<s^I9'Tep\PGB1edY>Xa;JB%:,-bq-%de>#&I_u)]%5nn!UeuPuU%O3:*ZPQ05WBZBJclR8rcoD]fm]9i#'Ap.$q`nSr*9X7UTf,i`s2#'ZqH/gN59H=;RIX.:jY%;%6*/?coT.k>KX)R<mo9+Xtj1PgUZ.YnZ]OC+6(E.HscMApb2O(&HmSpTfK>*UCqRIBW1,h;87#fe#6he[7l^*qaI@hAp*<[6-NE%Ebje-&<*%5Vm@&VL2/q[>NN_JhBD5ss!g:721V"<+jg=!rC/r`kg`iOT[arGgE&:iC!b2%##I;<E5*kfX#5E@Q"TP85cZbm[Y(R[%Xk!L3SLXM;!EuT+Pgrn';$CX@"q\bpHWL5_$q[dA86E(6j4U$SEA$@ZGU(soQgtFtWIO<3I*/P-?Zdfid>_t_]9LW0NudI_524X,%rEjOnT>Kpkb:_o*^*!1'Qh$R%?[9G`I.F??)O/Zs<qssb4=6o@`jbdbFuGS,YMULMiN1r&B6lJc;==)jVP\dBhbLe#%IWnq^/+!T%Hi4X85Jl)Mg@tF]B8*c=nbqnKgS0eh<kkcCU%Z.Nc]F>dAN,#ZFK_>,c4K&r+5pNjj'2HjF%SOLlY!l&a_!]0CO!%Tn^M*>I*fQU%;Uq==3d8U`5]lJf1S0\SL[)VJqAJ2U[r6\kqHcDH*G8Sh5qB3]aMHO;V/LX<Hi8nAofGoK)Ime&M<,DL9^_R0%X#7(619*&TCK%4%#Md@DGg6-2p\O,AJL9h6p[OY(W7[,PYFfgn]=]?\OF-r7Wc/]^q?aFZU%eE*`Gk]T^TDQJp:T#'GU_'aUjN'!DtR%"jT5,P)/m%I%.oHnlf.U][X.SaKX+Tj51LB:nY8,m\?9]I!o!eH9iBBF5X2ENVj#clI&)f^dKBjS57^r6]:sC`M]%>9(m_O.Wm6::@)/ROtSsRH2%o6]<ZVe*cBe!1HG9!brj6PdEVFK_>,HF'u:i37S,,]%7MdJM_>\,.K]Sbr0l'gpNRIYZb"B/Pu53k\u!?GG=!i_sNXUYP/_^7fhQ%+$,><#l"2k$ubgnXX_TVp^:@d7t\kU]%9_r>g20)2TbC[4!`EjrE_]u.*,F1iEeb/d!DVeq"Cl-Q"eG/Hi4F&L0*6sa7ge4nZq&c%Id3@LjfO!#Vk!-oYFjeI0#(^.DV'76N&Nf>GGcO'YFg\)Wa#Goc\:-@?GHI0QFl#>B/QhSls;o]-;jA8^\r<dDVscXb7V$Cn;#oe%BC$H:.s@/(rQHka1%+^u->Bujo>#_OFG"PSMB1Y^5:[R4r*DU=P1mDAku?:"aJ]$NI`BAn[u,7IHi8n_"4/aE6\o_8YH(ItWbsAt%)Ma^&WU]C&Ur9F[<^%J!G"jmO/'A]$Wg":Y0kp=Ch)S>g4`oDr4iCGWo18An&<dIQk7TsYOXR;ZX4Wr)JA\cD53*b)i7I+CDq#Ze%QcgY>9AR9FH5t3Ja#Mj/U?";+2fB^9XBG/6-aB0pQ!@pKG?8-hU3OAEM,L^J+\JrA'r('P1l*WJHR>c=:OOp`gA*3h1un!XdHmZM%`8,WU5hrta?c7AXr#tJEQY46(\lU"\DoPkslT3ZF3Z!>bnUB>6'(:Z9mrE[oE%b;G=*D-C].TD=f_Tl9]#]:&l"XbHf=j8j5Nh\R%lZUeGE__M`FPXk2l2=O2FZ*HY8hQ"c>eAm_Z,fN&Z6/SD8p,@C2DJ`j@O[t^141MT\>nj6OMk4PAT%UiEqC8jhMc1YjQpYoHKFgr%hU*V6n4f9S`>+L(5"WckkY!0&0hl1%A:WpUM"dA$(=r!nc.*X!1Z3*oSK^\.LD!HJS_'4/aMS!XP)@5P/RL7I5^-(si0qSnnN4*_%^!,O+\'qICNNn^=ifcteA4J7\GCn/M<ho4C)%A]u^QpeIB$<0G,njUXl*!7W*M,Oj"I@\H_EW$bWFjru#eAe7g/@FKbnkVeAeY_N%G,77nAqoVF"OS\\SQAnGX+uHh?bu3dPWY4h$Q+em9j^L5n+.9Ul,PLM3R4:P!<MrlB`LXuWUS(<ILYg>3*^H]T02TI^Br*f_+So#%kIBdnfP<_Ll:53d:(G,_K&V\3?h(j9J`D$Le+\c*Iaegh6n$$!8k#`aLOA3K#"n`elY\%UFY)JRTDV"*f1-@5L:IZ4+2)Y]nXYd>%_'8n.4s4DIb./TRNU(Z]Dg.eEd.eNN5UCdLaUH*X6%fQMEg@j[(<K1A7)K6T63::]2rN:l3UGV#&#//$j,*,pEA;J%.+!QJch.B3%&iL)jnjp'Y^4=kHjh^Y/mgrT'[$it.AFdQO:FE$82o*5bAM"d'-uV-[LV:WC:-.372fb,?kBXMms/6^9/f[SWfnoBnH)5;W$5@QG%[o,g@Lg'</'mA.OhH#ga`*@Om59#nqT-Bo\k2pJZHlCM.Bk`\R&%t=\[X$'c>kIe\$XD1jA5b.W\\:>5LB'X`<Og;kPCFZ@!jb)k%fY(@2-K5+VYj2CsHZR,8%lF+k5;=!C0g:<fn;2qQkp+&0M=U4*LnA557_M`=,@NE)Zs5)[pVQ^,fH:,]M9u#ZN9?qBL.W!-V(c<O%5K3mY`B*T0S$VT`)R^$OK2"*#>&L]WY;^M50P\#=S9M9?B0pCBOt.0]<rApX99gn!m?_XCFnF`A&"$HY&3&bHo5)>S3RB9M[ltV.%T0hqM:J`Z^_#5=H"@JrJ\r/b1:=fX-$*O'fL4f8W%cf0mYDa9gW!H'i#(DR-J:r?KY]:=5#f'QFI8=5["!&)ca!?JhP@XJ@pk0BB%G*#`J7##g*6@GLE4D4gUkpL*31(Ak9*9kd27C@*Rb:eZ;JlpX#\GJntI@M<S\Ym'HT\HIL&air$27*i$R/QU\W?,$(2@guoinIEU%Bo,YHn&N1c:G.1&.UTt<ot8NC;QcbSVh3l!W!n`5a5&&Wds%8+7D0.4[*+OGc;C<n%^q05/)a[`b:3)ADWRj.PQL8(IC+'7%O>k2%(BW=)S#!\+q?gu)qc6GKpnOGZSjn;]49mM'oNa"6]jDSVV#SJD[HDViI/Y&RF@2hDcYGLtNg;UVgVi$EksFV"K?M]rV'?/Nr+DJ.%noTTO%[2q^*$HOU.s4V/:%kT>''5[sO^Q%E$.@]k]@%1HAa:2^B<(Rq%BspI=n/=;5=5kF8ML%do=GOj>E.J?iU`^mnp7;m?`;O\%Z_:7pXTAq=!EAM3"jHA,]Mm-1ZInU"\7]81Y/Y0WJqY/Rel6=I\uX326MjInd<q0H]8FQ7BV*=BKr9h7Yh3k#ihLQAgbcI!C*fTM%8:Ttf7q^_;'qb^S*m-PMj8jT>(u#sOI.CFTe%*P8Km'"70&`<\0Hhc3]1/tYkdTC<%%2KZo'0SM1esSW4b0eo)Vj0=j.HC5OdXQE%>g:0s]UJ@m0inaBaqk4BHU!<"=0Y&Kc<dtp\r:K)Z*oScGl,cb`PcO4RWf;cQJZH((M]H5S1"K(=3HhP1IqSd1e7ZN5#fL$;0/Q-%hV'^4rtW%081-%5^,Qs#s43^f?9n7$(.r/K$CREAM!8e-p]fb2V4]I6!NB>baE$J1)D.1eW=`:9mum$Yk>8CX-(lK0$un;QkK$7L%dBoiCSA7#Y/cbs/12sXm4@$q_YP>-\Xh>D;PK$LsnC9Hr(hac.:ofNhM`=u#GtAdBo!-h=5'm?;Coh(:Hc9tZ(kbs#_ETNM5ksn_%BcL;$6Vi!%O0lhJI.V`*P"M'tJTFiliTg>G:.>f3K(uJ/PX#etPAj%rU>;tb70"Qn_Y4$R#I%+q/8/Q,M_FT#m>=,lJ0Y:_1r_N@%LOOkF4,AB5?$0fpBF'&kB<<k!Vf"W3"SI$j7V]-j6leHb"4>q!N<n>K:UVmJ(P3eEY/56q]!=um;rQF=4n*dGc`^`D9GoqmL0V8^%%1s<%A`J<33\V#1e[(/>Pr]E-Bc@53)Q2a(7g1#ojh+Z(n6C5JSp]Fh\/@]<S+g:jGtm:C-L.UDN.f'JWAr'l7)A$]7RTOHM#nck%\&:g^?ICt;#r,>4K`'<W9gD$AE=UDY[kpOiq3_d=U[b/O5BHYo>#/R`Ohc1`B+Qag+;0W1J@EIl:20-.N:[rT!js1'nj,fUm'^CF%.Uj)CF-"W[$K0$'0+oA*mcEu1b?2lSE4ftkOpZjTJ5;(>&bR_q,<h3<^G/:R,^KQJ:*Z\f;TMYB1(@]:C8drV01Y.g4RMn/!9!C_%bDQrZr':_>TJO%u%hG>&^/4qSD,0+gR%i#)#lrUVM&NFYnl9"MZ-^&2&ft+T(XB%L;G,qn%d,S8Tfa+="X)t_6P/>;4Q\eka3KYF%n2t:g,%-*jj8d[<&lS5O51K'8('*!W7Nb#u`75EL?X^qIR79^XQ!<<;4&rYd&[EVNL1?<"[`uA?1l.^4;Xc:Q+:aPD#_5g4JNnR#%#MBC1k$t>Da]dPV!A%/X>%Nhq6Yuhbf,=b,R,KHX+=o=6C(-96Uk/io-`-:eaL.k,-).Js\?WK<80p[#<M=)?ab1M@1?dN@S79l@%Of5p.2*2:4<GK;QN\k#:JEMsh^V3p4ZU3a+iLA3Pd?CI4)c[pX>!!`Mg`J_*NcI2fMGn"uS^gN[,3%lsNljN]MEYGbZk.\"N9gdl%!94^,/-h)RL)Pnlh)%4..]Q1#T+W6;D?33u5136896e4)pEC2L0"0V/6)\N:E!log`uR<X%](r\qug)HT!e]%)0YLil%4tYna,.!%/B66_A^_A0]$RN$ZJ]I/?KG$p!FEn=k?F(o7J^*"1_gAhq8)\[,_V'""\e:fPn;p4mXGr,ha_)N3.N&@F?trp'Zp`;C<[ihloP;l%'I<e8]`b;.o5n-jJ;=iQ-cE70`5kQJ;Wi*2Nt3D>+'>0>\ic7)U+8>RK5oA&q!5;.8\%bI"WW'o/Am]'2hU/LQ_SM?[eoZHq1.t+%70p1280FMdo9-Dqebm@iT#o?^@YFo+.?et$ZM4/d5`'17Jt@Oo5krc6lATo:53&<N)YcqD?.=4KOFYGU$D!go+40M@"2%J@UGo.G%#=f,&YOQ3(0.VG1VhuB$mHh$^<+--2kpdILTi(W_"IGFKT\Xf!%-]d/drU0ipk7i9e"'Q^2F19K/!0gMS<@U/qp^Ef"9OOEI?)!p%e[I9=[s1XM<%$.>S&4ZA3#/arN)rFu&GBE+6sBCtCa`j0E5k>JZe0`&HYd[P6Ru3%\!LC^9?i/&3kcHoPeq+UJQE6HkG=8VX+pHC%hef3pPKLZYpcXk]:+?@;7A-P8ckZmqJKQM[7YK\9=5(SAcf4L)+Mp`0Wk(Q>_'qN="K;1=,?j`m(2(dN<dEU44^L-S-ne9>HK)kS%mu<'9]HU#fB+Z(,7&(D^g+0S<;=F+^,e@)sF,g&8=tWf<LfPQUE._`Q$b@OG`9"K@"J\Qb,tSfN#-`\=9fPM8E2H0=45UH7[3mf2%h\CebBr\-q7M.>"&hs.F6%nEfh]Y0@oN4)Gf4cEcnoHOk>_NPtZC[NnG`^%B,j-)($a^A>mZUW/+qUVWkNNqQ]$A)!Y9RS'0h>5s%N4X[pPYU+C?bn)Nd+=eE_o7<hl&R]2`"b9a_DaFsp&n'm(,+%o!Tj,nkJ5PBMEgQ](jHs[BIa,=%cEZ=>-p"Le?sO8%IK<TD!Oq)%]BXsil]\peaf'"EA8LgJq+\o1]-&NpCVR)ZUDcLlK[k`m!K$3<6SR9<(J.Pa8)/[cNckpCEru$,!ejH0iJN'/gioS_Oni&>/bt'B%BB(0d5sR+Ph8Dg"b+RQsAH1o)Wto[@>=paoK$=J=>(D$]%)$[u3@E^C,q(R^57Zl'F+]&i9sMN5q@Q;1j(HO>?F]%B&+TPH9+rcr%bI?Mr2s@c5m?,d->alDLo_#YrT]nk["Dbt(#Z<hmG?+k)^/RF`+eP'O7M4OS(WIaBhBnot%@+dJD(6*!Ph1M+=2lk!J[f#81P@oS%.ahBU@(Ui_]]]"`hNs[aSGWl_[HDO6;6k-aPKCWSD)pUNjt6^,9j[uE"rQCaIWEa2!ri*?:&<a29DiJ?UprLai^N(=8XbNkeK^6?%!g^q+jg?5`ap6\e=[6S-/=(0P\bFfn1&lR).AsA5GHos#[C>R7Xp__%O1&nWYr_t(Ro5-\eh.9>#J6fcGSZ>GHbA9W^\b&VC]S2Q%jcg7GXqJI\pem@?3VGtuM`[7>^Mli$X5.@GMU#C$ir-eqiB.0X5e[A&*.q4!5SrO_@6e.th"1?rs52\"G"&YemJ__:%ulIp$r,#I%`?=c2U'M]nXiSj=b+K1+S:*W7^\p>lA9Csr2]s6EGMTmVG&=@AY0)XCN&`)g9AY(?qgIj+!-b^<'-j^HH,E4_Ks1,TDrW:)_eh;\%0S:IXPR1@Z4BE;VcC_tqn*p>PQ:jpNV7o4paqU8Ieo#m?gT6H0YAC@'V'P=\BUG"R>UnK6nosJIAN^OS=t;%E`MT8?'<BHUcQi/j%gU(&QrRp3%da")c5ifsO^Y(fVbM^aSeg^J0[9=(]Iu+7_I!g%]K)GtM"Acf1;4D1=V\c`$'0HM`s*S[H%98h'Gi2RFDmZH;I%N!b%T3O2)`>?>ZgtV)PTh0!s3E,f/`7b-P!9%S^0L8KHUoN/e^H@G[:auE._,VPlaO:g_k-emoa6C.njmT\Q"XF`LncfG.!)C77qI<kt%1ea5pE8SApqqgV87\Fi6rNS$&RKr9@]>PYueeb9/q#XcI>JPS*#&8'.USWP5\s0l@SphNK577;*q>;e,ri+595`"$rQBTY=,oM;[%8hW0Npa>e"p=X]V:u`)7"b@P\)r#_5^2+iFUu(bM#MtK@Q'n8'r(!Fao]hg3>p"(up?<=1nak4QqWY?bJQR$_C7,BM2M.LRg)@@p%5B"6T'D2[r;>`V<,s.UE6bWFOo"?1%*l=QE#L2K*pDsD6K69'KIfB9*lpTaHcW_guo%4]95Y1u=Heu7,-OQNfoKK&P?lnHfE.H_%%pr<_,qUtI=2/]MrC0_1^WqkV+L".VaXsWetde"_Xd'>'MR-g;j?j2&uUNkUa!cYn,;ZL963Zbq;!<faBoPDoMSSf^>."ETjr4m!@%!uLZFD(Y07[SKBU+T#G#3]XXA(R'\WH-lTUm0*@aklB=Cirr\?obfpfFo5`BpA\1:k=_#K%h]'cT@r*"*\>Faa"_1:R.ZrhlJ&9S%T18J0HC-FprG:GB?hQ]EBkBh&Yj`]8ml'=7a4mZCei\;aoCn`riH$k@[:k?1G%cUs.W:_'-o;%dY4:i,JR*3)`u7:,%a<7S\RQ)B%K8bg/6;^#sB1TTkm.gB^CBtT"q5b\eB!";&L[VdQ*A+Ea9@S3o1]uKtV12B1.))?RG17(XNb7@]_uI6$:fIu5qgsO=/D'p+L9N`H%6/#IM?@B%S9VPr@/,9&V-`]b[#N3Tl=oP\7Q9ksA)FG2nb4P!]03;c2HlZi^U"bcf*L#sF/NaADC.Bd!:`int/-a.m7'E!3H4T(a%/6aNX&fj-6X.KrD4?6U)cTPkG0=DXp4=!cA9]+J#--=0hB<"(519mVJ=q2jUp0PLeWX(6oVZr3j\IE"a)3Mn5[gW3-o:F]=go/JF%>WSCG>Y/87D#:[0a^oA1[984@.MqMk)SJG=U&:2];(h[t*Hs,4[ZPR+EbV,FEOg*-350HbP!:MLhPABNq"Z1FjK3PRM1Go`&b4GE%\bf5VU08C:4@"J'UHFsrOZCU;Ip/MH_tSD]A>]nqdLP.Zg6X+!NkZ3?Nnt-m2p05RU-k:maE>bW-o\cOg\o*\_:'3tQb0%K\Y<OO%j39l;R.^XeAkWa58Dq%+=G3,o8mqu'F=\S2ok,dW+e.U?aEME@<%bd/pSD_$/HVm^;_`L$2tV5>DJ8!<_h[L4=*+*"bE(]`bIJ#6%JMg^pbf6>N2V+cj^USMC^G3"iq51,"q*fp?pa`$+d[l6[bEobf\W'3qD;<nE5(/e^(+FOQ0(p=]"^1c2pV,gi>;A?;hj``9IX]sM%.NBqM?4L9nc.OJt2eD.<`_._Mf>DoCp![k7ZYK9k>MZ\a:9(]0J"7:s,^IKuo5!dkI<R+$l-_BDdG7'gEFlI^+0:1JN@3%^'!S]S%OhBJ;(sc]Dp,u2u:QAgdLX*E+jdh$_D2ogW?<k1X$?B8Y,[Znq<^BoLpi!2UQdn>Rah`."60-P5.l&2*%!tGiUUW@EaC=MA^h4NU%V0#lF+#+(jfdA"^1q$$K?7[D(G<EpdiQ#db`<7TRq/K@1&3PT4fo#\YaXfA(Ab8M?i/E%gN<'[!">cPtn>1VA\lK1po+RuZ)-@+9%*cj7qVnQu&&T/Rk)EugP[+IEpjF/>JbMo3fmhHG^M#8[m3r>XXoF*<aT6gcX',rJcXKlu+)p"YRZXIT#IV`r.MC"/ZYG\S#^/FZ4%YH+mPq^;2ngkoM`7[EM/?Pr4R06HZu@e?,X_7H21h*fK$I2Nl'.sbTZHep2bh"'/B@rQKJ-d9W;`h:CTI^7dJ8rT[/m[dEl+uQHW%St+'[Vu>)JB[>\#h;Hi_"Zs!R&/L37pR':7\!/C+/dY"RIBbE>r+13#\Z]/PJGZ8"]TYWSCpP8CH*5=i,#Tjsj?h"e1"ZaqN[F;7%g3CD./sXir2?t&X4X?pQ>G+s0qmt"2?NK["oZk=tf0r:XP8.Mo=[lJUb2$E#(^aI7:O?`)geV,F74(%n#aEBRW#k;PX"a8"$Dd71%OrR&8KiGM3/P;l+B)[GRAc%m$/V+o>p%&W(nU8a!`Q67<*K43@q/M_kq6FYkoqRlO@Z:S5WhZsVhd:Y'F5tT7M46Q^=1I%n^6T:N%$d7//Ha8L$6QfIo[r"mh=%,Zj4$NeY\+-?&;tuptI_D0+rUeo:N_\raAD^Ag;NJB&I/is6BthEnIu3SiE?)r%n[G6b>g1[p5Zc48%M,`M_I7u<lPb74)&BKt^>k[Dh7q;=]i+([?),l#Wb(,bSgmR+k,.7>/S2!'"B=rXLI^/j#dSZOTU3sgO#5/;ejr$:,W6]n1o6PB<%"!-d,.GX&+8D'i2@:g3\DJ]f33uOHK#"1#qg:/\:4PDU[%lEk$N*b/lVoVSOOhWQMjmU7@e;gEhm'M*:L66u$6uU?cgG5TeYgV:R%+5#)*]63?KPWJ.'XasP4#.?F>[WU=g?eFY%jkF5hrnOE6Z$`bS>2qS4$%\Z#?JHVJ6Oq'[$pL82)re2HiI/r5,MB7"XOtFKCS%%B%"Ne^DquZ\]>;8?&'L1a2i:/W#A8LUR$q%aVROh2_l"_;_n.CdT+*al4W5(rRX,uhU9Yp>B_;^BI4H2#Vl_Q7,Ve/%u<Q,bp-qikX%$R7u-:#=]Z9b%kMb*:er0L&Na+m078[Q9p#"L52.BLE*baUc8sRjQE_58;%]Q4F!*`g`F5m&QtVVCoRGce\@tX*(s!f+tR@(&:;Y%YC1kICLg8_hf70/bZm<1fA^-1iHIpMhg!>'*c7JeZ;rV-Qc>rWQ^Mc#IOu(9>5ikqBQD3JI@!9`p#/+VZ#.-J<UNWmS)Y_L;k$QQ%5L4^M<dme\9HA&ZGD*&bg>:T8+X7r73&%1Vkg&U2_(%NSh"hUjlh.b?KD^#T>.iR7oTq6_-iHbh]V=\V<XH"YfTKM$9=t(d%4@3l%nrhUcbrW0O\og]f&4W8VMf0J"PVFtcj7?d$[.)a#T:k`7X(to,pV,.j_S$9;l<<q=,d$ZGrMu-;4-9YaBq7idE$ph</;!#P,QeR#%,)J_Iq3`M;4d"glJ"B`),kKR9AP%#hrSk&$\orDhp#*>@=;e4L:G$:oH+\V^J(eRP2#_P[Ha7j8e2TXqN`:e3hTRN&V1,kXGI$,)%%Z8^6S92^./`Es9'k1YS@eNI'n72"YqY8A&(\R3AB7G0`cq]S`Cr'PTX#7hWBte4.*D1Wm5K:FbjhC@7R1#\un&*QMZ(]M8-cqZS%qd"*soC:Y9_4NBI-WdT0Li'^_[T/qaH11a$48o&iMP[?CWUW,KFB>#sE[+b&G&^c=3n!Tsa&l,U6a&2(HQuM/%GO;uW#V^@P@,lc%$gK]'W6uVkcKmcY"Sh'Ig&C2_p@u\/\ZJI#WVa?$U(oSXMpTKYh_S$rV^BHu3,XTNG555fpihMdQupKsB6ncjlgXM[\g78qH%qhI%YB6BRq:p;kUd*SkaJX":U=!OR5<dBB>DEpgq;G@bTZRLoPrek]Gq@W6lVOlZn&$/=eomkDK,mTc*(n4/K82LRX=-P;H6;QWZ>ur7%iJo37ga`T#%s9GV5jM7PGX0s"*(s<P8k)u*l<(>Yc+s.&Y[bc^(SK4RE6"+V/jKgO+6H\2_?HTBn5./g'eY#QnpR0@aU4dYB5C]]%r^)RRN2W:ElmR567W*I@:EPXD)NUf^^A(Tu)EnuXRC,h'G<Qg*>Np"JglsSomG2$LhQ%t@_QX.&Ds$b_kMY\im5RZ"oQ4oGH!#/N%NFuj5f6&(0oCuCsGgRMjF)U4Q(V?l"Pu%='DjEI[r9<G`Is31$ZEQpWS8EEi)W]bg])LKY*kV('W-.CPRlE[6B0>`][&!<Jc_LSL%3am]s#:='CeCu(Q*4GI>5DT2^1r+(S[tJ2)m=`uQ+4m+eo=MnZU;i4KiJ\h[(FK9Lc[e+3I!O7&0R`&*\^TF0qT2IX")8m3ds3.a%XuU2k_PAbXK'^+p&&WD)`=rlQ+2nr46iC6P!OWET\bV(IQYq/brnNZs9irWQq'>#Sm3s^1mghjMQCge[7B5tqa!1KE6m1,j<La>:%X7Ll$#0^_Sa"KMZlD@'E8\<?7]NAM=X+r*om;s]qUeSG>%X/gXbhMe7"^8&TUZ6a!>G'3j-Yq,"YreLseQ6(:nc56P^t$1$Mde0>%-=^NGa)Q0Nrn`Y9MKo1R=(?6@IOZ1=/^D)`D%?('\Ga./>g-hSc#6:b(B3.1Nl=js*MR^u*\2$^]CD8Y1k4lmjK\$*p_/LNR4Zb;%*I4_K&(_7eiit*o^#ClXO&t;e`M>)*-'-kn2>V3p)T;^K0"Qe9h.S.<_4fGRI7mW-VI\2ZP5))EZdRSg6u+[J``0@hZu;J>)j=.M%^UN.D8oJF"eq2b@N'_N,i6Zr"i\e#=]7GA'4Ic<HFZt=9qp]>BqobGn0(R\&E91XjjKa7](,A:G0CORHD"2E5j^$rRrru`Me\B*:%p#":MBNF8M9:JM2YeHWN*&r'3ll0)<eTrL,Xp9HI/H+_`NFm7#Qd1,%ZWq42D.sf$pRC1N@e%"^_3W[ZM`Oa?8OpoLQ!P5"N[I?I%?a3m<4ALC9]Dkj9YlgC53&Qam<jpb/>l'KOU9PtR"ucas5;MHA?MfmuSC[AiPOC:rd8BHgX[H!,KC'BmOmfXdLLKg\\)DF1jZ@X6%L9p'FT6:']D[W.Y*Se1^T;0G#_iu3I4dtbS_I\.eI5*0-p9,$3kdU<K4[6qrGZZdErSWT^3PX6J]C>LBN#pdP\Jbk?D2iI`?^:nY%NOW)Wfu]h>AnS362r"4*'K[jHg*UU?W#bmI[5RraD%2[-idJ*aXdl&pk/a*r+688qg&K=gs#8:(h`Ur=YBbRDFaQ3)pN61EIKi,d%_2I>Y_U]Y(OTepJ!lCSX3^_dsjfL=CF$#JMfQJ>qM"<!J\6G_Jp-X9rW;&rX@5C";@6at--+u[_X!6Btortq$/2"$RnfD1p\u>A_%B`6NN+8[A7bT/KLh#&a6d=V#1lfE#Nk9E;_?Up$6^iEr^I#/n\1R29bQZtC"4Ea%#];CMKR)keC,(7,==[REo+Ef[Br6N5-aa_!_%X/d%cNXWBTpeUk7o?&JWB1_FV\`<X/.D=0a$cngWq8H.di4#U'?Or/uGQ)<H<cg4u;>A&DPH:cY=uG0sK-tb`\'cYu<ctOUH<f^j%*hGDUT0:gg5<([[3W5j:6I=I'X.)bgeWFUZG8p::<r7E,g;_tDWlFo6[]U*9T:?nlRlBqCe[b_X4?5R.`o6qY3'5bUCfE>gW\\SM%r;Q]dI@tu"U8h/es6[Skf6Tm96^@k=<,n%F'/+1e'+e2?D!$/#$Z-P#[B>M_5p41ZXSS5-`EC$5s5:dM0"qG[n#EG&W.(sN>Q(M#%qg@@K`J1IsK(W.0?!X;8H;nn,f=an$eL%`-S?3i5hHW6gI<_a><r6'Cps&X!_=?,lht6Qj*Yr\mjEu`lQAE2h)qR>\ig%nX>Scfq%?79:l/i'8UCSJOAq&jA)OOdu(XLE=f[0DL?R*N"K%uCCKdsjDu4#.[FRXhHEUi)E`=!akadQgo<:OVN.KHs;8=Zs)L!2Ad+a_]KU%>kfkPmU<1n2qGM@Fso$\!5SZ72cUgd)A>GOCd<MW-ns9e@SKZEf%6GrmXt_\Rqt7LN6$DAO9/nV8_/8=9p;B#;[,W`<Z\0&hS%'u%b%Apa]#d54B>5(ZIC8@pXaCQmrj,kJ.kfm(9^;S_['p6ui2TP_](\DI._,[uXF1+2X;KuB)p#B-;iud(8T)h'/Q!\WV*8rt,_GP#%'24ur$4H4AN+j7qnne&E\0&&KA0Ao0<O__AZ4<CgARJ!&_)\J1!=$b5ScR"g"/b@f]W"i/]\6L/"C_fW`>B$e_1I#Ybi7FoGNi'J%3s<X`<CR?%=<pmEO_$_jcN"31jO+%bf)]DJ$Zi+;F:#1R4,<8e38QY_N3GG&5<p>+0&\dW=r.f6`k-hFWSE2QYuM9u.]aTp#P#CZ%9eTZC,6+Dl\C*-4c=iK?]MPTuS6(EDF1h"4cQF#qLlaq*fXfWLD[%g8bWl=3D@7n*;&P=]5\q)>;Lfn]VF91?C/Y9R_cgKf0_H<_%Ypn0;ON3]=HHV6+82HT>GRC*&cla2P&Yt2HP@n1".g*b!I=Ro/&6t-)<+$p8BUo\:CB]"2M+VR$kJ6N$$=A*bf8duV;ZtXHjY^/7%'G*e:p_OJmZ*Tr`MZke/A`Os=f(c3$C^O`_'Hk]P'+0_QHHEN?[oa0"[DnS:!:=5]aAWk3)QRI+d:OE*3KpM12N@:.AJr;N8is1Y%iY(3kkA?l&C@Fn@T3\<fgBFAX;p)McZ9Z=urCJ$b,=7`ID]r+-KltQiQ*>c]P7_Cm-R"4:f3l_+"L9D:"=ck`3j&jF-g/S?8X>6#%#L!@D$4Kh%$#_dDHpg;VC,]1?Q$K'';%?,gAju,2+=\]1>%'"bckcC%k<o'dbXi0;D,T,K:8G<=m78i\\eUUb#XVo',/gB^KEMO/%,Quc_e>Am0L,W7S3ON*-JtV'8Te3cFCTnr`g6'O7[D@]>E6^bM<CI:pN"giH'.XHY6>$VT.@*qF-?E_%SCi"$,-buU7p6R$'L>R/%6<G/Ag]XPY_Eg^.J:[fCVpMUkWA*k"Jd,8qnoNLje&i%Ho.I1UQ:9flB=_h::-#GrVK&_SVBUq5T.6Nl0uaEk/6-[.RMR$O!II+9%]<I.![UW$@ZY54%96<d@Zb#k]$H,H[L8M7"6D.IK:+`7laS<cN5,ZtD2SPAr.0)eJ!!&OU#\cdZ-Pu>*7`n$c72aVoCJ/[Mrfi3h%CYiaGEcTp^3N@1r*Qb]C(';rK1I@V1)3\gZNf+PN;j%J5Tn\Tg-7\P[RY,ZUEhNu&^f![nR8Q=>iijQ:g5T-.0&<!R;Mc-fEo,_?%am-I!C>Z<Dr"fc8#4U#hkL?qM'<,ih3`7J[6s-ZSdcPr`!eJaYMsECbKNNOJHh(FgW=bMkGnc(ZicBiH>TfP%6F=#n,c)CW)k[A3%D+['^1gqgM9d&Gl!ht=u=4fZt89#c2/qX/:NAl-bF%G%:`6!_\dW':B*'-h<_@WGqabB*q%H9,48SG_tH#CoF3uN$]gSg*q.fs4*%593+BKHpgKGh=-*?n!<'=G_aN#ZtUM!`L'$#S<8s!qA/r/b>qX#aAmaCMcW(`$Wu1,ghN@@&e<8DG`)V=c"h=KN*1*2De8SP1kph%,d\TP887@p#h)b=!hi\)GX7+FH;.XE:))QU'<7Ut3*>J--E5^t+>C&FJjLr?3?k"o4-@YlKf:N>!PV)kEaT<M3n/tdK[>fM+4qr8%d@j`#9g[TSM57T?*(eE5n-[BM^a;C`PD7dI2(jZO9HYK<h5$=P'R^qiQuCCkKJGS`@%."rLkSTOUqRkQS6G[i:5FQR,h0CN&[SXu%Lr_^>`:3mk/UB,ZjJ"!3D<U'A[\97UMpP[9OM!"*Bp/$>p`ag*"_*]2#h5hjno,/X7L.]q9l`+V*ah9U]oIi#85RW4]@"d#7:;Nq%O\0%k8?NS<)pWZ-$dp.ur*Rj$C%6*\*]XJ7iLA#j;-_$>c":gq#T:i3:u2IdUEKV]$UhO1#C5bdN`^UpX^%JEU=h!oM2e6%!sLaq%NG;1q)l]?"9SSnA6s(^n$6L.J^X25!r]k&Ujau:3$b/!iA`DFKM6rRgNm::`crWYpR:[q)YMueUJ/H3lJ[Ap$;eEQQ(]dHqHYQ_d%'^?HW[HXX+LQp0'-R#K9UCBX+N`i*N>&$Rm:KOn:%hdQPm\.E-Efb68@nM(^U5:[Wr_#T$::!X;L6s4odB)7dQ0(\.FP<G(@!p(f%QEE?`2#+LcQ4b)A9[\XFrCCW=1*j:AksL"j@KBt<JA;@>6Ou<_iY*IRXskJW3c1\C$UW*O6:gd.*hpb6ZF6,YOIG66f.m!_`9LYC%E$mCd[1d29C3-Wg0#m63E-:GS!YcrA!9P")_Eo-&PZkfM$LVl>KMi3gT1V@rScB@-C;5uK[1f<^0rUY1ON\2^8L7UuV[.oGH4`^u%c\.CG(FkPO.M)p,811!-+lWuK&dcPH5&gXV(J9!-@qf3$aNY_bh34>XKa_\_7/B`c=HY[$J]uFdV1eCd:Q*.n1-e:EfEfE?M$bN/%-trdVY8P(s8er.((Lc="&.+V8/'I5k=k6?Tm`4GW6AN+`::*SE6WWcYLCVE?M5*0:6GSG4cB:^MjV\UsmuHHUFYO*=?R'0J6uNFg%-35hH;)(qc4?FjCCQ-A1WnhpU;aAle&*`K"S+QP><:I8r(sZ!!)+S((+F129:.,mZRLi+Q82#*(;]TD'2">j#>EM4QY`*5[-PY6S%8_%qCF\hOJ(I"Y('5u<7&J7%OlO\/KUt=[YQa_e<\_ut,$sb9I)SCaq=;\Pu<'STf=Wd81b_N"r8eXd<_>T^j?-%(;h,rK3-DV"i%;VR$dWE"o*\X"T)mMo=lQ#ITP`CQ.'cFED5l-^ulYV).__4M#6;N(4R<60T$Q3%C='_kC'fi%sadCQ5,<u4%C[hEUT$^"H+b+tJ,%'mpM[4:">2VsM4\=:^d3a3\"Hotap/B/*7tl#M>YAk"(`9-2O*r-2fpW.b6YhPA\>XI@Z<;?!j/)q*Gs22V!gUKCbl"3,PJ(M;gd%0c4<X*1RT)G=as9TFNn`apcnN_dO*c4^Q5;<\VpY1$K[Agjm<oE#2\<YqWYDc.Q)Z7$-EI@tMabAk<\N,7]IGHJ1=ZA9OZT'-1!*%JMi9A1#sM!3[R/ndI@#:,,Ip;7L0l!Hl)((JET<3#)>&LR$8Z]k%JB5d0`bQT*aN#lA"oT>(S$G`F6]bLQJhF%$P;;P@fl9!u'th%?%[)_jGh><q&fo74Ru/-XHRaS`f_g.2Cpn3:I@=XWR>8'>t,'LW*@5j[J-Ye.4*m8[L39Z;($NaJ][;R(:23TPgP?'1oD3p#qJZn%l(HI&9WlS]o>^ieS%0os[ZL?Qo$?NB@?S]jR^s%3"P\NPj+UX_:65J'=g]3NSCgL[9G"=DU+UO:e-2h)mh4l.blGpE""Z-;:m%*U%n0,?5G`uCY=XUa^R/kdrpna8_0JUQOY=(DWE@)D`_7Mf[ifFYN15W7qQB)*2.[I"._Ec/skFC7c<[9Wb0r%7CUS:b@""/\a8^<G>%:**mO$PY<r(Et-3'4DNRo:d3W;ASAa;_`2V#f7n/Oi;pW6=CkEdgPpA/r!hGb7k")KPJdmW;sngZ'Ag)Lcue$(m@VKM-!HO#1Y'p%b=#Kp`PlDB?HAr=C7F0^E<2m:D(5+#iWFM=n-6QaM0WRI6qOWDl_kCIR#mFX`"-e%ljseCJj:sV'#Q/]R\h(I=uq(/<)X![(@QlY%Ee8qcB[XMsb,I6f$*SZu\5H?eAY#IE6?t;/[M`f4Au'!@K8dgQ$QW."M)M?@ooLjL"IN\Rb?8e&80b["iB8@R=KOhFQ@q<H\B([(%&^imoR=YI5h#r]G>nKcH9,6^;<?CIY#tIU![3Z0q,T5<S:'DB+A[9qG8]N*]V]MUn]W=S:,qAWje"1:bOA)-gQY"h%4U[e9c-&1F%9QbUEpfuNqFEQmDr*\gZ@-?n7q!3jXq6uRd[MBhU,FC!-)G8fh[jWIJj9Cp9XNhJu7LK'mM8;r2L46#Z=M>=ca$>.``h4fC46VK5%M%>pi1cu!T9>l7T]YfR?!EMJh?a0Tr?*`ZMG?XX,HX(ZOeQooW/oc*'c^Dp%jmqi&H<1,V-DoNK_eGESd_'`L'M@mJb:AqHM`ar6%<nXJm='jbpUT$m(m6S;XqS&LN?JQt5<G?NL(,!Rb?W(boCO6;uhPPb]+#7;gkh(2kQ)6hOe0J#ad4iFuAm[e9Z_6Y3n4%.d=:[n4%$-\c*l0mGoY_qOHne\spk`m&5@P##JYXO6UX0d^4BZsT2N=RM<UG7ra7>k-p3ttA1R>HNSBNVQ@WBB=YfMLoO>m2R,N<gK?;KbPe%/'2'Ro#WDn$u\8QGkQ5,IqEGp3d#Fk;I/0?4)^W1r1?IKYcJ*IB)cDNYs#LZD6N>u2,=2%f\^"Lr3ID^3m1%[Cj>=AghKgd\T>?'%FB3e$FF8%VY]GWpjr??+FaaP;_s<:&4L'BT[.`V)=l]Eso*3Hc'3%B_%I`9cWqigH`a7[B7+I`jpreeZ'NXU;FmdG>`nkuTqL#Dn%(7(!,c?G<C)V_S[k<%EkZeI-VIb)(XC@4<G]aMQKrIGTFCYXAdEa7/OjOO>o*?.uWYZ\$Oc8_*.c7?2@l=6Y\`Qg"1cmeS+_O[!X%;P,m/_K<$Y?pmr)+AO5PhGUPO6Pc0p/aVK@Rt!Qd*BC#jq!NQH%3u;?og_Pp'"!rEG_@BM(FGTKkj>XZVW!$#8K>f=#37L0K4S<h%.U=L#"u22Sa-[o'1%(p+]j"R[Mbu/82cE@i'GpY$nLRe$#BK?B0&.SAG)dJ6a8:kri3VB]-fj[iH*l#!_eqZ(rp<f(H1POH2\PJp%i^@"?,h$"]mSI_APa7cNm3&+>MV3/eeOt=,!b"<r<3mhR_<qga^7oIf(g<o2RFo&#KkON!RB-]Ejo`.,b`bR;C*hX37bA"8NGWB\%mK;m16mH_1U9fQ7j\Bt)Oo_3jK/_1T[5%NNMDe&ILLdG4=.7rZ+c311N"g?L3f=KUgkh+dU2m:`B3rT2)!Jc%PF:ZFn]oBOG3cP.%I_/XimV@OB#0E0kTF_9co?-,HGoel[0gX)C<)sNW)b_5!8JAZHh2dpZ(/r+B<K_jOH6fR8dK'tVmpDEooaim#00Qc#_WqW[$9!&r%6p=HSqZUhM/h5Uj'r1C6m#=ge]dom,btQ3j[$dj+K%LjSO]c1U/2?&O00FOO7J&MS\3HJi>Q)%,`[n16'X/9nk!]p)J<:E'PK8gZ%@N%(0l(mUg[Op_</AsShYgEoCZF,[+%(:?6fT7S2jiiN-L(1-/bY1/llYblnLVN6D^A1[:bEbJ%knl>1`NUG:@5+DqDdl^L6-@Ak%Q8E@rX\_$rjC,(u4El:oR:fi0/<l,tLc/#5KZoj7,:Q)POt*!(?poh->iuPDg)>B,Dtn()iHeg^*^%Ub+kXF*nidU94;iLhohFo&%:9&X\/%^oN\//66*qY7sqh8OM$a%\I_P8(r"u1^3lr;i^Y3Cn%l@6a6,GZKHaEA+HHNc$7#\M;gcg6W.JhD]_$JL/)!%%Ftf^.6o%:NIKW>D`t:Z2#[Mr6-!j;HXJ2&M(RCKZ%1Mj(%?3:kha\9c.]"GH@X<0O]iVMTLe49U>l:?lVg4PCb&R;E?GAe\K@]$+m5l"$0!d%l!T-tZ4cXE-[Sj<Qh3ZY-4*.Ur$>70SL;kYge%$BAbSBcZE&tuAUE>[94b#tdF&0=Q[K0k`LM@JoVBl+l+9UO3+rk7``<U>Qngm*%&^g1X0kW/o&A4$CK9"JG.Bb,I+&%/Z`AEbMi>]&D+>EO=i.EC0+4Fp=>;[E&Jlmmbg`s`m21,?jWoJN_;BqSHbBe`+G;BQ)p_Ld'%6s2^J9kB@qfj(FH?JLZ:VJJTGq1()U-$HpNAd2c8<\e1kWl<8k4+4[Ga)89m$$0FungPZi`6^NdK$]I4"1WYa^fF)^Q8L4J>V/*c%)6A)V9*P.l$nC@gOI*s>2eT?3XoPR>+>0cTI(":j10F)1QWklaE''hca1_4U\!`8;'qe5)PA0N+B,"K,BN?jIcSNA<ZSjE./`O%m%)k)\niUh!3<`[AMF]eP3\<?#'NLYJNN=G?LA+VC3m:>/*l+$2)mW`*INXcLuH@'#dHu3\imMm3):+K\tG5g$jmMm<I6T'>PS*JVS%`YjMK<6r:Lr0n6[d_*9&GA_93np^[YOi4j~>%AI9_PrivateDataEnd